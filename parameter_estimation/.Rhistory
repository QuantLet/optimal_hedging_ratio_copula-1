else
Z[k]=1
}
x=rnorm(n); # data sample to test
for(k in 1:m) {
i0=which(x+VaR<0);
if(n0>0)
z=(mean(x[i0]/ES) +1)
else
z=1
}
p=length(which(Z<z))/m
p
n=1000;
m=1000;
X=matrix(rnorm(n*m),n,m);  # simulations for H0 reference distribution
alpha=0.99;
VaR=-qnorm(1-alpha);
ES=dnorm(qnorm(1-alpha))/(1-alpha);
Z=matrix(ncol=m);
for(k in 1:m) {
i0=which(X[k,]+VaR<0);
n0=length(i0);
if(n0>0)
Z[k]=(mean(X[k,i0]/ES) +1)
else
Z[k]=1
}
x=rnorm(n); # data sample to test
for(k in 1:m) {
i0=which(x+VaR<0);
if(n0>0)
z=(mean(x[i0]/ES) +1)
else
z=1
}
p=length(which(Z<z))/m
p
n=1000;
m=1000;
X=matrix(rnorm(n*m),n,m);  # simulations for H0 reference distribution
alpha=0.99;
VaR=-qnorm(1-alpha);
ES=dnorm(qnorm(1-alpha))/(1-alpha);
Z=matrix(ncol=m);
for(k in 1:m) {
i0=which(X[k,]+VaR<0);
n0=length(i0);
if(n0>0)
Z[k]=(mean(X[k,i0]/ES) +1)
else
Z[k]=1
}
x=rnorm(n); # data sample to test
for(k in 1:m) {
i0=which(x+VaR<0);
if(n0>0)
z=(mean(x[i0]/ES) +1)
else
z=1
}
p=length(which(Z<z))/m
p
n=5000;
m=1000;
X=matrix(rnorm(n*m),n,m);  # simulations for H0 reference distribution
alpha=0.99;
VaR=-qnorm(1-alpha);
ES=dnorm(qnorm(1-alpha))/(1-alpha);
Z=matrix(ncol=m);
for(k in 1:m) {
i0=which(X[k,]+VaR<0);
n0=length(i0);
if(n0>0)
Z[k]=(mean(X[k,i0]/ES) +1)
else
Z[k]=1
}
x=rnorm(n); # data sample to test
for(k in 1:m) {
i0=which(x+VaR<0);
if(n0>0)
z=(mean(x[i0]/ES) +1)
else
z=1
}
p=length(which(Z<z))/m
p
n=5000;
m=1000;
X=matrix(rnorm(n*m),n,m);  # simulations for H0 reference distribution
alpha=0.99;
VaR=-qnorm(1-alpha);
ES=dnorm(qnorm(1-alpha))/(1-alpha);
Z=matrix(ncol=m);
for(k in 1:m) {
i0=which(X[k,]+VaR<0);
n0=length(i0);
if(n0>0)
Z[k]=(mean(X[k,i0]/ES) +1)
else
Z[k]=1
}
x=rnorm(n); # data sample to test
for(k in 1:m) {
i0=which(x+VaR<0);
if(n0>0)
z=(mean(x[i0]/ES) +1)
else
z=1
}
p=length(which(Z<z))/m
p
n=5000;
m=1000;
X=matrix(rnorm(n*m),n,m);  # simulations for H0 reference distribution
alpha=0.99;
VaR=-qnorm(1-alpha);
ES=dnorm(qnorm(1-alpha))/(1-alpha);
Z=matrix(ncol=m);
for(k in 1:m) {
i0=which(X[k,]+VaR<0);
n0=length(i0);
if(n0>0)
Z[k]=(mean(X[k,i0]/ES) +1)
else
Z[k]=1
}
x=rnorm(n); # data sample to test
for(k in 1:m) {
i0=which(x+VaR<0);
if(n0>0)
z=(mean(x[i0]/ES) +1)
else
z=1
}
p=length(which(Z<z))/m
p
n=5000;
m=1000;
X=matrix(rnorm(n*m),n,m);  # simulations for H0 reference distribution
alpha=0.99;
VaR=-qnorm(1-alpha);
ES=dnorm(qnorm(1-alpha))/(1-alpha);
Z=matrix(ncol=m);
for(k in 1:m) {
i0=which(X[k,]+VaR<0);
n0=length(i0);
if(n0>0)
Z[k]=(mean(X[k,i0]/ES) +1)
else
Z[k]=1
}
x=rnorm(n); # data sample to test
x=rt(n,20);
for(k in 1:m) {
i0=which(x+VaR<0);
if(n0>0)
z=(mean(x[i0]/ES) +1)
else
z=1
}
p=length(which(Z<z))/m
p
n=5000;
m=1000;
X=matrix(rnorm(n*m),n,m);  # simulations for H0 reference distribution
alpha=0.99;
VaR=-qnorm(1-alpha);
ES=dnorm(qnorm(1-alpha))/(1-alpha);
Z=matrix(ncol=m);
for(k in 1:m) {
i0=which(X[k,]+VaR<0);
n0=length(i0);
if(n0>0)
Z[k]=(mean(X[k,i0]/ES) +1)
else
Z[k]=1
}
x=rnorm(n); # data sample to test
x=rt(n,20);
for(k in 1:m) {
i0=which(x+VaR<0);
if(n0>0)
z=(mean(x[i0]/ES) +1)
else
z=1
}
p=length(which(Z<z))/m
p
n=5000;
m=1000;
X=matrix(rnorm(n*m),n,m);  # simulations for H0 reference distribution
alpha=0.99;
VaR=-qnorm(1-alpha);
ES=dnorm(qnorm(1-alpha))/(1-alpha);
Z=matrix(ncol=m);
for(k in 1:m) {
i0=which(X[k,]+VaR<0);
n0=length(i0);
if(n0>0)
Z[k]=(mean(X[k,i0]/ES) +1)
else
Z[k]=1
}
x=rnorm(n); # data sample to test
x=rt(n,20);
for(k in 1:m) {
i0=which(x+VaR<0);
if(n0>0)
z=(mean(x[i0]/ES) +1)
else
z=1
}
p=length(which(Z<z))/m
p
n=5000;
m=1000;
X=matrix(rnorm(n*m),n,m);  # simulations for H0 reference distribution
alpha=0.99;
VaR=-qnorm(1-alpha);
ES=dnorm(qnorm(1-alpha))/(1-alpha);
Z=matrix(ncol=m);
for(k in 1:m) {
i0=which(X[k,]+VaR<0);
n0=length(i0);
if(n0>0)
Z[k]=(mean(X[k,i0]/ES) +1)
else
Z[k]=1
}
x=rnorm(n); # data sample to test
x=rt(n,20);
for(k in 1:m) {
i0=which(x+VaR<0);
if(n0>0)
z=(mean(x[i0]/ES) +1)
else
z=1
}
p=length(which(Z<z))/m
p
n=5000;
m=1000;
X=matrix(rnorm(n*m),n,m);  # simulations for H0 reference distribution
alpha=0.99;
VaR=-qnorm(1-alpha);
ES=dnorm(qnorm(1-alpha))/(1-alpha);
Z=matrix(ncol=m);
for(k in 1:m) {
i0=which(X[k,]+VaR<0);
n0=length(i0);
if(n0>0)
Z[k]=(mean(X[k,i0]/ES) +1)
else
Z[k]=1
}
x=rnorm(n); # data sample to test
x=rt(n,10);
for(k in 1:m) {
i0=which(x+VaR<0);
if(n0>0)
z=(mean(x[i0]/ES) +1)
else
z=1
}
p=length(which(Z<z))/m
p
n=5000;
m=1000;
X=matrix(rnorm(n*m),n,m);  # simulations for H0 reference distribution
alpha=0.99;
VaR=-qnorm(1-alpha);
ES=dnorm(qnorm(1-alpha))/(1-alpha);
Z=matrix(ncol=m);
for(k in 1:m) {
i0=which(X[k,]+VaR<0);
n0=length(i0);
if(n0>0)
Z[k]=(mean(X[k,i0]/ES) +1)
else
Z[k]=1
}
x=rnorm(n); # data sample to test
x=rt(n,10);
for(k in 1:m) {
i0=which(x+VaR<0);
if(n0>0)
z=(mean(x[i0]/ES) +1)
else
z=1
}
p=length(which(Z<z))/m
p
n=5000;
m=1000;
X=matrix(rnorm(n*m),n,m);  # simulations for H0 reference distribution
alpha=0.99;
VaR=-qnorm(1-alpha);
ES=dnorm(qnorm(1-alpha))/(1-alpha);
Z=matrix(ncol=m);
for(k in 1:m) {
i0=which(X[k,]+VaR<0);
n0=length(i0);
if(n0>0)
Z[k]=(mean(X[k,i0]/ES) +1)
else
Z[k]=1
}
x=rnorm(n); # data sample to test
x=rt(n,10);
for(k in 1:m) {
i0=which(x+VaR<0);
if(n0>0)
z=(mean(x[i0]/ES) +1)
else
z=1
}
p=length(which(Z<z))/m
p
n=5000;
m=1000;
X=matrix(rnorm(n*m),n,m);  # simulations for H0 reference distribution
alpha=0.99;
VaR=-qnorm(1-alpha);
ES=dnorm(qnorm(1-alpha))/(1-alpha);
Z=matrix(ncol=m);
for(k in 1:m) {
i0=which(X[k,]+VaR<0);
n0=length(i0);
if(n0>0)
Z[k]=(mean(X[k,i0]/ES) +1)
else
Z[k]=1
}
x=rnorm(n); # data sample to test
x=rt(n,10);
for(k in 1:m) {
i0=which(x+VaR<0);
if(n0>0)
z=(mean(x[i0]/ES) +1)
else
z=1
}
p=length(which(Z<z))/m
p
n=5000;
m=1000;
X=matrix(rnorm(n*m),n,m);  # simulations for H0 reference distribution
alpha=0.99;
VaR=-qnorm(1-alpha);
ES=dnorm(qnorm(1-alpha))/(1-alpha);
Z=matrix(ncol=m);
for(k in 1:m) {
i0=which(X[k,]+VaR<0);
n0=length(i0);
if(n0>0)
Z[k]=(mean(X[k,i0]/ES) +1)
else
Z[k]=1
}
x=rnorm(n); # data sample to test
x=rt(n,10);
for(k in 1:m) {
i0=which(x+VaR<0);
if(n0>0)
z=(mean(x[i0]/ES) +1)
else
z=1
}
p=length(which(Z<z))/m
p
n=5000;
m=1000;
X=matrix(rnorm(n*m),n,m);  # simulations for H0 reference distribution
alpha=0.99;
VaR=-qnorm(1-alpha);
ES=dnorm(qnorm(1-alpha))/(1-alpha);
Z=matrix(ncol=m);
for(k in 1:m) {
i0=which(X[k,]+VaR<0);
n0=length(i0);
if(n0>0)
Z[k]=(mean(X[k,i0]/ES) +1)
else
Z[k]=1
}
x=rnorm(n); # data sample to test
x=rt(n,10);
for(k in 1:m) {
i0=which(x+VaR<0);
if(n0>0)
z=(mean(x[i0]/ES) +1)
else
z=1
}
p=length(which(Z<z))/m
p
n=5000;
m=1000;
X=matrix(rnorm(n*m),n,m);  # simulations for H0 reference distribution
alpha=0.99;
VaR=-qnorm(1-alpha);
ES=dnorm(qnorm(1-alpha))/(1-alpha);
Z=matrix(ncol=m);
for(k in 1:m) {
i0=which(X[k,]+VaR<0);
n0=length(i0);
if(n0>0)
Z[k]=(mean(X[k,i0]/ES) +1)
else
Z[k]=1
}
x=rnorm(n); # data sample to test
x=rt(n,10);
for(k in 1:m) {
i0=which(x+VaR<0);
if(n0>0)
z=(mean(x[i0]/ES) +1)
else
z=1
}
p=length(which(Z<z))/m
p
n=5000;
m=1000;
X=matrix(rnorm(n*m),n,m);  # simulations for H0 reference distribution
alpha=0.99;
VaR=-qnorm(1-alpha);
ES=dnorm(qnorm(1-alpha))/(1-alpha);
Z=matrix(ncol=m);
for(k in 1:m) {
i0=which(X[k,]+VaR<0);
n0=length(i0);
if(n0>0)
Z[k]=(mean(X[k,i0]/ES) +1)
else
Z[k]=1
}
x=rnorm(n); # data sample to test
x=rt(n,10);
for(k in 1:m) {
i0=which(x+VaR<0);
if(n0>0)
z=(mean(x[i0]/ES) +1)
else
z=1
}
p=length(which(Z<z))/m
p
# Implementation of Test 1 of Acerbi / Szekely paper in Risk Magazine
n=5000; # number of simulations in each trial
m=1000; # number of repeated trials
X=matrix(rnorm(n*m),n,m);  # simulated random numbers for H0 reference distribution
alpha=0.99;
VaR=-qnorm(1-alpha); # delta normal VaR
ES=dnorm(qnorm(1-alpha))/(1-alpha); # delta normal ES
Z=matrix(ncol=m); # test statistic under H0 (Equation 4)
for(k in 1:m) {
i0=which(X[k,]+VaR<0);
n0=length(i0);
if(n0>0)
Z[k]=(mean(X[k,i0]/ES) +1)
else
Z[k]=1
}
x=rnorm(n); # data sample to test (normal distribution; this should be accepted)
x=rt(n,10); # data sample to test (t-distribution, this should be rejected)
for(k in 1:m) { # test statistic; Equation (4)
i0=which(x+VaR<0);
if(n0>0)
z=(mean(x[i0]/ES) +1)
else
z=1
}
p=length(which(Z<z))/m # proportion of H0 test statistics that are more extreme than actual test statistic
# this is a proxy for the probability (under H0) to get a result at least as extreme than the one oberved
# see Equation (12) in paper
p
# Implementation of Test 1 of Acerbi / Szekely paper in Risk Magazine
n=5000; # number of simulations in each trial
m=1000; # number of repeated trials
X=matrix(rnorm(n*m),n,m);  # simulated random numbers for H0 reference distribution
alpha=0.99;
VaR=-qnorm(1-alpha); # delta normal VaR
ES=dnorm(qnorm(1-alpha))/(1-alpha); # delta normal ES
Z=matrix(ncol=m); # test statistic under H0 (Equation 4)
for(k in 1:m) {
i0=which(X[k,]+VaR<0);
n0=length(i0);
if(n0>0)
Z[k]=(mean(X[k,i0]/ES) +1)
else
Z[k]=1
}
x=rnorm(n); # data sample to test (normal distribution; this should be accepted)
#x=rt(n,10); # data sample to test (t-distribution, this should be rejected)
for(k in 1:m) { # test statistic; Equation (4)
i0=which(x+VaR<0);
if(n0>0)
z=(mean(x[i0]/ES) +1)
else
z=1
}
p=length(which(Z<z))/m # proportion of H0 test statistics that are more extreme than actual test statistic
# this is a proxy for the probability (under H0) to get a result at least as extreme than the one oberved
# see Equation (12) in paper
p
install.packages("modelr")
load("/Users/nat/Downloads/heights.rda")
heights
write.csv(heights, "~/Downloads/heights.csv")
