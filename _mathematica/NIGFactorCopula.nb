(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1762904,      33302]
NotebookOptionsPosition[   1729084,      32779]
NotebookOutlinePosition[   1729510,      32796]
CellTagsIndexPosition[   1729467,      32793]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Fitting the copula", "Title",
 CellChangeTimes->{{3.819297393220798*^9, 3.819297426453021*^9}, 
   3.8198032323275747`*^9},ExpressionUUID->"1f9830e6-3441-45aa-8bfd-\
9de99257340c"],

Cell[CellGroupData[{

Cell["Introduction", "Section",
 CellChangeTimes->{{3.819803229273479*^9, 
  3.819803230591813*^9}},ExpressionUUID->"e30d8844-d658-49ef-a7f7-\
7becc0d0b9cf"],

Cell[TextData[{
 "Idea: Fit copula according to copula dependence measures, such as Spearman\
\[CloseCurlyQuote]s rho (rank correlation), Kendalls\[CloseCurlyQuote] tau \
and quantile dependence, see e.g. Oh and Patton (2013) (screenshot below). \
This method is called \[OpenCurlyDoubleQuote]method of moments\
\[CloseCurlyDoubleQuote] in the literature. See also McNeil et al. (2005), \
Section 5.5. Note also the empirical DF variant, which ensures that the data \
lie strictly in the interior of the unit cube (page 232 of McNeil et al, \
2005). See also Nelsen (2006). See Fermanian et al. (2004) for convergence of \
the sample measures to their population counterparts. \n\nPossibly use the \
following dependence measures for calibration: rank correlation, 0.05, 0.1, \
0.9, 0.95 quantile dependence (this is what Oh and Patton (2013) use). \n\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzsnQXYHcXVgKG0UKOkuBcCxSE4wb0lxZ0QvECQosGdluIhUIpTIERwJ7hr
kOIavECggeAEK8zPu/nn5tz9VmZ35u7e++W8z7Nt+HZ27+zMmTPnjJyZc4e9
Ntr5J5NMMsmAn//4Pxttf+Cq++67/cEb9/jxPzbdc8Cu/ffcacc+e+63U/+d
9u29w2Q//nGBySeZ5NEf//HTH/9tFEVRFGUiZsiQIWaKKaYwq6yyivn000/r
zo6iKIqiKIqiKIqi1MqgQYPMkUceab7++uu6s6IoiqIoiqIoiqIoiqIoiqIo
iqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIo
iqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIo
iqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoitJWvPvuu+bss882
t956a91ZUTJ45plnzMknn2z+/e9/V/7bo0aNMgMHDjSPPfZY5b8dimHDhpnD
DjvMPProo3VnpRB11ns78L///S/STaeddpo58MADzSmnnGIefvjh0ukmVtDz
5557rrnuuusKP9sd2r9F+7vOolP0dhV6Oq8Nd0pZgUteO0nvdFLZK4qSzwsv
vGD+/ve/m6WXXtpMOumkZpJJJjGHHnpo3dlSBGPHjjWXXHKJ2W677czMM88c
1RHXxRdf3PLf/uGHH8z9999v9t9/fzPffPM1fvuCCy5o+W+3guuvv77xDVNM
MYX5z3/+U3eWUqmz3tuNO++808w111yRjvrlL3/ZKAuu3XbbrXC6iQ1s9qOO
OsosscQSDT2/55575j7X3dq/9nedSTvr7ar0tGsbbueyipOW107VO51U9lVy
3HHHmQUWWCD3Wmqppcwf//hH07dvX3PAAQdE5fnRRx/VnX1lImfjjTc2v/71
r5vsSbUb2ou//e1v5ve//7351a9+1VRPVfhLn332WaS/fv7znzf9drv3V2lQ
lvI77rrrrrqzlEqd9d5OPPjgg5H8TTnllOb5558333zzTdSP2vLAZsQecU03
MdK7d++oXKQcufjJ3a39a3/XmbSz3q5KT7u24XYuqzhpee1UvdNJZV8ljE8O
HTrUrLXWWk3lw/XTn/40GtueffbZzVRTTdUYA5L99korrRSNgStKq2GMjivO
l19+aWaaaSa1G9oc1h7V5S/997//NT/5yU/apr9Kk+U8HnrooUgv8w09e/Y0
3333XQtyF5Y6670d6NWrV/Tdffr0afztiy++iOwo/s4czrfffuucrm7Kyq4v
X3/9dSTzRfxkS7u1/zyyylj7u86jE/R2FXrapQ23uqxC6q+8vLaj3sn6/k6Q
0zqhPGabbbamdjJ8+PCmNJ988om55ZZbItmOjz2tvPLK5umnn64p98rEwK67
7moGDx6ceG+VVVZRu6EDYLytLn9J6re6+6ssWc6DOUXGJjupD6uz3uvk5Zdf
bnz3vvvu23QPf+eGG24wY8aMcU7XDvjIri/rrrtuKT8Z2qn955FXxtrfdR6d
oLer0NMubbiVZRVaf+Xltd30Tt73d4Kc1gnrqqXvm+X3fvjhh9EaIJm+R48e
uvdbaQnEe0DGzjjjjMT7UnbVbmhffve739XmL80999xt0V/lyXJ3pM56rxPi
LNnvPvLII73T1U3dsittjqJ+cru0/zxcylj7O6UVVKGnfdqwL3Xor3bSO3Xr
7+5A3O8l7l0e++yzT9MzjEepr6yE5MUXXzS//e1v1U/uBkzsfrKLLHdHJlY/
eccdd3Tyf13T1Uk7yG5395Ndy1j7O6UVdGc/uS791S56px30d3egjJ/MOvdN
Ntmk6blFFlmklv1LSvfjvffeM3PMMUdDttRP7mwmZj/ZVZa7IxOrn7zppps6
+b+u6eqiXWS3O/vJRcpY+zulFXRXP7lO/dUOeqdd9Hd3oIyfDKzBjsexIx62
ovjw5JNPmllnnbVJrmjrxIDlOuKIIxppk+yGESNGRH+ffvrpI/n805/+FJ1J
yvmkWXC23x577BGdvcHZLDPOOGO0H4xzTH32bPC755xzTpT3eeedN4qFyBkJ
u+++e5TXLD7++GMzaNCg6Fli60099dRmwQUXjMaoTj/99Cg+RhrsNznxxBOj
OEF8F9x0001ReVC+k08+eRTv8oQTTjCffvpp07PkzZa3vWReb7vtti73uR55
5JHEvLj2w1999ZU56aSToviC1PnPfvYzM8MMM5gVV1zRXHjhhZlllUa8vxo3
blwU73+ZZZaJYshy4a/ceOONTTISogyKyHIeTzzxhBkwYICZZZZZzN13352a
jnM4+J555pknOuOB8ym22GKL6GzEww8/vFjhGb86ca33snn2aR95FP3ua665
plGv1JH97oUWWqhJPjjnySUd54wm4aOniuiiMrLrk7fPP/88qrONNtrITDvt
tGa66aYza6yxhrniiiuC+smu7R+OP/74xDbORV4l//jHP5rub7nlluall17K
zFvRMm7n/u7NN9+Mnl1hhRUimQJit1Muiy++eBTbhjxuuOGGUewoC30PZ14t
t9xy0bpE4sfutNNOUez3NMrqJGzWf/7zn1Hd8xtAPJ75558/6g95fvTo0U3P
EEOPZ4jFQ/5/8YtfRG1n5513NrfffnuXvjNOnt7mO//6179G80xbbbVV9LdX
X33VbL/99lFZ8G383qmnnpr5O1Xo6Tx827BLH+faVxRtW0VlIy+vPnqnDtvD
1b7w6XNDyXpoG8eFsn4ykC/57LLLLpuatlV+iNK9oP+h3Um5Is4nf+MiHoQl
bjfQT8jn5LX33nun/ib68Te/+U3Ul6+++urReWg2/h8XvxvvP11gr/+SSy7Z
WG/BnBFnCdJ/2XejX77//vsuz7KPYc4554zSEPuW76N/sX/jIlbEzTff3PTc
RRddFPXpMk79LrvsEj2bVjb0BR988EHjHcTt22yzzZrSnHzyyY372DnoMnS+
TEN/mIRLP8z6IDv2SVmhi6+99lqz9tprN57lbLqiyP6K8mdsIK0ctt5668aa
mBBlUESWk3j77bejMxuoH/mOO+64IzE9dY/css4KWxk7DhvUnimDLVoE3zpx
qfeyeS7bPlr13VdeeWWjXuUZPtiL9u9c66yzjlM69jbF8dFTRXVRUdn1ydvr
r79uFl544SgdttfBBx8cyQBjB/E26uMnF2n/8MADD0R+n0yDL4qcYldKXnvt
taZ19H/+85/N+++/n5m3omXcjv0dex/xi+VvU5fYxIsttlhi3qhjfGjaJnKf
lAa7mbjBccq0zauvvtqsv/76kR1u02CbJ5XfwIEDG8/h+5NX/o6vzz2ei58B
g2+B3uFCZ7vobfRe/D62PmPZ1E1SmRx44IGJdVCFns6jbBsu0scV6Stc21YR
2cC3dM2rj96pyvYoal/42KShZD20jeOKj5/87LPPNj1LLPSk8YRW+SFK90Xq
V5d114xr8f/4iLQfxvDibZNxqDhDhgyJ7jHvit6wINuyD8/zaeI8/vjjDd3L
eJIcC6Ivkvkirq2EMUbGMLmHvmSs2II+Za7CPst4mjyj7ZBDDjGrrbZaou6h
PyTu4Q477NBlLQg6V+pqxjinmWaaRD1tYSxd9i9l/WTKhjFB7k822WTRmKW8
Z/tfrscee8yh9Ccg+yt7oX8Yz5T5spf0T0KVgYssJ4HvhYzH85nUj2GT2zo9
77zzmu6RHtsOW8+VEHWSV+9l8+zTPqr4bmmfpvX3RdKBj57y0UUusuuTN+wN
28Y4G0vOz9H+4vu7fPzkou0fOKNLxq5FNtLg3FHS4B8WwVU/tGN/h02PzR73
h1irwNwQ88nYsqxbkjbf8ssvH9mLPMccEG2aORN59mzc1y/bNpn7wn6W+WOu
jd9nHIRYtPbvrMEC5v+sn89v4tdbmBeM2718K+nGjh3rpLdJg99t69FefBff
wW+ceeaZTfKLzoufpV6Fns7Dpw279nFl+4q8tlVENvBnXftjX71The1RxL7w
6XNDyXpoG6cIPn4ysBZFPs9ZF5JW+SFK96aon0wboU+WMB5Nm7VpaI8S1jig
B3n2ueee6/J++n8p29gELtCn2vyz7igOOoY1Ffa9/fr1a7pnx4YZM5P9nny/
nOcgHWueJHIsn+/717/+1eXb4+tyGN+ToHOy9DSwtipLT0NePzxy5MimvGKj
SPbaa6/G/aLraqTupczjfgD6Sc4PoLulfg5RBmX9ZAtrk/L6sUsvvbRxP0mW
sQcYj3QlRJ3k1XuZPIdqH6387tB+so+e8tFFkCe7vjqU9Yz8nfmApDOwOJfS
2mdxG9sF3/YPzM/Jb+C80ST69+8f3U9bM59GGT+5nfo7OP/885ueZe1gfD3p
X/7yl6Y0zJnE25ecx4uPSfi2zd69ezf9/v777x/9/ZVXXjHbbLNNtB7AzmFT
hzYda0Ul+J9yrm6DDTZILBMXvc1aL5mGeUDpk7N2X94fNmxY0DIBXz85RBvO
K6uy/Ztr2yoiGy71GkLvVGV75H1PqD7XV9ZD2zhF8PWT43P/0tZupV5WujdF
/WTmSZNgfNOm2W677ZrubbvtttHf2QuQBHpLyqfrul/W59hnGA9KgjUrNs1Z
Z53V+PsxxxzT+Hv8TFUJa1tk3rDlJOwRsvfSxqAYI5TvYG+bhPHPPD0tx8nK
+snoafoJ7qP32RMmkeP31FkRZH+Fnk7i6KOPbioH1oxZQpSBr5/MWljGt7P6
ZWnLs+YzHlORdXiUhSsh6iSv3svkOVT7aOV3h/aTffSUjy6CPNn1ydvll1/u
pFuZM7XpfPzkMu0fsPfkXAi6NQ7r6LB12L+at2c1Thk/uZ36O5B9CWWQFNOV
+DXy/R999FGXNMyByzTSjvZtm4wB2fs9e/bM3O8n19Azzx3n2GOPbdxnLjkJ
F73N3gd7H18tCekLsU5WUoWeziJUG84rq7L9m2vbKiIbLvUaQu9UZXvkfU+o
PtdX1kPbOEXw9ZPj5y/LsdRW6mWle1PUT06L/0lMBpuGvf8S+jd7z+4vil9S
Phk3dYE9QtZeSNp7bGFeIr7PbdFFF238HmP0aTBWz34Tmza+1o/9H/YesYPS
IEaATcc+K0lVfjIw38168PhcDeUn91bH6zAP2V/F59Qt2LVyvZ+NQwPt4CeD
XF+V1C8Tw0PKKmvEWANoYUyY+B9F8K2TvHovk+dQ7aOV3x3aT/bRUz66CPJk
1ydvcr0jNk4aoeJ4lWn/FhmLBZuSeSYJcdy4F5+Pd6GMn9xO/R1IG5n5syQe
fvjhpvd/+eWXXdKwz1Wmie9R9mmb7DuVuiYLqWfY/xhHzuMSfyyNPL2NL2Dv
r7TSSonvYPw6S/5braezCNmGs8qqbP/m2raKyEZeXiGE3qnS9sj6nlB9rq+s
t8LGccXXT8YHls/LttJKvax0b0L5yaz/smnYJ2OhTdlxWPQT41N5V1JsnTiM
f1udU3SfGnpG6s289RVSt7NvQ+LqJ7OmzKZj3YeML1ClnxyHMw2wT+I6Qtah
C67nM0g9yNyRpVP8ZGSH2IiyrNjfdPbZZ2f6R0UoWid59V40zyHbRxGKfndI
P9lHT/noIkuW7PrkjbkAGSMhy+6o4lyotPZvwV9jrMGmic/n2jO+0mLgZBHS
T666v7O4+MnxueIkPzk+d0IsrSyKtE2pD/h3FquuumojbdL6AX7X3mePZRoh
/OSi8h9aT6cRug1nlVXZ/q2Mn5wnG3l5hRB6px385JB9rq+sV2HjpOHrJ8vx
Ay67P9lXLxOn/Z133km95DiC0v1otZ8s++z99tsvWL6feuqpxnuJp1UE2o5s
S8Q/yII4ijI9bcbi6iffeuutTe+Qe2Tq8JOZp2FOhH127J9mvxrxXPL6+jRc
+yupw6UN1yl+MhCvKSl+JPo37cwuF8rWiUu9F8lzyPbRyu8O6Sf76CkfXWTJ
kl2fvMXnDbNiQ1fhJ6e1fwm+sb2Pz2zPCPjss8+i/0bek9Yb51GFn9yq/s5S
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
OXKk+eSTT5ru33333ebtt9+uKXdK1YwbN87ceuutkUwobnRq2++OuOjzVuPS
XyiKq5y0g0wrSjtAGzjqqKPMEkssYSaddFIzySSTmD333LPubClKt2Ls2LHm
kksuMdttt52ZeeaZo3bGdfHFFyemv/766xtppphiCvOf//ynce+pp54yxx13
nFlppZXMT3/60yjNwgsvXNWneMF3bLvttmayySZrfB8X37HaaqtF43TnnXee
+dnPfmZOO+20urOrVMDzzz9vfvOb3zRkoX///ub777+vO1ttSSe3/e5EUX3e
arL6C0WxZMlJu8m0orQLvXv3NlNOOWWTzap+sqKE5W9/+5v5/e9/b371q181
tbW0Poj0Mt1dd93VuIeNPNtsszXd7wRb+YknnjC//OUvG3nu0aOH6devn9lo
o42a+mV7HXjggXVnWamAY489tkvdX3311XVnqy3p1Lbf3Siqz6vIT1p/oSiW
LDlpN5lWlHaCNZA9e/ZUP1lRWsyoUaOc+qCHHnqoMV9E2/zuu++6pFl//fU7
xlb++OOPzZxzztnI70knnWS+/fbbpjTnn39+kx+91VZb1ZRbpUpYQxD3kw8+
+OC6s9XWdFLb78646nNffvjhh+hKw6W/UCYOsmTFRU6qkmlF6TTWXXdd9ZMV
pQKmmmoqpz6INVF33nlnqs1zzDHHdIytfMEFFzTyyhqWNJ577rnG+hbWYSvd
H8ZL/v73v5s//elPZv7554/q/qCDDqo7W21NJ7X97o6rPvdh1113NYMHD85M
k9dfKBMHebLiIidVyLSidBobb7yx+smKUgG/+93vgvRBZ5xxRsfYyrvssksj
r9tvv31m2gsvvDBKN99881WUO6VdGDp0aFT3N910U91ZaWs6qe13d0Lp8zSI
q8q7qXNFySKUrLRaphWlE1E/WVGqYWL0k5dffvlGXhdZZJHMNYSw9NJLR/PK
ysTDhx9+GK3NRz6++eaburPT1nRS2+/utNKnePHFF81vf/tb9ZOVXELKivrJ
itIV9ZMVpRomRj957bXXbtrzdMIJJ2Sm/8c//hGl+/zzzyvKoVInrAVccskl
o/V+zz77bN3ZaXs6qe13d1rlU7z33ntmjjnmaLxb/WQljdCyon6yUgT67xNP
PNH06tXL7LHHHtHfWBPGXqpZZ53VTD755FGMOOw+zjPMgvOJeQdzJcSrmXHG
Gc0qq6xiTjnllNS9ApyZ8de//jUaY7dxbV599dVo7eLss88enZ8y77zzOp2h
iM15+umnR/Flp512WjPddNOZNdZYw1xxxRXOfnLd3/C///3PnHPOOaZv377R
Mz//+c+jM6123313M2LEiMxny+S9CG+++Wb0rhVWWCHKEzAvgs2/+OKLR3EE
p59+erPhhhtGsRIsyA3785ZbbrnITqRMdtppp6jcWvE9X331VRRHaa211op0
K+U/wwwzmBVXXDFa85oF54htuummZp555onOFWBt7BZbbBGdx3f44Yc3paVO
qCd5yTq67bbbutzneuSRR5rewzzTP//5T7PMMstE5QLDhw+P9jLS/sj36NGj
g5VPkW8sg2sfRHzoAQMGmFlmmSU6TzhOlq1MrOiksuUilkecVreN/fbbr0us
pr/85S+p7+Y8Zc6wIMZgnFA6uY72U0SWq9QnZb8plG5fYIEFot/NOz+5lW2z
qJ6ps8xCtv0i+PS/xPIbNGhQ9Oxcc81lpp56arPggguaTTbZJLJLktq6pWjd
lOkzyuoDF31eVFaefPLJSJdJfclzth6POOKILs/k9RcWn3oIacuFhjgH//rX
v6K8UM/oB/KCbXvvvfea119/3WywwQZmt912azwTykax1KETisqKi5wU8ZNb
bTso7ctFF11kVl555caZwlzsscOHjNt79qJtfvDBB4nvQ2dzRiS2zeqrr26W
WmqpRtw5LvSU1Nv8vo1pYi/sAexBedakvLLOUUFH0J+SDt1IPFFsqYUWWqjL
e9L85Lq/4emnn47mHOzazSOPPDI6+xk9ZJ9H1yedvVk070VgTwi2gvwOyhrd
t9hiiyV+J3WAzXvzzTdHYxZJadCP//3vf4PUhYW1OXbckTKkv7z22mub5vsO
OOCAxN+kPvkN1vZwtu3tt98eydCvf/3r6Dnscsktt9xiNttss6Zv4tx6C7Y9
eh9bRqZh3AY4G4a4rvQR9h79Bv1QvKwGDhwYpHyKfmMZsvqgt99+OzqfId5u
7rjjji7vybKVX3nllcgGsPf5nr322iuqa/yvEGVVBOr6Jz/5SZd6oz+VPl4W
IXVy1e2niCzvsMMOleqTMt8UWrc/9thjZty4cbn134q2WUbP1F1modp+EXz6
30cffbQR754xkUMPPTRqtzIGPuddIb8+dVO2z/DRgXk+RRlZ2XnnnaPflPmd
aaaZor9xEXcVivQXPvUQur2HBrm2dgQ+I2ewc874lltuGY2LyHxRthZfG0VS
l05wkZWicuLqJ1dhOyjtyyGHHBLFW02SU2SImHLYM/Gzh2lP8b13Q4YMie4x
/4G8WlhfJm0aq/vgyiuvjPQ4Y33y/ZNNNlnUL6IDzjzzTDP33HM37qEPks6X
Z4x+mmmmidL06dOnaY6F8WH6NvkbSX5y3d/w+OOPN/o+5g7kOBXtWL7/hhtu
8M57EdC16NL4mANj7YwBMv+DTcf8ltQh7NnEd+A55kJuvPHGaAyO52yavffe
O0hdAGXG/IutA8aV5T07jsKF3Sp5//33G7J+3nnnNd1D1+K7MMcVB/myshfv
gyzIo7RrbB/EWCi2ryxT+kDKjDk2zt+1f2d+0bd8yn5jUbL6INrMH//4x6Y0
af1Zlq1MmS677LLRvfXWWy9al5VEq9uGhDJN8pUZ98de+/LLLzOfD6WT62g/
RWR5xx13rEyflP2mkLrdhVa2zaJ6ph3KLETbL4JP/4scWl8Fn4Q5NwvtEl9G
6gJi8VqK1k2ZPsNXB2bpcx+dAVIHJK2lLdJf+NRD1e29CJSb3ZfLWQqsJZDg
88s8Sz8ZfGwUSzvohCxZKSIn4OInV2k7KO2NHL+nL2Zdh4Q1B/E1DzJWJ/fR
zTzLmSdxsIfks/hcEhkn1rZxGePkpZdearo/bNiwLr/Bmg/uMe4+ZsyYLvdZ
4yjH3OJ+ct3fQFqrA1gnHgd9L89d7devX7C8F4HzX+W7WIuCDpaw1lSmYQwu
Po8ix77jMX99vmfkyJFNshz/XeYc7P34GsZLL720cS/pd7FPGDtMAvs1qw8C
9gCk9UH0ffKb9t9//+jvzJtss802kV9h58l8ysfnG4vg0gex5iqvP0uzlSkD
+i5sQ/ykNKpsG5bLL7+8y/i+vZjTuO+++3Lf4aOT62o/liKyXIU+8f2mEP2T
C1W0Tde6aYcy8237RfDpf7ln59jwZaT/IN+PD2ufJ108LkGRdlMkfQgdmKXP
fWUlz0+25PUXoeqhqvbuCvrQ9geMoyV9F9h1EDbPcXxtlHbQCS6y4mJXQJ6N
UoftoLQv7OW1dZ02LsI4nZQJ9slZtt122+hvrN1PgnEh+Wx8XQbrmuy9tHNH
ZftlbYUEuzTt3RLWM9p0cT+57m9gf4W9lxbjhfkom+ass84KlvciSDn4xS9+
kRjTlz2X8vc++uijLmnYgyfTSH3p8z3oSMYp+TvlzX4eCWOX9jl+R8IaInvv
z3/+c5dvY30RY55JsBYnrw9in2VaH4TdZe/17Nkzc8+LT/n4fGMRXPxk1i7K
uVdXP5m1uayvZQ6R/GZRZduQsFeM/cPy3fbim/mdrHjHPjq5rvZjKSLLVegT
32/y1e2uVNE2XeumHcrMt+0Xwaf/lec877vvvqm/EZ/zo74lRdpNkfQhdGCW
PveVFVc/Oa+/CFUPVbV3V1j3a39rn332SU3HWmabLslP9rVR2kEnuMiKi10B
eTZKXbaD0p7I9iX3/8dhn51Nx/54C+vk7N+ZL0m6pDwx9yuhPdh7K620UuJv
YwPaNHEfV65Byuo7s+J41f0N7PWwtmLS3icLMUqIURAy70WQfQzj60k8/PDD
Tb+XtNaUveQyjRwn9/0e5t5YmxqP50K5yn2exMqRELdCvnfrrbc2Y8eObdxn
vJqYF0n49kHsL5O/m4VP+fh8YxFc9/7IdV4ufvL9998fzQEQu4l/51Fl24hD
rJijjz66aU2wvNZZZ53Utu6jk+tqP5YislyFPvH9Jl/d7koVbbNI3dRdZr5t
vwg+/e+iiy7ayCfrI9JgXpA9lTYtc4SSInVTJH0IHZinz31kxdVPhqz+IlQ9
VNXeXSEug/0tdGEaxMay6VrhJ0PdOsFVVvLsCsiT6TptB6X9cLXJiFVn07EW
ATuQvtuOMRGXhXHwvCs+JubSftJ8XMbc5V69rFiiae+o+xuY+7DtOq6z8wiR
9yK42LXxuZ0kuzY+Fmdjr7Tie9i7RiycuF5jz7qE/pM4hjINe3rOPvvsTNsJ
QvrJ/DsN3/Lx+cYitMJPRudYn3O77bbLzUPVbSON1157LVrLKcvcXqxVS6Ks
TmZ/SV3tx+Iqy9BqfRLim3x0exGqaJtF6iZO1WXm0/aL4NP/UmdyHCxv7aUs
//jZ6UXrxiV9KB1Y9AydIrISwk8OWQ9VtXcXWBMuYzpm7cOvwk+OU7VOqMpP
bhfbQWkfXG2yW2+9taktYJtIG4ZzUcrg037i8wjEQkkj7R11f8NTTz3V+Dsx
fIoQIu9FaLVdG/J72KfFeRnE62AvJ3sYifGTpcuJ5ZIUgxFdmXZOAlTlJ4co
n7LfWIRW+MnywnbIW3dZddvIgvE89lImxfiiPuKU1cnsUa6z/UA7+8llvqlK
u7nVbbOMn1xXmfm0/SL49L8vv/xyU96IJZQF8bNlehmPqRV+cigd6KrPy8hK
CD85ZD20k58s19IQzzBpX4qlSj+5Lp1QlZ/cTraD0h642mTE25dtlv0Jcm+w
3LNcBJ/2Q0xUqe84Zy2NtHfU/Q3y99l7VYQQeS9Cq+3aUN/DmSroSmwqzgez
+xXlHpo0O59YjZwnEbfPGF8cPHhw4jNV+cmhyqfMNxahFX4y58nKWCX4E9hH
aVTZNoitwlxuHtdcc01kW8gyP/7447ukK6uTL7nkktrbT7v6yWW/qWq7uZVt
s6gvVmeZ+bT9Ivj0v5wjJeuIuL1ZcC6zTC/Pc2uFnxxKB7ro87KyEsJPDlkP
7eQnx+Osy/jdcaryk+vUCVX5yVXb1Ur742qTIW82HTFq4J577mn8jVjT8b39
Lvi0n7h+5GzBNNLeUfc33HXXXY2/27WTroTIexFabdf6fg/9iIxvQgxZiYud
D+h+6pQz82Q+qZ+rrrqqS/qq/OSQ9V30G4vQqv3JrGFmf6L9G/5EPF6ppcq2
wV7jDTfc0CktsUBlef/hD3/okqasTm6H9tNufrLvN9VhN7eqbRbZ31F3mfm0
/SL49L+cpSPrJ0/eWUNv03KujKQVfnIoHZi3RtVHVkL4ySHroZ385BEjRjR9
F/O4abTaT24HnVCVn1y1Xa20P642GeeF23Sccw9x+4RzL11+j3UaFp/289ln
nzX9PnEr00h7R93f8MYbbzh/g/1m9CBxX0PkvQittmt9v0fq6qQ4wVm6/MUX
X4zm+yTvvPNOFJNC5mmDDTbo8t6q/GTf8vH5xiK0yk8G1tTJvKb5a1W2jf79
+0drqonHmwfnTch8MU+WlI8yOrnO9mNpNz/Z95uqspuraJuuddMOZebT9ovg
0/+CPEeVuNNZMP9m0xKDT9IKPzmUDszS576yEiqOV6h6aCc/GZ0g64+53DRa
7Se3g06oyk+u2q5W2h9Xm4z9CDadPauT+CLEiLR/Jx5l/Ax0Ce2cdKwXtPi2
HxlLnrgnaWPM8h2c02mp+xuIQWHPkOdiDiFtfx1p11prrWjuiDmHEHkvQqvt
Wt/vkTEvk+L0E384TZdzHh6x05M47LDDGs+x5i+O7IOOPfbYLvfZVyTjjJT1
k33Lx+cbi9BKPxlov1J+TjzxxC7PVtk27Pm9lG1ezCXWaMu8o1fjlNXJdbYf
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
zppPxkbZVynrjbwXOXPElSLlE+IbO5lWtg3OLn788ccb/00bxl5jDBwbB/ue
+KXx/XBJhNTJVbWfdqfdv6kd22a7l1mr8Ol/wfYDjOPwHrkvoW5apQN9ZAX9
Rl7oN1mvm7QXpQx11gM6+u677450OGt1Q8B6AcrHlpOUSxc/GXxtlLp1Qqtk
JY/uZlcrxXCNraooiqK0HtXJiqIonY09p9lnf7Irrn6yoijFUZtMURSlfVCd
rCiK0rk8+OCD0TrpDTfcsJLfUz9ZUVqHtMmIha4oiqLUh+pkRVGUzmTIkCHR
Pt9VVlklOk+sCvr166d+sqK0CMa7bPtKOvNAURRFqQ7VyYqiKJ0J5xwQq7HK
GE99+vRp9Bmh9kMrijL+bA4Zr51zJ4idpyiKolSP6mRFURTFFeLVytjenDmY
F5tdUZRsiJvH+QecOxGPjc7fGJu68MIL686moijKRIHqZEVRFMUVzobmzKKk
M/Y47+m4446rO4uK0tGMGDHCDB06NPWSZ5woiqIorUV1sqIoiuLCAw88kNlf
cHaToiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiK
oiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiK
oiiKoiidy7vvvmvOPfdcc91119WdlY5Fy3DiRuvfn1aX4TPPPGNOPvlk8+9/
/9sr3bhx48ytt94apVMUyf/+979INk477TRz4IEHmlNOOcU8/PDDdWercoYN
G2YOO+ww8+ijj9adFcW4675Oo8r2Rv909tlnR7+ntDfdVd6VakF+jjrqKLPE
EkuYSSed1EwyySRmzz33rDtbHYWW4cRNiPrH51pggQVyr169ejWeefXVV81C
Cy2U+8wnn3wS+pOD08o2NHbsWHPJJZeY7bbbzsw888zRu7kuvvjiUung+eef
N7/5zW8aafr372++//77IPlVOps777zTzDXXXJEc//KXv2zICNduu+1Wd/Yq
4/rrr2989xRTTGH+85//1J2liY4iOq1TqaK9vfDCC+bvf/+7WXrppRv906GH
Hhrk3Uo4JgZ5V6qnd+/eZsopp2zSLerjFUPLcOImRP3jY91+++1m4MCBZpZZ
Zml6F9eCCy5ozjrrLHPXXXc1nvniiy/MzTffbA466KAu6fE3Tz311Oid3333
XehPDk4r29Df/vY38/vf/9786le/anp/vO90TQfHHntslzK/+uqrg+RX6Vwe
fPBB8/Of/zySZcZSvvnmG9O3b9+GjGBjTyz+Iu1Jtg+pu5RqKKLTOpGq2tvG
G29sfv3rXzeVofrJ7Ud3l3elPr7++mvTs2dP9fE80DKcuAlZ/6znkjr+Jz/5
iXnrrbdS07/zzjtNaU866aSOnNtsdRsaNWqUU9/pko514XE/+eCDDw6a3zx+
+OGH6FLaB9Z7IAt9+vRp/I3xLNZ18HfmOL799tsacxiWLBl86KGHzE9/+tPo
u2nXnTBe111x1X2dRuj2liXPX375pZlpppnUT+4Auqu8K/Wy7rrrqo/niZbh
xE2o+v/oo4+adPz000+fmhYbYOWVV47STT755Obyyy8v/bvtQKvb0FRTTeXU
d+alo9xZh/enP/3JzD///FE65vWrZNdddzWDBw+u9DeVdF5++eWGzOy7775N
97Cxb7jhBjNmzJiactca8mSQuTzWxaqPXD+uuq9TaEV7y5PnVVZZRf3kDqG7
ybtSP6wrUR/PDy3DiZuQ9W/3QHHNPffciWmIXWLXmLH/b8SIEV6/2Q60ug39
7ne/c+o7XdPB0KFDo3Q33XRT6OymQowzfvOMM86o7DeVbIjtY2XmyCOPrDs7
LUdlsLMootM6gdDtzUWe//jHP6qf3CF0N3lX6kd9PH+0DCduqvST2Ydlf4/9
WexT7g50mp/84YcfmjnnnNMsssgiUZ1UwYsvvmh++9vfqo/SZuy4444TjZ+s
Mth5dDe/IWR7c5Vn9ZM7h+4m70r9qI/nj5bhxE1VfjL7r9Zcc82Gj9ydzqfo
JD+ZNaVLLrlktL7r2WefDZ7XJN577z0zxxxzNPKmPkr7sOmmm04UfrLKYGfS
3fyGUO2tiDyrn9w5dDd5V6rh888/N6effrrZaKONzLTTTmumm246s8Yaa5gr
rrjC2T7l7Lg99tgjio9PDP4ZZ5wx2rPBeXVpe5CwJ0888cQo5gLPAmsU2ds3
66yzRvsqiVF3wgknmE8//TTzG8r8PnEQ//rXv0ZzPltttVX0N87U2X777c3s
s89ufvazn5l55503ig/crmUY8htYr3vOOedEa3Z5Bl+L+Mi777577trdMnkP
xVdffRXFqFprrbWifo1vnmGGGcyKK65oLrzwwtTn2q3+XUjzkz/44AOz1FJL
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
UP9FkX4yunyDDTbo4jtT7ozPulC3/IUqQx85gKr8ZGKLyPLceuutzdixYxv3
GbsnLkkZXG06n7Kqwk/2zSN7kmX5plGV/qrST66zPwBXGZTrI5P85EUXXbRx
//zzz099D+sx7b4Trvh6X5/yaFVbbYdvk7jqNNbr2nSMc7A+Q0IsLe7F5yNd
CFUmULefnBbvmpiCaXqrlbrIt02HqBtfWx+q8pPB155QOh/GReV+gKy1mmn2
KX2EHXMhXh7jrXlXPIaCa9shpqNNh0/AuGWI33fpZ9K+v13K0OcbWCtj7ZWi
+4lC5L0VcJYDcVbi/Qp7XOPUXf9lSIrjdfbZZ3fxlVkPKG26JOqWv1aWYRE5
gKr8ZGwJ5vxlnth3RR1m2TAuuNp0cYqUVVV+sk8epZ/Mv5OoUn+1m5/civ7A
EsJPpo0Qh9fez1tjKusbfSLxKY9WtNV2+TaJq05j7TC+lk0bnze15zFlxWVL
ImSZQLv6ycR5TtJbrdRFvm06VN342PqWKv3kOEXtCaXzIbasrOusmIRpepY4
BPbv++23X6l8uLYdzoGV+WUNSojf9+ln2qUMfb7hqaeeavydWAtFCJH3kDC2
zXgte4DY50K8SeJKZumzuuu/DGnnQrEfLO4rs4Yraf+WpW75a0UZlpEDqMpP
BmKqJMWlxUbyOUepqJ9cpqyq9pPL5NHFT65Sf3WKn+zTH1hC+Mkvv/xyU7sg
blUWxO2V6TkXzOLrS4Zuq+30bZYiOg3f2KbFZ7ZxiT/77LPov3lXfH16HiHL
BDrNT26lLvJt06HqxsfWt9ThJ5e1J5TOh7MNpCxyVlwaaXpW7iuM7yNwxbXt
EI/epiNGPvsFQvy+Tz/TLmXo8w3y9zlvsQgh8h4KYkpid+Encp6QjWUi95GE
9pND1H8Z0vxkYE1U3Femb0w707Bu+QtdhmXlAKr0k4E4mZytEbe/mVcYPHhw
qXcW8ZPLllWVfnLZPLr4yVXqr07xk336A0sIP5kY/rJNELs5C86DlenlmTIh
fMmQbbXdvg2K6DS5d5OLPdJgYyaXiWsUskyg0/zkVuoi3zYdqm58bH1L1X6y
jz2hdD5x2efcyTTS9Ow999zT+DtxauN73V1wbTv0ozYdZ5GH+n2ffqZdytDn
G+wZDlzoAuIKuxIi776wXknG7CE+qaSVfnKI+i9Dlp8MxOCI23PsYWb9VJy6
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
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEUpQxvvvmm
+e9//1t3NhSlFh5/xpj3Pyj+3DffGvPwv4256S5jnhtlzA8/1PMOJZ9nnnnG
nHzyyebf//533VmpjQ/GGvPAY8aMfMKY518x5rvvir9j3FfGPPmCMTfcYczT
Lxrz9Tf1vCOJMR8ac8cDxgw635i9jjLmsacn3HvwwQfD/Egb8O6775qzzz7b
3HrrrXVnRVE6iv/9739RuznttNPMgQceaE455RTz8MMP152tIKheyGfYsGHm
sMMOM48++mjdWVE6iFtuucX89re/jdqXolx11VVmgQUWyL122GGHurPqDf7p
H7YwZppJjLn8Rvfnrv2xG1qmjzEzTDn+WXstvIIxF1/l5n/4vGPPI41ZaPli
1/Br3b/PhX79+iXKxY477pj77DvvvGMWWWSRTPl6/fXXvfI3duxYc8kll5jt
ttvOzDzzzGaSSSaJrosvvtjrvZ3IzXcbs/hqzXLGNccCxhx/ptvYzDvvGbP9
PsZMN3nzO6b/hTH9D3IbZwrxjjiff2HMucONWWkDY6addPz7ZprRmL67GvPC
q+PTIEuTTz65WXfddc0HH5T4kRIMGTLESY+6Xg888ID5+9//bpZeemkz6aST
RrJ86KGHVvItitIduPPOO81cc80VtZ9f/vKXjT6Ba7fddqs7e6V44YUXVC84
cv311zfqe4oppjD/+c9/6s6S0gEcd9xxZrLJJjNHH3103VlR2gTWFVxzzTVm
//3379KXcPXp08cMHTrUPP300/kva1MefcqYPv2abXUXP/n774056Pjx9ji2
/lGDjHni+fHzc1vvOeFd62yT7uf6vuOzH/2CGafv6vPkXcxXh+TFF1+MxuJn
nHHGLjJywgknZD77xRdfmBtuuMHst99+5uc//3njOXyZPfbYw1x33XXmq6++
8srf3/72N/P73//e/OpXv2rK28TmJ+9+SL5s7Hxg9juYe55t7vFp51xovCwx
N81Yj/37HAsa8+pbrX1HHObG5150wndsstP49yXNT+NnzjDDDGb++eeP5l1a
DW0g3i7s9dOf/rRh09qLfpgr7Zm11lrL/PrXv276m9rDiuIG60noa6acckrz
/PPPm2+++cb07du30ZZoj53oN2288caqFxzBJpDldNddgY0ipVuBnbrJJptE
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
WdT5rv4T1fB+GABqC2+crHmogNrgvvvuc8anK0eA8kbWRhpTecEFF5Sc4ykN
ypXkzQWguWrV109jMmy+RY3LUX585QpR3gW9u1CsHEeWjwWyRzkxlPcXqGbK
06X8/XqHqDmEAADlpT6O9lm42PxcQJYox5TiN54f0uGds9y/aEyo9/9rbpCw
uaUBAMUpL4TyI+bLowoASI/a4bzzIWqerzD9KwHUDZp70z9nk3fRXOZ6T8F1
AwAAALWd5h3eb7/9Aucc1b917tzZ3H777ZWuJoCM0Ds1td9rDhzlUlO+fc2J
AwAAAFSTJ554wtxzzz15F82/BwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgLpr5syZZt68eZWuRq01adKkSleh
1pszZ4656aabzLhx41Lf16JFi8w777xj7rrrLnPOOeeYIUOGmJtvvtnMnj07
9X2nrZzHEQAAAKhW48ePN40bNzY33nhjpatSK82YMcM0aNDA7L///mb+/PmV
rk6tolhVMeq2225rll12WbPMMsuYU045JdV93n777Wb11Vc3K620ktlmm22c
/9V+tdSrV8+cfvrpqe4/DZU4jgAAAEC1uvzyy039+vXNhRdeWOmq1GqvvPKK
WXvttU3r1q2d9jyEs+OOO5pVV13VjVPTjO/+/PNP0717d2cfO+ywg5k7d67z
77/88ovp2rVrTh2mTZuWSh3SUs7jCAAAAFSrhQsXmh49ejjP09dee22lq1MV
pk+fbtZcc03TvHlz8/nnn1e6OrXGb7/9Zlq0aJF6fHfLLbc45Tdp0qRG/2rF
yltuuaVbh08//TSVOqSpXMcRAAAAqFaHHHKI8yx92GGHVboqVeWZZ55x+u62
bdvWeReBcNRnPc347qeffnLa+1X+kUceGbjOggULzNChQ83999+f+P7LJe3j
CAAAAFSrMWPGOM/RrVq1Mj///HOlq1N1jj76aOf4HnTQQZWuSq1x4IEHphrf
Kfa15SsWrlZpH0cAAACgGn311VdO32A9R48dO7bS1alKX3zxhZPXS8f4jjvu
qHR1aoW04zvluLLl33bbbYmXnxXEyQAAAEB0Nl9Rs2bNnLxGSIeNV9Zaay3z
/fffV7o6mZd2fKe2fVt+Nb+7IE4GAAAAonnppZfcZ+iTTz451DafffaZM29U
UP/sX3/91UycONE8++yzTjt1VmShzrZvu5bLLrssdjmq71VXXWX23Xdfs9FG
G5nll1/eGWfbsWNHZ36jfL799lszYsQIJ6/zscce6/zbvffe6+TjVlu3trf5
ni3l6e7fv79p3769adiwoVlnnXXM7rvvbq655hrzxx9/xP4Oln6P66+/3vzz
n/90cmnpHcJee+1lHnjggdDxXZQ66vfV+Hsttg+Flk022cT9d7scfPDBZr/9
9jMdOnRwyjziiCNq7Pt///ufueiii5x8X7169XL+TXmx+/btazbYYAPnt9l0
003N8OHDix6LUo51EsexmLjnnWiOKr2X0LiOFVZYwWy22Wbm0EMPNeeee645
77zzaqy/dOlSM3DgQNO0aVPTuXPnTF1LAAAAUP1OPPFE9xn68ccfL7jukiVL
nOd/u37Lli3N119/7Xz2+++/O/1YvfPOKva68847y/E1akWd9axv96O2e9Ut
qo8//tiJUVSGYrNhw4aZRx55xInnbNlnnnlmzjYPP/ywOeCAA5y4xq6jY6KY
xztnkH+crmLq1VZbzay88spmzz33NNtvv71Zbrnl3HU333zzGnF1FJpjeost
tnDK2njjjc2//vUvc+mllzr5zvz1yhffRa2j/nurrbZy/t1bvmJSxXDKDa3f
RvGZ5kbzrtOnTx+3HLU/6/2C93PFfU8++aRTH3/9tZx11ll5j0UpxzqJ41hM
nPPOe6z0XTQfu/Lo632U6rfKKqs42+200041tnnuuedy6q3rFAAAAFAOitMU
D9hn0VmzZhVc347nXH/99d1t9Lyrtiw92+v/qw1N+XVt7KnyKylrdW7UqJFb
jzfeeCPStmpTVDuctlUM5+27rc9srKTlrbfecj9T26hiEW/c8be//c3Jwb3L
Lrvk1OnKK690trn77rud/6+Y8ssvv3TL+vDDD532Sru+jlsckydPdttz1V74
448/up/pvLTzkxWK70qtoz2WWkaNGlXjc8WfipntOrYNXh588EHnncIaa6yR
U0/9LvodNAf5DTfc4LRTe9/BBP2NlfI9kjiOxcQ970TvpOwczjfffHPOZxMm
TDDLLrus2WabbWrsU7+Ht97KxQ8AAACUw5tvvuk+h+pZthg9D9s+kurXqe26
devm9OtUjKl2S2vAgAFu2Zpbp1KyVucdd9zR3Yfa5KJ4/fXX3W0VXyxatCjn
81NPPdX9PKgvq3ffWgYNGuT8u/qk9+7d2xxzzDFm3rx5Tv9fxc7ax0cffVSj
HPUh9paj/uxRqa+utlWb4jfffFPj8x9++MHNexYU3yVRx2JxsnjnVDrhhBNq
fH788cfn7Kdfv35OPwVr6tSpOZ+PHj060e9R6nEMo5TzzjvWIOj76R2O2sr9
1PdCbePaTu8BXnjhhcj1BgAAAOJQm5h9hlV/5GI0x6zakrSoLVLbqZ+oxhtq
nLPXhRde6JY9e/bstL5CUVmrs7cP+OGHHx5pW417tX2BFfMvXrw453O1Ydqy
vX2ELe3Pfq7+xfnGvGpbraNxskHUJuqN3fL1t83HOx9ToW132223vPFdEnUM
EyfbOcW1BPX99ebM1nuIIPb9jJaLL744se+RxHEMo5TzTu+C7GeaG03jjr3U
d1tt7kGUU1Cxtfe9AwAAAJA2b1tVu3btQm/36KOP5jy7n3POOTXW8bazBT3n
qk1KeX2Ut6gckqhzEB3DffbZp2ifdWvw4MHuPrRdVLfeeqs56qijzKuvvprz
74opFAPZsoPmafbG6EE5qSzlnbLrNW/ePHDxHku1aUbh7QOuOCmfQvmnkqhj
EnGy4l77+a677hpYRpcuXVL5Hkkcx7DinncaW+Ctv847b18N5QZ75plnYtUJ
AAAASIP63caJdU4//fScZ19/P0yxz/AavxnkiSeecLf/9NNPY3+HsJKocxCb
i8jfTpiPt/0xXxtiFOqfqvHW/nhK41L9vHGy/juI4hbbdrjttts6bYDFFuUl
DkvtiXa8qhaNr80nX3yXVB3LFSen8T2SOI6lCHveaYy0cqR511E/6htvvJE5
6AAAAJBJZ5xxhvvsuvPOO4febrvttnO3U/uon/rz2pxYhfqTrrfees4cRYoX
0pZEnYMoBlHeL80rFYbmg7L1UFtiXBpTrLxS6j+unFzKXe0dXx03Ttb8PXYd
nR9JU24sb8xkc48HyRffJVXHSsfJpXyPJI5jHHHOu7fffjswB7jeDUTNZQcA
AACk7ZJLLnGfWRVHhqF8ut75coJy8+i52H4edk7mNGWpzt64SnFCHJpbR3M8
KaeS5gCyfcS940TjxsneMa/qL5w0zQnkjZXee++9vOvmi++SqmOl4+RSvkcS
xzGquOedKA92mzZtasTK+rus9NxxAAAAgNfIkSPd59WgnLNBND+s3UbzqQa5
5ppr3HWy8AycpTprDl27H81pHIXa3b25uJRL2CuJOPnFF19011Gfcn/OplJ9
8MEHOXGSN9+4X774Lqk6VjpOLuV7JHEcwyr1vLMUV+t4KY+et+6Kux966KHI
9QIAAADSMG7cuJzn9DC8cZ7GSwbp3r27u87HH3+c85n6bSqn1hVXXGF69uxp
nn/++ZK/R9p19tPcSaq3YivNiaP8X2FpbiG7n5NOOinS9/DGI0Fz6SYRJ/vz
K1933XVF63XooYc6/W/D+Omnn3LKP//88/Oumy++S6qOlY6TS/keSRzHsEo5
7/S39N///jfn35RLXvm+vPXX3x8AAACQBYr3vM+qX375ZdFtvHPw3nvvvTU+
V34h5enR5/pf/zww99xzjzMW2pahcZZpK7XOfs8995w57bTT3PHMmns4rH33
3TdSXOS19dZbu9sGzQPkndcqbpys3Er2e2lp3Lix+fbbb/PWSX1xtZ7m4g7L
O0+SjvfPP/8cuJ43vvPmRU+qjpWOk0v9HqUex7BKOe+UD1758YKce+657nYa
vwwAAABkRatWrdxn1WLzsyxcuNAZn2jXV85bP439tZ/n61esmESf55s31VK8
qv7QamvSM3W+OKAcdQ5i46zbbrst9DYbbLCB29c0zHsJLxvLa2nbtm3OZ4q5
vDF40HhXzSVtPy80L5S3zVuL3mt8/vnnOeuoD63iI30P9QuIwpv3SYva+/1+
+OEHs+GGG7rr/POf/0y8jjr/7PbKvxzE2+6p/FV+3hgxX5zctWvXvO25pXyP
JI5jGKWcd4qTNW95UE579ee2fbA33njjGp9rLqq///3vTl7+X375JXK9AQAA
gLi8ubyGDRtWcF3F0XbdfOOZb7jhBnedq6++OnCdww47LG/7nNfjjz+eEwcU
GvuYdp39FH/o+V/b+OOafNR+r1hH2+yyyy5hv4JL23iPh/p8f/jhh84cW3vs
sUfOZ+uvv76TT1nf7ZtvvnG298Zrhfb/xRdfmAYNGuSUpzmIFGfrfDnmmGNM
ixYtnH9XzuPvv/8+0veYO3euWXHFFXPK19y8Oj4yZcoU061bt5zPV199dee3
UVt+UnVUmXZb9R0Oojmu7TpBfY6V881+rjxVQbbaait3nT59+uR8Vsr3SOI4
hlHKeWfnaD/44INr9NNQjG3zYPv7N7z77rs55Z599tmh6wsAAACUSs/UmuNF
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
c2JZLV9++WVmywUAAAAAIE0XXXRRTiy73HLLmSVLlmS2XAAA6oJffvnFvPLK
K+a2224zAwcONP369cu77rx588zzzz9vRo0aZU499VRz/PHHl7GmAABUn65d
u+bEs82aNct0uQAA1AVfffWVOe2000yDBg2c+2jv3r3zrvvcc88566600kpF
161W77zzjvn6668jbzd//nwzadIk88Ybb5gpU6aYP/74I4Xa1W0zZ8503uVU
gn7balbJY+tX7cc6Ds078OKLL5pnnnnGzJ07t9LVqYjafG1Wrg9vPNuhQ4dM
l1ttdN4o18rNN9/s5GlR+0E1ytJ1PC115f7ANR8or3XXXde5j95zzz1F191s
s82cddUGXVe8/vrrplOnTs73fuCBB0Jvp/Fh7dq1qzFGbL311nPm51i6dGno
snRdHDx4cEnLv//97xrlfvHFF2bLLbc0bdq0CVyefvrpgvUaOnRoyfX65JNP
Qh+HIDrOjRs3NjfeeGNJ5cQxY8YM5z3T/vvv7zxzlyILx9KvksfWL8qxXrRo
Ud5zWsuIESPKVOv0PP7442annXaqcX1RfKS/9brQxzYL1+ZSKHbx16FHjx6Z
LbeanHnmmWb11VfPOUaayyPqu5KpU6ea8847z3Tu3Nm5tigf6lprreXMIXLQ
QQeZc845xzz66KNm3LhxTv5xxTbllqXreFqSvBdnFdd8oPz0XK2/M+XFLPau
8YcffjD16tVz1v/888/LU8EKeuutt0yXLl1yrkdhn8VOPvnkGtcy/xKl77re
eZ911llm1113LVimP7+pd1l//fVrlKt2FO86xxxzjLnhhhuc+6kW9Tko5Kab
bjJHHXWU81wQp05adO2P6/LLLzf169c3F154YewySqWxC2uvvbbzDDRnzpzY
5VT6WPpl4dj6hT3Weta15/B//vMfM2DAALP88su7x+mCCy4oX6VTcN111xW9
vhx99NGVrmZqsnRtLsXDDz9cY986V7NabjX57LPPzBNPPGGaN2/uHiPFumGp
DXqHHXbIOcZNmjRx4hi9u2nRokXguVXunONZvI6nJal7cRbV9Ws+UCnXX3+9
8/e19dZbF11Xz+Bad6ONNipDzSrn008/dd5J6t7ij0vCPIuNHDnSXX+DDTZw
xoltscUWTnn+69rpp58eqW56X2jb9O1y0kknOe8wLMUI3377rfnggw+cuqyz
zjrOegcccECN8rxxsu4tcY0dOzanTnp3/fbbb7vtMr/99ptTR72Xue+++8zO
O+/srhunL9jChQud9hFtf+2118aud1KmT59u1lxzTeeZq9R3SOU+ln5ZO7Z+
cY+1niGqIU4ePXq08x3UFqbvobYiPbMrb5MdF2OXauuHmOVrcxznnntujf1e
ddVVmS23Gv3jH/+IdIy+//5706dPn5xjq/Potddeq7GuxqvpWuV9z6nrazlk
/TqeliTvxVlRl6/5QKXZXB/qg1TMoEGDnHX79u1bhppVjmIS3VcUa77//vuR
nsXUj1l5RVdddVXz3//+N+ezn376yRx22GE55en5LOpcHf425f/9738F1x8z
Zoyznq6pft44WeXGdeedd+bUqX///gXX//333528MhtuuGGs/R1yyCHOfnQ8
s0L96dTfom3btiU9C5X7WPpl8dj6xTnWalep7XGy3pOpnWqbbbZxxmL46e/Z
G/OdccYZFahlerJ+bY5qv/32qxHP6t1XVsutNnr3qPZHe4zee++9guurjVLX
HLu+YpQHH3yw4DZvvvmm059b67ds2TLJ6hdUG67jaUnqXpwFdf2aD1SS2h31
zKC/rQkTJhRdv3379s66eo6vK3Qf9V6Dij2LaYxIoeOp8nr27Jnz/KIc4mHp
N7P3XNsmUozu7Vr3ySefrPFZUnGy+il6v5P6sxWz7777xhozZ+P+Vq1amZ9/
/jlOdVNj2yw1Li2uch5LvywfW7+ox7oa4uR7773X6R9SqE/hoYce6n7PI444
ooy1K6+sXZvjsLlBkm4PSqvcaqM+V/b4qM90oXHpGvOtvnR2fd2Hdf8MY8iQ
ISXfF6KoTdfxtCRxL84CrvlA5Wgsh30nqr6cheh9u97Fa/2gd1rVzDuusdiz
2FZbbWUOP/zwguso74e3z6DyL4X18ssv5zz7FJrLy7I5Xb755psanyUVJ3vH
Yq244opOHqVidt99dydnThQaL237sal/ctaozcrmj7/jjjtilVGuY+mX9WPr
F/VYV0OcPHz4cPPII48UXEd5g+z3vPjii8tUs8rI0rU5Kv29+WNZLaW2YadV
bjW6+uqr3eOj9td89Hy03Xbb5RxPxaJhaSy0trnkkkuSqHZBte06npYk7sVZ
wDUfqJzLLrvM+btSW5RiKI1zzJcvT+MhtO7GG29c5lpWXthnMeXaatiwoZk8
eXLRMr2x0Pnnnx+6Lv5xZ8rXEsavv/4a+O9JxMn2GcAu++yzT6jt1DYeNbeo
HSegfsZ//vlnnOqm7sADD3TqqHxcGssWRTmPpV9tOLZ+UY51NcTJYSgPgf2e
5c4ZVG5ZujZHpf49/lhW76JL/dtLq9xqpOurPUa33HJL3vVOOOGEnOMZZ17M
NdZYI9E8i/nUxut4Wkq5F9cmdemaD5Rq2rRpzpwnJ554ojn44IOd58F8OYs1
zlh/V927dzc77rijeeyxx/KWq/fqWlf5kOuaKG0WYWkupjhlet9pq15q5/dT
m4j6Y4eZBzKJOFnnm/cZYtiwYYHr6dwp5TnhpZdecvehnLVhKO7UO56gvmd6
d6BcGM8++2zRvN5R2D5vWvQuKopyHUu/2nJs/aIc67oQJ+tYK++bvuNxxx1X
6eqkLkvX5qi856NdksgxkFa5xai9WjF6vnms1S9GS753tqJ+zxrP+8ILL+Rd
T/vRNSrq3JS6V6oP3UMPPWQ+/vhjp43YmwMpXz+5d999N6ePgf67WE6QIB99
9FHqY2XjXMetJH6/UiX9+5dyL64t6to1H4hLz6rKe2yfG/T+2F7b9R49KAa2
Y2a0TbH5RDt06JBoPx7lhtxrr71SWcLkJIsijWcx77yNercRhuYEtPNyadlt
t90C11PeDvUxDCOJOFn5Z73PZHoG8Xvqqaecz8KO5wqidz92H8ViRPWLsO+B
tCh/ir3/K++Vzn3vM5L6ZyU17t7b71Hv9KPMaViuY+lXW46tX5RjXe1xsvoT
qP+9vp/GYyxevLjSVUpdVq7NcXjHFJZ6DS5HuX7KK6wcg7oP2ed0LRrz66fY
x36uOYaDLFiwIOc98Morrxw417DykNt19J6uGM0BoHrqOUjb2PweRx55pFvO
pptumnd7zRXlPZZR5o4qtyjX8aR/v1Kl8fuXci+uDeriNR+IQ+9J7dwwysul
vJZ6XtV7Nzu/n55b/X3O9DelPhpB41a9dP1SvhSNlUwqJ4Tidv+9PKllzz33
TKSOVtLPYsqpGaeuyufg/Z5XXHFFzue6Zto59s4+++xQZZYaJ+s88+YVC5oz
7Omnn3b6nOk+VShPSiG6vzVt2rTou3/LvgPSnNF2m0svvdQ5f3XM9f/V5q64
1MZ0Kj8pjRo1cvcbNp4t17H0q23H1i/ssa7mOFntWzbPohb1F06z3ScrsnJt
jkPz8PnvXUnMJZFWuX6Ks/R35N2fxsUGXZe8c1YrlguiPGt6xlDfNruunmf8
z/46t+3nxebuUhxl81l369bNnSfIjjmzS745BaZMmVLjWIbJeVoJUa/jSf9+
pUrj95c49+LaoK5e84E4NL5Yfydqt1EfIS9vLoNiOUzysXO3qX92Ur777jun
3DSWpMdnJP0spnuyLU/9pMLyz9nYrl07J8exfn+1H3tjrLC5TUuNk59//vmc
Oqm9W/399Uyyyy675NyjTj311MjlW9732bp3FqM5Uc877zznvzU2yT4nabyS
YjfvuO4BAwa4ZeudUBK89/p8faf9ynUs/WrbsfULe6yrMU7W9aNXr17uNd67
bL755kXfgeajc0LvOdJYlGMhKVm5Nkel59mgOZv97z6zUm4hN910k7sfzUXs
p/d/3jmE1e85iPqsXXPNNc5/e9f338/VRqi2Rn127LHH5q3XXXfd5R4L//XS
+z5Ey6OPPhpYht7/+f+msirqddxK6vcrVdK/vxXnXpxlaV3zgWrlvcapnSeI
zeugZ4piea1FY1A0P4Z9x6pYTH24NXdlXZTks5j6p9p+fbrWhaV3vN65PtSv
XjGKYmPv2Cn7Tjhs/o5S4+SzzjorZ9+K5XSP1nthbx/xUp87NUelLSfMHJTq
U6e8HVpsPXRvXWGFFWrU48ILL3TLnj17duw6enn7JYd9P1WuY+lX246tX9hj
XW1xsq7lW2+9tfObefsKexe9X4mjtvT3ycK1OQ7dS4OOTdi8jOUut5BTTjnF
3Y/mtvZT/zb7ua4XekceRO9P7Lhfbz/goPZb9THVZ/nG4Or72muT3s3420j1
HtmWr3MoXz85b4ylRXMNZVXU67iV1O9XqiR/f6849+KsSvOaD1QjvefTvGr6
21DfIv3/IN75WD/55JOi5WpMln32Vb8lxWFqF6qrknwW09x29j4WpQ/7+++/
n3Mt9M6Rp/5WM2bMcPvDRrkXlBon65rtjd1//PFH9zP1l9Lzts4fnaeFYne9
m9E8h/n6v2luBLsftaOHpXYC73HT/Al+3r+PfH9Deoe+xx57OO/sw7B577SE
zVmd1LH0U58SjakbOnRo4OeVPrZB9dExCzv/XNhjXW1xsp/+lm1+V+8Sp5+o
7gH67dJY9G43KVm4Nsdx6623Bj7jxskPVY5yC1H/ErufoLGtHTt2dD/X+NNi
lIfSW/eg+aw0r7U+C5oLT+1ptp+L4q2gPII333xzqPuet11Ty1VXXVW0/lEV
u/d5Fbo2xr2OJ/37larU398vzr24tkjymg9Uo3vuucf9uzjttNPyrmffvWkJ
yosQRLmwND+Gxj8EvWMslfpgqu0pjSXM3B9RJPUsZufW0vjSoPxMhWjsjvc6
qN/ez86TrHHMYZUSJ+v5w9uWrftpEI1j1bwahTzxxBNuOZ9++mmNzwcNGlR0
P0G8OT+0BM1FvNNOO7m/Sz7bb7+9s476WYRh31lo0d9QMUkeSz87R6japYPm
jqr0sfWz4wfCzgMZ9liXGicrB6vGOCS5pDHXZdixl9UgC9fmOAYOHFjj2VZ9
hMO+Syp3ufkoR5a9bgWNbVU+BW9dwsxH7Y319U4wiJ5J9HlQXlGNVbHbqz9L
EO94kHxzGut65j+WheYEiavYvc+r0LUxznU8jd+vVKX+/n5R78VeXPOB2s07
hj/oPaCldjC73ssvv1zGGuZXW/r1SRLPYrr/6d222ujjjJ/++9//7tZB9zXd
3/z0jkDPRFH6RZUSJyuHsfe4Bz1vqK1bY1aLvd/U+/H11lvPyTsXlIvijDPO
cPejnHVhefNnBt3jFTfaXFOF7qHKi7baaquZu+++O9R+vfetQrlUrSSPpZ/O
N9X9kEMOCfy80sfWT+/HlY9G80qFEfZYlxon+/PoJbFEfW4Ly3vN17ibapWF
a3Mc++23X41zYbPNNstsufl4++T6x7Yq5lK7prcumieuGG8/2Xznrp3P2N+/
x9v3WO8F843V9Lah5usj9O2339Y4lmm0yxe793kVujbGuY6n8fuVqpTfP0jU
e7EX13yg9vLmbNC41UJ0DbbrBvVhqQTFZ7pmpbEknY+x1GcxjeNUvTR+M05/
GM256M3ZkK9P1Zw5cyLPKVlKnKy2Ve/1/6233qqxjnKxa56SoHbMKBQ32v2E
7fulfsvenDaav9LPO54v6nyTheidsS132223Lbp+OY+lX207tn5hj3WpcbLG
r95xxx2JLmpLSoPGCaT9XJYFlb42x7XJJpvUeH7WfH5ZLTcfzeNu9+Pvd+aP
MRS3hsnH26pVK3ebfDlXNBeO2v7910LvtqpbELUR2nVURqExLDZflF00n2VW
xbmOp/H7laqU3z9I1HuxF9d8oPby9nnUNSMftTPb9XT9QXSlPIspxlXfU5UR
t8+W5kH03q+U7yks3df0LJhP3DhZ75rtGDAtTZo0iTRmNqqRI0e6+wqbc/TJ
J590twmaY0mUX9Ouk+Qcv96cXAcccEDBdct9LP1q27H1C3usq318stfcuXPd
76q8a9Wq0tfmOJRrICgntcbWZLHcQjbeeGN3P97xThrfveGGGzp5FuznYfp5
6V2gt+5BcwDrnqb8hr179875d++9TEu+vgFqN7XraFxwIboeessM08+3UuJc
x5P+/UpVyu+fT5R7cW1WV675QFjKNWL/JgrlxvfOJZTm3BDVLO6zmHIT7r33
3s6zS7H7q8YW58tF7p27UEvYdg/FX+qnpTrkEzdO9udVjdtm8dlnnzn5oHRu
qk1VcyMFGTdunLsvjdEKw3t/zJenVHOd2XX84xJ/+eUX88orrzht9Br3p3H+
Ydl+YVpOOumkgusmdSz93nnnHecds+Y2UZkvvvhi4HqVOLZ+Gkeg3175WTSH
i/I9hRX2WNelOFn5Gu131TGNSr+F3qumseielJRKX5vj0N+CP5bVorGgWSw3
H/UXtvvwj2097rjjnDnUvX1B1f+1mA8//DCn7jr2fnaeSv8YMm8OD/2uQfkS
1Mfe+y6hWE45xdHe+tj58KLQPTao3TPsvS/stTHqdTyN369Upfz++US5F9dm
pV7zgWqi+eG915J8Obz0fsn2191mm21Sy+VR7eI8i2ksqd5bayzx7bffXnBd
zZej8XG6nwbxvhPReM+wz2y2H9Z//vOfvOvEjZP980qqP1EcykemsVS2HOXt
DqJnBe/+wowf8M7pEZTbTM8FNp9pUA4T5dbS35b9Gwr7/lrsnOZarrvuuoLr
JnUsvdQeff755ztzRGTx2Po999xzzrG245nTONZ1KU7Wdcp+1zh5DWtL/ohK
X5vj8MYz3qXUeU/TKjcfb06Ff/7zn+6/672Djq36l3rnfLdjSfWeN989zJvT
Sr+tv1+NYl+1ler64+fNrR/UnqprkDd3s5bPP//c+UzHKOgapeuSd32NDQ6K
v/NRX2Z7LPzC3vvCXhujXsfT+P1KVcrvn0+Ue3FtVuo1H6gmI0aMyLkean5j
P72/7NKli/tusVgexXJTnyj1F09jUZ/0pOiZyjt3bZhnMd1vdS/T+vqtCtH1
rG3btqZNmzaBn9s5uuyifF7FqP+dcnroXqd76w8//JB33bhxsvf+rkXvZOKy
czxobF0h3nFLxfK2q0+l9xk6aG4Qjam1nxfqj2XnrQ7KMZ6P3sVrG/0GxZ5X
kjyWfmPGjHHKVH0KqdSx9VPOIW0TZZx92GNdLXFymDF5Ns943P53Gpc3bNiw
VJannnoqVp38Kn1tjkvHwB/LKodIVsvNR22O/vhDfVjUJ1ZxnY6f/VzjShTz
3HXXXc6Y33x/p973M3/7299qfK78DPosKO60v2u+e5l/fnrN5yGah0hjXfLN
Sa8xrd7tNH9AMYojbdxeaC6SsPc+CXNtjHIdT/L309+VxtmoD5HmQY47r1op
v38+Ue7FWZXENT+p3wioDWz8axfFwf5z/qijjnI+Ux8j9VPJmjTbK/baa6/E
6qm+Ud6yb7nllqLbePtJKz9MvsXb/0tzHwa56KKLcvZf6Ll3/vz5zn3Mmwe9
2FzKceJkzcfrncOo1Gcx9QlWOcXyr3nzlOiZsBA9I9h1843VuuGGG4o++9i+
TPlyjAfxzrWh9txCkj6WfnreUbnF+rpW4tj66X2OjXtsO08xUY51NcTJmvdV
1w69u9Gzjt5Z+Nn+CboOpNXukwWVvjbHZf8mvYvyVGe13Hy8fUoUt6h/t9re
lUNKfdfUVm8/V/5dtYvq2BaK87z5VHQt8ObWsPmYFCsF0fztdlvlnJoyZYrz
72qD1Dw56hekfst2Hc0fpfd5iqOUYzkf5bj2zqOs64366gS1P+vfHn74YbPl
lls666qfdqG+NGHvfWGvjVGu40n+fv4cKkFtN2GU8vsHiXJ/yKqkrvlJ/UZA
1imHge1/o3x/dq459SNTvuP333/fnXdcc63mG5NYabr+qX9PGktSfeT07rFb
t2451xbN3aB+7/lo/qCocb3u6f65nHRv13fx59vUvUP3LM3/qPkSdf/X/V7z
+3rbVuyie1shUeJk3e/17KE2e3+dNL+E5sSOSmXqXb7KeeSRRwquq3ue7hda
t9CYa/E+M51yyimB69h301rynTPXX3+98/nWW28d7guZ3Pkf841/S+NYBrFz
NxXry12JY+tn7+P58oIFCXOsrWqIk9U/0nu+6Nnpqquucq7zen5V273+ff/9
93fuB9WqktfmUun51L+ffHl9s1BuPjre/v0p9rLHa+jQoe6/6z6mPijFcjyo
L5Taee12uhbpnZv9rXfbbbe8OZe97Z92n7pu6/6ia5uuq/Z6rkX1sffTYnmc
dQ3z5lrUor4G+j7Kn6Xvqv9W7nR9pniz2ByCUe59Ya+NUa7jSf5+ao/2lqM2
6ThK+f2DRLk/ZFVS1/ykfiMg69RnzZ7nyv0geo/sbZNSHK33lGpfRHSKX3QN
KfT81LBhQ+edsn+7qM9hWoLGG9n7bSlL8+bNi44LjRInKy4vtk+1Z0dhc1gp
r6bmGipGx1zrq72nUPuudx7RfM8gdr40PQPk69ekZyitc+aZZ4b7Qv+f+jNo
G/Wnzpe3Oo1j6eedu0nt1sWU+9j62WNSqG3HL8yxtqohTtbfq7dty7voHqCx
v1meu6ZUWbg2l8rb38cuyh+f1XLz8fZ10vuEXr165bR16Ty07251biqfkvrK
F6N3u/6YVDGaftNiOVY0Htj/vlh9XiZNmuR87p0TSuvp2Sns9Unv9vVeWt81
3/mi653exxSaY8KKcu+Lcm0Mex1P8vfT35f6NXqPRdy+LKX8/n5R7g9ZldQ1
P8nfCMgytd/Yc9w7XlK5LvVcrfeOUfJMoG4rZf7kJCjXp/Ydtk+U3iXbvGZ6
dojLO+47X14hPT/ZZ/KwOcbts4+el7SPSrJzN+l9SRjlPLZB7HN+2Dmkoh7r
aoiTRc+K6iep9gH1aVc/T/UfLcfcpiidzXfgXb799tvMlpuP3sFqnnedf/nG
Omrcit7thx1HYSnOfPbZZ52+9Go3izKWUu0D+vtQboageejVt1e5LVW3ODQP
gt4Pqh+w8icr1la7nvJc6bOwotz7olwbw17Hk/791A6t9xAdOnRwx37HVcrv
b2XpXlyqpK75Sf5GQFYp34N9V5jmPRB1Q6XjZPu+V++2w1L/Ot371G9C+Wjj
0HON/d75+iZqTih9HjbHuO5Z7dq1c7ZRX7xKs3lrlKsgrHIdWz/Nm2nn6tR8
JcXEOdbVEiej9tLzrrfvlxbNYZvVcpGesPe+qNdGSeI6Hpeuy1HGEKcha/fi
rMnCbwSkwZu3RLntgFJ542RdO8tJ7bXqI6l9v/766854qLD3NJvHWf2pNKYp
KuVDs98737yVmi9Sn2teCc0bon0V6jeosVtaX3n2ivV3Lwebp6XYODm/chxb
v/Hjx0d6to9zrL39DImTUQn++Qu0JDFfelrlIh1R7n1Rr41WqdfxOJRPWeOj
1b+xkrJ2L86SrPxGQBo09sbeA5XfDiiVN07WGKCJEyeW7b4yc+ZMd9/K06m5
LaPczzWnhsZPacxWmHFvXjZXiL5zvr5yKlfraB4FxZzK0Z6P7j1aV3OBlOuZ
pBCNM7NtEHHmwkj72PoNHjzY2eaYY44pum6cY63xf965U4mTUQn++Xi1FMtL
XMlykY4o974o10a/Uq7jUakfufZVbL61tGXtXpwlWfmNgLR454NSXmugVN44
2S7K6aF8D1qK5eEshcbR23fqmqMyaB7eYpTDVPGY+rCFzRGtuWHtd1X8m4/6
DNt4L999RblBBg4c6LyfDTMvTblojg/VvXXr1rHLSPPY+mm8lLZRjvd8ohxr
xef2HNbi75NKnIxK8ObftUsS8zOkVS7SEeXeF+baWEic63gcynkXt45JyOq9
OEsq/RsBaVP/T10vt9hii0pXBVVC8zIq31O+JWp+yaj0Xv3dd98t6V23ngcV
D4a9N2qMl/ddfj56F/3qq686fa7z0Tw0zZo1c/rOZYmeF/T9NIdTKdI6tl56
dlO+Bb2fKZSvJcqx1vlU6LzWGBag3GwuYrsoVkqizSutcpGeMPe+sNfGYqJe
x2ujrN6LAZSPnkE193s1z4sJlIPGHmuuJ+88GNXE5jutRL+TqMd29OjRbv92
oJqpPccbz2r+9CyXi8ri2ggAAFAajZ3ebbfdnHk+NF+Enq26detW6WoFUp9D
zf2uuUilR48eTr9ozeMBVDP9jXrj2XPPPTfT5aK8uDYCAAAkq1evXu64206d
OpkmTZpktm+xzc2reUuUy1XPgQMGDKh0tYDUbbjhhjnxrOamzXK5KC+ujQAA
AMl67733nPmvNT7r4IMPdsZqZZn6ZSsvdvv27Z08/kC10zhUm4Nei/LOKj9E
VstFZXBtBAAAAFBXfPHFFzltvltuuWWmywUAAAAAIE2am94bz5544omZLhcA
AAAAgDTdddddOfHsvffem+lyAQAAAABI00UXXZQTz6q/dJbLBQAAAAAgTUcf
fbQbyyrfXtbLBQAAAAAgTXvssYcbzx566KGZLxcAAAAAgDStvfbabjx7/fXX
Z75cAAAAAADS8u233+aMIf7www8zXS4AAAAAAGnyzt3UtGlTs3Tp0kyXCwAA
AABAmkaOHOnGs/369ct8uQAAAAAApEkxrI1nn3/++cyXCwAAAABAmlq2bOnE
suuss475888/M18uAAAAAABpmTVrltvm279//8yXCwAAAABAEh544AGzzz77
OHMYL1iwwP33O+64w41n33rrrcyUCwAAAABAWmbOnGnq1asX2L7bsWNH5986
d+6cmXIBAAAAAEjT+PHjc+Yx7tSpk/Pv48aNc/6/Yt04bb5plQsAAAAAQJrm
zp3rxrKKXUePHm0mT55sNtlkE+ffzj333EyVCwAAAABA2rbffnsndt1oo43M
EUccYerXr+/8/y5dupglS5ZkrlwAAAAAANKktt9WrVq57b8rr7yy+de//lXy
fE1plQsAAAAAQNoUu77zzjvmtddeM4sXL858uQAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADKZ+bMmWbevHkF
15k/f76ZNGmSeeONN8yUKVPMH3/8UXB9rQsAAAAAQG0zfvx407hxY3PjjTfm
/bxdu3ZmmWWWyVnWW289c+WVV5qlS5fW2GbGjBmmQYMGZv/993fiawAAAAAA
aoPLL7/c1K9f31x44YWBn5988sk14mP/cvzxxwdu+8orr5i1117btG7d2syZ
MyfNrwEAAAAAQEkWLlxoevTo4cS51157beA6I0eOdGPhDTbYwHTt2tVsscUW
Tlztj5VPP/30wDKmT59u1lxzTdO8eXPz+eefp/iNAAAAAACI75BDDnHi28MO
Oyzw8y+++MIst9xyZtVVVzX//e9/cz776aefnO28cbJi5y+//DKwrGeeecbU
q1fPtG3b1onPAQAAAADIkjFjxjixbatWrczPP/8cuM6///1vZ50JEyYEfq4x
yT179syJlUeNGpV3n0cffbSzzkEHHZTIdwAAAAAAIAlfffWV0w9aMevYsWPz
rrfVVluZww8/vGBZU6dONcsuu6wbJw8ePDjvumqfVl4vrXfHHXfErj8AAAAA
AEnSGGPFqs2aNTN//vln4Dpff/21adiwoZk8eXLR8lq0aOHGyeeff37BdQ88
8EBnvbXWWst8//33seoPAAAAAEBSXnrpJTemVR7rJGy55ZZumQ888EDBdW1/
by2XXXZZIvsHAAAAACCuE0880Y1TH3/88UTKXH311d0yp02bVnBd9fm266o9
e8mSJYnUAQAAAACAqBSTNm3a1I1TZ82aVXKZ7733nlvennvuGWqbRo0audu8
8cYbJdcBAAAAAIA43nzzTTc+1VxPSejfv79bpvp0h7Hjjju62wwbNiyRegAA
AAAAENWDDz7oxqctW7YsuTzl+rJ9rnv16hV6u759+7r1KJZPGwAAAACAtAwf
PtyNT9u1a1dyeUcccYQbc+ebgzmI5o6y9dhnn31KrgcAAAAAAHEMGjTIjU87
duxYUlnjx493ylljjTXMxx9/HGnbIUOGuPVo3759SfUAAAAAACCuM844w41P
d95559jlfPrpp6Zx48Zm5ZVXNq+++mrk7TUflK3HpptuGrseAAAAAACU4pJL
LnHj0+222y5WGd9//70T266wwgpmwoQJscq4+OKL3Xpsu+22scoAAAAAAKBU
I0eOdOPTzTffPPL2CxcuNDvttJNZfvnlzWOPPRa7HmeddZZbjwMOOCB2OQAA
AAAAlGLcuHFufLrKKqtE2va3334ze++9t6lfv74ZO3ZswXVnzpzprJ/PCSec
4NbjpJNOilQPAAAAAACSMm/ePDc+1fLll1+G2m7JkiXmH//4h1l22WXN7bff
XnDd2bNnO2OX33jjjbzr7Lvvvm4drrvuuihfAQAAAACARLVq1cqNUZ955pmi
6y9dutT07t3bWX/EiBEF1508ebJp27atadOmTcH1NthgA6c8xd1hY3UAAAAA
ANLgzeU1bNiwouuffPLJ7vrK3ZVvUX9su57mac5HbdqKj7XeLrvskuRXAwAA
AAAgMsWpimsVp2q8cSFnn312Tj/tMMuKK65ovvvuu7xl3nrrre66N910U9Jf
DwAAAACAyM4//3wnTlUbsOLmIFOmTIkcI2tRH+1C9tprL3f+5j///DONrwcA
AAAAQCS//vqradmypROvDho0qGz7ffvtt519rrzyymbatGll2y8AAAAAAMUo
55bi1ZVWWsnJUZ02xebt2rVz4mTN4wwAAAAAQNaMGTPG7QO9ePHiVPfVr18/
Z19dunRxcmgDAAAAAJBFo0aNMvXq1TN9+/Z15klOwzXXXOPEyMcff3zq8TgA
AAAAAKW67777zPLLL+/k2FqwYEFi5SpP18CBA5382rfcckti5QIAAAAAkLY3
3njDtG7dOtF4dvr06aZZs2bm9ddfT6xMAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAtmzpxp5s2bV+lq
lMWkSZMqXQUAAAAAqHpTp0415513nuncubNp06aNWW211cxaa61ltt9+e3PQ
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
n9b3/P3338306dOdeZuVb1pjtBs0aOB8rvmpirWvP/744zll9ujRI3S906iP
l9ra7fhntdcDAFBOxMkAgNpMY4zXWmutnHtY27ZtTb9+/Zw8WUOHDnX+W/MK
6TONl1WMV4ji5yZNmhTMT+WlXNVa94477ohcf8WDK6ywgrP93nvvnXc95df0
5/i226k9V9/pgQcecD/r1KlT0X2rL7O3vFVXXTV0vdOoj9ett97qbnvTTTdF
2hYAgFIRJwMAajvFbBr7qjbLoHuaHUN79tlnh5rP4e2333a2UZtosfuhPq9f
v76z/hdffBGr/mqL1fYqR3FzPvfff3+N76j28Xfffdf5vHfv3u6/Dx8+vOh+
p0yZ4uQP85anfulhJV0fr7322svZTuPENdYZAIByIk7OHs21Ueg5KU2TJk2q
yH5ru19//dVZartKnntBOB8R1S+//OK0/2reXeVHVn/o2267zbz55pvOZ2Ep
z3XY/r4ac6t1mzdvHrveun4oF7TKGTRoUMF1FyxYYJ5++mnz4IMPmlmzZrn/
vmTJkpw+6FOnTg217++++8688MILpkOHDqZFixaR6550fcS+p9C7jbTmtQIA
oJBKxMmab2Pw4MFFlyFDhpibb745VO5QvcPXO+w2bdoELrqHF6O+eWHqVWj5
5JNPSjo248ePd/oE3njjjSWVE4eOs8aR7b///mb+/Pll339tpTnI1Qa0/vrr
R9ouC+ebVyXPvSCcj+FpzGe+a5+WESNGVLqKtY5ty7zooouKrmvn+D3qqKNK
2ufkyZOduHCllVYKnGOpmJdfftm9h8eJd9u1a2cOPfTQyNslXR+9M1BdtJ36
zQMAUAmViJP1vnnAgAFm8803D9y3nhH8/6ZxZffdd1/eMv3zQB9zzDHmhhtu
cJ75tXz11VdF66XxT3rO8Y9z8y42p0i+RTlR4rr88sudeOvCCy+MXUapXnnl
FbP22mub1q1bmzlz5lSsHrWJ5k7Vbx81Tq70+eaVhXMvCOdjOJr/117r/vOf
/zjXV40PtefJBRdcUOkq1io6ng0bNnSOne6ReqdVKF7bcccdnXWLjXkOw+bN
Vl/jxYsXR9r2zDPPdH/zMLnHvJTzWmOLP/7440jbpVEfjSXXNl26dCmYZw0A
gDRVst+1xkD5xzUp54dofomXXnrJ/P3vf8/5PN+7fW+crGfqUig/p3efamNT
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
u78vv/yyaPneOWPvvffeGp+r3cvOAav/9eYeilK3IBoLZvd93XXXRdo2KZMn
T3bmwlHbq+qhHNBRefsc6x2Nn9p0dU56f5v+/fsXLTdqnJzE+eb33HPPOb+x
HR+c7zeOc+5JKeefn46z5kLXHNG2zHzjcoNwPobDvFAAAADxlTNO1jOtdx/X
XnttYmWXEicrn5G3XnPnzo1dj3XXXdcp45577im4ntpT7P6eeeaZgusuXLgw
J/dZUI419f+0n+frixq2bn4bbLCBs536iIaNq9Ki/geaAzhoTqJivPGpjqeO
q9dxxx3n5JTy9nlQf+NiosbJSZ5vfptttplTpvoO5BPl3JOkzj+/MWPGOOvr
/IqC8zGcJOJk5dkeNmxYKstTTz0Vq05APno/p/Ef6tty7rnnOmP7AQCIq5xx
cocOHXL28fLLLydWdtw4WfO3escIrrfeerHr8Mknn7jP72q3K8TblqRnxkIU
y9h1840pVX9Qu47GM5ZSNy+ta4+P2v9qM+X49p5/atNUnDN9+nRnDl/lGx47
dqzb7q7xqEFzH/lFiZOTPN/8fvjhB1OvXj2nXOWhyifKuSdJnH9B1P6t9aP0
v+V8LH4+WoxPRl3z+OOP5/xN9ejRo9JVAgDUYuWIkxcsWOA8A/r3ccoppyQ2
/1TUOFnvnadMmWJ23333nDopzrjvvvucOkelPLQqQ/M7FqPn/RVWWMFZf++9
9y64rtqqvMcsiPIi23V0LEqpm9ett97qlnvTTTdF2jZrNL5U/Vu9v7f9DdSe
p7jlgQcecD/r1KlTqHLDxMlpnG9+9hkxX54tK8q5J0mcf0HsON8o/c45H8Mj
TkZd4++ztuqqq1a6SgCAWiztOFnz3QSV7130PFeqqHHyoEGDitbrrrvuilSH
rl27OtudeeaZoda37w4030yhNl7vGMV8OXHVLqnP9dwdNI9Q1LpZe+21l7Od
+gqXKydzmu6///6cvMVattxyS/Puu+86n2tcr/334cOHhyozTJycxvmWbx99
+/Ytum7Yc0+SOP/8vPNMqY09LM7H8IiTUdfoXaTyE3r/nn777bdKVwsAUEuV
O991WkqdP7lUig307lr7nzBhQqhtfv31Vyd/rbZRjBOX5omx3z0oN06cuonN
y6zYJ+xcNLWB2m6ffvppZ1zprFmz3H9fsmSJm4tKy9SpU0OVF2f+5DS0b9/e
qUeYOZmSOvek2PkXxM4z1bx589D74XwMdz5axMmoi7777jtnvkmN82rRokWl
qwMAqMX8c5PYJcncQuVQ6ThZ8y5p38o3HOX9tfLm6rlf2wXNCxOGcjbZ7z5k
yJBE6qY4ql27ds52mnO3LtB4eXscozxfZSFO/umnn5zxrKqHN9YqJIlzT4qd
f0HsPFNHHXVUqPU5H6M/7xMnoy7T9ULjQQAAiGv8+PGBcXKUXE9Z4I2TdX8s
t8suu8zZt+as+eabb5x+oWoPCsPm/dU2ixcvjrzvI4880v3umu80ibppjmVt
06VLl4Jz/ISltkDNdZvU8q9//avkOvmpT7o9jieeeGLo7bIQJ9u/Y+VGjqLU
c0+KnX9B7DxTGoMbBudj+PPRuuiii4iTUScp57XG+hebxx0AgEKqsd+1cuBM
nDgxkefpsDQmVPvWfBSKATTvaBSjRo1ycjqpnLDxtaW2Jvu9f/nll5LrpmcM
rX/88cfHjp38NOdusfG5UZY489UW07p1a7f8KL9fFuLkwYMHO3U45phjIm9b
yrknxc4/P81/ZNu+w8zrxPkY7XwUXb87duxInIw654orrnCuZyNGjKh0VQAA
tVw1xsl2UX4c5fTQki//UFLU39TGCnHvz8p7rO2Vqyhs/mPNb2q/r2LgUuqm
vEgDBw503sPfcsstsb5DPhpPet555yW2JP0MpD7I9jjq+/vnsi0kC3GynXNN
8wjFEefckzDnn5/G4mp9xYGFcD6GPx/1fsJe67R45x4jTkZdotx3ca+DAAB4
VUucrLljlRso36J5SdOkdq5XX33V6ddcCsX7ih/CxgUai2p/M82LW0rdNG9r
s2bNnHOirlCOM8Uk3rm9GzVqZGbOnBm6jErHyYprlTta74V+/vnn2OVEPfck
zPnnp9hX62u+qUI4H8Ofj+oHUOj699lnn5XpGwAAAFSHaomT6zKNP9ZYxiht
oDDmxRdfdOerDVqUI/zNN98sWo7ewSimizK/UZJsLj71q6+EqOefzbP9/vvv
p1yz2iWp8xEAAAClI05GXaX4Vm3s+Zb58+dXuoqBFi1aZHr27Gn69+/v/P8e
PXo4/WyVmyqLNLZ2t912c+ZS/+ijj5zrS7du3SpdrcyprecjAABANSJOBmoX
O1+x5nRSnmvFyAMGDKh0tfLq1auXO0a2U6dOpkmTJvQDBmLSHGl6J6Y5gnX/
Lme+SgAA6hLiZKD2UT9n5Zlu3769ufbaaytdnYLee+89Z05zjTU++OCDnT7q
AKL5/vvvzdlnn+2MV7fj1vW/+++/v/MOqk2bNs6iXBQAAKB0xMkAAGTXpEmT
zIYbbujcm7fZZht3jIXGMjRo0CDn3v35559XtrIAAFQJmwPIv8ydO7fSVQMA
oE579NFH3Vh46623Nj/99FPO52pPtvftzTbbrEK1BACg+mh8Y1CcPG/evEpX
DQCAOuv55593Y2SNW5gzZ06NdQ466CD3vp3lPAUAANQ29LsGACBbNBe67Wut
+dE/+OCDwPWaN2/u3reffvrpMtcSAIDqRZwMAEC2nHTSSe79uG/fvoHrfP31
1+46DRs2dHJhAwCAZBAnAwCQHRMnTnTme9O9eLnlljMzZswIXE95ru09u0uX
LmWuJQAA1Y04GQCA7OjYsaN7Lz766KMD11G/7DXWWMNd7/rrry9zLQEAqG7E
yQAAZMPMmTPdtmQtjzzySOB6V199dc49e9q0aWWuKQAA1Y04GQCAbPDP1Th7
9uwa62g+isaNG7vrtGzZsgI1BQCguhEnAwCQDZdccol7H1555ZVrfP7nn3+a
/fbbL+d+3b9//wrUFACA6kacDABANlx66aXufXj55Zc3CxcuzPn8uOOOM6ut
tprZeOON3fWefPLJCtUWAIDq5e/jZZe5c+dWumoAANQpd999d869+Pzzzze/
//67mT59uuncubOT/3rs2LGmQYMGzucrrriiWbRoUaWrDQBA1Rk/fnxgnKzx
TwAAoHy+//57p7+19368wgoruO3LiqMfeOAB97NOnTpVusoAAFQl+l0DAJAd
999/v9NO7L0nb7nllubdd991Pu/du7f778OHD69wbQEAqE7EyQAAZMuCBQvM
008/bR588EEza9Ys99+XLFli1lxzTfdePXXq1ArWEgCA6kWcDABA7fDyyy+7
9+kWLVpUujoAAFQt4mQAAGqHM888071Pn3jiiZWuDgAAVYs4GQCA2qF169bu
ffqxxx6rdHUAAKhaxMkAAGTf5MmTc3Jg++dWBgAAySFOBgAgu/744w8nRu7Q
oYN7j27UqJGZOXNmpasGAEDVIk4GACCbXnzxRXf+5KBl1VVXNW+++WalqwkA
QNUZPXp04L137ty5la4aAAB12u+//26++eabvMv8+fMrXUUAAKrS+PHjA+Pk
efPmVbpqAAAAAACUHf2uAQAAAAD4C3EyAAAAAAB/IU4GAAAAAOAvxMkAAAAA
APyFOBkAAAAAgL8QJwMAAAAA8BfiZAAAAAAA/kKcDAAAAADAX4iTAQAAAAD4
y0svvWSaNm1aY5k/f36lqwYAAAAAQNnRngwAAAAAwF+IkwEAAAAA+AtxMgAA
AAAAfyFOBgAAAADgL8TJAAAAAAD8hTgZAAAAAIC/ECcDAAAAAPAX4mQAAAAA
AP5CnAwAAMpl5syZZt68eXk/X7RokXn//ffN448/biZPnmx+++23MtYuW/X4
7rvvTJ8+fcwff/xR9n0DQF03evTowDh57ty5la4aAACoIuPHjzeNGzc2N954
Y43PZs+ebY466ijz/9i7E/irpv3/439F0aRECFGRwk2ZQ4YrohT3V6QQyS8p
Q4aSMme6pgZjLm4kFXGVqTJUKkOmhKJJojRRPwoN7P/jve5j7fY5333O2fuc
vc853+/39Xw89kM6a++9ztmrc/Znr7U+q2LFign3I9ttt51z6aWXOitWrMhL
HfNZj0ceecQ54IADfLfGjRubcx5++OFuecXuqcpre+ihhyKrGwCUd/rN8ouT
0z3rBQAACOOuu+4yseett95a4rW5c+c6u+yyi7n/2HPPPZ033njDWb16tTN+
/HinTp065u/32GMPZ9GiRbHWMZ/12LRpkzmW3z2Yd3vmmWfcfdSvrGcM2h59
9FGnT58+Jpa2ZW+++eac6wUA+C/GXQMAgLisX7/e6dixo7m3GDp0aInXNba4
bt265vUqVao4ixcvTnj9q6++cmPBBg0amOPFId/1GDFiRMYYedddd3U2btyY
9jjdu3cnTgaAGBAnAwCAuHTq1MncV3Tu3Nn39csuu8y997j++ut9y/Tu3dst
M2DAgFjqmc96/PXXX86BBx5ojjN69Ghn+vTpvpvmcmeifnriZACIHnEyAACI
w5gxY8w9RaNGjZxff/21xOu61/COG54/f77vcT7++GO3TLVq1SLPqZXveig3
mI7Rtm3bXKptECcDQDyIkwEAKL+Ut2rhwoUlth9//DGn42r/2rVrm3uKsWPH
+pbR39v7joYNG6Y8lvpf7fxgbZo3HKV81+P44483+2vs9Z9//plttQ3iZACI
B3EyAADlh2LCHj16OC1atHBq1KiRcm6s5hTn4vTTTzfH2WuvvVLGgueee657
PpVP57jjjnPL9uzZM6e6FbIeH374YcLnXLVqVeeUU05xnnzySWft2rWhj0ec
DADxIE4GAKAwfv/9dzOWd8qUKeb3WP2Vcfnss8+cY489tsTvfYUKFZzq1auX
2M4///ysz/Xuu++6x9e8Xz/K3aw1omy5K6+8Mu0xu3Xr5pZVnuio5LseHTp0
SPlsolKlSs7ll1+eMXeXF3EyAMSDOBkAgPxSv6HyQNWsWdP85tr/tmvXzsQ6
dj3c9957L5LzaS0mux7wtttu61x88cXOuHHjnC+++CLyub7Sq1cv935Cc3H9
KEeV975j2LBhaY95++23J5RXfuoo5Lse3nnQqbajjjrKjIcPgjgZAOJBnAwA
QP7MnDnT2Xvvvc1v7SGHHGL6k+Wjjz4y/Yne3+Jvv/025/P95z//cY+nOPyb
b77J+ZjpbNmyJWEO79KlS33LJY8/VtyezlNPPZVQft68eZHUN9/1WLdunbnm
zz33nHPdddeZdZr97sN22203Z/ny5RmPR5wMAPEYNWqU7/dzkO9mAAAQ3IQJ
E9xYuFmzZs4vv/yS8LriWPs73Lhx45zPpzjb9lWfeeaZOeeMCmLWrFnue9D4
7VT0WXjvOzLlxPLm2tI2derUSOpb6HroucJrr73mtGrVqsS9WJs2bTLuT5wM
APGYOHGib5y8cuXKQlcNAIAy45133nFjZOW2WrZsWYkyZ511lvs73KdPn5zP
qdjYxuQbNmzI+XhBqD/Wvof99tsvZTnlevbed7z55ptpj/viiy8mlNf/R6FY
6qFnGN41nO2meeXpECcDQDwYdw0AQLy0drAda615wp9//rlvufr167u/w5Mm
TcrpnPodr1y5sjnW008/ndOxwhgyZIj7Hpo3b56y3EsvvZRw35Hp/b7wwgsJ
5d96661I6lss9bCS5z8/8MADacsTJwNAPIiTAQCIV+/evd3fV+VL9rNixQq3
TJUqVUwu7FwoB5i3j1TjocNsq1evzuq8ffv2dc/bsmXLlOU0T9t73/Hyyy+n
Pe4zzzyTUF45yKJQLPXwOuKII9zjK/91OsTJABAP4mQAAOIzbdo0Z5tttjG/
rco1vXjxYt9yinHCzEvNxDv+OZutc+fOWZ332muvdY9xzDHHpCy3cOHChPMp
P1Y6gwcPTii/atWqrOpXrPXweuKJJ9zjX3TRRWnLEicDQDyIkwEAiI/6VO1v
a/fu3X3LaFz2Tjvt5JZ78MEHcz6vckPZ49WrVy/0dumll2Z1Xu+44cMOOyxl
OfWXb7/99m7ZgQMHpj2ud+7ujjvuGFlOsmKph9eMGTPcc/Ts2TNtWeJkAIgH
cTIAAPHQ2ry2LzndmN777rsv4TdYfZy5+uqrr9zjff311zkfL6iHH37YPe+B
Bx6Ytqz6zW3ZTp06pS172mmnuWXPOeecKKtcNPWwlEPbnuPxxx9PW5Y4GQDi
QZwMAEA8ktde/OGHH0qU0foStWrVcsukyxEdxubNm80avPmOn8aPH+++l2rV
qqUtO3z4cLfsoYcemrbsvvvu65bV2sNRKpZ6+NVn9uzZacsSJwNAPIiTAQCI
h3cMctWqVUu8rjG7bdu2Tfj9zZS3KYz+/fu78eqnn34a2XHTUdzvfT/ff/99
yrLLly9PmLv9008/+Zb77rvv3ONtt912zrp16yKtc7HUw1KuN51j1113Nc87
0iFOBoB4ECcDABCPO+64IyGuWr9+fcLrl1xyiVOjRg2nYcOGbrnXX389svP/
/PPPzp577mmOW7duXRPn5UOjRo3c9zN58uS0Zc844wy3rPpR/dxzzz1umfPP
P7/E63/99ZdZP0nrRd9www1mvndYUdRDlAfspJNOMvOYk++lFI9PmTIlbS7x
L7/80sTqitsnTpyYsd7EyQAQj+QxYXbTdzkAAMjeyJEjE35bb7rpJmfjxo3O
okWLzDxXxUNjx451KlWqZF5XPqnffvst0joo37bWmdLxFZOrj3vDhg2RniOZ
tx9d+aHTUf7vHXbYwZRVTJ9cN8X6tWvXduvvd3/y6quvJnzOHTt2DF3nKOrx
ySefJNTjiiuucF/Tddd+9rUOHTo4y5YtS9hf4/I17luvX3PNNYHqTZwMAPHQ
s0q/OFnjpgAAQPbWrl1rxlt7f18rV67s9i8rjn7hhRfc11q3bh1LPd5//31n
l112cc+j8bzKV6W4avTo0c6kSZNKbEuXLs36fLqHsO/z5JNPzlhefej2WYHW
krLzuBW7HnLIIebvFesr5vczbNiwhM+4evXqWdU713o89NBDCfXo0qWL+5rG
aNs43G41a9Y0ca5yk+u/isN1fI1D2LRpU6A6EycDQDwYdw0AQHyef/75hHWH
tDVt2tSdL9y1a1f374cMGRJbPfS7rn5e2yeaaTv77LNzOp/6znWcihUrBnr2
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
AAAAQDGbNWuWew+rNW/C0pjt8847z83F5d0OPPDAjH1vluZ72v0GDx4cuh5A
GOobVvu0bU5rRGXrt99+c7p06eJcfvnl5v+1/rjWaf7444+jqm6pozwDWhvd
+33QrFkz+pIBAABQKowbN869j91vv/1C7au1cXTvq/123HFH3zGdYXMkaTv3
3HOzeStAYHfffXdCO23ZsmXWx1q4cKG7LrDyXCtG7tOnT4S1LV003rp9+/Yl
1oJavXp1oasGAAAABKJ1nuy9bPPmzXM6lsZL29zV3u2tt97KuK/ND6ztlFNO
yakeQDpai6xKlSoJbVRziTOtiZyOcmE1aNDAzD0YOnRohLX9L8151tiNOLY5
c+ZEVs933nnHady4ccJnq3W01qxZE9k5AAAAgLj17ds3kj41L7vOrN3seNR0
bC5hbYo1gLh41y2rW7eu+4xmypQpha5aSqUhj9f69eud/fffP+HY++yzj/P9
999HcnwAAAAgX6699lr3nvaYY46J7Lgnnniie1ytzZyJN7bWvTYQhwkTJiTE
cc8995wzdepUN/dcsdJYDf27iGNTvvuoqE9ez7y8+Qq07pY+ZwAAAKC0uP32
29372cMOOyyy47744ouh+ocHDRrklj/00EMjqwdgbdiwwfRv2namZzmiPFxa
Ezmq8RRwnEcffTThecS2225r5m4DAAAApcHDDz+ckJ86KsuXL3ePe+GFF2Ys
f91117nlNS4WiNr111/vtjHFxXPnznVfO/LII00sp/WXEI1zzjknIVZWPn3l
PAMAAACK3fjx4xPGR0blm2++cY87fPjwjOUvvfRSt3zv3r0jqwcgiokVG9s2
prxbXjaGfvrpp92/05pm06dPz3dVywytqZ48F1r/zgEAAIBit3LlyoT72Khy
7rzwwgvuMYPk01VOXFt+2LBhkdQBsE444QS3fe25554m55TXtGnTEtYx0zq/
559/vtOpU6dCVLeE9957z7yHOLZrrrkmtno3atQo4ftFecaVuxsAAAAodt57
2cmTJ2csv3nz5oxljj766MBjrqVevXqmvNaeJT8uovTMM88kxGp6hpPsr7/+
curXr++O+z/44IMD56DLhzjzXbdq1Sq2el999dUlznfffffFdj4AAAAgKt5c
XoMHD05b9l//+pdTuXJlZ/fdd3duuOGGEv1ycscdd7j5u4KsSas+bcXH3v48
IApr16516tSp47bvk08+OWXZxx9/vERMp/aeisZlK/9c+/btzdpnX3zxhfPk
k086Y8eOjeV96LhxbMqlHReNDUn+TLt27Rrb+QAAAICoKE5V7JspjpD/+Z//
SbjnVbx87733mrV1nnrqKXdt2nbt2jnLli0LdH7FFvZ4ilWAqNx8881u29Ja
RZo3n47mKdesWdOUP+6445xff/3Vt9ybb77p7Ljjjmbc8gcffOCMGjXK2WGH
Hcx+hxxySBxvpVTSelDJcTJ5xQEAAFBaaO1Y3cNWrFjRxM2pqO+pdu3avuM3
1Sd80kknOe+//36oc2vcp/bX+s1//vlnrm8FyMmmTZtMvvZU1Mes3NiKo73j
Jfbdd1/TjgcMGJCPapYKmseR/D2h+eEAAABAafD77787++23n7mP7du3b9qy
GzdudF577TUzplJzDV966SXnyy+/NMcI6+OPPzbnrFq1KmvGoOhNmTLFPA/S
XGbvGlKas2/7k8mRvZX62pPj5AoVKphnEQAAAEBpoLzUild1v//DDz/Efj7F
1c2bNzf3zlrHGShmGzZscBo2bGja67PPPpvwmsZQ6O81Zlu5svFffnGytnXr
1hW6agAAAEBgY8aMccdAx93n06NHD3OuNm3amHzDQDG79dZbTXtt3LhxifkB
Z599tnntrLPOKlDtilOqOPn//u//Cl01AAAAIJThw4ebsZHdunWLrW/sgQce
MPfLPXv2ZAwmSoUjjzzStFnN5fdSbjD9e9FrykmHrYiTAQAAUJaMHj3a2W67
7UyOrZ9++imy46of7qqrrjL5tZ944onIjgvESXmvlbtLMd748ePdv1ceL7vW
sragOd7LC+JkAAAAlDXKbd2kSZNI49lFixY5e+21l7l/BkoL5b+2Md64cePc
v7/gggvMOlD6e8XLSEScDAAAAABll80Hr3j4scceM2ugnX766c7//u//mr+/
7rrrCl3FokOcDAAAUHotWbIk7ZrBZcnMmTMLXQWgVNI6aFoTyq5tpLn169ev
d/bYYw/zd1OnTi10FYsOcTIAoKz65JNPnBUrVhS6GrFZvXq1iRs0vnTu3Llm
DUyULxMnTnRq1apl+ofKusWLFzuVKlVy2rVrZ9o+gHA0/lq/GTbOs+t/16hR
g3x0PoiTAQBljX7bWrdubX7PXnjhhUJXJ3KKjey6rd6tbt26zj333MMaNSF9
/fXXzo033uicdtppzgEHHGDuGXfZZRfn8MMPN+ukDBw40JkwYYLJf6P5rpMn
Ty50lY277rrLqVixolnvpbyYMWOGs+uuu5rrQM4hIDc333yz+e34xz/+Ueiq
FCXiZABAWfHRRx+ZtUy9v2dlLU6+7LLLfH+3vZvG0yGzadOmuWul2G3nnXd2
jj76aPOcpUGDBr6f73vvvVfQemusZMeOHU1dhg4dWtC6FIJyadWuXdupX7++
8+233xa6OkCpZXN4Pf7444WuSlEiTgYAlHbz5883YzHVt2bnX5XFOPnhhx92
31e9evVMDpa//e1v5n0n/45fc801ha5uIBpLO2/ePGfDhg15O+fatWtNnlfv
56XP8v333y9R9u233zYxmS2n9qU4tZA6depk6tK5c+eC1qOQ1KevOZYHHXRQ
wa8HUBr95z//cb/XNP4aJREnAwBKO/3Gq19tzZo1zuzZs8tknPzdd9+Z9S+r
V69u7m+8fvnlFxMzed+3Yufvv/++QLUNTnGO6vvWW2/l5Xwaq2vPqW2HHXZI
WCfFz6xZs5xq1aqZ8soZW0hjxowx9WjUqJFZE7U86969u/ksNDYeQDAaj3HU
UUc5O+64o1OlShWzaexMaXm2mk/EyQCAskRzc739q2UlTv7nP/+ZNp7U++7S
pUvCb/nw4cPzXMvw8hknKy/0Pvvs434+in2VAy2IW265peAx2Y8//uj2bY8d
O7Zg9SgWenakvF76PEaMGFHo6gAoY4iTAQBlzXbbbVfm4mSteXnuueemLaN8
VN5x5/37989T7bKXrzj5jz/+cA477LCEex31zQa1YMECs8/tt98eYy3T09hw
1WGvvfZy/vzzz4LVo5h06NDBfCbKu6bx9AAQFeJkAEBZU9biZK1tpbFxc+bM
yVjWm3vqpptuykPtcpOvOPnSSy9NuM/p2rVr6GPstNNOzquvvhpD7TJ79913
3borlxv+y45D13bnnXcWujoAyhDiZABAWVPW4uQwmjZtmtV7//3338087ylT
pph7g3ytLZWPOPnTTz9N6GfXn7/66qvQx/nyyy8LljOqV69ebv1zidULdZ3j
qo/GotvPRf3sW7ZsiammAMob4mQAQFlTnuNk5Wax733hwoUZy2us6oABA5ya
NWuafex/lT9ca2tqPWFtca2FlI84Wesie+9x9P+liWK/OnXquPVfunRp6GMU
+jrHWR+7r7ag880BIBPiZABAWVNe4+TPPvvMfd8nnXRSxvIzZ8509t57b1Ne
62jatUG0DrXNj2S3uNapjTtOnjt3bol7nHzl1o6K8m3buivfeVjFcJ3jrI9y
99rygwcPjrn2AMoL4mQAQFlTXuPkyy+/3H3fms+azoQJE9yYpFmzZmZtKS/1
69ljNW7cOLY6xx0n33HHHQn3NwceeGAs54mT1q2y9Q+7LlWxXOc469OtWzd3
n0y57gAgKOJkAEBZUx7jZOX6smOuzzvvvLRl33nnHTdW0ZxOrSmcTOsf2c+w
T58+cVU79jjZ29eoTWvuljZDhgxx69+8efPA+xXTdY6zPsrrbvc55ZRToq42
gHJq1KhRvnHy8uXLC101AACyUh7j5PPPP9/tb/z1119TltNrdsyr1pn+/PPP
fcvVr1/f/QwnTZoUV7Vjj5PtesN2u/feeyM/x2+//WbiO/XnZ6I1fzU/+v77
7w98/L59+7r1b9myZaB9iu06x1kfu7a1tiOOOCLKagMox/S75Bcnr169utBV
AwAgK1HHycrFe+qpp0a6DRo0KIJ3+l8TJ04071XrFs2bNy9t2d69e7ufjcar
+lHftC2j9aiUkzgM5VIK+jlUq1bNnGffffcNVP76668PXA/Fr8n3N6+88kqo
9xLEa6+95h5//vz5acved999ptz222/vbN68OdDxr732Wvf4xxxzTKB98nGd
w4izPloPyu63//77R1ltAOUY464BAGVN1HHyc8895/tbmcsWVb+X4rJatWo5
VatWzZgbeNq0ae76SNtuu62zePFi33LKN2zr2aZNm9B1Uiwa9edltyD5yaw1
a9aU2D+b9aAyUf7punXrOkceeWTG2E7XqEaNGk6nTp0CH//2229363/YYYdl
LJ+v6xxU3PXRMye736GHHhpVtQGUc8TJAICyJuo4Wf1cI0aMiHRTH2SutLaO
+s8qV64caNyyxuzazyXVPF2Nj1W/tC334IMPhq7X999/H/hz2GOPPcx5+vXr
F6j89OnTQ9VFzw+89zfvv/9+6PdTaA8//LBb/yB5yPJ1nYOKuz7XXXedu98Z
Z5wRVbUBlHPEyQCAsqY8zE9ev369c/TRR5v3GmQs8ZIlS9w+PW0vv/yybzk7
LthuQdZgzkXc85MVV3rfz9ixY2M5T5zGjx/v1l/j1NMptuucj/pceuml7n4a
3w0AUSBOBgCUNWU9Tv7jjz+ck08+2eRDyhT3KU5R+eS8nT/88EOJsitXrjRj
uG2ZsGsQZSPuONmbP1nbjTfeGPoYmm/tN5d4wYIFZp2ju+++2+nSpYvJ55zK
J5984rz44otmnarOnTs7U6dODXx+XRfve1B/fSrFdp3zUR/NW7f7Dhs2LKqq
AyjniJMBAGVNWY6Tt2zZ4vzjH/8wfXT//ve/05ZVTKL4Q3Ged46rxiIn+/PP
P522bdsm3AsEyd+cq7jj5LfffjvhPdWpU8fk9wpq6NCh5rP2Gyf/7LPPmrxa
9tip5t3qs73pppucY489NmPZVBo1auTuO3ny5JTliu0656M+9erVM/vpOqV7
hgAAYRAnAwDKEsWRFSpUKJNx8l9//eV07drVvK+HHnoobdk5c+aYGPSAAw4w
/69+TPuZ6DmCxm17XXLJJSa/VMOGDd1yr7/+emzvxYo7ThbldvLe42iMbybq
g+/Zs6cpf/XVV6csN3z4cFNG+bozGTNmjCmruC4sb7w5ePDglOXiuM5qdw88
8IBz5plnOjfccEPadcfyUR8v9UXbcd16DgEAUSFOBgCUJRoL6/09e+KJJwpd
pchcdtll7vtS7q5Um8Zj23JDhgwx+44cOTLhc1H/5saNG51FixaZ9XyVh1hj
uCtVqmRe17pFYfpds5WPOFk5rr3rKCuu0vtX/JdMf/fSSy85TZs2dcdp+5Wz
NIZa5Xr16pWxHoq3VfaCCy4I/R4UD+raan+NuU8ljuv86quvJhyzY8eOgesd
d7t78skn3WM//vjjgfcDgEyIkwEAZYXGXLZv3z7h90xr9eievLQbMGCA7+91
uk0xx88//2z2V27s5NzPNu5SP5/iGfW929dat26dl/eVjzhZNPZ8l112SXj/
OnePHj1MPun777/f/Fn5w/WaxqvrM0lH8fPOO+9syqfKT+WlNZ1UVnm7s6EY
U/vrOYjiZj9xXGfN+fUer3r16oHrHHe7a9WqldlP4981hhsAopKcX8Fuy5cv
L3TVyi3lXEn1+xe3mTNnFuS8ZYHWzMy0bmZpUMj254c2iSDmzp1r7t3TxYxV
qlQxcUZppPcXNkbWpjHaXs8//7yJnb1l1G/66aefmtftmG5vP3Tc8hUni2I2
zX1N/gy8m2I6PZNQ2Uw+/vhjs4/6RDP1L+h128//3XffZVV//cYox5WO0bdv
35Tlor7Oan/Ks+09nsalBxVXu7Ofv65Z3HnZAZQ/EydO9P2diPM+WWPi+vfv
n3G75ZZbnH/961+Bcl3oN0ffuZqH5bdNmjQp4zH0LDlIvdJt33zzTU6fja6H
nmE/9thjOR0nG/qcNe6pXbt2zurVq/N+/tJs/vz55v5H64AGVQztLVkh258f
2mQ4GquY6jtQW6b5rCgffvrpJ/ObOG7cOGfp0qXu32tet3ds8tdff52X+uQz
TrY2bNhg+n8HDRpk1hHSeOinnnrKmTVrlnktKOW5Vt2DzIvVnFuVrV+/fi5V
N/POFRfusMMOvrmjraivs8YlTJkyxWnRooXToEGD0PWOuj56ZtC8eXOzj8YD
AEDUCjHuWt+Pffr0KbGmod303Z/8dxoHNXr06JTH1Hgqb/mLL77YeeSRR8z9
vrYff/wxY700r+Wiiy4qMS7Lu3nXAPTbNIcnW3fddZeJtW699dasj5GrGTNm
OLvuuqvTpEkTZ9myZQWrR2mj9T50/cPEyYVub8mKof35oU0Gp3Vr7Hfeo48+
ar5nvXmfb7755kJXEUVs+vTpblvJJg7KViHi5KjYMb+33XZbxrLXXXedKavv
/VzZfGAaa7xp06ZQ++Z6nRWbnnPOOaH3i7o+GiOvfdq0aZN2/jgAZKuQ85M1
Zid5HI7NS6p8iO+++67z97//PeH1VL9F3jhZ99O5UD4J7znVv6axPfZ7WPVe
t26d6ctT7O5dEyKbfni9V+XE0P5af6LQNI9Pz3b1zPvbb78tdHVKhWziZCvf
7S1ZsbU/P7TJ7HXv3p04GYH069fPbStBclJFRfmODz74YPM7XprouZTG8uvz
0r2Uxgil69c86qijTNlMc56DUp5t5XXv1q2b6ZMNKpfrrJzXmls8b968sNWN
tD6qh8orH3nY5wQAEFQh42SNEfTm5Kxbt26JMsrJkLyeg+qczBsnH3fccTnV
6+mnn044X6Z1/JS3ca+99nL23nvvrM7XqVMncx7lzCwWWptRv796zp+8hgNK
yiVOznd7S1aM7c8PbTI7GidAnIwg9IzZtpVXXnml0NUpesrlYD8vrdnUsmXL
lDGbvrM0h1llo1zfV89ONWZE/doa1xxEttdZY8z1HRz1/I0w9dE94VVXXWVi
9bKUxx5AcSpknKwxVt5zphqL9O9//zuhnJ49JosyTrbrJdrttddey7jPqaee
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
EWWbLFR7lDjbpJVrnKw824MHD45le+ONN0LXBwByoWe4miOk8U833HCDyf8A
AH6Sx/3Fde8uLVq0SDjH9OnTIzt2tnGy7oG98wPr1q2bdR2++eYb995dfXbp
ePuRdL+YjuIYWzbVfFLNn7RlNJcxl7p5qaz9fNT3lwvl1FB/p3durvo+zz33
XNMXmq7/MQrK8e1tf+rP1Lj/RYsWmfV7lWt47Nixbr+71inyW/fIT9A4Ocr2
5kdzadX/qWN/++23KcuFaX8SRRv0o/ag8mHG30bVJgvdHiXONmkxPxkAtnr1
1VcTvnc7duxY6CoBKFJa58QvTg4TS2WiPDe6/0s+xxVXXOHbL5WNsHGy7oHn
zp3rnHDCCQl1UowxevTorHLzKAetjqH8Ppno81WeXJU/+eST05YdOHBgwmfm
R3mRbRl9FrnUzUtrENrjPv7446H2Tbb33nu7x9I6zo8++qiJ6/Jl7dq1Zmyr
93rba6C+PMUsL7zwgvta69atAx87U5wcR3vzY3//U+XZssK0P4miDfqx60yF
GXseVZssdHuUONukRZwMAFslj22sXr16oasEoEjFPe5a6934Hd+76T4uV2Hj
5L59+2as1zPPPBOqDqeffrrZr1+/foHK22cHGuuZ7rmEd35iqny46pfU67rn
9ltHKGzdrFatWpn9NFY415zM7du3N3nEvvjii5yOk4vnn3/e9Ml5r3PTpk3d
vEya02v/fsiQIYGPmylOjqO9pTtPt27dMpYN2v4kijaYzLvOVJixzVG1yWJo
jxJXm7SIkwFgKz2zVg5L73du1LknAJQN+c53HZdc10/OleICPZPU+d96661A
+/z+++8md632UXyTLa0RY9+7X16cbOomNi+z4p5s14YtRuq7nTRpkjNu3Dhn
6dKl7t9v2bLFzUOl7euvvw58zLDrJ8fliCOOMPUIsiZTVO1PMrVBP3adKc0D
Doo2GbxNWsTJyDd9H2peO1Csfv75Z7MuqeYDNmjQoNDVAVCkiJOjoXWXdG7N
bwzzXHLOnDnmnl/7+a0JE4TyNdn3fsstt0RSN8VQzZs3N/tpvd3yQPPl7ecY
9nezGOLkX375xcxnVT28sVY6UbQ/ydQG/dh1pi666KJA5WmT2d3LEScjX3Q/
obkBamuaLwAUO/2maM4QAPgpi3Gyvvfy7c477zTn1no1q1atMmNC1RcUhM35
q32UezesCy+80H3vWus0irppjWXtoxzA+chnVAw0Jt1+jr169Qq1bzHEyTbX
gHIjh5Fr+5NMbdCPXWdKc3CDoE2Ga5PWbbfdRpyMWGl+lf5deu8hiJNR7JTz
Wvkg5s2bV+iqAChSZTFOVv6badOm5fVeWvNBdW6tM6D7f605Gsbw4cNNTicd
J2h8bamfyb7vDRs25Fw3/XaofM+ePbOOm0qjJk2auG0o7PUrhji5f//+pg4X
X3xx6H1zaX+SqQ0m0/pHtu87yLpOtMnwbVL0Pd6yZUviZMRi/vz5Trt27Uye
AW8ef+JkFLu7777b/OY99NBDha4KgCJWFuNkuyk3jnI1aEuVeygqGmtq44Rs
v3eV91j7K09R0PzHmgNm369i4FzqppxIymuk56tPPPFEVu+htNL4Y/s56v0n
r2ObSTHEyXbdNa0jlI1s2p8EaYPJNBdX5RUHpkObDNcm9YzCfudpS45diJMR
JeULGDp0qLNmzRpn9uzZxMkoNZQfMdvfSgDlR1mJk7Wei/ICpdq0Jmmc1Mf1
3nvvmXHNuVC8r9ghaEygeaj2mmlN3FzqpjVb99prL9MmygvlOFM84l3bu2bN
ms6SJUtCHafQcbLiWvXp6NnQr7/+mvVxwrY/CdIGkyn2VXmtN5UObTJcm9RY
gHTfgwsWLMjDO0B5pPFbNn89cTIAoCwoK3Fyeab5x5rHGLYPtLybOnWqu1at
36Yc4bNmzQp0LD2HUUwXZn2jKI0aNcodW18IYdugzbOtPihsFWWbBPJN41GI
kwEAZYW9v07eli9fXuiqAbFSbKs+9lTb6tWrC13FlH777TenS5cuzuWXX27+
v2PHjmaMrcZBFiPNrT3++ONNvp8vv/zSfMdo/WIkKs1tEiBOBgCUJTZHbvK2
cuXKQlcNQAp2vWKt6aR/w4qR+/TpU+hqpXTeeee582O1bszOO+/MGGCgjClv
cbLWqtOzSa3Dq7F55SUPPwCUF4y7BkonjXNWnukjjjjC5NIpZp999plZ11xz
jc8++2wzRh1A2VJe4uS1a9c6AwYMMHkDbP4A/Ve5v/Us8IADDjCb8oIAAEov
4mQAAJCr8hAnz5w509l7773NezzkkEPcuS6aU1KpUqWE+6hvv/22sJUFAOSE
OBkAAOSqrMfJEyZMcGPhZs2aOb/88kvC6+pPtu+/cePGBaolACAqxMkAACBX
ZTlOfuedd9wYWfNHli1bVqLMWWed5b7/Ys4XAQAIhjgZAADkqqzGyVqT3o61
1hrRn3/+uW+5+vXru+9/0qRJea4lACBqxMkAACBXUcfJyiN96qmnRroNGjQo
dD169+7tvq9u3br5llmxYoVbpkqVKiYXNgCgdCNOBgAAuYo6Tn7uued8709y
2bQ+QBjTpk0z6+5p32233dZZvHixbznlubbnaNOmTc7vHQBQeMTJAAAgV1HH
yeqjHTFiRKTba6+9FqoOLVu2dN9T9+7dfctoXPZOO+3klnvwwQdzfu8AgMIb
NWqUb5y8fPnyQlcNAACUEmVtfvKSJUvcvmRtL7/8sm+5++67L+H+aeHChXmu
KQAgDhMnTvSNk1euXFnoqgEAgFKirMXJyf0IP/zwQ4kyuleqVauWW2a//fYr
QE0BAHFg3DUAAMhVWYuTb7/9dvf9VK1atcTrf/75p9O2bduEe6fLL7+8ADUF
AMSBOBkAAORiy5YtToUKFcpUnHzHHXe470fPANavX5/w+iWXXOLUqFHDadiw
oVvu9ddfL1BtAQBRI04GAAC5WLBgQcI9xBNPPFHoKuVs5MiRCe/ppptucjZu
3OgsWrTIOe2000z+67FjxzqVKlUyr2+//fbOb7/9VuhqAwAiQpwMAACy9f33
3zvt27dPuIc48sgjTTxZmq1du9aMt/a+r8qVK7v9y4qj1W9uX2vdunWhqwwA
iBBxMgAACGvu3LlO9erV065XXKVKFdMPW1o9//zzpp/Y+56aNm3qfPrpp+b1
rl27un8/ZMiQAtcWABAl4mQAAAB/P/30kzNp0iRn3LhxztKlS92/15zs2rVr
u/dNX3/9dQFrCQCIGnEyAABAONOnT3fvmRo0aFDo6gAAIkacDAAAEE6/fv3c
e6ZevXoVujoAgIiNGjXKN05evnx5oasGAABQlJo0aeLeM73yyiuFrg4AIGIT
J070jZNXrlxZ6KoBAAAUnTlz5iTkwE5eWxkAUPox7hoAACCzzZs3mxi5RYsW
7v1SzZo1nSVLlhS6agCAiBEnAwAApDd16lR3/WS/TWtkzZo1q9DVBABEhDgZ
AAAgvY0bNzqrVq1Kua1evbrQVQQARIg4GQAAAACArYiTAQAAAADYijgZAAAA
AICtiJMBAAAAANiKOBkAAAAAgK1GjRrlGycvX7680FUDAAAAACDvJk6c6Bsn
r1y5stBVAwAAAAAg7xh3DQAAAADAVsTJAAAAAABsRZwMAAAAAMBWxMkAAAAA
AGxFnAwAAAAAwFbEyQAAAAAAbEWcDAAAAADAVsTJAAAAAABsRZwMAAAAAMBW
7777rlOnTp0S2+rVqwtdNQAAAAAA8o7+ZAAAAAAAtiJOBgAAAABgK+JkAAAQ
tSVLljgrV65M+fpvv/3mzJ4923n11VedOXPmOH/88Ucea7fVzz//7FxwwQXO
5s2b83bOTz75xFmxYkXaMjNnzsxTbQAAfoiTAQBAlCZOnOjUqlXLeeyxx0q8
9sMPPzgXXXSRU7FixYT7ju2228659NJLM8aPYT3yyCPOAQcc4Ls1btzYnPfw
ww+P9Jyp6J6rdevW5v2+8MILKcstXrzYqVSpktOuXTvyxQBAgRAnAwCAqNx1
110mBr711ltLvDZ37lxnl112MfcZe+65p/PGG2+YOHD8+PEmh6j+fo899nAW
LVoUSV02bdpkjud3n+PdnnnmmUjOl8pHH33ktGnTJuGc6eJkmTFjhrPrrrs6
TZo0cZYtWxZr/QAAJREnAwCAXK1fv97p2LGjuYcYOnRoidc1vrlu3brm9SpV
qpg+U6+vvvrK9O3q9QYNGpjj5WrEiBEZY2TFohs3bsz5XH7mz59v+oT13GCb
bbYJFSeLnhfUrl3bqV+/vvPtt9/GUkcAgD/iZAAAkKtOnTqZ+4fOnTv7vn7Z
ZZe59xjXX3+9b5nevXu7ZQYMGJBTff766y/nwAMPNMcaPXq0M336dN9N86jj
8vHHH5tnBmvWrDFzscPGyTJ58mSnQoUKzkEHHRTJswMAQDDEyQAAIBdjxowx
9w6NGjVyfv311xKv657C9hVrUz+rH8WVtky1atVyyu2l/GA6Ttu2bbM+RpQU
t3vnZAeNk6V79+5mn7POOivGGgIAvIiTAQAo+5Q/a+HChSW2H3/8Mafjan+N
Dda9w9ixY33L6O/t/UXDhg1THkuxpJ2nrE3zl7N1/PHHm2No7PWff/6Z9XGi
5H1WECZO/u6770xeL/t+AADxI04GAKDsUWzao0cPp0WLFk6NGjVSzs/VnOJc
nH766eY4e+21V8p49Nxzz3XPp/LpHHfccW7Znj17ZlWnDz/8MOE9Vq1a1Tnl
lFOcJ5980lm7dm1Wx4xCtnGydOjQweynPGiFfA8AUF4QJwMAEL/ff//djCue
MmWK+e1V32kcPvvsM+fYY48t8buuOa7Vq1cvsZ1//vlZn+vdd991j6/5x360
LrHWiLLlrrzyyrTH7Natm1tWuaqzYWNKv039spdffnlsubvSySVOtmPbtd15
550x1RAAYBEnAwAQH/X9KSdVzZo1ze+r/a/yIN98883uWr7vvfdezufSWkx2
Duy2227rXHzxxc64ceOcL774Iqe5vqn06tXLvW/QfGA/ypPlvb8YNmxY2mPe
fvvtCeWVJzssbzyaajvqqKPMWPR8yiVO1vh2u6/67rds2RJTLQEAQpwMAEA8
Zs6c6ey9997md/WQQw4x/cmi9XTtfFO75bruz3/+8x/3WIrBv/nmmwjeQWqK
07xziZcuXepbLnkMtOL2dJ566qmE8vPmzQtdt3Xr1pnP+rnnnnOuu+46s1az
373Obrvt5ixfvjz08bOVS5ws9hmLNn2uAID4ECcDABC9CRMmuLFws2bNnF9+
+SXhdcWy9je3cePGOZ1LMbaNoc4888y85K2aNWuWW3+N305Fn4P3/iJTbi5v
zi9tU6dOzbmuiulfe+01p1WrViXud9q0aZPz8YPKNU5WH7jdf/DgwTHUEABg
EScDABCtd955x42RNUZ22bJlJcpojR/7m9unT5+czqfY2MbjGzZsyOlYQalf
2NZ/v/32S1lO+Zm99xdvvvlm2uO++OKLCeX1/1HR8wPvOs5205zufMg1TvbO
3VZuNABAfIiTAQCIjtYPtmOtNVf4888/9y1Xv3599zd30qRJWZ9Pv9eVK1c2
x3n66aezPk5YQ4YMcevfvHnzlOVeeumlhPuLTO9V8aO3/FtvvRV11UvMgX7g
gQciP4efXOPk/v37u/srfzcAID7EyQAARKd3797ub6n6//ysWLHCLVOlShWT
Cztbyv/l7avVeOgw2+rVq7M6b9++fd3ztmzZMmU5zdH23l+8/PLLaY/7zDPP
JJRXDrI4HHHEEe45lP86H3KNk2+55RZ3f9UfABAf4mQAAKIxbdo0Z5tttjG/
o8o3vXjxYt9yynMd1fxY7/jnbLbOnTtndd5rr73WPcYxxxyTstzChQsTzqc8
Xelo3q23/KpVq7KqXyZPPPGEe46LLroolnMkyzVO1npQdv/9998/hhoCACzi
ZAAAoqF+Vfs72r17d98yGpe90047ueUefPDBnM6p/FT2WPXq1Qu9XXrppVmd
1zt2+bDDDktZTn3l22+/vVt24MCBaY/rnT+84447xpaTbMaMGe55evbsGcs5
kuUaJw8aNMjd/9BDD42hhgAAizgZAIDcaZ1g25ecbnzxfffdl/B7q/7WXHz1
1Vfusb7++uucjhXGww8/7J73wAMPTFtWfea2bKdOndKWPe2009yy55xzTpRV
TqA82vY8jz/+eGzn8co1TtYaV3b/M844I4YaAgCs5HUNiZMBAAhv1KhRCb+j
P/zwQ4kyK1eudGrVquWWSZcnOqjNmzebdYB1PI3nzpfx48e776NatWppyw4f
PjxwP+i+++7rltX6x3Hx1mn27Nmxnccr1zhZff92f82DBwDER3On/OLkdevW
FbpqAACUGt5xyFWrVi3xusYPt23bNuG3Nqr8UTYPsuLVTz/9NJJjZqKY3/te
vv/++5Rlly9fnjBv+6effvIt991337nHU0wZ572IXWNp1113Nc8a8iHXOPnU
U0919x82bFgMNQQAWFu2bDG/Wclxcq7jwAAAKE/uuOOOhBhv/fr1Ca9fcskl
To0aNZyGDRu65V5//fVIzv3zzz87e+65pzlm3bp1TbyZD40aNXLfy+TJk9OW
1ThhW1Z9uX7uuecet8z555/vW0Z5wE466SQzj9lv7Jti8ilTpqTN4/3ll1+a
ex/F7hMnTvQt89dff5n1orQ29Q033GDmledC91sVKlTIKU7WfHLtq3r7PZeI
us4AUN41aNCgRJz89ttvF7paAACUGiNHjkz4Hb3pppucjRs3OosWLTJzbhWX
jR071qlUqZJ5Xbmtfvvtt8jOr1zbWmNKx1Y8rv7tDRs2RHZ8P94+dOWpTkfj
13bYYQdTVjF9ct0U69euXdutv+LdZJ988knCZ3zFFVckvK7PW/va1zt06OAs
W7YsoYzGw2vst16/5pprUtb31VdfTThXx44dM30caS1YsCDheMq3HYb6722f
/LHHHpuXOgNAeXfuueeWiJMfeuihQlcLAIBSY+3atWa8tfe3tHLlym7/suJo
9SHa11q3bh15Hd5//31nl112cc+hMcXKm6V5y6NHj3YmTZpUYlu6dGnW51Ps
Zt/jySefnLG8+s/tcwKtJWXncCuGPuSQQ8zfK9ZXzO9H9ybez7dLly4Jr2uc
to3F7VazZk3nrrvuMnnB9V/F4jqH+v83bdqUsq4a1+w9TvXq1UN8MonU99u+
ffuE4x155JHmGUpQTz75ZMa8Y1HWGQDgOJ9//nlCjk77/Q0AAIJ7/vnnE9ZA
0ta0aVN3znDXrl3dvx8yZEgsddBYZPXz2r7ZTNvZZ5+d0/nUb67jVKxY0cTN
mcycOdPcY9jz77zzzu6fta7Wxx9/nHJfxZVaK8qeT7FvMvVrJ18Duyk+Vh9r
kHHpc+fONfO9vfv/8ccfGfdLPoZi1XSfv+qkzzCTVq1auc8XUq2VFUWdAQCJ
kp9zalP8DAAAglOOKvXTjhs3LqGvVvNTvbFr3Gs4aW6q+pDVl9y5c2cTmx58
8MEltmuvvTan82h9ZOXt1nvq27dv4P0+++wzkyNcc5JVzzlz5gTaT+Oz9Twi
XT/4mjVrnAkTJjiPPvqoc++995o1upR3JexazDqX5jq3aNHCzFErFD070Oer
8QqZ8scUS50BoKzQb4p+L71xcrNmzWKf2wQAQHkwffp09/e1rMUvinEVw2nM
s996WKVd8+bNY13LOR09h9D51W60ZnVQhawzAJQ1ipX1/NEbKysHRnLOTgAA
EE6/fv3c39ZevXoVujqRGzNmjDsuON2839JG+aM1B3vevHkFOX+PHj3M59qm
TRuTzzqIQtcZAMqq//znPyYXpF2/oE6dOrHNowIAoDxo0qSJGye/8sorha5O
LLTek+4dtDaxxpmXdnfffbd5P4XKbap4V+2lZ8+egZ89FLrOAFAeaL2K2bNn
m3lDYcb6AACArTQu2ZsDuyyP09I9g/J7K++U5mqXZsq7prW88k3zqK+66irT
VsKuH1WoOgMAAABAEJs3bzYxsndOk9YpWrJkSaGrFqsPP/zQ9J+HjfHwX8rr
vddeezkffPBBoasCAAAAAJGZOnWqu7aw36b1gmbNmlXoagIAAAAAkBcbN250
Vq1alXJbvXp1oasIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAADKmBdffNE58cQTnVmzZmUsO2TIEOeUU05xli5dmoea
AQAAAACQf4cffrjz//7f/3O6dOmSsWy1atVM2UGDBuWhZgAAAAAA5N+AAQOc
GjVqOCNHjsxYtkOHDk6dOnWcadOm5aFmAAAAAAAAAAAAAAAAAAAAAFA4GzZs
cGbMmOE89dRTzlVXXeX06NEjZdmVK1c677zzjjN8+HDnyiuvdHr27JnHmgIA
AAAAEL8ff/zRufrqq51KlSqZvFxdu3ZNWfbtt982ZXfYYYeMZcuy1atXOy+/
/LIzc+bMQlelXFuyZIl5dlMaFLKutNP0iq0dhbleXNv0PvnkE2fFihWFrgYA
lCrZ/C5mujfm9wql2e67725i32effTZj2caNG5uy6oMub/766y/n1FNPNe//
pJNOCryf1s/q379/Tts///nPEsf97rvvnKZNmzoHHHCA7zZp0qRQ7+/rr792
brzxRue0004z+yuv2y677GJyoZ911lnOwIEDnQkTJjjjx493mjRp4kyePDnU
8aMyceJEp1atWs5jjz2Wttz999+f8+f+zTff5KWucVi8eLF5BtauXTvzG1ZI
xXAtkhXy2vgJc73ClP3tt99Sfkdoe+ihh6J8GwX3wQcfOK1btzbf0y+88EKh
qwMApUY2v4uZ7o2L6V4ECEv3nmrb22yzTcbnR+vWrXMqVKhgyn/77bf5qWAR
efDBB817Dxsnq0/juuuuc4477jh3f79N1yDVa3vssUeJ43744YcJZS6++GLn
kUceMd9v2jReIAjlLT/yyCMTjrXzzjs7Rx99tLnfbNCggW+d3nvvvcCfQVTu
uusup2LFis6tt96asezjjz/uXHTRRSbWz+Yz1/bqq6/mpa5x0byKXXfd1TzX
WLZsWcHqUehrkawYro2fMNcraNnNmze73wmPPvqo06dPH2e77bZzP9ebb745
4ndRGB999JHTpk2bhDZDnAwAwWT7uxjk3rhY7kWAsGz7btasWcayuk9V2X32
2ScPNSsuX331lbP99ttnFSdbW7Zscfvj7da7d2/z/MHSPe2aNWuczz//3Hn4
4Yed3XbbzZQ744wzShzPGyfruyestWvXOhdccEFCfU4//XTn/fffL1FW4+5r
166dENOsX78+9DmzpXN17NjRnHvo0KGh9h07dmzCe9Sz0o8//tg8A5U//vjD
XAM9Mxo9erRzzDHHuGWzGZObS13jsGjRInPt6tevX/DnW/m+FsmK7dr4CXO9
sr223bt3LzNx8vz5800/he7vkp+1ECcDQHq5/C6GuTcupnsRICjFRWrb/fr1
y1i2b9++pmy3bt3yULPisXHjRvMcwXv/lU2cLMl9yvqOSWfMmDGm3G233Vbi
NW+crOOGoed5Bx10kLu/5p2PGzcu7T6zZs1yqlWrZsrvt99+oc6Xq06dOpnz
du7cOfS+Tz/9dMJnfvnll6ctr+u91157OXvvvXfe6xoXjZHXWBBd83w+30iW
72uRrBivjZ8w1yuba6t+g7ISJ+s5i+7t9Hxx9uzZxMkAEEK2v4vZ3BsXy70I
EIT6LqtXr27a9ltvvZWx/BFHHGHK6l63PLHPB0455ZSc4mR93jbO1FavXr2M
+yieVdnXX3+9xGvZxsnK0aAxAXZf1UnHCuKWW24x+2i+cr7YZwWNGjVyfv31
19D7Kze793v8tddey7iP5tro+Wq+6xon24eYz2uXLJ/XIlkxXxs/Ya5X2Gtb
luJkL41LUL8ycTIAZJbL72K298bFcC8CBKH5ArYvUeMd0/nll1+cbbfd1pRX
XqryQmth6dmX5ukqh1UucfL06dMTYoR063BZimlVdtWqVSVeyyZO1nU+7LDD
Euqh78mgFixYYPa5/fbbA++TC82xtuO9NWY3G9751RofpLxGmZxwwgnOPffc
k/e6xkl532xu+xEjRhSkDvm6FsmK/dr4CXO9wl7bshoni3fuNXEyAPjL5Xcx
l3vjYrgXAfwkPyu68847TTtVf43iMM0F1BxaP8qBp7INGzbMR1WLgubvasyn
vkeWL1/uvPLKKznFyTfccENCfPrSSy8F2u/333/3/fts4uRLL700oQ7ZrO+1
0047RZpTKR07L0DX4c8//wy9v43r7abnnkGo719bPuuaDx06dDB1VD4tte98
yue1SFYaro2fMNcrTFniZAAo37L9XYzi3riQ9yIoX9S3q7GLWrcs1aZcXYqF
NR/AS/OM1U7PPPNM56ijjjJtPRWty6KyyqlcXtg5G3bebq5xsrcfV/dy6qNP
prWZNB57w4YNGY8XNk7+9NNPE/Lc6M+Z5kf7+fLLL/Myr+Tdd99163rZZZdl
dQyteeONzQYPHuxbTu06l9g/m7oqbtTzJ7+xTno2ojzkb775ZuC85UHYMVba
9Jwsn/J1LZKVlmvjJ8z1ClOWOBkAyq9c7q+iuDcu5L0Iyoeff/7Zad++fcJ9
Z6YteeyinWuq+4pMa2i2aNEi0jGLyqncqlWrWLYgOckyGTlypHm/ygdt5RIn
a804u6aWtuOPP963nPIoHHzwwYGOGTZO1rrI3vag/y9mvXr1cuuabdykPLje
9zxv3rwSZd544w3zWtA52rnWVWM27DMqbcqJprXDRHkx9O9ScyHs6xqfFFVO
AMV19rh6Hpxq/Egc8nUtkpWWa+MnzPUKU5Y4GQDKr2zvr6K6Ny7kvQjKB60T
FCZG1vja5HEVmzZtMmvg+s199frpp59MbhTNJ4wq/43331XUW7a5qC3lq69R
o4bJdeXt880lTn7uuecS6nj33XcnvK5xpcOGDTOvDRgwINAxw8TJc+fOLfE5
BcndVij6zqxTp45b12zmxCuu8eZN81vPbNKkSWYcub6n7dpEcdfVPp/Smth2
nzvuuMP821K70v9rTIHiShuT6fhRqVmzpnveKOPRdPJ1LZKVtmvjJ8z1ClqW
OBkAyqds76+ivjcuxL0Iygf1b6hdqd/x6quvNmsG2fs7bcphrb/Tdv/99zsf
fPBBTucbNWqUOa7GZ0dF/eE6bhybYv9s6VnCsccea/p+lXfLK5c4OXmd4ubN
m5scvhoPr+vojSFmzpwZ6Jhh4mTd63vPf+CBB4aqf75pDSpve86G8kx437Ou
6dlnn23GYegae7+jr7zyyrzV9W9/+5tz4403mj9rbo72U500X0exl3feep8+
fdxj63lVFDTHwh4z1djnqOXrWiQrbdfGT5jrFbQscTIAlE/Z3F/FcW9ciHsR
lA/KWZzcTjVn1La3tm3b5nR85aDt0qWLu7ap4jnNZdU6lWWdjSevv/76Eq9l
+12gvrHdd9/d3Vd5w3UPrtjYO19Ym/IiBM2nECZO9n4faVNe/mKmeS+2rtmu
1XzdddclvGfFYvpN0LgI7xh4bZqrk6+6XnjhhSZvhTZbj6pVqzqVK1cuUY9b
b73VPfYPP/yQdR29vOOKzz333EiOmUm+rkWy0nZt/IS5XkHLEicDQPmUzf1V
HPfGhbgXQfn12GOPue0t1zVUFi5c6N4fKpeNYjn1nZR1H330kbnHOuSQQ8yY
9GTZfhfMnj07IQ44//zz3dc0/mXx4sXueIAw3xVh4mSb+99u9957b+DzBKXn
K1oPzz5fSUfrAmh+tMY7+BkyZEhC33s2mjVrlvBs4v/+7//c13R9dT3Vtnfb
bbe0zyZefPFF58QTTzTPYKOsq3ctBW0DBw4sUca73rDGLicL85lbNieftqA5
p3MV1bXwo89f78Nv7Fghr42fTO3eT5jrFbQscTIAlE9hfxfjujcuxL0Iyq/z
zjvPbW9RjPNXLiytdXrEEUc4Q4cOjaCGiTROUf0zcWxz5swJXR/ll9Y66xpb
qbm8frL9LvjnP/+ZcM/97LPPlihj10nWPOaggsbJiqW859eWLrd5tpR33R5/
/vz5acved999ppz6E/3W/LHr12tr2bJl6LooR4S3rz7VMTQPVWtlpXP44Yeb
Y2iMhZ9s63rNNdckXBO/tYSPPvpo85rm7foJ85lb3jka+vcdtyivhR87Z2HQ
oEElXivktfGTqd37CXO9gpbNNU6eMmWKmTMS5eZ3/bJBnAwAqYX5XYzz3jjf
9yIo3zSvXm1NYxlLQ964Ysvjpbz42lf5pjW/2W/zjrPUGk/e19Ktk/T3v//d
3U/xwsqVK0uUUXyvXGmatx1U0Dh5zZo1JT6jbNaDykT9eXXr1nWOPPLIlGs+
W/rMlA9C6wv4ufbaa926al3vsJSD2Pt+b7/99hJl9O9E3/2Z8pkpr5rqqjyP
UdbVu06YnqsmUxxlc0Wl+g0J85lbdt10bfvvv3/g+mYrymvhR3OHlZNEazUl
K+S18ZOp3fsJc72Cls01Tk7OSxjFFtV9EnEyAKQW5ncxznvjfN+LoPzS3Djb
1vRcvjRQjKd/F3Fsyncflu0zzHbT2sR+9B2htWNsuVRjXJYtW+Y89dRToT/D
IHGyaAy9t75al6uYKZbyfu+Gpb5f7/vVuKFkytd4zjnnBO7Xi7KuGnes5yJ2
P+UXSKZ8APb1bNeP9qN+O3vcQw89NLLjppLPa5GstF0bP2GuV9CyucbJyiU5
YsSISDeNjYgCcTIApBbmdzGue2PJ970Iyi+taWzbWvJ6QwhGfRlxfBdoXTpv
OeUzCkr9g8onlEqYOFn5rb31iGod7Lg8/PDDbl3D5uZW3jSbq1jbzjvvHHrO
axjZ1PX111939/FbI0keeOABt0yUa/R6c2ppfbk45ftaJCtt18ZPmOsVtCzz
kwGgfArzuxjXvbHk814E5Zty+JSWfsJipX/Lih3TbTfccIP7OR900EEJr6WK
Z+2YFbsFHVeq+ELjSU8++eSUZcLEycr15K2HXfsmDJ3Pr79vwYIFJu+RntGo
71BrAKXyySefmLxYyp2ocTxTp071LTd+/Hi3rpp/Goa3r0+bzhOW5uTMmDHD
9PFfddVVTo8ePVKWzaau3t+HVLnHtQ6bLTNv3ryE18J85sk0B9get3fv3oH3
y0YU18KP5i7oPQ8fPtysI6WcWn4KcW38BG33fsJcr6BliZMBoHwK87sY172x
5PNeBOWbHRehsbXJccyiRYsKVKuy580333T/TQedA62c+3YfzWfUml5B2HEx
jz76aMoyYeLkt99+OyFe0XxOv9xEqSiXm+ZW+42NVF4yzXGxx1b+bj/qR7zp
ppvMGnyZyioO8tb3+++/D1zX5LWiNaYzLOWe0trkdsx8165dU5bNpq7edbr8
crfpOYnNUa7/6v+9gn7mfjQ3w+43bNiwwPtlI4pr4UftWdfHzhFOdX0KcW2S
hWn3fsJcr6BliZMBoHzK5f7KTzb3xpLPexGUb3Zco3K2eym22XfffQtUq/Q0
v/+EE06IZVOu2jiE/S6w62vZTfm8MlHOfeVYUEyqGGDdunUpy4aJk0XzP7z1
Ue7dTBTX2/VvFJekon49lQnS3saMGWPK1qtXL2055Vi0dZ08eXLG41re+FHb
8uXLA++bzK577ZejPNu6as66915eMXky73roqcYjhfnMvfS5az+1seTfR8V8
GlOs/lI9I/71119DHTtZlNfCT+PGjc1x083tL8S18RO03SdLd72yLVtW42Tl
g/Ouxx0kTo66zQNAscv2/spPtnFymN82IBcHHHCAaWtan0T5cDTG7/TTTzd/
N3r06EJXz1ec+a5btWoVS53DfhfcdtttCfW68MILU5ZdvXq188wzzyTMBcm0
lnLYOFk5rr3rKOu7Sf1cfv1h+ruXXnrJadq0qSmrcdrp+s00llTlguRQU7yt
shdccEHact5cE4MHD854XNH6tN41iJQLOlvffPON+zn55SjPtq76TbJlU80N
euSRRzI+zwjzmVt6H/bzUf9msuT59B07dgx87GRRXgs/eoZkY6Jvv/02ZblC
XBs/Qdu9V6brlW3Zshonaz6Ct/0+8cQTGfeJss0DQGmQzf1VKtnEyWF+r4Bc
Jc+BtZuejRcrzVnINOch2y2K9aP9BP0u0Hhm1SM5x7Tu6fX8ok+fPmb9Os0r
P/vss824eW8fiN00tjSdsHGy3cebV0mb5pNo/q1yO9x///3mz8obrtdq1aqV
cj0kS/Gz8jOp/Msvv5yxDnbNnUxjcPU9WrlyZVM23TxtWwet7afxBMmfuZ4V
ab3usB588EFzjGbNmmUsG6auAwcOdOt3xRVX+JZR7mdbxq89h/3MrSeffNI9
7uOPP17idY198n5+WmcurDiuhR8b36TKtWXl+9qkErTde2W6XtmWLYtxsvoj
2rdvn9DmtF5aprlHUbR5AChNwvwuZpJNnBzm9wrIldq77uW9v/P//ve/C12t
Msf7XdCuXbuU5WyMmctWv379jPMes4mTRc8oFKNvv/32Kc+vGF/rBqfLwWDZ
XE3bbrutWVMnHe+aO+pvzET93SqrfdL16eq5Q6bPVP31YdgxGf369QtUPmhd
27Zt69YpVYyrvld7Hfxyp4X5zL001kL7aTy0X95pxbfK6+H93ILOqbfiuBbp
ztOtW7eMZfN5bfyEbfdWpuuVbdmyFCerzeo3L117q1KlimkDqfbPtc0DQGkT
9Hcxk6D3xl5hfq+AKCg/7xtvvGH6WNKt642yI9s42VKbUSygNeyUa1DjQjXP
c9asWea1oJRzWXUIMnbGrrmj5wBBaG0smwtNcVG+KP6x995Bc5RHVVfvvPZU
z2bDfOaWja0V3+kcqfz888/OlClTnBYtWjgNGjQIXf98sXMUgqzLlM9r4yds
u5eg1ytsWSlLcXIUSkubB4CoFOr+KuzvFQBkI9c4OSr2uaDmY2di19y56KKL
Ah9/zpw55vtUec1++OGHXKoamNaEUj3D5CiXKOqqZxX2ut5yyy2+ZcJ85qLf
w+bNm5t9NL4+CJXXGONipDwM6kvX+1m6dGmgffJ1bfyEbfdhrlc215Y42V8x
t3kAiFq+76+y+b0CgGx442R97xSC+l01plF1+OCDD8z85nTffXbNnUxznpPZ
XMEao6Oc4HG78847zfm0bsGqVavMeZVLN4hc66p8b/a6+q2LHPYzF805V/k2
bdpkHM8vyv+ruUtB1gYuhIkTJ5r307Bhw1D7xX1tUgnb7sNcr7DXVrw5BomT
/6vY2zwAxCGf91fZ/F4BQDa8cbLWspk2bVrev3eWLFni1kH5E1u2bJnye1bz
AWwfYDZrAGgdJOWC0nzUoDFrtnQO1VNrxSjGUX72MHKpq8Z92mvqN/49zGcu
uv9XWa3vFeQ3UGO6VfeHHnooVL3zqX///uY9XXzxxaH3jfPa+Anb7sNcr7DX
VjRXWm2GOHmr0tDmASAu+bi/yub3CgCy5Y2T7abcXMpJoy1MHuRsKbe37dvU
+sx+681akyZNMuWaNGmS9fmUL1kxisYdR5U32Y/G1Np4KNt752zqumLFCvda
Kj73E/QzV26Mq666yvSRBVkfx+ratavJ117MNI9U7z/besZ1bfwEbfdhrleY
sorn7XeCNu9aXcTJ/5+9+4Caojr/OB6U2BGNWCNYIzaComKJJYlGRBBLEBXs
hWiUWFFR7DEWNIpgRzFGBDvE3hsqBBWDBhDEhiCiFMWCitz/+c3/3MndYWZ3
dnfK7r7fzzlzxHdnZ+7O3p2ZZ+69z/1/9VDnASBNad1fVXovAgDV0Pyxyg8U
tXz//feZlEPtm2+++WbJZ5A6T+q+XHPvVEPPBxRzpHm+1bPOV1991etzXY1y
y6qxtm5bcZQ4x1zz4bRu3drrm91IdP1Wfk49E1qwYEHF20nruwmKW+/L+b7K
WVd1pNh5QnMOAwCQxv1Vo96LAECSbF7Ft956K++i1DSNjdZcVOStDzds2DC/
T3zWKvluqPcAAAAALI3p3W233cy4cePMO++848UK3bp1y7tYqDPqZ96zZ09v
zm/p3r2713dYc0vUIuo9AAAAgCiHHnqoP/6xU6dOplWrVvTxRNnsnMWau0J5
rhUjn3LKKXkXKxL1HgAAAECU8ePHe/M6a1xKjx49vDEqQCXU11m5pjt27GgG
DhyYd3GKot4DAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAszZgxw9x0003mySefzLsoSNCwYcNM
//79zb///e+8ixKKelc/JkyYYK666irzxhtv5F2Uqi1atMircwMHDjRnnXWW
+fvf/25ee+21qrf74Ycfms8++yyBEjZNr7zySt5FSBTnt/rWSOc8AEB5Jk6c
aC699FLTsWNH06xZM/Ozn/3MnHvuuXkXq6ZNnjzZnHfeeaZz585m8803Nyuv
vLJZffXVzXbbbWcOPPBA7/j961//MqNGjTKbbbaZeeqpp3Irq8qh71TLsssu
az7++OPcyuKi3tWHOXPmmOHDh5sjjzzSrLPOOn5duvPOO/MuWlWeffZZs9FG
G3l1b4UVVvA/l5Y///nPFW/3iSeeMKuuuqoXF6F877//vllmmWXMPvvsYz7/
/PNM9vnPf/7TO48ntegZCee3+tWo5zwAQPn++Mc/mpVWWqngPpHrebgXX3zR
bL/99gXHqlWrVmannXYynTp1MhtuuGHBa3Z59dVXcyvzJZdcUlCW5557Lrey
uKh39UH151e/+pVZccUVC76rer5nVHvlcsstZ1q0aGH++9//mu+//94ccsgh
/mdTXFPJ86TLLrvMLL300uaiiy5KodRNx+jRo82aa67pPWNUW2zarrjiitDz
tpbmzZv7ca5d9B1riXrPe++9x/mtjjXiOQ8AULlvvvnGrL322lzPI8ybN88c
ccQRBdfMrl27hvbRVDvVaqutVnDP/fXXX+dQ6v+nGF33eiqL4vgff/wx8zIs
XrzYW4Kod/VjypQpDXPP2L59e+8zqD+Ipd+o2gL1d7Uh/fDDD7G3p/d2797d
e6/6cKN606ZN886jG2ywgfnggw9S3deFF17o1+tDDz3Ue44ye/Zs/1x5wgkn
FNT9Z555xvv7d999Z2bOnGnuvfdery+Rff3tt9/2Xuf8Vt8a6ZzXCKLuI1Aa
xw6o3m9/+1uu5yHUnrHlllv6x2b55Zc3999/f9H3aBywbUvQc+m8qW1M8Xse
MbLoPvMf//hH6GvUu/rRsmXLur9nfPfdd/3PcNpppxW8prjm4Ycf9mKkchx0
0EHe9tQmjeRovMpSSy3lnX/TfNaosen6/g477LDQ16PiZNf8+fPNeuut573u
5oHg/FbfGuGc1yiK3UegOI4dUD31G+Z6Xkj5eNZff33/uCj2HTt2bKz32jYK
jVduyjRGW8fh+uuvD32delc/bBxQz/eMGjdsP8MFF1xQ9fZGjBjhbWuTTTYx
CxYsqL6AKHDMMcekfh79y1/+4u0jqo93nDhZbrjhBu91jc+xOL/Vt0Y45zWC
UvcRiMaxA5LB9bzQwoULzbbbbltwf6R74rimTp3qveevf/1riqWsbZMmTfJy
GhEnN4ZGuGc89thjE4uTP/30U3+MxT333JNMAVHgo48+8vJ66Rjfcccdqezj
uOOOM7/+9a8jX48bJ2tcsl5381pzfqtvjXDOq3dx7iMQjmMHJIfreaHgvdHh
hx9e9jZ+8YtfmEceeSSF0tU+xRBuWzxxcv1rhHtGtUsmFScrR4G207p1a/PT
Tz8lU0AsQTmxdJw1p4ByRSTt9ddf95YoceNk0fwCygtncX6rb41wzqtnce8j
sCSOHZqKhx56yBv3FrZoXP64ceMiXz/qqKMKtnX66acXvH755Zf7r4Vdzx99
9FHv72ussYaXG3bvvff28tRo3tFi1H+tT58+3pwYmnNlrbXW8sZpaX7SqDGy
X3zxhRk8eLCXT1rP9+Xuu+/2cp6qPWGXXXbxcqZUu5843nzzzYIcp/q38uKW
65133sk1h5elz6Pv/pe//KV5/vnnI9fT/JCKI9SHVHNIbbrppubggw/25l7W
PFhxjR8/3qy77roF95Y6X9t6d/755/vr5l3v4tK+b775Zq/8bdu29fIlb7PN
NubEE0/0yluM7u2vueYa772ai0jPT7bYYgsv99OgQYO8vgtRNLb8yiuv9HJP
6bPJY4895h0THWP9NjQGXjl7v/zyy4L3qmzBc4JbVo3/DDtvRI0tiHPPqNxG
AwYMMHvttZf3nf/85z/3chfr9zt06NCixymOSo6lew7Vb8B+Bo17dT/3Lbfc
ErscL730kr+dk046KdZ71MdE80aF9c/WcVN/3aefftq7v6kVtVBm27ddy9/+
9rfU9hOlnDg5KKnzW1rntkrP+ZX+zjWWSWXeeeedvfOn6LnCddddZzp06ODl
mNZx2X///b08WpbObZpnS3NLaMxwmzZtvPuEqOtyNedNV9w4uZGuPUleN/T9
XHzxxV5/DeXIE/W70L2pvkPVG32ma6+9don3lnMfYWVx75lU3ar0NxSnvDon
l3Pskrr3y+rzBWMBSfM3iNr2n//8Z4n+v8qhacfkz5o1yzsP2b5pdtljjz28
OQBdDzzwgPf71euqs5o30gpez1W/3e25yymnnBJZXtVvzSes693uu+/u5QG1
+Za16Bzt1vEHH3zQ7Lvvvl557Do6h4bt/+qrr654P+VQHlx3v25e3Hoxffp0
b34LnVvi3OOpT6OOn/ro6J5N51ndl9h8ZLo/iat3797e8Q/WWf1Ni+ZGtfKq
d+Vwf4O63qsdUuPPdc6329d9R1ibonL6KGev1lE+ZX1GjYe0f7PtkY8//njB
+/R97LbbbgXPa44//nh/LGXYou/anXNW8U2PHj0K1rnqqqv813UfqvuT4Fxn
9913X+hxKHXPqD5e9vm1jpPuz0aOHGm6dOniv+/MM8+s6Duo5lgq756te+5c
PZrTzf5dy6mnnhq7LJpj2W6nVJ8R3efqnGbX1zlY521RjKC6pPyA9nWdy/PO
uVJLZVYM7n6/pZ6XJS3JOLmS81ta57ZKz/mV/M41RlKxnft527Vr58VRW2+9
dejxUFynuqbfs36rYeso1tJ81e5nqva86YoTJzfatSeJ64a+h+C9h+IuxZM6
VmHfg/Lpucq5j6jkeyj33jPJulXJb6ic8u6www6xj12S935ZfT43Fqjku0fj
0fMrt+4ot0mQ5ux065Ge2YXR83i9rnF6Lvd6rmeO+q/OCfrd3H777Uuc8/T8
KUhxt17TczbFaZbmyXCvc+5vVM+29Dt0t63nYMpzqmfOq6yyiv93PcOrdD9x
TZw4cYnfZDn3RbVCsYG+U/c6H/VZdP+rdg29fuuttxa8pvV1XdCz/nK5ecLj
9LvOst7Fpf6Y9renZ6vuc0ndN7llU65kl+In+/xK9x16vmqpL0jPnj399+oZ
rnKSW+ecc475/e9/H3rt1Xeqe/ejjz7a/97sonsXd/4HxRTuPGXu/Y6lZ97u
+aWSOFnHRc+g9ZrmlnX7x+o13RPb96oPTLmqOZYu9zodvC+LS8dUbV52O6Xm
WrY5/dy2bN2HqI1W13T9v+73VT9t7Knt56nWyuxeB+LmUkxKUnFyJee3tM5t
lZ7zK/2dK/ZSbOVeE7SobVTtiWpP1v252uDc+9vf/OY3fs5ztWvpPKD2Ib3P
ruM+X0jqvGmVipMb8doj1V43dP+hWMbWebuozqiOaK555b3beOON/ddU3rBz
aZz7iCzuPZOqW5X+hiq5Vy517NK498vy81X63aMxqQ7Z71v1LEjnLPU1sOuo
n0IY9Q3R68H+Su71XL8NXbdcemar86ldR+c5l/o8qB7rvepvHKRrpFv/dd10
6fmX+3rfvn29v6vfn8YGK65XGardTym6F3Tfr+dQ9czmlil2j+f2aww7pqp7
lRyHcuPkPOpdMWrLsJ9B/TOCdO/h/uZ69epV8Jp9nqrntGHjKrV9nf/t+7Ve
sH+r29aiz3jbbbct8fmD/av0zN6l61yx+x3R2M+w+x1XsXvGMWPGFJTz22+/
LXj95JNP9l8vtx9XUsdSkoiT1U5jt6F7jFJ0vraf2R7nbt26eeNuFWPqObql
e3677Tlz5lRUviTUWpnd64PaJrKUVJxc7vktzXNbpef8an/nQ4YMKSiz+kkG
+wdoHIO7jp7LBPfjtjHpnjwoifOmFDvnNfq1J4nrhtpb3WOgNmJ3/P7kyZML
Xh82bNgS2yh1H5HVvadVbd2q9jdUTnlLHbs07v2y/HxpxwOoLy+88ELB963+
OEHq12JfDzu36tmRnv/p/BjkXs91XxDG7Y985JFHFrx2xBFHeH/X2IAwek7o
lj/Y50LnefvahhtuGDmeoNr9lBL8jYa13dcT9cfS87hi93i673Q/b/C5uvrL
6LlvucqNk/Ood8VoDI99n55NhlFfNrvOjTfe6P9dec7t34Pz9LrU580tXzAG
OOCAA/zXop6Hqu3A3YaehbnUB6nU/Y7bPlpJnKznMXp2rNd07/TDDz8UvK77
f/tefWflSOpYShJxstpK7DbizI+uOqt7VS32t6j+YYqPNM7Z5fYL+uSTTyoq
XxJqrcxuH3A3JshCUnFyuee3NM9tlZ7zq/2du+cqPW8Ja8NVLjT3c82dO3eJ
ddTu7q7jxl6SxHlTip3zGv3ak8R1w/ZL0aJ7qzBurK2xYkGl7iOyuve0qq1b
1f6GyilvqWOXxr1flp8v7XgA9ceOLY46/5199tn+67q3CfZhsW2lYf2H4uTl
1Jh6u05wPkv1nbKvafxL2OLWV43Fd7n3QYcddljkMah2P6W4fY206Ll10vR8
TcfP5oAoRvOi6D4qOB6jHG7fqLB7PPVjdD+zjr/bLqTn08rdUa5y4+Q86l0x
Gldj7+eK5TN+9dVXvVxprq222srfp9pQoqgtReOG7Lp6Vu1yn31pTGwU5auw
66mvrCuLOFn0XF39znQ8XDp27hiucufCTepYShJxsvuMOmwfUYL3/2H13W1/
Cd77W8oz8bvf/c5r105bUmUO0jHcc889S/ZZt9xrm96XpaTzeAVFnd/SPLdV
c86v5nfuxmZqDw3z2muvFZTtm2++WWKd999/v2Adt71PkjhvSrFzXqNfe5K4
bijuta/vuuuuoduwfRy1qP4ElbqPyOre00qiblXzGyqnvKWOXVr3fll9vrTj
AdQf9cm337f63bv3JKrPbm4HLYqLLdVP9cVR/xp3rIoV53quuM6uo9wR7r7t
8yPl6tBzqVJLMGeO+9sI5ulOcj/FKH51j5+W4LifJCh3pN2+m9MzjK5PWk/j
sSrN2VcqTtb1UrkB3c+t5wU33XRTVfPdJBUnp1nvoui3ZY9bObGQ6Hi64+dK
9fVx636wH2/ca7Jy+dn11AfJzWOaVZwcpPxLOgcFr1Xud1hKksdSkoiT1Q+s
kuuucs67xyHYH03s+CyN64tiv0+NMUxbUmUOsjliwtqPwrjtUlFtB2lJO04O
O7+lfa1L8pxfzu88TpwcbCsOi5OD7UTKo+1K4rwpUee8pnDtySpOtvO+aSk3
Ts7q3tOVVN1ylfMbKqe8pe7B0rr3y+LzpX2ORH3SM1M35tHYAkvzBuhvbt5r
5Xi3ND4i6jwk1cQr7nXtjDPOqOizxfltJLGfYpSP3v0Na6lkPqhSdI1fZ511
vPwOYc8sXHoepzx+Bx10UMX7KxUni3KGhOWh1Pmn0rw5acfJadaHt956y9+2
cneU49133y04huqnW4xymLrrqx5aca/JTz75ZME23Ha6rONkjSNSG5n66Gqc
lvpkuGNYy4mTkzyWkkScrLpmt6E8Q3G58xaofTRIz8FsTqxisaDyyei36s5X
kJakyhyke2PVOc0rFYfNP6lFbQhZyiNOTvtaJ9We8yv5nddanFzsvClR57ym
cO2phzg5q3tPV1J1Syr5DSUZJ0sa935ZfL4szpGoT6pXtm4ov4XouY9iYuWJ
1DnWze/wyiuveOsoB4v+P2ysu1QTr9x7773+38PG+MQR57eRxH5K0Rg891yh
PmD1Lk6cLMo9qPkjgudLPbOrZM6XtOPkNOuDu23l9S2Hcge4x095PYuxz7js
4s4jEfea7OaW0nnAHROUZZysPL6qb3p+3q9fP7/PizsmqZw4OcljKUnEye74
P8WRcSjPon32HXUe1v2KfT3unMxpqqUyu/fbdt7drOQRJ2dxrZNKz/mV/s5r
LU4udt6UqHNeU7j21EOcnNW9pyupulXpbyjpOFmSvvfL4vNldY5E/XGfUan+
ffDBB+ahhx7y/t/2w1NOOLuO8gsqV7rqe7F50KqJV9wcY+pPFzwfxBHnt5HE
fkoJzjl3zz33JL6PrMWNk0XnMl3bgs8LVNc0LrIcacfJadaH5557ruCzz58/
P/Z7FV+4x67UtUx9nOy6Gk/hintN1vdq1wvmlsoiTla/CDf/htvXRSqNk5M8
lpJEnKy6bLcRNxeo7c+jReNfwmi+G7tO3vMnSy2VWd+V3Y/m2MxSHnFyFtc6
q5xzfrW/81qLk4udNyXqnNcUrj31ECdnde/pqrZuVfsbSiNOlqTu/bL6fFme
I1Ff7DhjWz80bsuOD7M5sNWXzb7esmVLL8eb/q35xKNUE68Er1nBuS/C6Fzj
5siK89tIYj+lKK+Au49y57AR9VUJG0usPijKi3P55Zd7zzR0PYyiewWdmzSm
Q7n5dU6oVKk4WXPC61mLS3lrg8div/32K2u/acfJadYHPX9yt638o8V89dVX
3jMpm5vVnbdPORuL0bNWu65yfwTLG+earN92VByRRZzsXvvCcoBWGidLUsdS
koiTR40aVXB9jsON86Jy6Ov3ZdfRb9KlWGH06NHenLsaY6W6lrZqyxykcUM6
56kNS3ODKP9XXG6seuKJJ5b1OaqVR5yc9rWu0nN+tb/zWouTi503Jeqc1xSu
PfUQJ2d17xl8fzV1q9rfUJJxchr3fll9viziAdQv99xjF+VEdrnzt2vRHGNh
OVisauIVxe52jJoW5QoLjgt0qT+G1nPztcb5bSSxn1KeffbZguOm60Cx4xa2
Tz1/U66uoLvuussbz2i3rZydYfQ5dW105zeMWjeOUnGycs9G9TXo37+//16N
YSmHe45254V35V3voii/hbZnt61nrMF7MXfdvfbay3tmbPsWBecALZavTWPP
7XrBuRjjXpPdnLnBeUDd+x2N8wzSXBBu7pdK4mQ3x2rY3Avu3EHlxslJHUtJ
Ik5WvOeWR/11SnHnmwub217fgc21r/8G5+dQHhTNcWDzT6jPUNqqLXOQzq36
DPY3W85n0O+rnPuhJAXngM0iTk77WlfpOb/a33mtxcnFzpsSdc5rCteeJK4b
ScfJwfuIrO49XdXWrWp/Q5XGyWH3YGnc+2X1+bKIB1C/9LzHHTemJdje6OY9
0VJqDiLNM2LXVY7TMO7vPvjsNfjMXfGgnou6dB7Xb0RxZDBXq+aNtO8tlgu+
2v3EofFv7j6inqW6lMvQ3k8Vm7PQjgeKMyednQO+3DFKLl1HdRzsZwnLf6lz
peYRC7ueqg+N7Yez0UYblbVv288h6vonede7Yty5aLQon3xw7lj1c1N91evu
s5GJEycWzFsdNc+ixoMpz6jW2XTTTb3vy+VekzXPQhjdM9qcBB06dFjidTfG
sDkNXJoj0f2cgwYNCt2P6qFdJ9jH1p1PTddml65nbhnKHUuU1LEU5cWx2yn2
Oy1F+SDsdkrNm/H1118XPKtSzBuksb9Rddxl53HRM7coun9Vf2i1AeheZ8GC
BfE/WAplDtJ3o/eobTwuW/f0G456LqHtqX4rTtDvMil2jk67qD9BXNWc39I8
t1V6zq/2d+725Y+KkzVW0v3cmsM7SPMluusUi5MrPW9KsXNeo197krhuuDFR
VJzctWvXovcJpe4jsrr3tKqtW9X+hsopb6ljl8a9X5afL4t4APVL5z5bN8Lm
b58xY0ZBLD1hwoSi22vXrp2/blRdcs9nwTyvum65uba16BysOq+8N8cee6zX
B0h/V9674LXP3bbaUaNUu584lOPa/a3r96X23bD2Ev3twQcf9Oc7VD/tYu0q
6kOt9Yo9h7R0H691w+Zij2vmzJkFxyrs/trOB9ujR48lyq7zms2FGOdZq8u9
nui5vPqF6dqs58c2P2He9a4YHTu3D5sWXVN03VM/Nx0vW0/0vQYFn1XpviLI
ziWomCSsPcM9hnpeqnsgl76fAw44wHtdx+Hpp59eYhvBuX1Ur7SdMWPGmD/9
6U8Fz1HsMdYYDve+KTjfiOIwl9v3QYv61b799tve/ZsbK2jRXJJqM1KOmdmz
Z8f6LpI4luLOtxj2ncXl5vK65ppriq6rONquGzWeWcfCrhP1XM7mstX3FZwv
1vXII48UHKty2++TLHOQxlrae/jg/UwUfVZbR6OuDcE2yKjncpVwc35rUb/B
uKo5v6V5bqv0nF/t71zz+drXw3IbiTtvohY7nsylOYPddYJzCCdx3ix1zmv0
a08S1w23bVt5osK0b9/eXyfsXqfUfURW955h5amkblX7GyqnvKWOXRr3fll+
viziAdQvjXO19SI4vsCyfQx33HHHyO3onKY4z61neobkzg+u34/Glbn1Udc4
nVvdOdbUN0/5391tBRe11apuW3pmpbkL3PfpeqBnt1HzBVeyn3JpjPHqq69e
sE09G9M1SuM8rr76au/f9r5b58tS87ToONprX9h1K8jenxUbV16M2oSCfQb1
TCV4f2rPlfY6Zft4qw1J8bw9n8XpX+q69dZbC/atOqNnN5pDT9vKs97FpXsC
N3982KLzelQOCfc+QZ9PfX90fNUWZ/Ptqe6oT2oY9zpnrwF6FqP+I5rb2/aN
1baV4y/Me++9t0RuDndRX5Pg9Uvf07Bhw7z3a/ybzXFgF93buPXInds9uKhN
RnMZBf+u77Kc8QTVHEt9P27+LS36XpWnL6xfZymK3Wyd+8Mf/lB0XfW3tfuM
it/c7zlqLg611+h19WsrRv2Sg3WmXEmVOcjG8FF5wcKoP6jdzy233BK6zuDB
gws+c7XtBrqfVLumjSXcRfNEqxyTJ0+OnNcvqetqWue2Ss/51fzO58yZU9C+
pUX3x+7vTzk83DYALYoDdS2zdD5SO567jsasu+tUe96Mc85L8/uRvK891V43
9Puw/V/sontVNx5TDhb3dd0fac4WV7H7CD1PqPR7qOTeU6qtW5X+hjSWuNzy
ljp2adz7Zfn5JIt4APVJ12HVdT2vjmq/tPlm7HkrTDC/s7tofIq4bTDBRc+h
XC+//LJ3LXT7/WjRcynNm+bOta7PoDw4UdvWc84rrrgitNzl7KdSevaka4H7
TDm46Fyo332c51R2DhWdE0r1C3TnZKnk9634OPi8N3h9tXSu1LNp9SW1+9T1
075fc4qpLatcun7vscceBfvVvYauv3nWu3Lp3k3PnIJjHXRN1/MSOy4sip4n
61lVsB6prOqDpPuJKO41WfGYO2bULpq3VvdUxejeyO0rbMt/4403eq+rP7Ku
NXoOrvOFzQnjXkfDFp1/ROcg3Ze5x1/3/7qf1bbU99c+19WifAlxnhUlcSzV
DhSsF8FFz53LpT4meq/qRbH2XXdMdNRn1nzq9nwSdU9gn7OHjflyqX0jeF4t
t/4nVeagvn37eu8pp33CnkPUXuU+H3NNmzbNy1lpv4+w/BDlUD/TYvXFLsqj
GSbJ81sa57ZKz/mV/s7Vtzx4/nR/u8o96vbRCLsX0O9Y99FR1zWtY8euV3Pe
jHvOS/P7sfK89kil1w33OVtwsf3ti/3G3PNxsfsIV1b3ntVekyv5DemZWyXl
LXXs0rj3y/LzWVnEA6hPmht5/Pjxka/rXKDn3nHvYZKkPhSK01X/NW6+nFxY
tbYfPe/WtV45KfTcWv2PNBZO+yunLUp5rvXbjdO3x47j0rOQtKkvpI3z9YxV
10YdU/W9VP/9auicqeOk58bqX1Mq10+10qwP+q51PlZdUD+ics+9umapf6Du
9bSdOH2OgzlDdPx0jdNn1LNqxQfl7l/fhdrK3PLrWJUz/0gUbUN1V7mOgjk1
9JraE1Svqt1XJccyafqtKH+OvhvFf5XS92m/47BxgKJzuB1LGCePlO5Hnn/+
ee8euVTO20rEKXMY3T/qPXHnkLLPFhWLB++Lg/SZNaemxgY2oiTPbdWe87P6
nVcqyfNmXI127Qm+N83rRinl3EekfU+YVN3K6jdU7Nilee+Xxzkiq7gDQDrs
c72LL7645Lp2TpaoPBFoGuLm1kQ+lPdBMZzybiq/YiX0zM1+x1Htk5oTSq9r
P+XcI2+99dZeHUpanDIHqS+r+tLoPXFiWd23qfxav9Tcn4CL8ybSQt0CgOSp
PciONVJ/HPWZKnbvZ/vylBrzjMbGNbn22bz06hccNVawGDe/Z9Sc6jYvj/pK
6pm59hWWz9ulfqrqE1lqXuNKxClzkHLta/24uVOV/0HrKydq2v1Q0Fg4byIt
1C0ASJ7mrbDnVo3D2mWXXSLvqZWPxLa7lJs7C43FvSZrDgTUJs33prFRGndb
Kn4NsmO1NAYrahyHnVNScz3pGZryxRSjMR4qj/JbpSFOmYPsXDdxxoIrxte6
yrNQybMHNG2cN5EW6hYAJE/jJGx7snLvhc1HammMi9bbbLPNMiwhatH+++/v
X5OrmccI6Rs+fLgXN2p8hXL7xjFr1iz/+w2b389S32Ybl8aJfZXPVrm80xC3
zEEaK633FCuX8nSdeuqpXju45hACKsF5E2mhbgFAOtSmrHwYpdqbdJ+oc7By
RqLpUqzlzquh+Rk0xhO1S/Mj6flW3BhP43TdfiZR1KaqOYXyyFcWFLfMLtVl
5VNV3l3lO42iHDitW7cumb8diMJ5E2mhbgFA/mwO3eA8gmgaNJZdc4Fofobg
/Aj6W+fOnc3QoUPzLiYSorHHmuvJnf+11pVbZs0ZY/uNA2ngvIm0ULcAID8a
a7jbbrt5cy4oL7+dtw5Nl+Z/veuuuyIXzZcD1CqNM+nZs6c3/7x0797dm5OT
eos0cd5EWqhbAJCPQw891IuNL7jgAtOpUyfTqlUrM3Xq1LyLBQAVsfMra84s
5blWjHzKKafkXSwAAADUkfHjx5tdd93VG5fXo0eP2PPUA0CtUr9s5cXu2LGj
GThwYN7FAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAQAJmzJhhbrnlFjNq1KjU9/Xtt9+aN954w9x5553m3HPPNRdeeKG59dZb
zSeffJL6vrOQ5bEEAAAAACRHsapi1G222cY0a9bM/OxnPzN/+ctfUt3n0KFD
TcuWLc3yyy9vOnTo4P1X+9Wy1FJLmdNPPz3V/aclj2MJAAAAAEjWDjvsYFq0
aOHHqWnGdj/99JPZb7/9vH1sv/32ZubMmd7fv/nmG9O1a9eCMrz33nuplCFN
WR5LAAAAAEB6Fi5caDbccMPUY7shQ4Z422/VqtUS/asVK//617/2yzBlypRU
ypC2rI4lAAAAACBd++yzT6qx3VdffWXWXHNNb/tHHnlk6Dpz5swxV199tbn3
3nsT33+W0j6WAAAAAID0/fGPf0w1tlPsa7evWLiRpX0sAQAAAADpSzu2U34r
u/3bb7898e3XEuJkAAAAAKh/acd2Bx54oL/9O+64I/Ht1xLiZAAAAACoDwsW
LDCDBg0yBxxwgJdLa/XVVzd77LGHue+++2LHdpoXuE+fPqZjx45mhRVWMGut
tZb57W9/a/7+97+bH3/8sWDdTz/91BxyyCHestpqq/nb33jjjf2/26VHjx6m
S5cuZscdd/S2edhhh4Xu/7///a+5+OKLvZxfhx56qPc35cY+6qijTJs2bczP
f/5z07ZtW3PttdcWPRblfI60jmUx3333nRkwYIDZa6+9zPrrr+99Lo3v3mWX
Xbx5tYrR/FR6LrHJJpuYZZdd1my66abm4IMPNv379zfnnXdeReUBAAAAgEbz
/vvvm3bt2nmx20YbbWT69etnLr30UrPlllsWzGNULLYbPHiwWXnllc2KK65o
dt99d7PddtuZ5s2b++/bYost/LmeRP9u376993d3+4pJFcMpL3Tr1q3NGmus
YZZeeumCdY444oiCfasNerPNNitYR7HfY4895pUp+Bm0nHXWWYl8jjSOZTGT
Jk3yYmO9X88DrrnmGjNy5EjvOYLd7plnnhn6Xh0nfZZVV13VDBw40Dz99NNe
2VZaaSXvfTvttFPZ5QEAAACARjNhwgS/Pbdz587myy+/9F9btGiR6d69e8nY
7p///Kf3muLe6dOn+39/++23vfZU+17leg6jNk27zs0337zE64o9FTPbdY47
7riC1++//34v/9cvfvGLgrIqvlbMetlll5kbbrjBa6u2ry2zzDLm448/TvRz
JHEsi1Fbtj1W+mzz5s0reM3G51rGjRtX8N5Zs2b58zffeuutBa8988wzplmz
ZqZDhw5llQcAAAAAGpH66ip2Upvi7Nmzl3h9/vz5XkwZFdupj/Iqq6zixVnv
vPPOEu9XH2c3NnziiSeWWKdUnCzufEonnHBC6DrHH398wb569+5tvv/+e//1
yZMnF7w+bNiwRD9HtceylDFjxvjvVTm//fbbgtdPPvlk//VgH+oRI0b4r4V9
PvVvV1s5AAAAADRl7nxMUX11ZbfddouM7dQHWn/XWN4warN148uw/cSJkw86
6CB/nT//+c+h67h5s3fYYYfQdTRW2K5zySWXJPY5kjiWpWiste2Drs/xww8/
FLyudvOovunqn21fO+aYY8zixYsLXlffbbW3AwAAAEBTpvGoNnZSnBSlWO4p
5cWyr22wwQahixtfqs01KKk4WXGvXWfXXXcNXWfvvfcO/SzVfo4kjmUct912
mzn66KPNq6++WvD3n376ydue3bZydbnGjh1bUH7lQpszZ47/unKDPfXUU2WX
BwAAAAAahdoT7XhVLRpbGyUqtlNsZds3t9lmG6+dstRy6qmnLrH9LOPksM9S
7edI4lhWSnnDlYsrGMdrLLRL46OVI81dR2Opb7rpJi/GBgAAAICmTrmx3JhJ
eZ6iRMV2mmPI/v2MM86ouCx5x8nVfo4kjmW5pk6d6uUz09xO6667rjdP1Cmn
nBIZJ8vrr78emv9bzwbU3gwAAAAATZnmBHJjpfHjx0euGxXbuWNy1Z+5UnnH
ydV+jiSOZTk0p5PmTFYuL807ZXOVueOTw+JkUR7szTfffIlYWe3p//jHPyoq
DwAAAAA0gv/85z8FcdKDDz4YuW5UbPfCCy/4f1eO52BeqbjyjpOr/RxJHMs4
1D+8V69e/vuVw9oVJ04WxdU6Vpoj2i234u4HHnigrDIBAAAAQKP46quvCmKk
888/P3LdqNgumAP6uuuuK7nfgw8+2Osj7Mo7Tq72cyRxLONw4+CwOZyLxcmT
Jk0yDz30UMHfPvnkEy/fl1v2/fbbr6wyAQAAAEAjcedIUk6nBQsWhK7nxnZ9
+vTx/678T8svv7z/2qqrrmq++OKLyP2pv7DW+/e//13w97zj5CQ+R7XHMo6t
ttrKf2/Y3FMXXXRRZJys+Z+VkztM//79/fdp/DIAAAAANFVu3ictZ5111hLr
zJ8/36y33nr+OgcccEDB6yeccELBNn7zm9+YDz74oGAd9fNVDKd+vT179lxi
H5q3175f+ZfDuO2eyl8Vxo0To+Lkrl27hrbnVvs5kjiWpSj+tu/dcsstC15T
rL/XXntFjrNWnLzUUkuZKVOmLLFd9ee2fbA32mijssoEAAAAAI1k5syZZrnl
liuI7zQ372effea9PnHiRNOtW7eC11u2bGmuuuoq8+yzz3rrfPTRR2aZZZYp
WEdzJB155JHmr3/9qzn22GPNhhtu6P1deZnnzZu3RDm0Tfte9R0Os+eeexbt
cywnnXSSv45yVYVp3769v84RRxzh/73az5HEsSxl5513Lnj/ySefbN5++23z
6KOPmt/97ncFr/3yl7/08njfcMMNZvbs2V6crL/36NHDm8fKpRjb5sE+6qij
YpUFAAAAABqV8jYF40Mbw+m/yqts5xa2i/6muNG6++67vfmJgttwF809pFg0
6Pbbby9YT23Liv0sxXDPP/+8WWGFFfx1tK8XX3yxYDuTJ082a6+9dsG2NB7X
jQn1Wd3XW7VqZd56661EPkdSx7KYK6+8MrJcbdq0Meecc84Sf2/evLk3b5WN
k+3zAf1NNP+y+rHb2Hr69OmxygIAAAAAjezll1/2+hkHYyz1EX744Ye9MbXq
a6y+zOoXPWfOnNBtaPyr+va621A7pfokL1y4sGD9GTNmFMS+waVz587eeu64
4eDSrl07b51zzz03ch3tQ3bffffIddw4tdzPkcaxjKKYX23mbtkUl6vdeu7c
ud6YaNvmrWWVVVYxI0eO9N6rOFn9tjfZZBM/Vtc4bJVF/1Zb97vvvhu7LAAA
AADQFEybNs2MGjXKWzTX0aJFi7y/jxkzxssJHYf6+Or9mhtJea6+/fbbNIuc
mmo/RxLHMorGOT/22GPmmWeeWSLfmF5TO/pTTz3l/dv9u+0rrvHI77zzjlc2
radnFgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAIH2jR482O+20U1nLZZddlnexAQAAAABI
Rd++fc3PfvYzs9lmm5l+/fqZoUOHmpNOOsn7m5ZevXqZESNGmGuuuca0bdvW
+9vAgQPzLjYAAAAAAKlo37696dGjh/nuu+/8v/Xv39+Pk1955RX/71OmTPH+
NnHixDyKCgAAAABAqmbNmmXWWmstM3/+/IK/d+zY0YuHV1llFbNo0SL/74sX
Lzbrrrtu1sUEAAAAACATakOeOnVqwd/mzp1rllpqKS9O7t69e8FripOfe+65
LIsIAAAAAECu7rvvPr/P9ZAhQ/IuDgAAAAAAuTruuOP8OHn69Ol5FwcAAAAA
gFytv/76Xoy8+eab510UAAAAAAByZfNZaznttNPyLg4AAAAAALkaPHiwHyc/
+eSTeRcHAAAAAIBcdevWzYuRl19++YL5lAEAAAAAiPLGG2948w6X6/PPPzev
vPKKGTt2rJk4caL58ccfUyhd5VSeFi1aeHHyXnvtlXdxAAAAAAA1bsyYMaZT
p05eHKm5k+J64oknzNZbb+33Z7bLOuusY6688kpvTuJa8PLLL/tlu/baa/Mu
DgAAAACgRo0bN87svffeBTFu3Dj5pJNOWiI+Di7HH398yp8gnn79+vllUns3
AAAAAAAu5X7eZ599zNJLL22aNWtWdpx8/fXX++u3adPGdO3a1bRr187bXjBW
Pv300zP4RNE++ugj06pVK788+n8AAAAAAFyvv/66GThwoPniiy/MW2+9VVac
rDizefPm3njfhx56qOC1r776yhxyyCEF21PsPH369DQ/Tijl6tpxxx3Nsssu
W1Ce1q1bmy5dupi5c+dmXiYAAAAAQO3TGGK3HbhUnHzFFVd46z3zzDOR2+vZ
s2dBbHrzzTenUXQAAAAAAFLx85//PHac3L59e9OrV6+i60yePLmgP/fZZ5+d
ZHEBAAAAAEhV3DhZc0atsMIKZsKECSW3ueGGG/rbPP/885MsLgAAAAAAqSqn
PTmuX//614lvEwAAAACALKQRJ7ds2dLf5nvvvZfINgEAAAAAyELScfL48eP9
7e2+++4JlBAAAAAAgOwkHSf36dPH395LL72UQAkBAAAAAMhOknGycn3ZPteH
HnpoQiUEAAAAACA7ScbJhx12mLedX/3qV2bBggUJlRAAAAAAgOwkFSc/8cQT
3jZ+8YtfmEmTJlVVps8//9zceuutNb08+uijVX1GAAAAAEBtSiJOnjJlill1
1VXNiiuuaF599dWqyzRv3jzTpk0bv1y1uLRo0cJ8++23VX9WAAAAAEBtqTZO
Vkzbtm1bs+yyy5pnnnkmsXK98MILZqmlloqMU5dbbrlUlmWWWSZ2rDx8+PDE
Pm+Ut99+27z44otm9OjRqe8LHG8AAAAA1cXJX3/9tdlpp528bTz88MOJl+3s
s8+OjJEVz6RFY6vff/99M2bMGDNgwADToUOH0HJ06dIltTLI66+/XhC3X3fd
danur6njeAMAAKBRqS/sgQce6M1PVMpHH31kOnfubK6++uoMSlabKo2TFy5c
aP7whz+YpZde2txzzz1F1/3www+99cv1ww8/mG222SY0Rm3Xrl1F26yU+pb3
7t27oAzNmzc3s2fPTmV/X375pdloo40K9qcYTrEcksfxBgAAQCNTfiV7n6vY
ppirrrrKb5/88ccfMyphbakkTl60aJHZf//9TbNmzczQoUOLrvvJJ594Y5fH
jh1bUfkmT55sVlhhhdBY+eSTT65om9V4/PHHvXHYabc5HnTQQf4+fvvb3/rf
04Ybbmjmz5+fyj6bMo43AAAAGtnHH39s1llnHbP99tub7777rui6yjm18sor
e/fITZHiXXcMcJw4efHixebwww/31h88eHDRdSdMmGC23HJLs/nmm1dVzhtv
vDE0TlacrjzbWXv++ee9ZysqQ8eOHRPf/s033+xtW9+N7eug8drKJa6///GP
f0x8n00ZxxsAAACANXXq1IK4c8iQISXfc9JJJ/nrK3dX1KL+2Ha9a6+9tuqy
7rPPPqGx8lprrZVa3+diFE/ZMrz77ruJbVfPFpZffnmvzXrUqFEFr+n7Us40
7XPQoEGJ7bMp43gDAAAAsKZPn266detWEHOqDX7atGmR7znnnHPKnj9J7a5z
586turyKhddcc83QfSiGztpPP/1ktttuO2//5513XmLb7devn9lhhx3Mm2++
Gfq6juUBBxzgraPx26gOxxsAAACNTG0///rXv8zll19uevbsaZ577rnIdd94
4w3zwAMPmEsvvdQccsghXh/LpmLixIne3L/FYluNBz7//POXeF+5MbIW9dFO
ymOPPRa5H/XNztr999/vj2EFAAAAgKzEnc/0rrvuMr/5zW/8uEnz+oRRO6Bi
wJ133rnkuqg9br/vYGw/adKkTMui8d0bb7yx12Y+fvz4TPedBuUl/+yzz2Kt
m8c8w6+88kpm+8parR/7oEb+LlzKd6HnqE899ZSZOXNm3sUBgJpUzjUsjPpu
HXHEEQU5dZvKdQaoVLnzmdp8PIpdShkxYoS3bps2bZIqLjKgeb+UFywsVt56
663N999/n3cRy6axzporupql2jHSyoemvOQ33XRTyXXzmGdYz7K0T/Wx//zz
zyveTi0c66BaP/ZBSX0XteyRRx7x5oYPnmPWWGMNc8UVV3jPyAAA8a5hN9xw
g3fvFrZsuumm3hwTGstmNYXrDFCNSuYzVR9qrffnP/+55PZPO+00b109v0J9
UdutGyu4S9++ffMuXtluueUWc/TRR5vVV189sl+5cnsX69+u+/pKXXbZZV7e
tYsuuqjkunnOM6z2U41R32yzzcyMGTMq2kbexzqoXo59UBLfRa3Ss4dS40mO
OeaYvIsJALmLcw1Tbo9f/vKXJc+rd955Z8H7Gvk6A1Sr3PlMNV9Rq1atvHVG
jhxZcvvbbrutt+4dd9yRRvGRsgEDBkTGOM8++2zexavIPffcU/BZ9HxWMZDq
tixcuNCr+2rPHD58eME4g0r6O3399deme/fu3vsHDhwY6z15zzOsPHOrrbaa
2WCDDcwHH3xQ8XayPtZB9Xjsg5L6LmrJsGHDvGPasmVLc8EFF3jtJOrjfvHF
F3t50d06Q59AAE1VOdcw3WeXipEVD4f1B2zE6wxQrUrmM9U9rl5r3ry51+5S
jF638xZ99NFHqXwGpEvxzO9///vQ862eW86ZMyfvIpbtH//4R8Hn6NOnT9H1
dU1p3bq1WW+99Sran4271A8jjlqZZ1hjRVUGzc2ta3Ulsj7WQfV67IOS+C5q
hfpS65lDhw4dvHHJQWPHji2Y7+6MM87IoZQAkL+41zDdq22xxRbeunrm/PLL
L4cuGt8cpZGuM0C1Kp3PVHmu9Xfl5yrF5k3W8ynUL81tpXbAsFg5r7ihGscf
f3zBZ3j00UdLvmevvfbynumWy47P32STTcyCBQtKrl9r8wyr36v2d+CBB1b0
/iyPdVC9H/ugar+LWnH33Xd787EX69938MEH+3XmsMMOy7B0AFAbyrmGaZyS
1u3SpUtV+2yU6wxQrUrnM91jjz2835D6x5Vy1llneetqnCLq27333hvZj+e2
227Lu3hlUVuWLbtyaCtnWSnqf3vllVeWtZ9PP/3U68ek/aj/cRy1Ns+w+oHY
MeqVjJ3I6lgHNcKxD6r2u6gV1157bckxO+eee65fby655JKMSgYAtaHca9hu
u+3mXxs030ylGuU6A+RBeeQ1L5B+P2PGjPH6JV5//fWR6+t+Uuv+85//zLCU
SMuRRx4ZGievtNJKXntbPVA53bLvueeesd6nuu/OoxBH165dvX2oH3E11628
qc+APodycs2bNy/2+7I81kGNcuyDKv0u6s2+++7r15tXX3017+IAQKbKuYZp
rIp7rVWfKF1v1YZRyXWiqVxngDjee+89M3jwYC93dY8ePbycKnqOFUbjGuzv
8K9//avZZZddIttVNLZBY5i1rvrtov599dVXBe2D7tKxY8eqY5ssqK675b7m
mmtC1zv22GOryrf80ksv+fvQXNRxKK5UPqOw/lXfffedl+fo6aefjvx9psX2
/dLyt7/9Lfb7sjrWQY107IMq/S7qiY6xHefxpz/9Ke/iAECmyr2G2bg2bFHb
sPKClDOXZ1O4zgCl6H7wxBNP9HO5Kqa187Sozfjhhx9e4j3qM2nbk7fZZpui
94xPPvmkt57yzCfltdde8/p9p7GceeaZiZWzkaltx82x4y7qK1nrNEegW+ZJ
kyYtsc7jjz/uvaZntJXScye7j1IxoPIaHXXUUf76v/rVr8ysWbO813Rtu/DC
CwtyAOu6p/xYWdHv3O5bz7bjzmmb1bEOaqRjH1Tpd1Ev9KxN/e71+Xr37p1L
/3YAyFM51zCx9/HFFvXv/OSTT2Ltv9GvM0Apahe086+0aNHCy42ne0K1+26/
/fbe33VvqLw2QWpT1vi9Ur+bU089NfHYSbF7qXNBpcvuu++eWDkbnfochB1D
5UnUc9BapTquPuK2vOuvv/4S6+j5jnIb69pg5y4ql34ba6yxhr+fsJy+LsVi
Ws+d9/DSSy/1nmWpXur/27Rp48WdNmbT9rO0yiqr+GWLE9NmdayDGvHYB5X7
XdSL//73v16/FPvZzj//fK8tHwCainKvYaL5CjUXjXIkKi/QuuuuG3qPpvyJ
M2fOjFWORr3OAHEon6xtGwnmrHHH8Pfq1avifahdRtt46623qi2uT3l0NO9m
Ggtj4OJTm48dex5cNJ9PHnPMxvHcc88tEddrrEG3bt28/O3udeHkk0+ueD//
/ve//e3oOVQp7dq1M+edd573b40H0vtUJvWlUmz24IMP+uuecsop/raznJPL
/b6j+k+7sjrWQY147IPK/S5qnZ6tHXroof51x100z8ns2bPzLiIAZKLca1gY
xdqaW8Lm3XWXvffeO9Y2Gu06A8R1yy23+HVfbSlhbP4A9eVYuHBhrO2qrVf5
9saNG2feeecd/34TjUnj2t32Qnfp2bNn3sULZfOv20Wxmq5DysOsOM59rZp2
8fvvv9/fjp4XlaL8aMqVocWWQ3k4ll122SXKcdFFF/nbjtuHKglu3+Q4z8+y
OtZBjXjsg8r9LmqZri9bbbWV9121bNky9HwSZw5CAGgE5V7DilH+L41vDp5T
x48fX/K9jXSdAeJSX0j1u1C9X3PNNSPH9btznr777ruxtq32AK2vPrmdOnUy
rVq1qpscyElRO6ravPNesjJ06NDQ+1p9/7VI9+O2jBqP/+WXX/qvaRyknvVo
jL5+I8XySz7wwAPmd7/7nffcN4zmvbH72XrrrWOX71//+lfBcQwbs+D+NsN+
v8ohoHkPlbcjSWeffba/3zh5q5M61kHq79K5c2cv136YPI99VHl0vOL0nYur
3O+inqh/X1hOmmeeeSbvogFA6iq9hhWjvLvu+fTvf/97yfc08nUGiHLXXXf5
9f60006LXE/5U+x6Tz31VKxt6/nUrrvu6o01VP/KadOmJVVsn/o6qo0njSVs
LHa59NnD4saslyznwenevXvBvhX32DxItUR5KWyeOi3K1R5G41RPOOGEotva
brvtirab9+3bt+R+wpx++ukFxzJsruGddtrJe03jesOor5V9/5QpU2LvuxQ7
jleLxpAWk+SxDrrqqqu8bapdOiy/ep7HPoztc5HkHMDlfBdBzz//vDfuJskl
jfmNlWPV/T6Sfu4DALWo0mtYKW7uhzjn02quM0C9cn8n//nPfyLXU1uZXe/l
l1/OsITF1XoeL43h0Lkl7yWpnEhxaB56ewzVb1XjUmuRchS737eerwZpTI/G
pJZquzrnnHPMyiuvHDkv+BlnnOHvR/ny4tp222399+lZbpDiQptLKuq6pXbL
ddZZx8vHVywHktp3P//889hlc+OWtm3bFl03yWMdpDwCOvYHHXRQ6Ot5Hvsw
ahtVThbNK1VMOc8Vy/kugpTnJelzZ1r3UO51SGOBAKDRVXoNK2XIkCH+do8+
+uiS61dznQHqkZsbYO211y66ru6z7bq1NPex+uTp95rGojz8KI/6wKptzdaV
iy++OO8iRVLbr3tvr3H0QcoDf/DBB1c9D7Tbx0nxVxyKW935tjTGP0j5LO3r
cecFDqPxAerPpZgpLrUZ2n1rTrhisjzWQbV+7MPoWVM59yHlfBdB6uuh/SW5
qA9DGjS+gfYMAE1JJdewOEaPHu1vV2OISqnmOgPUI7dfoeanjKJ2ZrveJpts
kmEJUU80xtTNh/iHP/wh0/7e5VD7us1lrEVj59Ms6/XXX+/vS/l643jsscf8
94TNoSQaU2TXqXQOXz33sv1KZsyYEft9bl6ufffdN3K9rI91UC0f+zA33HCD
F6Mfd9xxsd8T97uod5q/xH5O5VsDgEZXyTUsjhdeeMHfrvL5ltJUrjOAZedp
0lLsnuyII47w17v88sszLCHqiZ0f2/ZP+Oyzz/IuUiS3LVDLIYccUvY2vvnm
G+957O233+59do3hjzJq1Ch/XxqfGod7TTrmmGNC19lvv/38dSZNmlTwmnLm
KReVfrNqzw32f1deYY0LWG211bz3KzYbOHBg7HEVGkds933iiSdGrpfEsQ7z
xhtveO2LmttY29Q1P0wexz5IvwUd/5tvvtmb8yrs2b3m47PzCth+xYMGDYo1
v0Dc76LeKYek/Zw6lgDQ6Cq5hsWhc6jdbpz5WpvKdQYQjX1z712jcnjp+b2d
w7JDhw6xc7qiaXnooYf8uqR4KypmqRWKrdz6r76i5VJuKv1u7O/j8MMPj1xX
cZK7vzhjF9y2+bD+0GqntTGu/hscg64cfRrLZLfx/vvvF7z+wQcfeM/HNFZW
rysXmf5/xIgRsT6/nXNdy3XXXRe5XhLHOkjt0eeff743P1DU57PyOPZBzz77
rFdX7HjmsLqiY7j//vv7vyF9F1r0PKaUuN9Fvbvvvvv8z5lEnkUAqHWVXMPi
sPM8aa6bOOOdmsp1BpDBgwcX/O6UozhIvxvNP26fYSWZKzcpyuGjPuNpLOqX
jtIUb2kuXFuXwnI01Ro3ftSi50GVUtu5tqG4tBiNWbD7K5Uz/uuvv/bmKrfr
KyYPsnOSF+sDZZ8Xb7zxxpH72myzzbx11Ne4HG3atPHepzzWxa7bSR7rIMX0
2qbKUkwexz7Mpptu6r1HfRDC3HPPPd7r5Y69jftd1LI492k2v3hUn2s9r1B/
eLX19+/f3yxYsCDpYgJA5sq5hukaq3kMiuXl1DVM8zPqmvHEE0/EKkMjXGeA
uGz86/blCN5TKP+dbdsYNmxYTiUtLs1813vssUfeH6/mqX+BnRNJi+ZJzjK3
diWUa8ydo0g56ipl+4Fqe6X6mbu5ONTfuRhdB+26UeORNI7VrqO5kcKoP7Je
j8pJZ8d7Ki5UfBiXPqs9hmrTjZLksQ6jNlptV2NDisnj2AcpV5ryv+s9erYU
xs6/169fv1jblLjfRS279dZbzbLLLus9c1J8G1YXbb8EPUOI6ov+yCOPlHz+
CwD1Ju41TPdkmv/Brqv5FYJ5Rz755BMvD5dej9se1AjXGSAuzQ1j+/8pN/Ft
t93m/Vt9/vR70jgF/bb0N81nWst9aOfNm+e1waSxKJc2ivvLX/7in49VV2bP
np13kSIpfp84caLXV8C9l1bsMnz4cG8u7nJp/Ki2sdVWW5VcV9cZxQJaXznO
ijn33HP98ukYh1FuaLtOWF3V51XOLL0+cuTI0G1oHiu9Xu6cjPacoSUs/0ca
xzqMnbupVF/urI99GBvDReUFk4022shbR/204yr1XdSDAw44oKCeKF4eMGCA
d+1R27va7PX3ffbZp2iuOfUFdLfTokWLDD8FAKQj7jVMz2Pt/b1d1N/vsssu
8+Yh0H81VmiFFVbwnj0q/2ocjXCdAeJ6/PHH/fqu/D6idhm33Ue/M7VFlTOf
KpqW+++/368v6nPw0ksv5V2kovr27VuyD8Gdd95Z1jZt3qUzzzwz1voaU2uP
V7H25y5duvhliopx7VxtK664YmifVZs/S32rNM9RGPVf1ToXXXRRrPJb6muh
96lPdVju6jSOdZA7d5ParUvJ8tiHscdEY8LCfPjhh/65N07uLqvUd1EP9KzB
jvcOLrouaS771157reR29GxGfaPc95dzLAGgVsW9hqm9ebnllgs9nyo+Vj+b
ONdMVyNcZ4C43DZAd0ylcrbq3lXtHt9++22OJUSte++990zLli39eqRnlE2N
4iO1V+nzP/PMM7Heo74cNs+84qZK6fjbY68YIozyXJfqI9W6dWtvHeXtjsvG
34oRVY682LmbNthgg1jrZ3nsw9i5t6LmkLLP68sZ71Er30US1F9Q7R1qE1Zf
9gcffNAbQ6fvrRxz5871xubtuOOOZsMNN0yptACQrXKuYV988YU338WNN97o
9c3RM19dIyqJcRvpOgPEoZw+9pmUfkvIh55FnH322YksGiebFbXPKPe5jRU6
d+5c82OS06DYspL2P+Xp1fVG79M4oUqoL6o9/hdeeGHoOvb578UXXxz6uvLy
2b6pivnjtIvqOr311lt779Ocjnmyczcpj0JcWR37oK+++spr19d7Pv7449B1
1LdHr+v5hn5PixYtKrrNWvouapGOjfrHA0CjSOIaVg6uM2hqNKeqvcdT7lDk
58knnyzZNzXuUs54xmopJ5Td77rrrttk++b/7W9/846B5krQuGz1RyoV21g2
T7PeE3d8kMv2l9YSnBdZFPOqf5VeHzNmjLn66quXuMbZnPfqO64+WLvuumvJ
/do8U8oDmPezETt3k8ZYlyPtYx9G+US1vsYfh9GxtPNz6dm9ngGUmp+rlr6L
WqOc1xrLV2peawCoN9Vew8rBdQZNzcCBA/17PI3hR36UZ9B+F7///e+9OXyU
Q005iLXYsZdalIdB+Rm0qB1QbVrKm2XHm2Q1Bs/OW2PHvZbTXzdps2bN8vpl
5jWnt517UHPQKGZT7vVy6PtWXittJ258bak/qfatPNVh8+vasa5alCdTebqC
11ObO0m5kbbffnvvWBaj2EPrH3/88alfm0tRPmTbPlvJ/BRpHvsw6vOh9xx7
7LGhr6uNwH5fWjdqDLNVS99FrVF7vL5bPQcCgEZUzTUsLq4zaIrc+aAUkyE/
7dq1859XBJ/TvfjiiwXtxWHzm2gsn23PzILic3e+gSuuuCKT/YZRfKK8wSrH
Aw88kEsZ1OfWxkuV3pMr97Perz7ScXNA6/mA/Q4Un4dRn37bnqz5H8LmALZz
RinuU12KovFMp556qtc+N2TIkHgfLGW2L4bmfq5UWsc+jMbK6j16zhRG7Z66
51Hs36tXr8gxubX4XdSaww8/PPI4A0CjqOQaFgfXGTRliql0v6YYDflR3KLv
4bDDDgt93Z2bRovmFw2jXLDqU5s23bdr7iNbHuUEzrMPjh2bqrG1cdv0kqbn
q6+++mrVc2Ep16/ivbjXI41vdduKo6hN+c0334x81qw2We27VF6PadOmefm+
1H+7Vugars+v30k10jr2Lt2/qG+I8o8G56h3KVdzqbbxWvwuAAD5KPcaFgfX
GTRlus8bOnRo0Tkokb5hw4Z5famjcvtvt912BXFyWO4fxT96TX020/anP/3J
L0ubNm0SfXZZLs2pavvclpPDqZFobLTmolKs2xTZnJ959Ikp99jrt2775wMA
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
vOO/11575V0cAAAAAGiS6jVOVrk7derklVXzKDWCl19+2T/+1157bd7FAQAA
AIAmqd7i5HHjxpm99967oKyNEif369fP/0wTJ07MuzgAAAAA0CTVS5ysPND7
7LOPWXrppU2zZs0aLk7+6KOPTKtWrfzPpP8HAAAAAGSvXuLk119/3QwcONB8
8cUX5q233mqYOFm5unbccUez7LLLFnym1q1bmy5dupi5c+fmXUQAAAAAaFLq
JU52LV682GtXboQ4GQAAAABQW+oxTpaf//znxMkAAAAAgMQRJwMAAAAA8D/E
yQAAAAAA/A9xMgAAAAAA/0OcDAAAAADA/xAnAwAAAADwP8TJAAAAAAD8D3Ey
AAAAAAD/Q5wMAAAAAMD/ECdX5/PPPze33nprTS+PPvpobscHAAAAAOoNcXJ1
5s2bZ9q0aRN6DGtladGihfn2229zO0Zpe/vtt82LL75oRo8enXdRgJKorwAA
ALWPOLl6L7zwgllqqaUi49TlllsulWWZZZaJHSsPHz4812OUltdff73gOFx3
3XV5FwmIRH0FAACoD8OGDQuNq2bOnJl30YqqpThZzj777MgYWe1HaVmwYIF5
//33vecdAwYMMB06dAgtR5cuXVIrQ170LGejjTYq+JyKQRSLALWG+goAAFA/
7rnnntC4asaMGXkXrahai5N/+OEHs80224Qey3bt2pmFCxdmVpYpU6aY3r17
F5ShefPmZvbs2ZmVIQsHHXSQ//l++9vf+nViww03NPPnz8+7eEAB6isAAED9
qMd+14sWLSro51wLcbJMnjzZrLDCCqHH8+STT868PI8//rhZccUVG7KP5803
3+x9JtWDq6++2vub+r//4he/8P7+xz/+MecSAv9DfQUAAKgv9RgnT506taCs
Q4YMybtIvhtvvDH0eDZr1sw88cQTmZfn+eef9/p+qwwdO3bMfP9pmDBhgll+
+eW9ZwCjRo0qeE11o23btt7nHTRoUE4lBP6H+goAAFB/6i1Onj59uunWrVtB
Wbfffnszbdq0vIvm22effUKP6VprrZVL32e1X9kyvPvuu5nvP2n9+vUzO+yw
g3nzzTdDX587d6454IADvHXUHx7IE/UVAACg/tRLnDxx4kRvfqNiOZ3V5/n8
88/Pu6heLLzmmmuGllExdNZ++ukns91223n7P++88zLfPwAAAADUk3qJk+vN
Y489FhnPq2921u6//34/Z1AS3njjDTNr1qyK3qs+AQ899JDXX37kyJGJlCcL
H374ofnss89irZvHHLmvvPJKZvtC/an1+htEfY5P/RB0XbnrrrvMc889R78E
AAASQJycnpNOOimy3XvSpEmZlkW5zzbeeGNvrPL48eMr3o7qS6dOnSrKn/b1
11977ek2B9uOO+5oHnzwwZLvU79xzbtVzVJtf3ONLV911VXNTTfdVHLdPObI
1dxg2qeO7+eff576/hCtFuprUK3X3yDqc3l0vVauSJsXTmN8/vGPf+RdLAAA
6hpxcnq+/fZbs/nmm4ce36233tp8//33eRcxtnHjxpm999674DOUGycfeuih
/nvPPPPM2O+75ZZbzNFHH21WX331yDZ65Ukr1if/kUceKfcj+y677DKz9NJL
m4suuqjkunnOkau2P/X332yzzWp+XrdGlnd9DaqX+htEfS7fBx98YNZff33/
e4saEw8AAEojTk6X2m7dthl36du3b97FK0lzMatNR/fZwXv7cuJk9QPUHM56
n+KHSp4RBOf6VvuY7t8XL17sva45qjUPrdrihg8fbn7zm9/468btb+pS+3f3
7t299w8cODDWe/KeI1f57FZbbTWzwQYbePfMyE/W9TWoHutvEPW5fHYOMi2n
nXZa3sUBAKBuDRs2LDSGmzlzZt5FaxgDBgyIbFN69tln8y5eUbqv1z32F198
Yd56662K42TlYbPvU7t0JdSP0N1/nz59iq6vWLx169ZmvfXWq2h/NmY45JBD
Yq1fK3PkPvXUU14ZttxySy9WqjXqZ9EUZF1fg+q1/gZRn8vzzjvv+HWua9eu
eRcHAIC6pXFrYTFcEu0Z+H9qP/r9738fepx/+ctfmjlz5uRdxFj0OdSuXEmc
/OSTT/rvO/zwwyva//HHH19w7B599NGS79lrr728NrVyjRgxwtvHJptsYhYs
WFBy/VqbI/eYY47x9nfggQdmsr9SfvzxR/Ovf/3L7Lfffl4s2BRkWV+D6r3+
BlGf41N+RVvn2rdvn3dxAACoW/S7zoZyPKvfZdixzqudphK2H2a5cfLjjz/u
v++oo46qaN/q+2m3oXxkcdpx1Hf0yiuvLGs/n376qdfXU/tR39k4am2O3I8+
+sjv73/HHXekvr8oylensejKK2S/u7XXXju38mQpq/oa1Aj1N4j6HJ/yntmy
tWvXLu/iAABQt4iTs3PvvfeGHmstt912W97FiyWvOFltWu7x2nPPPWO9T+0+
Wsqhvorah9qJNPd0vdLzFzsefN68eZnt96uvvjK33nqrl8/c/c6UH+qvf/2r
98yo0WVZX4Mapf4GUZ/jIU4GACAZxMnZOvLII0OP90orreTdW9e6vOLkwYMH
Fxyva665JnS9Y489tqpcwS+99JK/D83rFZe+O41hCOvj+t1333lz0T799NNe
W19WbN9bLX/7299S3Zf65OszHnHEEV7fXbtf/Vt/02s2f1UadIw1lv7555/3
zmlp7iuOrOprUCX1txbrbhjqczzEyQAAJIM4OVtqm3D7Y7pLx44dq25LSlte
cbJybrvHKmz+abuPsWPHlr19689//rO/jzjxi+al1uex7/nVr37ljQ8U5WW6
8MILvXGf9nX1Hc1qXlPFNXa/altUWZP2ySefmEsvvdSbm9v9fpS7eciQIV59
T5PaFc855xyzyiqrePu1/1V9ueCCC7x52bS8+uqrqZYjKKv6GlRO/a3luhuG
+hyvPhMnAwCQDOLk7Okex82H5S7nnntu3sUrKo84Wffsam+379f8oEHKE6a8
vLp/rrSdR/fda6yxhr+fjz/+uOR7FEtoXeVjs+/Tfbba5nbffXfv/9u0aePd
59qYQ/vIir3PTjIe0/ehMQTKOaU8xHb766yzjjn77LO9eY6y8Morr3i5obXv
Dh06+HP8aq7v4FxsWc4plFV9DSq3/tZ63Q1DfS5dn4mTAQBIBnFyPtQ2EHbc
dZ+mvpO1qtI4Wblhy+0Paj333HNLHKMePXqYbt26mZ133rng3vnkk08u9yP5
/v3vf/vbadGiRaz36D70vPPO8/6tcZN6r8qlsZSKLR588EF/3VNOOcXfflY5
zpV3ye4zqu9vXJoX7C9/+YufI8q2MeqzKpdzGu17UVSfbOyw1VZbLdHO57bn
brrpppmVS7Kqr0Hl1t9ar7thqM+l67Ou3XnVfQAAGglxcj7Uv9q953MXtSnM
nz8/7yKGqjROvuWWW/z3XXXVVWXt86yzzio4PoozFAcoh7Db/qOlmmcM999/
v78d9UGNQ+PN1VdSiy2LxjAuu+yyS5Tloosu8rev/p1ZcPvV9urVq6JtjB8/
3mvfCsZ+1157rdd2lTXFoTamUHvsjBkzllhH8wfZsirGy1JW9TWo3Ppb63U3
DPW5dH1W/wR7ntYcCwAAoDJZxcmaE6WelizyAL333nsF/TPdpWfPnqnvvxKV
xsl77LGH955mzZqVHRuofcXus3nz5gV1U3PUPPzww952NVdLsfy++l51v9mn
T5/Q13WfbPez9dZbl1VGt71cS1j/eXc+XfX1DHrggQfM7373O69dMCnqN2r3
GTfncpDiqL///e9myy23LPiM2223nbnpppsyfaamPsG2b6rGLvznP/8JXW+D
DTbwy6k+zllKqr6GUR3V9xjWp7rS+ptE3Q2juZw6d+5srr766thlKYX6HK8+
qw95XvUfAIBGkVWcHBUP1uqiGDYLQ4cODd1/p06dMtl/ucqNk99//31z2GGH
+e8ZMGBAWftT7h7FFPb9u+yyS+h6GmN5wgknFN2W+lLa7UyZMmWJ1/v27Vty
P1FOP/30gu8vbK7cnXbayXtN41LD6D496WckdgyqFuWJq5ZieMVMLVu29Ler
Prr6jl944YXUny+deOKJ/n6jxrkrF5VdZ4UVVvByB2clyfoaxp5HL7nkkiVe
q7T+JlF3w6jfiN6jdvSk8hNSn+PVZ53fbPytNuXhw4fHfr4BAAD+n9r2lJsl
uCTd/0z3N/369aubJcsxeN27dy+4T1U7k807W2vKiZO/+OILs/322/vraz6V
cvuTK7+ue2w0X2mQxhHq3vaZZ54pui21wSk3j8oUdq95xhln+PtRfttybLvt
tv571eYVpDjB5kKKur9XntuVV17Z/POf/yy6r2nTpsUul+bPseVq27Zt7PeV
olhq2LBhXr4nNy7UnLLKBZVG31zNxWP3pXZaPYMJ447933vvvRMvRzFJ1tcw
Gjur87OORVCl9TeJuhtG+QpVnw866KCi61Gf06nPivMVV+t9er6iNnQAABAf
45Pzd8cdd/jHXePkNF6tVlXS71r5gDTmUe9Rn9Svv/469v7UturWS+V+DVLO
m4MPPrjqNivFNHY/ih3i0m/FzV/+zjvvLLGOctfa18vNY+ZSXSknPlC7o93v
NttsU/F+i1HuXd3L2/YrLToeuqdXX3L1NU6C2kjt9o855pjQddSPVW2edr1B
gwYlsu+4sqyvQZXU3yzrbhjqczr1+bXXXvOfbWg/c+fOTaTMAAA0JcTJ+dIY
Pvc+6OKLL867SEVVOj7ZHd945513xnqP+jzaPLxaWrVqVfZ4znJcf/31/r62
2GKL2O977LHH/PeFzQEkasux61Q6B+0NN9zg3a8fd9xxsd/j5pTad999K9pv
XPq+nn76aXPIIYd4fW3tfvUdnnbaaaExWFwffvhhQTvfyJEjQ9ezfX3tktX4
Ccm6vgZVUn+zqrthqM/p1Wc7Rl77yPI3AABAIyFOzo/aJdyc13/4wx8yva+u
RKVx8l133eW/T+Mh43DbsbTofrUSU6dO9XIVXX755V57X1R7/ahRo/x9qZ9i
XO69e1S70H777eevM2nSJP/v33zzjRk9erS5/fbbzamnnmp69+69xHvffPNN
07VrV//9+rfalRYuXFiybBoDa9+nsZBZUa4kxUFun14t6vOuMfnlUp9Ydzth
/WA/++wzbyymXSduzvKkJFVfg/S5VGdvvvlmbx4pPXMKU0n9rabuRnnjjTe8
dlf1V9YxUP9fF/U5/fpsx7FrnAkAAKgMcXJ+FBfZ47322mt790W1rtI42c2h
FXU/HqT7bLdOqo9mJRSja7ym3U7UOEAdf3d/06dPj7V991nH3XffvcTrapey
c7Tqv25uIOV9UtuUnRfm8MMPX+L91113ndl///291237mxbF2KW4eW+1nTxM
mDDBm8tG7asqh8bfl8vtU6y5i4L0fKlLly4F319UXvO0JFVfg5599lmvjth+
tGF1RCqpv9XU3TD6Hs4//3xvnuio3xv1Od36rJi+3H4FAABgScTJ+XjooYf8
Y617xWCbSy1S/iF3/tdy4uTHH3/cf19UXtcgN7bVMnPmzEqL7rXFaRsbb7xx
0fU22WQTf39PPfVUye1qrLX77EBxb5D6Z9rXo/qK6jmJXldMH+aee+7xXi83
x2+bNm2896n/Zdy4Py3Kt6s5fsPmHSrFjUF1vINj3P/0pz95OaOUd8mupz7F
xSjmU59itZf279/fGwtajSTra5hNN93U2676HkQpp/4mVXfDjBgxwnuP6l8Y
6vP/sXcncFdN/f//HyqlUZRM1U3RZKyIbuNNRCU3lSShIonMTeZ5psmYcpvS
TKUoNxUNvg2UUGiQ0pzqR6PS+v/f+36sbZ9z7TMP+5zrej0fj/2Q66y91zrn
Wuc6+3PWWp+V/v5sKQenPeeEE06IWjbd7wEAAAoT4uTsU56YihUruq+1X07c
XKT5y94+Mnjw4LjPTTRO1rpt7/q9VOcPav6nrtOtW7eo5bzjPH379o15XcUi
scZuNF/TltF6w3A//vije+8faU6B5mOrjHKxx0vXsq+hxvfymXKAe/uexiwV
pyhXsvboVb5gxV52XF7rSf32N/KaMGFCyDWVdz5Z6e6v4ZQn3n5Hpb8fkSTS
f9PRdyPR+LfOUY57P/Tn9PdnK5E4OZ3vAQAAChvi5OzSvZDdJ1eH9knO9B6d
6aCxm5YtW4b0Ea3Ni3dPl3jjZL0WixYtMueee25IXYoRtAdoMvt16Zp2jmSk
fDmW7sVtbm6tF49FY0m2jbfeeqtvGeU2tmVmz55d4HGtzdRjyr0TiR1X0hzc
eA0ZMsStd9CgQXGfl4s0l1TzU719wv6eNB6nuEPzG7zvq1g0b9d7vfLlyyfc
rkz0Vz82nomUa8tKpP+mo+9GYtfxRpp7Tn9Of3+2EomT0/EeAACgsCJOzi7d
j9rX+MgjjzQbNmwIuklRKQbQvZNfH7GH9ujUeEg08cbJPXr0iFqXjnjzZVs2
v5LGaOLp13ouKq/58LHWjHvXEEaKwTW2qMd1X+y3F5DNadSzZ0/f85UbV49r
fWo8uY6sJk2aOOdpPnCu54eLx8iRI0PyDus48cQTnbxQonW79uf9+vWLeT31
bZvvyB6JvL6Sif4arZ545mLE23/T0Xf9ePea0jh7OPrz/6S7P1uJxMnpeA8A
AFBYESdnj9ay2ddX95FffPFF0E3KmmTWJ6eL8lyr3njnau7cudPJLatzFJ+k
Qnuy2Od9/vnnF3hcsYf9HuLTTz/1vYYdR1OcEC/73YDim8K0L4zGZydPnuy8
l1auXOn+XGvnbb4pHT/88ENc19O+slOnTjWNGzc2NWrUyFSzU6Z1vHpe8ezL
lK7+G6vvRmL3mjr66KN9H6c//y3d/VkSiZMlX94DAABkW/j+FPZIdw4aL62z
6t27d1oOre3MB7q3O/DAA93X98knnwy6SVmlfW3sc0/XfjnxsuNQiexNrZy2
uifXmJffni3xUs4l+7wfeuihAo9rT6hYY2vay0plFO9rnq/uoaNRnFS/fn3n
HO2pWxRMnz7dfZ2TudfX66U5xrno999/d+ZC6Ll5Y6lo0tF/Y/XdSOxeU506
dfJ9nP4cWyr9Wb9ve67mv8crl98DAAAEYdKkSb5xcib3KNL357HmKsZ7JLK+
LSiKfxo0aOC2WXla8mFNcjrp/t4+f63lzBaN12peuOrV3Innn38+7nttm7NX
8zy113UyrrvuOvd5++3b/MQTTziPab8bzcFXXd64Qf2kSpUqThmNqSkGUbui
sTmSmjVrlpZ+pnq1V226jkRyN8VLc9bt6xwrV1s45fvV2tB49gYOgv0brTW9
iUi1/8bqu5HYvaa0xjYc/Tk+qfTnOXPmuOfGG/fm+nsAAIAgBDHv+q677nLr
Oe+885w9exYsWOCMYeuwa9t0KC+0cr3q+Omnn5wxDq3r1WOKf/JhLZXuc+zz
qVq1qjMvrqjR/a2dX6w8NevWrctKvXYtpA7lAj7rrLMSihnUN5WTSXPFY417
+dFYkH3OfvvD6rp6XPuyKL748MMPQx7XuKBtv+ZPxJqzrvtdle3atWvSsX04
7aubru+1dCSz32wsdevWda8f/hpGozFN/X5ffPHFtLcpXfR71/O6/vrrEz43
lf4bq+/60f5Gduzbb98m+nN8ku3PYvuLjnjm0OTDewAAgCAEESdrzZTq0B6S
4eMDn3/+eUg7/PapmDhxojsGl+vsPqE6dP+oebZBUWyq/VCVczsIr7zyivta
KCZcvXp1xuvUHH87ntywYUPfPWJjUd5ixQqav51I/mK93t7n60fzWW0s4nef
qvEd3cOq77Rv396Zg+pHeY3uuOMOZ0wokf264qE1A/fff3/ajnTfj3tjLz3/
8L1oo1GuJL1Hc5nWjeq5JdvOZPpvPH3Xj50rpDjPD/05tmT7sz5LNYZv95L6
xz/+EdfvOx/eAwAABCHbcbLiFF2/Q4cOvo979yrR8frrr/uW0z6amkObyzT+
XaFCBfe5PP3004G1ReNB2lNG7RgzZkxg7dB8AM1B15wB3Ss/+OCDGa9TY8rK
IZvMeLClPXF075/IPbt3rnmkPbI1RjZr1qyoec+Vk9ZvbM5L+3NVq1bNeT8X
FZpTr5jCxpF2/ol+34WF4hy9V5QX+Y8//kj6Oon233j6rh/FtjpHf8cjoT/7
S6U/a02y8qbpHH3mdO7cOaHcXwAAoKBsx8nKG6bP/kjrn717C+vwy1ujeEeP
6Z4iV2mcRPvh2uehPViCXJNsc+to7nO8cygzSeNF6gPKUVSYaf2x1homMsaJ
2KZNm+buN+t3qJ9rnWa+s3kWNS8/25LpuzbPttbRIH6p9md936bPSv7OAACQ
PtmOkxUXRdrXQ2MnmpNn21CvXj3fcoqx0rEnaSbdeOON7vOoXr16QvN10033
YHbNYKQctEA+0doBjcFHOvI1B4DWCSgfdPfu3Z3/17oTzZ1R7qlcpLWz55xz
jpk7d66zpkN/Y1q2bBl0s/JOYe3PAADks1zaP3nkyJEhbbjzzjvTdm2N7+pe
U/tE6jlncmzXmydG6wI1rzYoo0aNcuZs2vZo/TeA3GT3LNaeTspzrRj59ttv
D7pZEV199dVOe7V+omnTpqZy5cpmyZIlQTcLAAAgZbkUJyufq7cNygmTqi1b
tph77rnHmett13vpv5dccolzb6cxax3pimW1JqxcuXLuc3juuefSct1Ebd68
2Tz88MMh4/Nav1bU9qMC8o3mOivXdKNGjUz//v2Dbk5U8+fPN2effbazlviK
K65w1hUDAAAUBrkUJ2t+sq2/dOnSEXOhxmvmzJlOzk9dT7mj7NxFzRG0OUHt
8fPPP6fcfs2ZtLm8g5h/qDwwytejvVb0+oX/TrORMwsAAAAA8p3NExN+aB/j
bNI4rLf+VPd8Gj9+vBsLK59WeL4ojSfbuurUqZNSXZZyjHqfg8ZXtE45U8cN
N9xgLr30UnPKKaeYww8/PGTs2O9grAcAAAAAYtMaOL+YKlI+6kwZOHBgSP19
+/ZN+lpTpkxxY2TNB/Tbp7dNmzZuXelY/6e8YtFi1KCPM888M+XnCAAAAABF
Qa7Mu/aO7+pYvHhxUtfRHqN2rrX2Hf3mm298y9m9JtOxDlr7gSrvTtCxcLQj
0j7UAAAAAIBQuRAna+9H7Q9p69Y65WTdfPPN7nW0TtfPunXr3DJlypRJaR20
9iI+7rjjAo+Dox1aqxzEenMAAAAAyEe5ECdrryJv3V26dEn6OtpHRdfQfsHL
ly/3Lad8VrauZs2apdJ0s3btWvPMM8/k9DFs2LCUniMAAAAAFCW5ECffd999
IXWPGTMmqeucddZZ7jWUU8uP5mUffPDBbjmtiwYAAAAAwMqFOFn7hNp6NQ68
devWhK+xYsUKdyxZx9ixY33LaT9j7/NcunRpqs0HAAAAABQiQcfJv/32W8h+
RsnmZQ7f3+rXX38tUEY5vA866CC3zLHHHptq8wEAAAAAhUzQcfLIkSND6n30
0UeTus5jjz3mXkO5p8P99ddfpnnz5iF1de/ePdXmAwAAAAAKmaDj5Ouuuy6k
3tmzZyd1nccff9y9xv7772+2bdsW8viNN95oKlSoYGrWrOmW++ijj9LxFAAA
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
5D/iZABAURO+18Ovv/5aoIzyWR500EFumWh5ouO1Z88eZw/ebMdP48aNc59H
uXLlopZ97bXX3LINGzaMWvaYY45xy2rv4XTKlXb4tWfBggVRyxInA0D+I04G
ABQ13nnIZcuWLfC45u02b9485HMxVu6mePXu3duNV7/++uu0XDMWxfze57Jq
1aqIZbUvpHfd9m+//eZb7pdffnGvt//++5utW7emtc250g5Led5Ux6GHHup8
3xENcTIA5D/iZABAUfP444+HxFbbtm0LefzGG280FSpUMDVr1nTLffTRR2mp
e/PmzaZq1arONY844ggnzsuGWrVquc/lk08+iVr20ksvdctqHNXPM88845bp
0KFDgcf37dvn7J+k/aLvu+8+Z613otLRDlEesPPPP99Zxxx+f6N4fOrUqVFz
iX/33XdOrK64XftpxkKcDAD5jzgZAFDUvPPOOyGfeQ888IDZvXu3WbZsmbPW
VTHRiBEjTMmSJZ3HlVNqx44daatfuba1x5SurXhc49vbt29P2/X9eMfQlR86
GuX+Ll26tFNWMX142xTrV6pUyW2/Ys1wEyZMCHmNW7dunXCb09GOr776KqQd
t956q/uYfuc6zz7WqlUrs3r16pDzNSdf8771+F133RVXu4mTASD/ha/Rsoff
Zw0AAIXBli1bnPnW3s+9UqVKuePLiqNHjRrlPta0adO0t+HLL780hxxyiFuH
5vMqX5XiqmHDhpnJkycXOFauXJl0fZp7bZ/jBRdcELO8xs/t9wTaS8qu4Vbs
2qBBA+fnivUV8/sZMGBAyOtbvnz5pNqdajtefPHFkHZcddVV7mOao23jcHtU
rFjRiXOVm1z/VRyu62sOwp9//hlXm4mTASD/af6QX5ysz1MAAAqrkSNHhuw9
pOPEE0901wxfc8017s/79euXkTZo7pbGee2YaKzjiiuuSKk+jZvrOsWLF4/r
c37mzJnmtNNOc+uvXLmy+2/tqzVv3ryI5y5atMhZg+1t/65du5Jqdyrt0BwB
7RVln7fiXy+NrYf3A3soPtY4eKJz44mTASD/Me8aAFBUKTeUxmlHjx4dMla7
d+/ekNg103s4ae2uxpAVU7Vr186JCU866aQCx913351SPdqXWHm79Zx69OgR
93nz58935p9pLbDauXDhwrjO07xorf1t3LixqVGjRrLNTks79L1IpPH4TZs2
mfHjx5tXXnnFPPvss84+YdoDLNl9mImTASD/EScDABBq+vTp7udhOuK7XKLY
UnPONd/Ybz+sTKhfv37G9jXORcTJAJD/iJMBAAjVs2dP9/OwW7duQTcn7YYP
H+6u9413zW2ylPNa66IXL16c0XpyySOPPEKcDAB5jjgZAIBQdevWdT8PP/zw
w6CbkxHaZ6lYsWLOvsCaZ54JTz31lFOHcmkVFbp/0ppp4mQAyG/EyQAA/E3z
kr05sMP3Vi5MtMZX+b2bNGnirNVON+VC0/5ahZn2qlK+Mntoj2Xv/RRxMgDk
J+JkAACM2bNnjxMjK+eUd4+gFStWBN20jJo9e7Yzfj548OCgm5KXNBavvasi
HUuWLAm6iQCAJBAnAwCKumnTprl7C/sd2vt3zpw5QTcTAADz7bffOnvGz5gx
I+imFGrEyQCAom737t1mw4YNEY+NGzcG3UQAAJz94kuWLOnGbAMGDEjo/B07
dpg2bdqY7t27xyyrveMvvvhi8/zzzyfb3LxGnAwAAAAAuU3xWc2aNUNiNsXM
ip3jNXHiRPfcn376KWrZ5557zil3wAEHOGuTihriZAAAAADIbW3btnVjtXPP
PdfJw6h/16hRw2zdujWua6xcudIcccQR5rTTTjM7d+6MWnbWrFmmQoUKTr1F
EXEyAAAAAOQu7eWnGE177dl50MqtcfDBBzs/b9WqVcAtLHyIkwEAAAAgN2kv
htKlS5uyZcuacePGhTymnPq1a9d24reBAwcG1MLCiTgZAAAAAHJTnz59zOmn
n26+/vpr38c3b95sLr/8cqfMn3/+6VtG8fT48ePNU089Za666iozZcqUiPV9
9dVXZsyYMebxxx837dq1c8atiyLiZAAAAAAovN59911zxhlnuLHe8uXLfcv9
9ddf5oEHHjBnnnlmzLKFHXEyAAAAUrFixQqzfv36hM/TvmufffaZ6d+/v7nj
jjtC8vbOnDkznU0E8p7mX2vf5GRzT9s1zsccc0zMssOHD3fKVq9ePam6CgPi
ZAAAACRr0qRJ5qCDDjKvvvpqXOX/+OMP8/rrr5uzzz7b7Lfffs59Z/ny5Z25
oIsXL3bKaPxK+91ccskl7F8O/P9atGjhxmlHHnlkzD2d/GgOtc7v1q1bzLJ3
3nmnU/baa69NorWFA3EyAAAAkvHkk0+a4sWLm4cffjiu8hojPuqoo9z7zTZt
2jh5iXbt2lWg7IwZM8yhhx5q6tata1avXp3upgN549tvvy0Qq1155ZUJXWPf
vn2mcuXKzrljx46NWf6UU05xyr755pvJNjvvEScDAAAgEdu2bTOtW7d27hk1
ZzqWvXv3moceesiJqXVOuXLlnHmdsSxbtsxUqlTJHH300ebnn39OQ8uB/LNu
3Tpn7oX2gOrQoYMz16JixYrOWuJ4aU2D3nslSpSIGefpcfte/eWXX1Jtft4i
TgYAAEAi2rZt69wvah5nLLrP9uYPOu6448wPP/wQd12ffPKJs2fs8ccf78Tn
QFH08ssvm3feecf5t50TrXHmeCnPtc5Rfq5YPvroI6esvp8qyjT/JTxG1t5c
AAAAQDib36dWrVrOWuNoNO5i93bVoXnUyt2VqM6dO7vztIGizsZvicyJbtKk
iXPOI488ErNsr169nLKdOnVKpZl5T/tohcfJJ554YtDNAgAAQI5Zu3atMw9a
94sjRoyIWb5ly5Yh95i670yGxqQ117Sor5cEZOfOnc686FtvvTWu8sqPXaZM
Gef9o7nEzz//vHnppZciltc+zCprx6+Lqv/85z8F4mTtUw0AAAB42Zy71apV
i7k2UrmCvPeXqY5NtWrVyrnOIYccYrZs2ZLStYB8p/x28cyhFu3bZt+Hjz32
mDnrrLPMn3/+6VtWaxu0hlllV61alc4m551nn322QJzcs2fPoJsFAACAHPLF
F1+494q33HJL1LKKobUO2Xt/mcw+Nl52vreOJ554IqVrAflO+a6VDy+eXF47
duxwx5MbNmzozAuJZPLkyU45xeHp8uWXXzrzvjNxZDJu1WscHiePGjUqY/UB
AAAg/2jPVXuvOGHChKhlp06dGnJvqZhZcfbVV1/t3H8fccQRpl69es6eydOm
TYurft3b2+tpPFs5tIGiSvN/9V6we47HojHlr7/+Oub75o477nCue++996aj
mY4PP/zQN290Oo7zzz8/be302r17t6lQoUJIXcrJwN8dAAAAWLo3rFKlinu/
uHLlyqjl7b12vIfyc0WaB+qlvXDsObNnz07X0wPyyueff+6+D4YOHZrWax97
7LHOdRcsWJC2a27evNlpZyaOWbNmpa2dXn6xfVFfrw0AAIBQc+bMce8Vy5cv
H7P8ySefHHJ/edhhh5lXXnnF2cdG1+rbt6+pU6dOSBntNRWLzS+kQ9cAihp9
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
jBnjzBtWzmF7vcMOO8zZB9sv/suWmTNnuvFOgwYN3D1+td93+H5s2dxTKFt9
NlyifTjX+68f+nR8fZo4GQCKNuJk5CuNCfj1Xd2zad5krko2Th4/fnxS85ll
ypQpBV6jK664wrRs2dKceeaZIffNt912W6JPyTVnzhz3OuXLl4/rHN1/3n//
/c6/tWZS56pdmtOpuOL99993y95+++3u9bOV41w5l2LN+02E4q7HHnvMHHPM
MSG/k8aNG5vXX3/dmS+RLepTNm44+eSTC9TtHc+tU6dO1tol2eqz4RLtw7ne
f/3Qp+Pr07oPCqr/AwCCR5yMfKX51d77Pe+hsYStW7cG3URfycbJgwYNcs97
7rnnEqqzV69eIa+PYgzFAMof7B0L0pHKdwyjR492r6P5p/HQenPNkdRh26J9
dUqVKlWgLQ8//LB7/V9//TXpdibCO6e2ffv2abuuxj+1ZlXPX8/X1lGmTBln
3y/tuZvJ9cGKQ208ofHY1atXFyij/YNsuxTjZVO2+my4RPtwrvdfP/Tp+Pq0
2mr/XmuvBQBA0UKcjHy2dOnSkLmZ3uOqq64Kunm+ko2TmzRp4pyz3377JRwX
aFzF1lmiRImQ97f2p9G6Ql1Xcyaj5fbVnjy6z+zevbvv4/369XPrqV+/fkJt
9I6X6/CbP+/dS1fzcsNpHui//vUvZ0wwXXr37u3WGW++5URpju4bb7xhzjrr
rJDXQOvwH3300bjmrydan52XqvUL33zzjW+5o48+2m2L5jhnU7r6bDjtjXTx
xReb559/3vfxZPtwOvpvpPao36WzD9Cn4+/T2os7qPcAACBY2YqT9d2u1pFx
FJ0jW7mn//Of//j24aZNm2al/kQlGicvX77cdOjQwT3n2WefTag+5e1RPGHP
132rH62vvOmmm6Jea+LEie51fvrppwKP9+jRI2Y9kdx1110hvz+/fXL/+c9/
Oo+pf/k59dRT0/4diV1/qkN54jJNr6vyD1WtWtWtV+OUimeUq3jXrl0p13Hz
zTe714601l25qLzjgcobnC3p7LPhNBdD19S4tF/Ov2T7cDr6rx/7PaBiy3Sh
T8ffp9V2G39rTHnYsGFxf8cBAMhvGpdSTpHwQ/kr0qlLly7OvCuOonOsWbMm
rX0omtatW4fco2qMyeaczTWJxMmbNm0yp512mlv+2muvTXg+uXLrel8brSMM
p9xFWkv56aefRr2WxoCOOOIIp01+95h33323W88ZZ5yRUDtPOeUU91yNd4VT
TGPzIEW6t9e9eIUKFcw777wTta5ly5bF3S7tnWPbVbt27bjPS5XGSLXPUNu2
bUN+f7pXV0ywatWqpK6rebE2BtU4rb6H8eNd/9+sWbNUnkrC0tlnwykHoPqI
Xlc/yfbhdPRfP1rnrM9k/d6ioU9nrk9rvrjiap2n7y20FxYAoPBj3jUKgzff
fDNknELr1HJVMvOulQtI6x11juajbtu2Le76NLbqfW8r52s45bq58sorU95T
S/GMrUdxQ7z098abv/y7774rUEY5a+3jieYx81JfSSQ20Dierbdhw4ZJ15uM
BQsWOHPcvb8/9QPls9Kag2R458F27tzZt4zmsGrM05YbOHBgKk8jYdnss+GS
6cPZ7L9+6NOZ69Nffvml+/2G6tm8eXNSbQQA5B/iZOQ7rTf03v888sgjQTcp
qmTXJ3vXNr799ttxnaM8NDYHr47KlSsntJYzUS+99JJb13HHHRf3eR999JF7
nt/+P6IxHFsm2f1nX375ZSeeueGGG+I+x5tP6tJLL02q3kRovoDaqfjF+zdZ
348MGDAgpTzJK1asCJnPPHbsWN9ydm6yPZKNX5KR7T4bLpk+nK3+64c+ndk+
bdfJq45svg8AAMEjTkY+Uz4fb87rCy64IKv31MlINk5+99133fO0FjIe3jEs
He3atUuqzVprrjxFTz31lDPWF2m8fty4cW5dmp8YL+99e6TxoH//+99uGe/e
rNu3bzczZsxwcgbdcccdzhqPcF9//bVp0aKFe77+rfGkeNZFav2rPU9zQzNB
saFe06uvvtodu7LzUTX2qPanw9ChQ0P6g1/O5fXr1zv12jLx5i1Pl3T12XBf
ffWVk+dNexvrmppL6yeZPpxK//Wj34H6w2uvvebseaXvyMLRp/8n033arg/X
ehMAQNFCnIx8prjI9tnDDz/cuR/KdcnGyd4cWpHuxcMpJvC+rzU/MxmK0bVW
014n0vo/vf7e+uJdb+j9ruO9994r8LjuuStVquQ8rv9695ZRzqc777zT3Q9G
a+PDaczqsssucx63Y286FGPH4s13q+ukk+7pNc+3Zs2abh3pzm/k5Z1TrH17
wuk7pubNm4f8DiPlNs+UdPVZLz2vBx54wNl3ORN9OJX+6+ezzz5z+rSNL+nT
kWWyT2uvr0TnFgAACg/iZOSrDz74wO2vuk+MND6US5R7yLv3ayJx8scff+ye
FymfazhvbKsjldxqGtvSNY455pio5WrVquXW98knn8S8rtZae787UNwbTus9
7eOR5onqexI9rpjez4gRI5zHE83vW716dec8zbtMNs+Ql+ZAaFxTeYS8a1q1
X43219U6gkzxxqB6zcPXud94441OjitvjKM5xdEo5tOcYo2X3nfffc460FSk
s8+GU5yma+p3Gk0ifThd/ddPnTp1nHM0V8IPfTozfdpSPlN7zgknnBC1bLrf
BwCA4BEnIx/9/PPPpmLFim5/9cuHm4s0f9n7Phs8eHDc5yYaJ+ve1LtuL9V5
g5qrqut069Ytajnv+E7fvn1jXldxSKwxG61ttGW0zjDcjz/+6N73R5pToPnY
KtOnT5+YbbJ0LfsaaiwyFd9//70zRuhde6vxwvbt2zvjh7HGGNNBecC9/U9j
rNrjRrmStaewcgUr9rJj89o7yW9/I68JEyaEXFO555OV7j4bTq+/rqu88dEk
0ofT0X/9aE2v/U5Nf+/80Kcz06etROLkdL4PAAC5gTgZ+Ub3QHafXB3aJzkb
92Op0rhNy5YtQ95n2l8p3v1c4o2T9VosWrTInHvuuSF16Z5be38mkzNH11Q+
JV0nUp4cS/fhNje31ovHcu+997ptvPXWW33LKK+xLTN79uwCj2tdph5Tzp1I
7HiS7t/jNWTIELfeQYMGxX2eH7sHqw7131deeSXhPb5SpXmkmpvq7Rf2d6Wx
OMUcmuPgfW/Fonm73uuVL18+4XZlos/6sXs3xZrLnUgfTkf/9WPjrkh5wYQ+
nZk+bSUSJ6fjfQAAyC3Eycg3uhe1/fTII480GzZsCLpJUen+X/dMfu8ze2hv
To2DRBNvnNyjR4+odemIN1+2ZXMraWwmnr8Nei4qrzmYsdaMe9cORorBNa6o
x3U/7LcPkM1n1LNnT9/zlRPXjnUlsj6ySZMmznmaC5xqfjh9R6L19N9++21K
10nVyJEjnTE1b3848cQT3bxKWgtrf96vX7+Y11P/trmO7JHoGtRM9Nlw3r2b
4pkHHG8fTkf/9WNfk0jvdfr039Ldp61E4uR0vA8AALmlKMXJuq9IJM+T8qOu
W7cugy3KPzNnzgy0/tGjR7t9VPevX3zxRaDtyaZk1ieni/Jcq95452nu3LnT
ySmrc3S/nwrtxWKf9/nnn1/gccUd9nuITz/91PcadgxNMUK87HcDim0K234w
Gp+dPHmy835auXKl+3Otn7f5pnT88MMPcV1Pe8pOnTrVNG7c2NSoUSNTzU6J
3btJa2bjka4+HKv/RqI1xzon0h5S9OlQ6e7TkkicLPnwPgAAxC98TwV7pDN3
SjitDerdu3daDq1LjMekSZOcfSFeffXVmGX13YHmZul1SCTPUmGn/LBa43XJ
JZc49w/Zpvu6Aw880O2jTz75ZNbbECTtsWKfe7r2yomXHYNKZG/qhQsXOvfj
Gu/y26slXsphZJ/3Qw89VOBx7QkVa1xNe1mpjOJ9zfHVvXM0ipHq16/vnKP9
dIuK6dOnu691Mvf5es00xzgX2b2bOnXqFPc56ejDsfqvn99//92Zu6FzvDGf
F306Pqn0af3O7bmasx+vXH4fAADip/jRL07O5P46+s431hy7eI941mUpntLY
o/JuRjN37lwnX6f3+sTJoRSTHHrooaZu3bpm9erVWatX8U+DBg3c34vys+TD
muR00v2yff5ax5ktGq/VvHDVq++Qnn/++bjvs21+Yc3xVE7cZFx33XXu8/bb
t/mJJ55wHtNeN5qDr7q8MYP6SZUqVZwyGk9TvKR2RWPzI+nvQVHqZ5q3bl/r
WPnawinXr9aFxtobOCh27yatV01Eqn04Vv/1Yz+Xtf7YD306fqn06Tlz5rjn
xhv35vr7AAAQvyDmXd91111uPeedd56z38yCBQucMWwd3n0llNNYeUF0/PTT
T85381qTqsd07x5t/Y/2h1DOSZXt379/xHK6rsZIVa831ypxsj/lndI8Ns1f
jJSHNd10f2N/J1WrVg1kPDtoure184uVnyZbawLsOkgdygN81llnJRQv6P2t
fEyaKx5rzMuPxoDsc/bbG1bX1ePaj0Wx0IcffhjyuMYEbfs1ByXWnHXd56ps
165dk47t85W+/7KvVfjrGI3GNPU7fvHFFzPYuuTps8COzyazD1IqfThW//Wj
fqpzrr/+et/H6dPxS7ZPi/09xDuXJtffBwCAxAQRJ2udj+rQvofh32t//vnn
Ie3w21th4sSJ7vhRNG3bto1rjqq+j1ccvWnTJideJ06OTXuh6H7g+OOPL7Bf
ZbrZPUJ16F5XY9pBUWyqvVCVczsIyidrXwvFhNkY09c6CTue3LBhQ9/9YWNR
zmLFCZq/nUjuYr3e3ufrR3NZbRzid3+qcR31VfUd7Vej+ad+lNNIOYk0FpTI
fl2FhTf20muQyPtaeZL0Ps1Vdg6TYqZkJdOH4+m/frS+VedEek3p0/FJtk/r
vkTzDuxeUsrrHc/vPNffBwCAxGQ7TtY9tq7foUMH38e9e2zoeP31133LadxX
8z8jsXPlatWqZf7444+426fPR+94NnFyZJ07d3ZeozZt2mSsDo31V6hQwf19
PP300xmrKxaNBWmPFrVjzJgxgbVDcyo0B139VPfJDz74YMbr1JiycscmMx5s
aT8cxSmJ3K9755pH2iNb42OzZs2KmvdcuWhjjSNqnkS1atWcv4lFiebVK56w
sZmdx6PfeWGhWFHPS58vqUi0D8fTf8MpHtN7W/mbo3120acjS6VPa02y5krp
HH326HMukdxfAIDCI9txsvKG6fMq0vpn7764OvxymOheXY/pc9CPYnGb3zKZ
73Y1ZkCcHJv2VrHft8fajzQZGiPRfrj2d6H9V4JcV2fzAGnuc7zzJzNJY0V6
HynnT2Gm9cdaY5jpeQtF0bRp09y9Zv0O9XWt0cx3Nm+15gtlW6L91+bW1DoC
JC7VPq3v3XTfwd8bAEC242Td00faj0Lfo2sumW1DvXr1fMspPoi2l6bdS1Xf
oyezPyRxcvxatWrlvE6HHHKI2bJlS1qvfeONN7q/h+rVqyc0XzfddO9l1zcm
ki8XyGVaP6Bx+EhHvuYB0DrUc845x8nNqHUSet9qr99cpHUNyl3dvXt35/+1
1kjzpbQeCIkrrH0aAJB9ubR/8siRI0PacOeddyZ8De2na8+/5ZZbkmpHUYqT
NWar+zHt+ai+kOh4rZ3frkPjJuny3nvvudfV70PzaoOiPqA5kLY9WkMPIHdd
ffXVzntVaxK0x1/lypXNkiVLgm6WL7u/svafUp5rxci333570M0CAKDIy6U4
Wbk9vW1Q7pVEefMiT5gwIal2FIU4WWO/99xzjzMH3q7d0n+V91v3lhrL1xEr
PrXrze34fSrrVy2tBStXrpx73eeeey7layZj8+bNzl5i3jkOWrdWlPZUAfLR
/Pnzzdlnn+38Tbriiiucdbq5TPOylRe7UaNGUfdmAAAA2ZNLcbLm1tr6S5cu
HTGHZySK0eyekpHWNsejsMfJM2fOdPJ36vkpH5Sd36c5ina9sT3i2ffJxtg6
lOcmFZqDaPOhBzFXUvlf9By0z4r6YPj7Ihs5swAAAAAEy+YMCT+0j3E2aQzR
W3+sPZ/8KDeHN1dHsgpznDx+/Hg3FlaOrPAcUBpPts+9Tp06cV1T+53Yc/r2
7ZtS+2wObXtoLEjrlDN13HDDDebSSy81p5xyijn88MNDxo79jlwflwIAAACQ
Oq2H8osHIuWjzpSBAweG1J9MvDV69Gj3fOU3TVZhjZOnTJnixsiaj+i39672
eLLPPd41chp7tedoL89kKTdbtBg16OPMM89M+rkBAAAAyB+5Mu/aO46pY/Hi
xQlfo1+/fu759evXT7othTFO1j6cdq619ub85ptvfMvZfSN1xLs+vHfv3u45
F154YVLt016gymMTdCwc7Yi0lzcAAACAwiUX4mTtV6h50rZurVNORo8ePdxr
nHXWWUm3J51xsvJIaw55Oo9HH3004XbcfPPN7nPS+K+fdevWuWXKlCkT9/rw
hx56yD1PeWgSpb2IjzvuuMDj4GiH1ioHsWYfAAAAQPblQpysfXa8dXfp0iWp
69x9993uNc4444yk25POONm7v1G6jkRjUb2+2mtE52oP4OXLl/uWU44qW0ez
Zs3ivr72g7Ln1a5dO6G2iXJmP/PMMzl9DBs2LOHnBQAAACA/5UKcfN9994XU
PWbMmKSu89hjj7nXUF6mZKUzTtYY7ZtvvpnWY+LEiQm1QWPr9vkoT5Yfzcs+
+OCD3XJaLx4vjW/b8xo2bJhQ2wAAAAAg1+RCnKzxUVuvxju3bt2a1HVeeukl
9zqax5uswrQ+ecWKFe5Yso6xY8f6ltMexd7f/9KlS+Ouo1evXu55yh0NAAAA
APks6Dj5t99+C9mLJ5WcwuPGjXOvU65cuaSvU5ji5PB9v3799dcCZZTb/KCD
DnLLJJor/KabbnLP1TpoAAAAAMhnQcfJI0eODKk3mRxVluI977VWrVqV1HUK
U5zsnYuufNLh/vrrL9O8efOQ16179+4J1aHcYvbcAQMGpKvpAAAAABCIoOPk
6667LqTe2bNnp3S9WrVqudf65JNPEj5/7969IePb+R4nP/744+5zUfy/bdu2
kMdvvPFGU6FCBVOzZk233EcffZRQHcpPrvM0vzvZ7yYAAAAAIFeEz8u1x5o1
azJet/IcH3DAASH1ao+oVHjHT/v27Zvw+UuWLAlpz+DBg1NqT9DeeeedkOfz
wAMPmN27d5tly5aZiy++2FkPPmLECFOyZEnncf0+duzYEff1NYZv1z+nMmce
AAAAAHLFpEmTfONkxT+ZohzQyidVr169AvW+9tprzprlZKndpUqVcq51wQUX
JHSuxkJbtmwZ0p7TTjvNiSnz1ZYtW5z51t7nZF8fjS8rjtaYuX2sadOmCV1/
yJAh7rmDBg3K0LMAAAAAgOzJ9rzruXPn+tYXfmh8c9++fUnVoTFTXaN48eJx
xfuLFi0y5cuXj9qeMmXKONfNR1oDHj5uf+KJJ5qvv/7aefyaa65xf96vX7+E
rt2kSRPnPO1XrbXOhcW3335rNm/eHHQzAAAAAAQg6PXJmbBz504nZ7OeR48e
PYJuTk7QGP3kyZPN6NGjzcqVK92faz12pUqV3N/7Dz/8EPc1582b5+YHS2Qf
qVy2cOFCc/nllztzyWfMmBF0cwAAAAAEoDDGyaJ4R/Fb6dKlffdCwv9Mnz7d
/Z3XqFEj7vP0XUT9+vWd87Rvdb7TuvQ2bdqE7DVNnAwAAAAUTYU1Tpbhw4e7
c4JTzQ9WWPXs2dP9nXfr1i3u87p06eKc06xZs6Tnxyci02vE9b3Kd999F/K9
AXEyAAAAUDQV5jhZlBdM+zx17NjRmWOMUHXr1nV/5x9++GFc57zwwgtO+a5d
u2bl+4c333zT1K5dO+P1yIYNG4iTAQAAgCKusMfJMmzYMCe3s3JOpZJLu7DR
GKo3B3b43srhlKfrjjvucMpma7+sl19+2cnHdsMNN2SlPuJkAAAAAEUhTpbZ
s2c7Y6f5vh9yOuzZs8eJkRs3buz+vitWrGhWrFgR9TzNfa5WrZrTZzJNubhb
tGjhtk//HjhwoNm1a1dG6yVOBgAAAFBU4mT8z7Rp09z9k/0O7Y81Z86coJtp
BgwYYC677DJ3fy+NJ+vYvn17RuslTgYAAAAwdOhQ33hpzZo1QTcNGbB7924n
Fox0bNy4MegmukaMGOH0xUaNGhV4THtcVa1aNenjwgsv9K2TOBkAAADApEmT
fOPk9evXB900FHE2p3afPn0KPPbll1+aiy++OOnjtttu862TOBkAAAAA866R
q2rWrOn0xc8++yxrdRInAwAAACBORi5STjH1w9KlS2c8d5cXcTIAAAAA4mTk
oiFDhjj9UHt5+VHsvHbt2qSPSOuwiZMBAAAAECcjF1111VVOP3zqqafMvn37
zN69e0MeHzt2bMSc3fEcJ510km+9xMkAAAAAiJORaxQXV6lSxemH8+bNM716
9TLDhw8PKbN48WJz//33J30MGjTIt+7Vq1cTJwMAAABFHHEycs3ChQvdfti7
d2/TsWPHrNU9btw4t+7nn38+a/UCAAAAyB3Eycg1GisuVqyYKVGihGnfvr3Z
uXNnxuucPXu2ady4sZM3zL4HypYta1q0aGEmTJiQ8foBAAAA5A7iZOSiRYsW
mVWrVgXdDAAAAABF0NChQ33j5DVr1gTdNAAAAAAAsm7SpEm+cfL69euDbhoA
AAAAAFnHvGsAAAAAAP5GnAwAAAAAwN+IkwEAAAAA+BtxMgAAAAAAfyNOBgAA
AADgb8TJAAAAAAD8jTgZAAAAAIC/EScDAFB0rFixwqxfvz7i4zt27DALFiww
EyZMMAsXLjS7du3KYuv+Z/Pmzebaa681e/bsyWq9X331lVm3bl3UMjNnzsxS
awAAQSJOBgCgaJg0aZI56KCDzKuvvlrgsV9//dV06tTJFC9ePOR+YP/99zc3
3XRTzPgxES+//LKpV6+e71GnTh2nzlNPPTVt9cWie6GmTZs6z3fUqFERyy1f
vtyULFnSXHLJJWbjxo1Zax8AIPu++OILU6VKlQIHf/8BACg8nnzySScGfvjh
hws8tmjRInPIIYc4cWLVqlXNxx9/7NwHjBs3zrkn0M+PPPJIs2zZspTb8eef
fzrX8vuO3nu8/fbbKdcVy9y5c02zZs1C6o0WJ8uMGTPMoYceaurWrWtWr16d
8TYCAILBeDIAAIXXtm3bTOvWrZ3P9v79+xd4XHOcjzjiCOfxMmXKOGOmXt9/
/70zvqvHa9So4VwvFW+++WbMGFlx6O7du1OqJ5qffvrJGRPW9wb77bdfQnGy
6PuCSpUqmaOPPtr8/PPPGWsnACA4xMkAABRebdu2dT7X27Vr5/v4Lbfc4n72
9+nTx7fMzTff7Ja55557km7Lvn37zHHHHedcZ9iwYWb69Om+h9ZQZ9K8efOc
7ww2bdrkrMVONE6WTz75xBQrVswcf/zxKX93AADIPcTJAAAUTsOHD3c+02vV
qmX++OOPAo/rs96OFevQOKsfxZW2TLly5ZLO7aXcYLpG8+bNkzo/ExS7e9dk
xxsnS+fOnZ1z2rRpk8EWAgCCQJwMAEBwlD9r6dKlBY61a9emdF2dr7nB+kwf
MWKEbxn93H7u16xZM+K1FEvadco6tH45Geecc45zvuZe//XXX0ldIxO83xUk
Eif/8ssvTl4v+5wAAIUHcTIAANmj2LRLly6mcePGpkKFChHX6GpNcSpatGjh
XKdatWoRY9L27du79al8NGeffbZbtmvXrgm3Z/bs2SHPr2zZsubCCy80Q4YM
MVu2bEn4eumUbJwsrVq1cs5THrSgnwcAIH2IkwEARdXOnTudOcVTp051Pg81
bpop8+fPN2eeeWaBz1utcS1fvnyBo0OHDknXpb0s7PW1/tiP9ibWHlG23G23
3Rb1mh07dnTLKl91omw86XdoTLZ79+4Zzd0VTSpxsp3bruOJJ57IUAsBANlG
nAwAKGo07qd8VBUrVnQ+8+x/lQP5wQcfdPfynTVrVlrq015Mdg1siRIlzPXX
X29Gjx5tvv3226TX+kbTrVs39/Nca4L9KFeW93N/wIABUa/52GOPhZRXnuxE
eGPRSMfpp5/uzEPPtlTiZM1vt+dq7H7v3r0ZaiUAIJuIkwEARcnMmTPNP/7x
D+ezrkGDBs54smgvXbvW1B7p2PPngw8+cK+nOPzHH39M+ZrRKE7zriVeuXKl
b7nwedCK26N54403QsovXrw4oXZt3brVea3fe+8906tXL2efZr/7j8MOO8ys
WbMmoWunKpU4Wez3LDr0ugIA8h9xMgCgqBg/frwbC5988snm999/D3lccaz9
HKxTp07K9SnOtjHUv//976zkrpozZ477HDR/OxK9Ft7P/Vi5ubw5v3RMmzYt
pXYqnp84caJp0qRJgXuQZs2apXTtRKUaJ2sc3J7ft2/fDLQQAJBtxMkAgKJg
ypQpboys+bGrV68uUEb7+9jPwdtvvz3lOhUb25h8+/btKV8vHhoXts/h2GOP
jVhO+Zm9n/v//e9/o153zJgxIeX1/+mg7w68ezjbQ+u5syXVONm7dlu50QAA
+Y84GQBQ2GnvYDvXWuuEv/nmG99yRx99tPs5OHny5JTq1OdoqVKlnGu99dZb
KV0rEf369XOfQ/369SOWe//990M+92M9X8WP3vKffvppWtsdvv75hRdeSOv1
o0k1Tu7du7d7vnJ4AwDyH3EyAKCwu/nmm93PN439+Vm3bp1bpkyZMk4u7FQo
B5h3rFbzoRM5Nm7cmFS9PXr0cOs966yzIpbTOm3v5/7YsWOjXvftt98OKa8c
ZOnWqFEj9/rKf50tqcbJDz30kHu+ngMAIP8RJwMACrPPP//c7Lfffs5nm3JN
L1++3Lec8lync32sd/5zMke7du2Sqvfuu+92r3HGGWdELLd06dKQ+pSnKxqt
u/WW37BhQ1Lti2bw4MHu9Tt16pT260eSapys/aDs+bVr185ACwEA2UacDAAo
zDSmaj/bOnfu7FtG87IPPvhgt9zAgQNTrlc5quz1qlevnvBx0003JVWvd/7y
KaecErGcxssPOOAAt+y9994b9breNcQHHnhgRnKSzZgxw62ja9euab9+JKnG
yY8++qh7fsOGDTPQQgBAthEnAwAKK+0RbMeSo80tfu6550I+AzXWmqrvv//e
vd4PP/yQ8vXi9dJLL7n1HnfccVHLatzclm3btm3UshdffLFb9sorr0xnk13K
oW3rGDRoUEbq8JNqnKx9ruz5l156aQZaCADINuJkAEBhNXTo0JDPtl9//bVA
mfXr15uDDjrILRMtR3Qi9uzZ4+wFrGtqTne2jBs3zn0u5cqVi1r2tddei3sc
9JhjjnHLag/kTPC2Z8GCBRmpw0+qcbLG/u35WgsPAMh/xMkAgMLKOwe5bNmy
BR7X3OHmzZuHfP6lM3+UzYOsePXrr79O23WjUdzvfT6rVq2KWHbNmjUha7d/
++0333K//PKLez3FlFu3bs1I2+3+SoceeqjzPUO2pBonX3TRRe75AwYMyEAL
AQDZRpwMACisHn/88ZD4btu2bSGP33jjjaZChQqmZs2abrmPPvoobfVv3rzZ
VK1a1bnuEUcc4cSb2VCrVi33+XzyySdRy2qesC2r8Vw/zzzzjFumQ4cOvmWU
B+z888931jGH30MoHp86dWrUHN7fffedE6srbp80aZJvmX379jn7RWlf6vvu
u89ZV56qvXv3mmLFiqUUJ2s9uc5V28O/l8hEmwEAmUecDAAorN55552Qz7YH
HnjA7N692yxbtsxZb6u4bMSIEaZkyZLO48prtWPHjrS2Qfm2tc+Urq+YXGPc
27dvT2sd4bzj6MpTHY3yf5cuXdopq5g+vG2K9StVquS2XzFvuK+++irkdb71
1lvdx/R66zz7WKtWrczq1atDztd8eM371uN33XVXxLZOmDAhpJ7WrVvH83JE
tWTJkpBrKud2IjR+b8fkzzzzzKy0GQCQecTJAIDCasuWLc58a+/nW6lSpdzx
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
JSfDFlts4ZSV55xzzkxsn5uBvGDq8MYbb6RyzZdfftnPV42++vbbb6879tZb
b3mLLbaYf7/zzjsvlfsVQWd4xiqh9hJCCCGEqD6s6+644w7vtNNO83bYYQdv
xIgRoec+99xz3i233OKdfPLJfg5h9CeiHltORo7NEmThOeaYwykrZ31vF5Mm
TarlzjrmmGNSueYRRxzh/fnPfw6NFf7NN994W2+9tX8OvtvtSGd4xiqh9hJC
CCGEaE/i5Cm5+uqrvdVWW60mXxHT2AUy0LHHHuutvvrqTc8V+XHPPfeE5mjC
Njtvbr755pqPZmfk/fff97744ouiqxGJOHUtIvfRE088kdu92pGyt1+QuO3Z
2dqffejPP/+86GoIIXIkizVDZxs7hYhDkjwlxtdu4YUXbnru9ddf75/bvXv3
NKorUmD//fd3ysnE+nr99ddzrctvv/3m9yN8lV944YXUrkvsMnTU5CPr2bOn
H0fuT3/6k6+/Jp/ZUUcd5dtFYAfbo0cP74EHHkjt3lHBL3zmmWf2Lrrooobn
YZ9Ofq9WSqt27VHrCkXkPmIPjntiFzFu3LjM79eIMrRXkLK3X5C47Vmm9s8a
cu1ttNFGftvcdNNNRVdHCJETYeP4QQcd5K9z4pTrrrvO/21nGjuFiEvSPCXY
UHPufvvt1/QeBx98sH/uLrvsklKtRauQ+5px0iUr9+rVy/v555+LrmJi0IER
g91+ptlmm81bddVV/bUlemvXcxOTPU9OPfVUb/LJJ/cGDRrU9NyhQ4d6u+++
uy/nh9kCEI8t7BjlrrvuyqWuReY+QveJXwH7Hp988knm9wuj6PYK0i7tFyRu
e5al/bNi9OjR3qabblrXNpKThegchI3j3333XV3+kKiFvCOGqo+dQiQlSZ6S
33//3Zc7OG/48OFN77HCCiv4515xxRVpV1+0ALpbW2dkl4EDBxZdvdiMHz/e
34uxn2PzzTf3nnrqqQ7nPvzww96ss85aJ7P88MMPudST+2yzzTb+fc8555xY
v73hhhvqno99ZeQXvkkgFzbfLbpI9opt/4gkdlpJ6lp07qN33nnHb9sFFljA
e++99zK/XyPybq8g7dh+QeK2Z5naPy3IO4+uhzVycH9FcrIQ1abZOD5kyJDY
MvJMM83UIRZGFcdOIVohaZ4S1nkc79Kli697aATHmds5/4MPPkj9GURrnHnm
maG6LmTJdoH9zyWXXLJWf2IL4/fciGeeecabbrrp/PMXWWSRnGr6f3IINhlx
+fe//13XTgcccEDD87ELmHfeeb355psvl7qWJfcRNvTUgT6R1/6Hi7zbK0i7
tl+QuO1ZlvZPC+Zc1sdfffWV9+KLL0pOFqIT0WwcX2KJJfz1+NFHH+299NJL
/jhBbMhgwaZ6xhln9K+10047Oa9VtbFTiKS0kqeEONccIz5XM0zMKPanRPlA
r7Xuuus6ZeW5557b+/rrr4uuYlOIaTH//PPX6o3s+/TTT0f67fHHH+//Bn/l
PDC++osuuqj3/fffx/79vvvuW9dGd999d9PfbLzxxv5edNZ1LVvuoz322CPX
tnWRZ3sFaff2CxK3PcvQ/lnAmG32niUnC1Ftmo3j7GNyHJ1HMx566KHauNHI
FrSqY6cQcWglT8n666/vf0MnnHBC0/scdthh/rn46oly8tFHH/n2oC5ZuSj9
UVSwWzV2/aYwr0SF9T+/OemkkzKs5f/47LPParbe2OMmwfatJu4ZfubNwHb2
jDPOyLyuZct9hP2K8Ssoyucjr/YKUoX2CxK3PcvQ/llhbOElJwtRXaKM46x3
oq6v99lnn5ou4ccffww9r8pjpxBpE9y/+vXXX/2YyHw/xNzENu+CCy4I/T1r
Ks696qqrsq6qaIEbb7wx1I/lsssuK7p6ofztb3+rq+vOO+8c+xrYlKYZMykM
fKWpI3a15EyLi5HpTdlwww0j/Y5vlpJnXcsC+zw8B/G08F/PkzzbK0hV2i9I
3PYssv2zRHKyENUnzXGcvCImrmSfPn2anl/VsVOIKHz44Ye+/R92F2EF2zrs
//BRsMHG1czP6ODWWGONUN0Cvg34THAuOktRbnbddVennMzeI2v+soHey45p
w79fe+212Nd59dVXM/fDeeyxx2r1JCdXEs4///y6djn77LOd5+25554tyf1J
6kr/IF+Fyy6MfWtikD/44IP+/nieGJs1yimnnJLrvfNqryBJ+1pZ29AmbnsW
2f5ZIjlZiGqTxprBhngz5npRbIyqOnYK0Qjs5nr37h2qN3SVoP0fdoNGn7z8
8ss3XDPdf//9/nnEmU8LYhdj951FOfTQQ1OrZztCboGwnEkrrbRSyzqutCEv
sl1H/r+skD/N1DOpTES8W/t5XXmuyfPAsaj+2a3WlT3q3XbbrXY+8dA+//xz
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
P/roo8j1DOaJxnYzCVdffbXv55RFXe39FHw6g6BjNfHJ+S//H7du5557rveX
v/zFP270jxT2NZqBX4m5NtfJkrTaKwj9nX5p/IPD+mXSvtZqG9pE+TbybM88
2z8vJCcLUV1aWTMYGIeJJ8PvV1lllUT1qOLYKURUjG0gcadskB8WXnjhgmrV
HOLC4GeRRSHeq/C82267rTY2soYN05MWDf4y9lxCbN1moK8yuW2QO8Jgb4Bz
kOEacf311/vnde/eveF5iy66aK2eDzzwQNN6Gmz5kfLpp59G/m0QdJFco9n3
HaeuP/zwQ92anX2GIHae9jDbrSh1M74icWMh0TZmTz243kDew54YXenRRx/t
ff/997GuHSTN9nKx+OKL+9fF3iGMuH0trTYM0uzbyKI90zi/7BADzs7BHUVO
TrufCyGyJemawUCcxzhrIxdVGzuFiEPPnj39/o//KTFlsJMzdnDXXXdd0dUL
Jct41+uvv37Rj1c47733njfTTDPV3okrVm9ZIMa1nUeZsRw9lkvXxd9uvfVW
b+mll/bPxU47TCf2xhtv1K7XTI+OrM25u+yyS8Pz7LgcZ599dqTnwz/czi9E
LOhWwP6V6zSLVxenrszf5twwPyp8UJvN11Hqhg085xxxxBEN62RD+5l3iH4z
yF133VU3BhDfPSlpt1eQCRMm1OQjvtMw4va1tNowSLNvI4v2bPX8dgA/BbvP
XnrppU1/k2Y/F0JkT5I1gw2xFs3vw+zHGlHFsVOIONjfkF3Yay4z48eP9/UQ
WZQ0cki3Mz///HPNHp9CnuRG9pVlgDaz4yZRllxySX8NTiyMwYMH+/8mni7H
Zp555qZ5nvCT5Nxll1226f1NLp1m9rXMOVNNNZV/Lr7ejeCdjxkzxrdxsJ8L
GYk9LHKIx4VrElOK6wwfPjy1uh511FG1+h144IHOc4jrbM5xfWNR67bQQgv5
52CDHJXLLrusdm9X7khsyex3TI68uGTRXi6MrBMWZ8sQp/0gjTZ00ezbyKI9
Wz2/7KDT6d27d10/I49aM1+pNPq5ECI/4o7jNthcG5u4oM1oVKo2dgoRF75B
5AB73hw2bFjR1RIFwhrZ9Ie55547dq69omDvhLh0Xbt2DbUVwA+ffMic2wxj
V3HooYc2PM/OpYMusRnoujmX3zTSUw8cOLCp7cOVV17Z9H42Jr5Uly5d/Hqn
VdfNNtusVqcwGRe9qmkDVx6kKHV7//33/XPwz40S68mAjQi/wx7aFYcO+ZY4
Kfa7jXN9yKK9Gt1nt912a3pu1PaDNNowSLNvI6v2bPX8skI/ZY5u1MemmWYa
v93Dft9qPxdC5EuccdyGWKTmOydmRhKqMnYK0QrETLn33nt9PQU+aqLzcvPN
N9fGVcbkxx57rOgqxYb+zDqfnH/EZsTuEz/OZ555JlJ8IEAGMOvRhx56qOG5
JpfOAgssEOnaP/74o7fIIov4v0HmyRNiScexn0qrrm+//XatX6233nqJ62b2
tuP4Rhj5G9mOeoTxzTffeI888ogf62TBBReMfP28wY+X54mSkynNvhalDYM0
+zaybM+k51eddunnQoj/kXQcZw8MfxrKV199Ffu+GjuFEHlA/OXDDz88lYLP
bFYwDs4444y1tfCpp56a2b3KjtmHjaLnMrl0dt9998jXf/nll/25h+snydOQ
FLM3HCcHdhp1ZZ/C9Kvjjz8+cd3IF8U5yNTYORPLqBGsL3r16uX/Bvv7KHA+
9sVlhBgS6Nt5ng8//DDSb9Lqa1HaMEizbyPr9kzS/p2FMvdzIUQ9ea8ZNHYK
IfLi/vvvb2qPGbXE8eGLA7Ig/ivmPptssknpfZKz5JRTTvHfA/kQsDvH5ihs
DW9y6TTzdw5i4gBzbfJUZw06cmwyueeoUaN8n+2o81+rdd11111rfcuVFzlK
3eiP5P3iHPa5kcGoVyNMjKhNN900Un8mFjC+YM3yAhfFfffd5z8PPr1xSKOv
NWtDF42+jTzaM+75nYWy93MhREfyXDNo7BRC5AV5psz6ct111/Vz37z44ot+
rhiK8d+jEGOaeLaUN99809fh4CNs/M6y8iUjvrCpwzzzzOONGzcuk/u0C/h+
8i7In8Jan/jqLvBTMPq9JPkS6AvEeeJ+zXRprWJ8QSnE0FxjjTVizbWt1BX7
Tu5L3iGX7XuUurGfbs7BtqKZfy6yAOeS/yvKc6LT5PnOP//8WM+WJzw3z7Tn
nnvG/m2rfa1ZGwZp9m1k3Z5xz+8stEM/F0K4yWPNoLFTCJEnSy21VC2OQnBf
zs5tR3Hl6bj77rtrus0sMPlLKaxrsTkuis8//9zP0UrM7SLBrtTIBI3Wk8ZW
oEePHonvRSxk7oPdcVoxkV1g/290tuScduXHbUaSutKmpn+x55C0bui+WB/Q
R3fccUffLswFsUYGDBjg68ui5Mox7Lzzzv63UGbwKeUdJa1n0r4WpQ2DNPs2
smrPpO3fWWiHfi6ECCerNYPGTiFE3rDeZ6240047OY/buVgol1xyifM88tdh
i5o26KxnmGGG2v1PP/301O8RFXRU5LqhHrfcckth9QD2UJ988smmsb6ZU6gv
7dgK5NhBnsh6bkJv+/zzz7e0Dx23rvjR2rriVupGvN5menty48w777y+/XaV
YD2E7Qnx3L///vvE10nS16K2oU2UbyOL9qxq+wshhCGLNYPGTiFE3lxzzTW+
LXVYLH87T3FYbB7kBo5hp5gm6G/snGDkhSnSD8XE/CHOdNS41EVjYlBiRy/C
wd+b/FqKp58cxhLjC1AEcdtQ34YQQgghhAiD+LRh8fTRD2F3aOTUnj17Os/D
FiaNvKtB9tlnn9q9u3fvnqnNbzMeffTRmi9jnLjReYOf8lprreWNHj3atw+n
vr179y66WqKCYItOPGhyggM+GdiVEPOqjOjbEEIIIYQQaXDjjTfW6ZLJ85sX
1157be2++LlgY1wUN910k29LauqDz3ZZ6devn1/H4447zttoo4282WabzXvr
rbeKrpaoICZfMblAiHONjHzQQQcVXa1Q9G0IIYQQQog0IGatLScT9yYPxo4d
60033XS1+5511lm53DfIN9984w0aNKhOp77AAguUOgfBCy+84K255pq+D0+f
Pn18fx4hsgI7Z+JMr7TSSt4555xTdHUaom9DCCGEEEKkAbbORj4kd3xYvNc0
wZbTxN8uwi6SPLnEnyCnAc8czA+NLkoIIYQQQgghROcDna4tH2aV8ynIHnvs
UXdf9D74KWdV9tprL2/LLbf0VlhhBW+uueaq0x27inRQQgghhBBCCNE5Oe+8
8+rkw7PPPjvzexILrJGMWnRZffXVM38HQgghhBBCCCHKyRZbbFEnI77++uuZ
3o88pcQDKloWblTCckcLIYQQQgghhKg2v/zyi58j2M7JlCXkIl5iiSUKl4Mb
FXyVv/3220zfgxBCCCGEEEKIckLeI1tG3HvvvTO932effeadccYZpS7XXXdd
pu9ACCGEEEIIIUR5Ofroo+vk5FtuuaXoKgkhhBBCCCGEEIVBLlQjI3fp0sWb
MGFC0VUSQgghhBBCCCEK4euvv67LjaQYz0IIIYQQQgghOjM33nhjnc31iSee
WHSVhBBCCCGEEEKIwth1113r5OSnn3666CoJIYQQQgghhBCFQNzprl271snJ
5IgSQgghhBBCCCE6E59//rk3fPhwr2fPnh3yBl988cW+z7IQQgghhBBCCNEZ
GD16dAfZ2FWmnHJK7/fffy+6ukIIIYQQQgghhCiAV155xfvmm2+KroYQQggh
hBBCCFEoL7/8srf11lt7k002mff4448XXR0hhBBCCCGEEKIQ3nrrLW/bbbf1
5WNjay45WQghhBBCCCFEGfn222+9cePGZXoP9MivvvqqN3LkSMnJQgghhBBC
CCFKy4QJE7xevXp51157bS73+/LLLyUnCyGEEEIIIYQoJR999JG30kor+TLr
J598kss9JScLIYQQQgghhCgbP/30k3f22Wd7s846qy+vTj755N4555zj20Rn
jeRkIYQQQgghhBBl47333vP22msvb/bZZ/fl1RVXXNH//+uvvz7ze0tOFkII
IYQQQghRVnr06OHLq/fcc0+HY/fff783zzzzJC4bbrih856Sk4UQQgghhBBC
lJFPP/3Ul1WnmGIK74cffuhw/KmnnvI22WSTxKV///7O+0pOFkIIIYQQQghR
Rq666ipfVl1jjTVyva/kZCGEEEIIIYQQZWTXXXf1ZdVBgwblel/JyUIIIYQQ
Qgghysi8887bUFYlJvZnn32WuIwbN855XcnJQgghhBBCCCHKxptvvunLqdNP
P73366+/+iXI8OHDa/JskrLMMss47y05WQghhBBCCCFE2Tj//PN9OXXzzTf3
PvjgA2/NNdfscM7rr7/uHXPMMYnL0KFDnff+5JNPJCcLIYQQQgghhCgVW2+9
tS+nbrHFFt7KK6/svfrqq7nd+/bbb6/JyYMHD87tvkIIIYQQQgghRBjbb7+9
L6cuuOCC3t13353LPZ9++mlvlVVW8aaeeuqanDzttNP6Ou277rorlzoIIYQQ
QgghhBAuyJeM3Dpp0qSiqyKEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CFEJdtttN2/VVVeNXFZbbTXviy++KLraQgghhBCik/DKK694//nPf7zHH3+8
6KoIIToBEyZM8Lp06eKXHXfc0Tv33HO9q666ypt99tm9P/zhD17Xrl29G264
wRs2bJi39957e5NPPrk366yzepMmTSq66kII4aO1kxBCVJtnn33Wm3LKKf21
KYX1qhBCZMltt93mTTPNNN7IkSNrf5s4caI31VRT+ePQBhtsUHc+snSfPn3y
rqYQQjjR2kkIIarNt99+6y200EK1cZ7CuM/4L4QoFz/++KP3zDPPFF2NVNhv
v/28U089te5v99xzT20cGjx4cN2xY4891rvkkkvyrKIQQjjR2kkIIapP3759
a2P82muv7U0xxRT+vxdccEHfLlIIUTw//fSTd95553ndunXz1l9//aKrkwpj
x471fvnll7q/DRgwoDYevfrqq3XHXnzxRe+rr77Ks4pCCOFEaychhKg2F198
sT+u//GPf6zpbh599FFvlllm8f/+17/+teAaCiGGDBnizTPPPLU1WVXkZBdL
LLGE/4w8rxBClBGtnYQQotq8/PLL3tRTT+1NO+203u2331537K233vIWW2wx
f7xHhyWEKI7hw4d73333nbfRRhu1JCePGzfOt1vOu3z55ZeR6vfxxx/X9gL2
2GOPRM8ohBBZorWTEEJUnyOOOML785//7D3//PPO499884239dZb++cEbSOF
EPmDP28rcvL48eO97t271/nT5VFOP/30SPUjrrX5zY033pjoGYUQIku0dhJC
FM0nn3ziXXTRRd79999fdFVEyrz//vuZ5T994oknMrluu5Dlu60yzz33nPf5
5583PKcMfatVORmwDcRWMBh7hjit6D+SFH574oknegceeKC33nrr+fmb7Osv
tdRSkeq2ww47+Ofze9aa7UiUvhTGRx995McAv/TSS30bgjgoN02+IP9ceOGF
3tVXX+2NGDFC8lBGsBYcOnRoB72tiE5nWBeUYX4WImvGjBnjnXzyyd5KK63k
TTbZZP566aijjiq6WpUBH5rDDz+8pfLGG2+0VIf77rvPm3nmmf09kLR59913
/fX+Flts4duXdjbC3u1///vflts9rfYvG6NGjarZMt90002h55Wlb6UhJ8Nh
hx3WQed7zjnnpFRLz1+TEcfaxLWhvPTSSw1/8/vvv9fyJq+yyiqp1SUvovYl
Fz/88IPft8z+Bc9/6623Rv69ctPkD7GO+/fvX/NHnXPOOb1///vfRVerErDX
dPzxx3vLL798bS3IHlzZIA7hMccc422yySZez549vRlmmMH705/+5K244ore
tttu669f77jjDl/G79Gjh/fAAw/kXscs11xloSzzsxBZQ9yD6aabrm7tJjk5
PdiT3X333f1xPMw+0sxJYeWuu+5KfH/WzeiJBg0alOJT1YMuZY455vDnJPah
OwuN3i02GWnZzz788MMFPF36jB492tt0003rnq2ZbFOGvpWWnPzzzz97vXr1
qnv+rl27+jrJNEHPZuSIgQMHNjwXG0ZTlyzHiLRJ0peC9OvXr/bbQw89NNZv
lZumWN577z1v/vnnr733MFtcER3slaeffvq6Pl0mORm7jZVXXrmufrPNNpu3
6qqr+ntlxLt2zZ9PPvlkrvXMY81VFsowPwuRBxMnTvTmmmsuyckZcsMNN9SN
3ew1sqZCnwPknyGnAbrD6667zltttdVq5yax3UFXss0226SuswrjnXfe8Wad
dVZvgQUW8NcwVSbKu/3HP/5Ra791113Xj9NJfp1PP/3UL7aN7EwzzeS3PeXN
N9/0Lr/8cm/uuef2j00zzTR+38gK9oRff/11fwzICp6JPWeeObgnFEW2Kbpv
pSUnA/Y7xKIJ2keTnzlNnnrqKf/a9KNJkyaFnnfaaafV6oFutuy02pcM2Ot2
6dLF/x17mOxhxEG5aYrHxD6mHHzwwUVXpxIw19jyZhnkZOI77LLLLnXf+uab
b+6PcUHYU2ausHUQzNd5kPeaqywUPT8LkRfM9ZKTswPbMHucP+CAAxqez7pt
3nnn9eabb75E9zPruO233z7R75OAfRM2jEsuuWRuc1MRRHm3yD6cg0+D2Qsx
sC9u9wXm1iB33323f2zjjTdOvf42tBX3eeihhzK7B/tBrBvIwcteQRLZpsi+
laacDBdccEEHnUcW61FshZq1LX7NnIP+uZE8XRbS6EvAfoX5HXrpOHTW3DT4
kpQJ8nzbcpNIB/ahyiIno6M0cxSFPcabb7654W+eeeaZmo3kIossklNNi1lz
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
HJXmt43iu7Z6n7yw10SUTz/9NPG1TIw29j4aYfuZPPDAA4nv16dPn9p12OdE
txDXZpzfmTV/XLmS+Bn4w2RRouiOXLTybu2+TWG/uyzkLScTt87WrSeRk1vp
W2UFGyAzpucV5xSyihdlQw4a9FlmLzYtObmVvnTvvfc23Zc14L9sy+OsuYNg
mxw2NxqijOM9evTwz8HOuywwn5IrNmz/vBVamWvot+a35NtpBPsW2MWj8ydW
RJiMmCV2ziPGXRue2ZYvXPFXbDk6TE4mDlOYnGzHCaNgIxEEfyDbX92W6fIC
n1a7ns3ymwOypPGlcOVMNcw111z+Oa6c3TbsT5k+2Yio6wJ0xkHZEb019szU
lz0pc5z9DPoDfgn4a7vmuLT6sx03iz2rICamZHDfoRFVW/uJ9sXOxera68G3
yZalm8VEt/O6hcmW9hgcjO+HDZUda5vCGICMQLwDYhgsuOCCte+RveCwazey
S231PnlAHe1Yoq3ahGH7w3WaxSGw40pgw5cU7NRbkevs/AdJbIyzjHmYdI2e
9N2yprZ9/ihl8qvPW07G/tR+F5deemms37fat8oIz8QYwTOttdZavvyXB3nF
izIwfqUpJ7fSl+LIyax/zblhekt05s3W9c3GcfZSOY5MHiW2WBVoZa6JIyfj
d2nfx6WvzRpbR0np37+/b/eKDGLrKSjEV0SOol+Z/OnEhjPHe/bs6bzHMsss
UzuHeO429K/gXEQuZ8YfQJ9v4r2agt8e/Rk9b14Q49reU2C8R8fryl3G3/C1
Xnrppf1zsdMOy3H2xhtv1K5nnjkMZFfXOwwSdV1g26PQ3sQZwh6SfSH2ofBp
MMdZC/O+iTWInbiLtPqz7bfOnqO9Xjb2C8jKUani2k+0L/g6mfYnjpeLzTbb
zD++yiqrhF6HNRnjjN2f2MNiX8fAuIM/lS2fEnOAPW9775f1lokjGlbYK0SO
NBAjgL1q+3d8r9iphMXWS3KfPOA9Mdewd2XXhechJwB+qkmuaeze0Ms0gjHK
vJcNNtgg6WP4MpOpO/ugcbHz8Q0dOjT27xmrsUfKoiTV5cZ9t+TdoL1YzwT7
JnqlJH0hC/KUk9lbDq7D8Ht85513Il+j1b5VNhg/6U88D36ZLl1lFhQRLypN
ObnVvhRHTkaPas4N89e0c3m5xpgo4zh5ajieNEd7O9LKXBNHTkaHZ/cV9tbz
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
XbKIF9UMcgrNP//8dbrupZZayttll11yub8QQrh44YUXfJsa/Gz79Onj+9wK
IYQQQojOR5XjRQkhhBBCCCGEEEIIIYQQQgghhBBCCCGEEEJUDfK2rrrqqrHK
qaeeWnS1hRBCCCGEEEKITBg4cKAfy6dHjx7eEUcc4Q0bNszbf//9azF+dtxx
R+/666/3zj77bG+xxRbz/3bOOecUXe224ZVXXvH+85//+PsRQpQZ9VUhhBBC
CCH+xzLLLOPHlvzxxx9rfzv66KNrcvITTzxR+/ubb77p/23MmDFFVLXtePbZ
Z70pp5yy9i7PPffcoqskhBP1VSGEEEII0SrIlM8880zR1WiZzz//3Jtzzjm9
CRMm1P19pZVW8tfKM800k/fbb7/V/v77779788wzT97VbEu+/fZbb6GFFqrL
v4McgjwiRJlQXxVCCCGEEK3w008/eeedd57XrVs3b/311y+6Oi2DvP/WW2/V
/e2bb77x/vjHP/pr5W222abuGHLyiBEj8qxi29K3b9+azLH22mt7U0wxRS1X
bnBfQogiUV8VQgghhBBJGTJkiK9LNevJKsjJLm666abaM1566aVFV6ctufji
i/33x37D4MGD/b89+uij3iyzzOL//a9//WvBNRTif6ivCiGEEEKIVhg+fLj3
3XffeRtttFFiOXncuHHeJZdcknv58ssvI9dxr732qsnJH330Uexn7Oy8/PLL
3tRTT+1NO+203u233153DN29iYWGXYIQRaK+KoQQQggh0mK//fZLLCePHz/e
6969e50fYB7l9NNPj1zH+eef3/9Nz549Yz+f8PyY4X/+85+9559/3nkcu/at
t97aP+eXX37JuXZC/B/qq0IIIYQQIi1akZMBm0bj/2vHzCG+LHqbJIXfnnji
id6BBx7orbfeet7kk09ed/2llloqUt1MPGvKwQcfnOj5hBBCCCGEECLI+++/
733xxRdFV6OteO655/zYy42w8xMVSatyMhx22GEddL5p5iSm/5166qm1eDyU
l156qenvzj///Nr5999/f2r1yZso/SkMbM1vu+023zcbW/t2Ie64k3eu3LJ8
v6KcxOm/ZcjzrP7cHGwQLrzwQu/qq6/24z/KJqF4fv31V+/VV1/17rzzTu+x
xx7zxo4d6//Nhu/w3nvvLaiGQogqc99993kzzzyzd9FFF9X9/b///a93+OGH
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
     
     "], {{0, 789.}, {485., 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->144],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{457.96875, Automatic},
   ImageSizeRaw->{485., 789.},
   PlotRange->{{0, 485.}, {0, 789.}}]], "Input",ExpressionUUID->
  "17aba3c8-b0d6-4503-8c34-5aeb6db09bb8"]
}], "Text",
 CellChangeTimes->{{3.8195169225753107`*^9, 3.8195170002971773`*^9}, {
  3.819517064419828*^9, 3.819517124116644*^9}, {3.819517224118738*^9, 
  3.8195172999497128`*^9}, {3.819517418178936*^9, 3.819517422037269*^9}, {
  3.819517481962207*^9, 3.819517487605685*^9}, {3.819517638450089*^9, 
  3.819517727482862*^9}, {3.8203362330076313`*^9, 
  3.820336233909343*^9}},ExpressionUUID->"4f3b1b54-644b-4019-a316-\
942641d5f6e5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Basic functions", "Section",
 CellChangeTimes->{{3.8198032565644073`*^9, 
  3.819803259056575*^9}},ExpressionUUID->"79167f5c-74bd-4aae-9d47-\
e57aaab8954c"],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{3.588307619571228*^9},
 CellLabel->
  "In[902]:=",ExpressionUUID->"677eecc4-b277-4042-997c-961eb353bd5a"],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{
  "\[Alpha]", ",", "\[Beta]", ",", "\[Mu]", ",", "\[Delta]", ",", "\[Mu]1", 
   ",", "\[Mu]2", ",", "\[Delta]1", ",", "\[Delta]2"}], "]"}]], "Input",
 CellChangeTimes->{{3.817286594550333*^9, 3.817286603898861*^9}},
 CellLabel->
  "In[903]:=",ExpressionUUID->"2f534af6-d767-4710-925d-2550d7fea468"],

Cell["Density function", "Text",
 CellChangeTimes->{{3.81929746147908*^9, 
  3.819297462986555*^9}},ExpressionUUID->"1008ae45-8d12-4fc1-b941-\
bc4f6983873d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"q", "[", "x_", "]"}], ":=", 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["x", "2"]}]]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", 
    RowBox[{
    "x_", ",", "\[Alpha]_", ",", "\[Beta]_", ",", "\[Mu]_", ",", 
     "\[Delta]_"}], "]"}], ":=", 
   FractionBox[
    RowBox[{"\[Alpha]", " ", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"\[Delta]", " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["\[Alpha]", "2"], "-", 
          SuperscriptBox["\[Beta]", "2"]}]]}], "-", 
       RowBox[{"\[Beta]", " ", "\[Mu]"}]}], "]"}], " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"1", ",", 
       RowBox[{"\[Delta]", " ", "\[Alpha]", " ", 
        RowBox[{"q", "[", 
         FractionBox[
          RowBox[{"x", "-", "\[Mu]"}], "\[Delta]"], "]"}]}]}], "]"}], " ", 
     RowBox[{"Exp", "[", 
      RowBox[{"\[Beta]", " ", "x"}], "]"}]}], 
    RowBox[{"\[Pi]", " ", 
     RowBox[{"q", "[", 
      FractionBox[
       RowBox[{"x", "-", "\[Mu]"}], "\[Delta]"], "]"}]}]]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.817123705248169*^9, 3.817123770873743*^9}, {
  3.8171247514747868`*^9, 3.817124769869488*^9}, {3.817231530959483*^9, 
  3.81723153431663*^9}},
 CellLabel->
  "In[904]:=",ExpressionUUID->"df46f18d-4c0e-48c7-8ca3-64101056ca8c"],

Cell["Moment-generating function", "Text",
 CellChangeTimes->{{3.819297465043104*^9, 
  3.8192974692861156`*^9}},ExpressionUUID->"49a8e754-035b-4b81-9c4e-\
1daf568f5236"],

Cell[BoxData[
 RowBox[{
  RowBox[{"M", "[", 
   RowBox[{
   "u_", ",", "\[Alpha]_", ",", "\[Beta]_", ",", "\[Mu]_", ",", "\[Delta]_"}],
    "]"}], ":=", 
  RowBox[{"Exp", "[", 
   RowBox[{
    RowBox[{"\[Delta]", " ", 
     RowBox[{"(", 
      RowBox[{
       SqrtBox[
        RowBox[{
         SuperscriptBox["\[Alpha]", "2"], "-", 
         SuperscriptBox["\[Beta]", "2"]}]], "-", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["\[Alpha]", "2"], "-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"\[Beta]", "+", "u"}], ")"}], "2"]}]]}], ")"}]}], "+", 
    RowBox[{"\[Mu]", " ", "u"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.81714488524752*^9, 3.817144945501318*^9}, 
   3.8171466574722013`*^9, 3.817231541452812*^9},
 CellLabel->
  "In[906]:=",ExpressionUUID->"62641520-ab80-486c-a328-b1a6648bb1f2"],

Cell["Standardize NIG PDF\[CloseCurlyQuote]s by setting location and scale", \
"Text",
 CellChangeTimes->{{3.819180980682508*^9, 3.819180994816647*^9}, {
  3.819297508285606*^9, 
  3.81929751691397*^9}},ExpressionUUID->"5086423d-4309-4378-8c75-\
8bd737c25531"],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"\[Alpha]", ",", "\[Beta]", ",", "\[Mu]", ",", "\[Delta]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.819181265897176*^9, 3.819181270008271*^9}},
 CellLabel->
  "In[907]:=",ExpressionUUID->"a016c5fa-7cfe-487b-a3be-788f8adda5fa"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Delta]s", "[", 
   RowBox[{"\[Alpha]_", ",", "\[Beta]_"}], "]"}], ":=", 
  RowBox[{"N", "[", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Alpha]", "2"], "-", 
       SuperscriptBox["\[Beta]", "2"]}], ")"}], 
     RowBox[{"3", "/", "2"}]], "/", 
    SuperscriptBox["\[Alpha]", "2"]}], " ", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Mu]s", "[", 
   RowBox[{"\[Alpha]_", ",", "\[Beta]_"}], "]"}], ":=", 
  RowBox[{"N", "[", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"\[Delta]s", "[", 
       RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], " ", "\[Beta]"}], 
     SqrtBox[
      RowBox[{
       SuperscriptBox["\[Alpha]", "2"], "-", 
       SuperscriptBox["\[Beta]", "2"]}]]]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.819181017975013*^9, 3.819181070134227*^9}, {
  3.8192986797121353`*^9, 3.819298691596863*^9}, {3.8192988294233227`*^9, 
  3.819298830901347*^9}, {3.8195202649413223`*^9, 3.8195202878196363`*^9}, {
  3.819817722055141*^9, 3.819817724989627*^9}},
 CellLabel->
  "In[908]:=",ExpressionUUID->"af36ac32-4917-4e0a-bb85-a67952dc3172"],

Cell["\<\
The NIG is implemented in Mathematica as a Generalised Hyperbolic distribution\
\>", "Text",
 CellChangeTimes->{{3.819297537154014*^9, 
  3.819297557189671*^9}},ExpressionUUID->"5d8ac2bc-3320-4069-be99-\
8d7cd107855e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"g", "[", 
         RowBox[{"x", ",", "\[Alpha]", ",", "\[Beta]", ",", 
          RowBox[{"\[Mu]s", "[", 
           RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], ",", 
          RowBox[{"\[Delta]s", "[", 
           RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}]}], "]"}], ",", 
        RowBox[{"PDF", "[", 
         RowBox[{
          RowBox[{"HyperbolicDistribution", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "1"}], "/", "2"}], ",", " ", "\[Alpha]", ",", " ", 
            "\[Beta]", ",", " ", 
            RowBox[{"\[Delta]s", "[", 
             RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], ",", " ", 
            RowBox[{"\[Mu]s", "[", 
             RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}]}], "]"}], ",", "x"}],
          "]"}]}], "}"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Alpha]", "\[Rule]", "10"}], ",", " ", 
        RowBox[{"\[Beta]", "\[Rule]", 
         RowBox[{"-", "9"}]}]}], "}"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"g", "[", 
         RowBox[{"x", ",", "\[Alpha]", ",", "\[Beta]", ",", 
          RowBox[{"\[Mu]s", "[", 
           RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], ",", 
          RowBox[{"\[Delta]s", "[", 
           RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}]}], "]"}], "-", 
        RowBox[{"PDF", "[", 
         RowBox[{
          RowBox[{"HyperbolicDistribution", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "1"}], "/", "2"}], ",", " ", "\[Alpha]", ",", " ", 
            "\[Beta]", ",", " ", 
            RowBox[{"\[Delta]s", "[", 
             RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], ",", " ", 
            RowBox[{"\[Mu]s", "[", 
             RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}]}], "]"}], ",", "x"}],
          "]"}]}], "}"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Alpha]", "\[Rule]", "10"}], ",", " ", 
        RowBox[{"\[Beta]", "\[Rule]", 
         RowBox[{"-", "9"}]}]}], "}"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], 
  "\[IndentingNewLine]", "}"}]], "Input",
 CellChangeTimes->{{3.819298701507745*^9, 3.819298743114678*^9}, {
  3.819520270405274*^9, 3.8195202839273767`*^9}},
 CellLabel->
  "In[910]:=",ExpressionUUID->"5f95c403-71ea-440f-b468-a439f7b71b72"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    GraphicsBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJwtW3k4Vd/3vobLdY0JTURCkiSk6J6zNsqUJEnmzH2KhJAhklCZkqEklJkS
MoXEJSRJyDzeEJIyZh6+9/c8v7/O8z773Wutvd61zl7nj7PP+oa+HSOBQLjA
RCD831MGBCa3triptOhIuRszbnBjZf+DlVVuKoH7DVP6lhvkFx6VmP/HTQ2P
mp/9yeUOcpJnrcd+c1MrGJ6rPzzsDse3BfY2dXFTfY9OFBs6uAMamW18lsdN
bZmZmNr+yx307399LX+Zm+ojtMpw4Y8H3PoWeP1KJRd154WYprbdXhD226Nr
oZSLup5kVZIo4wUprFdVAgq5qDGO5nqeql7QBGf5E7O4qHuZa+rNrnmBaD7/
h7YoLqp3WpTgaLkXNEdmcOBXuKjjHNn3lyy8QUK/4TUfDxd1lo9dJ6zQB9rb
2SerrTipitG5BVce+8Fd2+LK12acVNmjxLt/Mv1AZsEiOvYSJ9Uo/dLavUo/
eLC9gHL1LCf13UFz8ZHffoDpGz3iUeKkjvWPvHLQuAMZ39IULvNwUpXsRind
BH/wbMTurFdyUI9nnfF/W+0PQtQbfMcFOaj+2y2EDl8OgCbeY27KOzio3Foy
RHfHAPC2W/2O8XJQm+qEI+u9AqCTHBR9isRBvapm9jo4JgAiL8bz6i+wUwlc
HBU+jQHA9LuW53oTO7Uw8z9fOHEPfvHv5ky9zU7FEi00LPcEQrFDLZF7gEzl
tcjPzmUIhhMiTkczusjU4z7vns7zBkN5+w5zrI1M5Y+tFFQXCwYq5lDk8IlM
1UrxFODTCIZGbl6bhrdkqlCQ0D+D8GCgFV6m3g0mU404QwZvCt4H8vqq98IR
MpW4zL/b7fQDsAw7OtMTwEYVMpxrJNWFgHdRVPBXXzbqCYG/BundIRDbPy9Y
7clGZWjwUNWbCoFG6RKtLCc2ari/rGvr9lCQ/6qc6mHCRlWRXzgTYBMKLFyn
DLfLsVFPnmOHTGIY5DwyrND5QaJGvhm7qn0xHJajfB5UAYla7HmRU4k3EsYF
qyfVlUlUXfyQ4freSOjMYDnbrECinrZ5Vf35UCQUlj/eNnCQRN3f/Vjk3ulI
cBrOjF/dTqKG7+8adPaKhJGj7TnHJlipatFETxiJhOYW6dbXkazUiO4Uykjl
Y0jlGtwV94OFih9oNjoUFw1RpsCq1M9C/VUwbO+SGQ0BWS8XejpZqG/25Rh+
LIkGa1Wbb3uaWKg3Nge3QjqiQdRjIvBFCQs1QbDB69X2GEgZmJvOCGWhXkza
KSUXFQMvc1jri4+xUHmDL/ZlxMVCgvZR1+8PiVRZguTIua9PQYxdu7ElkEj9
O/9O6vngU3j9xVq0+Q6R6t9UtTA3/RTKdWLaGtyJ1JKrH+UbeOOgR3dJrtKK
SE2WoV4iG8eBwIUP81lKRKpZfYzgv/E4eGSq5e73i5mqJfWWKZ07HgIcrTwP
ajFT63skNIIfJMBghEVCuRozdSlx38ZaUgIovzWlnsGZqeVuB9G94gSY+3eR
5CTPTH0w8DulfjgBrO5oxxUIMVMtpPcbiOKJgKLkS0/OMVGfjkjpKC0nwuY7
4vLZ50xUuSGzz+reL8CH6dUt1z+MVPFzV84EmSWD0zMLFssJRmpKhZSiytVk
sD6yPfbsCCM1W+mtOYtHMmib3i6Q7GGkPnm2eDvnUTLsLNT9M1jLSM0831nw
38dkKLKetz6TwEh1GsE/ZEinwN9qiq7YGUaqQMzdY/+xpIKV/zexziwGakBf
zKHg7jQw7HmBD6QyUC+e3rnTezwNtOWcjUaTGKgnaXiM52IaKIzyhM3FMFAT
lFmNYvnSgaSpP891l4F6+8CNTt3z6ZDL3VGtYcxAJXFxMjc0pcNaUq9FGRsD
NaTyy1uWpgyI/fAzLuEagYrZhJ6x/JMFFp7xfsftCNRqVrOId4RskJQ/Z9t2
mUCNsLK5J8SXDeVZpUdIFwnUoUStXP6T2TAYHVp/EwhUh69qsqUPs+HAtaML
2nwEqo3JY/Tt4CtwPbyaNOezVbXLnVT72P01lA9JcuSIblZNBR+2GsJy4TaF
4U38zs2q52a33mdfyAXsWc/Zh1ybVcci/hjdu5oLVP2QR/arG1WhPRuBtrG5
8KnuN+++to2q5rx9pUN/cqH9de6uJ3c3qlbqi3VrkvPg7y2FA/609aqnV2OL
qkLyYT8PUjVIWqtKPaed/nhHAUTI/vC+Fk3HsrltSeIFsKwXUOj/YK2qSSHj
Xol8ATQ9rhV747pW1RhSE0bUKwC37VqsLBprVcXNnkz7HxZAvYB+07vp1apb
B9WbrDYK4JqQreEeldUq6opK3b6/hVAg9eDa8Mhyla/1EerZuWIQbrUsO9Sz
XJXzOzxxjLEEwm4pkdybl6u+8pQ6hG4vAbvayXTWsuUq+Ve6y8sKJbDT4uwP
6YjlKkG/o2m2niXg+5jX6NaJ5aqBZz79gQzvQHM54TRH+FJV2naTdSGhUhiq
eyuiqLhYdWZB+I2NTzn8lI6VqyqZrzp8bWe3rm8VbPPLVpRhmK3Sf07y+zFb
A9KK09Lp81NVZr6XU3Kc6+HeqT8tZZ7jVW//7F1vaW8EfoPcSOMdw1VtQebJ
vp++QcFiHXeDWG/VgeK33MpebZDe9zP8V2BzVXxdVYXP/Q4wPy9Y1GdTVMXE
ez7kSHA3lJF9OmrcC0EmTcdJ3KkPXh7m/54nWgSLDL5HTb37IFgvryXhWxEY
ueGVocF9YPBk5IvHwRK4vny1pT+pD2b26dRIDZTChPNOXsq3PpBQEsqLOlUJ
ZrrXjbpl+uFz4eVTbx/WwuzyH+rniX6g1El/PECrBYGADmnxhX7I71xRSVKs
Aw4Ky9ytrX54shINoSN1MBvAxc0kMAC20KBsh32CGx5tSjmqA7DVKHt01+xn
2NP3aUEmfgCODTPsvWv0DUQiGRV4VQZBpvzSrGz2NxDdPJ17Q3sQJKLe1NJW
vsF2n2LOmguDwJ6cc+zl2RZwPSFJOm0/COt6Rv1bf1tAJPtrKTVkEAby8w5W
HW0DxopSDvfWQehNMNm+w6QN5J8OM2zvHYTOB8QNp4A2cGsT30wdHoRmS9OW
vd/bYClVITJpfhAqeVhv+bl9B0HM5+0c3xC8cLaoxd61w+aINKwZDEGCGVtu
7FA7PJLbNV5uNgRxmkVP/7B2wEpn4jMH2yGIFCE7JBp1QJCd5fMXN4fAv6V4
28ZKB+R5GnnoPh4CK1nOyxWULgg0fmb46vMQWAiWavLZdYHufVs+h5YhMCHZ
yDmGd4Ee8qzd3TUE+rRSouBgF0hpTbuojw6BaqRtjs+dbtCOlVf+sjEE+2fe
ryjX9EBwbfhasQANbn9VC1z40wN3rN69qt5Fg85XX7hyd/UCFrdKrhGkQYhd
3/59Lr3gr9x976UoDWZ6V8+yivSBT+TDrtbDNNAuDeimnumDjHj3SH9ZGqTF
km28b/WBI6+J2n55GlzS2+35p7kPxgyzlU+doEFlnVLKd99+4FoNH5tVocHO
1Grp8Ox+CHQvHsNO0cDVX+udekc/1GF7D/iq00D8pHFTmfQAqHsqs3do0yAs
33PxRd8AcO3raBnXp8FYOOGuMStdB2YPtS8GNEAOD9i3yw+CtPtH5WRDGsyL
x4kE03WuUDlhLGZCA5Pn77QdlYbg1svE6kBLGhR5Qoe43RBo9XXVrVjRgMvw
0+WhyCH4r3JvlKUNDap5utz0J4bgZLqdGJM9DThv5W0RyTRY/XjkPX6FBuV2
87XDwjR4VPf8vcN/NOBT8zmXcIYG19nW4p9do+8/WsXnRbdb31yrHe9AAycR
pt6Lt2igGDlIDHOkwR5ujRdy4fQ4i94XOV2nQcNGiC13Kg16Rr+DqhMN3Kea
D06V0uDUs9RHLDdoINrHO93QTAPTvJyw93Tc/NmwKH2UBnrrHsJWzjTwKY33
ClilAf9opOwSHUtmDuKXeX7Ag9lHWb4uNGiPFWWmSPwABZdtzgt0fDfQ/vNO
yg+w4nx/w9SVBjI3X0X8O/8DhhxPRhbQcZ/V3wttV37Axe/a5St0/EBPblee
7w8g1r7ulL1Jg2PgMRga/QOUMg41X6Lj4cPlqf9l0+05pj50ouNHgpv/na76
ARqU5Vk3Oqawq8qIdvyA07sFZ67R8a+VoPnNSTr/Cdd1PTp+MvG5tI8wDOAz
cF6cjtW6OP1KBYZhyS/9/i+6/5m682qx0sPAsxS1lEDHCUWxJFfVYbgQPhwC
dKyV2vNV12gYWpd+SLXSzzcTlGtfd30YlgWSTxrQcdx/97ZO3hsG3qixxnp6
ftAZo7iCuGF499TxoyQdTxw+fPRg7jBsjGxxe9PzG8nD2Pji4zCEuvg/L6fr
cWK+01qgZxhKpYf1Jul6PSj1j2FiHoGLnf4/Beh6yj6/eNh71whUVnA/307X
u9tXqn5GZgSmFMQPbF2l66HWvjRgPAI8tUHOKfT6aRHPjjS4MQLzekPMJvT6
8iT5HfwSOALyQwNCBDt6PXw9YFqaNwJPV4jhO6xp4Jy/Pi9TNwIJ+bzvH9Dr
d2d0a1h67wh8Px8mNGFBg/+MfCqjiKMwvb9Z1sWUBjwn9S6x7RkFMfsr5fHG
NCgVEp+5IzsKUkbbpAou0YA00rzvuukoHMpLcnp1gQb5danlI86jsH7cVCj0
PA2MsjwvmASPQsi1fjvjczTIui4apPF2FMiuV70q6f2osew+sY/1JyT65WZm
IRr87dW+Gyf4E57axYksYHQ9Pwjv5pb7CRXPypOlT9L7NeDzmXWzn+D8bcnD
9hgNgjmF8joLfsKU5c1HfyTp9Tczq3G24SeUvtju8EKc/j5qq6d9HPgJuSOn
GjD6+0cizpn3LWkMmkVef4I99L4SrXUPtRiD0WljyUsc9P4iPuNidBuDyrlF
MwcSDQQmrmd6PhwDoQitZw7MNLB/s6PHrmgMGu+X0S4vDwHLCQcKIo/D/APf
o+EdQ3D6LC/Tv+JxaC8wu6jyYAgirNhmVz6Pw3jj2dQovyHodicMbQ6Mw/NU
lf4qtyG4lvS3nMQyAZn9Fc1vLOn86UZXQcMJ0G78xNGpSOc/vjestjgBGk0p
Sjr9g7Avw7tFk/wLDtymZV5sGYRr5S6VZ/f+gtCwwePKtfT7afhy/CX1X5C/
n5wY85rOV6DoOzz5BeFRau/DPen8zoXqKMVJmPZdOxTOPgiFk7/znmpPAiMn
9YD6xgCsbw4nJlhMwskKI7bevwMQcaDVKyN4EgZtBgKjWgeg0PPN0fLOSbj0
w7FAPZbO322f/MPjNxwR8Wmj8g/Ao8td/rLvpkCpdjNMa40+D0xRYKxpCrrq
rGo6x/rAzytl4/nwFFgtGh1XbusDp+jr3qxcf+AjS7ltYFYf6H5ichu0/QPL
6afzD17oA64jslfCeP/CdRf37X0veyFi88HZievTEHePx0ZOmH4Phf5lT7o3
DY5lUkODxB7w22nQeOHZNGwrkN/z31Q3OMkJa1TVTsMLoTMr28q64UChicgX
zhmQbDmU+kWvG1jHZ3al2M7AOpm7QMi7Cz7pCnHq8c5CYmv6r7KSDuCT+SHg
KjgL33kjMmOfd4AlZ7pIjMQszKdd6zLz74DVL9IK3cqz0PdhB2OeVgdIa1FM
LW1m4YLH9V+Ofe0QqWaa7Vw0C6IH+nnT176DyYlnpx8bzgG/zdd7w/S54c8+
fr+2+Hl4Edry77TQVzjhk+xSnTYPFQnkwAejTRDQftguP3ceLhfmBva+bgKB
++o6ETXzELRXMTJfuQnwqVu7tSfn4YnLtle48Rd4VNJbUq20ANN/tp7nx3+G
o2deTud3L4Bb9AlepWP1cDtNeuTF8AKYfMiNOESoh/qN0s6IqQXYkS43o/Wl
DkzyWz84Ev5B4nxiFqd1HQTwM4VJSv6DoerVO58e18L3ITvJl7f+QWASd3jh
ag24ux2yeiSwCD82fvPO/60CAfJ0heG+ReDO5kgcDqmi92HBzr3Si9CTXWPs
dKAK1huVWnJUFgH1v5m9bF0JAfs0odFxEWLC9WJbhiogotlWiPhxEYLzU9j+
rZSBrK2kV9PXRSj7b36F8rIMWld+t0d3L4LIzZ3h8hplwCd+M0z07yKEm73i
kX1aCvE+d9dg1xLY1vW03YZ3kCGZ1ON9Ywnkk/Iurr4tAs1Kq2Oq3kugPR3d
dtemCH5dEH/MFrQEh0qYqNX8RSB9J0czLn4J5t69k3C8TZ/3O8rfFdctQUe2
a72LfgFUBnTFzuxZBtI9PSOjfflgufP57DuJZWjX/ZA2V5EHDLkWZ+8cXQYP
sotO5ok8ONXzk5lLYxnw8LgWe4VcaDyycPOQ6zJYx3A3HMZyoKufR9++YRm2
vx7/IxydBdqhdt1ubcvw9kX8j9hDWVChVG5xr38ZLLX8q1XqMuHlExuHlzPL
MBNWnqq4ngH/6ZUE9u5cgcHjD9RcPdPpc4XpO92rK7Bb5Jj/WlYKOLrmY+Y3
V4DNxLte1iAFBkWItQ6+K1Bo+Z43iJACNb65LQ8er4DACvn7Pfr3b+hxhsma
shW4wvR5MnPfSxB8nSF4nLwKhRqNiZ8+PIcI47WU03yr0KmSeeCS4nMgkPQO
Guxdhds9Acbj+fEwartyzEVuFby0u1qWXz+DN3t1zr02WYWxzwN/r5Q9BZGv
LzvKbFdhOGFrIFDlKUT5/DNtcFqF4gC5njtfnoBHd9J/PwNWQfZWnvDmaCzg
UbN3hV+vQhpMTScejoF8pE6SKV6FWJ5nzodro0F0Oj6CUrUKpm/Of/cwiwYW
nVPPjb+vwkvt64NiUVHwjfi0KHptFbJMdtIctz0GSy/KOKvOGiSkmqxg78JA
yrah46/hGrR4DV2YZwuDeV2D2g6rNRh/PnqdZBkKwWKOyam31oCjLJ2wXyAE
cr49N4XUNei/+1H9e9Z98Cg/oC2RuwarvCaCiP8+QHrhCc4y+n414YG8wGBo
8/7C39e8Bt+uV4VecwyCFfG1bx6ra/BL0qSEx+Ie1PDcrzQnrgNXJ1+W0Y8A
CFvjfXOKZx3uzuyY0LoSACKtUiG8EusQmfn307r3XVC/bXIq9/w6nNLRYpz2
vwM8V8bkYs3W4VFN2ceyPD/oOe+67/aVdcDC/3AdHvEFxwMhm1q+6/Cc97fD
+0u3IaqtrPRn1jr8DFFLPuXuBWYfTmc2Fa7Dzt3EXuFPniCe1RpbWLkOLTc4
G5iFPKHU95fr3fZ1EPxxm/Sy3QMGJXcdFiJsQM+HGUt+FzfI2p6+h5l9AzJs
xQ4o/rgJLpuy5N/8G2DrbR3YbHATmNs1x0sPbcCl0G1zIuquIHXHM9ng0gZM
+52QdD/nDAtXmSNPWm+A2iXBG/MFN+CDQaSf6PUNMCurzR1ucgI9qSzTmYAN
+GlvrLu07Tp4dHTxh+VuAOPD5JLXA1cBUW2Yb5ZtwAJ64hYrdBXYXk/PGddu
wGuuMwc9rf+DBH/WlgO9G8BZECxRvmoPHw8dD/lI3ISWxgajU9a2YHHEIHWW
exMiZivcD7fawLKcS4Xw7k14N7ZT7Z2aDUgrv/7rI7MJAp3lbBby1hCjKXxB
4dImeJp4PP+hbAkyOhRHa6tNSLwcnub08DI0nDMOinTYhC87tgnIplrAhmH0
u6k7m3Bjs2Hp2oQZ2NuxCqZnbQL2OPH+nhJjIFwVO/a9YBP8vt9M+7poBPGO
KroMHzah53Pvr0iKETTf9PE3b92Ey6l7Lb53GsLxgOlR/tVNKJrQzdunZgBt
QRybasxbIOs81y+XfQEcHx7c4cq1Bee3tCXctl+Al5E2Ws2iWzC1r/eOyMJ5
IL3oehN8ZgvU+Q4M9Nefg5SUhfqii1v0+VR+LrZFFygZ22jDl7eglPl2isyP
s+D85gwvuG1ButpypJ6ADvS8r/JYStgCE0nSYu0XTXCr6n8knrkFu1ysXg2z
agLXx5WsC2+3oP9VmXG8lgaoNsr35dVtga//76lTA6fhVXcm/Pd3C+RdL+zL
V1GD0/21Rk+Wt+BXZsPO6gxVmJmeOWHNQEBmfCFNJjyqEDLPqR/JTkCWmalT
b2YQXHJPsMjkISB9t+TeQ1cQiC1JOVTyExBPwSjTrY8AlasagVPCBDTR5TGA
6jAIvd0ZySROQPdLJQXvtFLAaNM2cbcUAdX7DEiSfp6EOYaAEk0FAqIaT48e
2acMEmwVE2maBOQuLGsZPqEIc59krqWcJaAXBJLdncOKUBmc/PuFPgEFJWXP
snseA0Pm+3/jzQjIb/BW3CUhBRD9uHIjzoqAOvMzIhtvycPfu46zsfYE1D75
twa65CBo6/xCpDMBpbkXZKekHQW9ylr3CHcC6r1h4nOG9ygI+h5fCvUmICfj
k6WOgbJQtCq4GhxIQMHKXnNHfsvA6L/xrdtxBFSYtrjpznMI8otM7nonEpAF
RxDESkvB7ZtfGT1TCGjn3NbKl3MHgW+2gHgzh76uekIs79UBoOWJ33d+S8/v
O8/ExR8SkOMUR3Iqodu/eiwmVFgC1KZ82a9SCei8Q6jJcI4YcL2eCbOvI6Bn
Y6FuWuv7ofeqDZdtIwHFbFhEaZ7fD67jmtsut9P314142bOLQsrw9h0XJwjo
0f6R6Ie3hMEpOThO/w8BKZyVWOS6sheULVd26c0RkE02l57pZSFoGxgUPLNO
QFemeHlOXt0DSQnnkzQZGFCYGcjpeO+Ga6a1wuosDOhE+r8c4ehdwNCTLarC
w4As8r7kCvbtgKangmk4PwPCIwunW9l2QJzhI3HKbvq6JIxbggDItrtJHhdj
QG4BwruPVfKB5TeQOXyCAbX1qIdJEXlBOqIgTwpjQAVM92UF7LbBso74UUlV
BhRNVC670MgDjxrJCvt1GNDGHrd2BU1uMHnoWyxyngHd1LTUSJXlAgnNGcW9
hgzIOD0247ooJ1TWdSjtsmRAya/NTk+IsENIoOZ7ATsGdFc2dh/rYTIYqr2n
8F1jQPZCzMTLKmzwl/oSuN0YEMe0xZncu6wgVOFwmviAAZXXhj0aN2YGvl2r
q07hDOiiYYK1z2Mm4PB4kN8dxYAOys3v9mlhhPUj6XtyEhmQ9O8o9SIbBlgI
k2/lT2VAx7zfnHR6R4Dfv6qD72QxoGqLjKWYbQToTR2c1S9kQMOKvVv++Rt4
G+F6ZkUpA/rWXsGc82Ad/2y+ZiZRSV+f75Cbd1jDS3fsbFhpYECrRqfXkP4K
/iT0fNLLQQZk1+oSFxD9D4+YGLpAHmVAVN6Hz4XKF/Cg005sbr/o/nUefdyc
mMfdtkLcNBYY0J8zG78sLeZwR7NdUm9XGFAZb8+xc2mzuE1Z5tDuLboeUaIC
FrMzuP7NWu2/bIzI7rpMVwZM49ot+gQjbkZUUvPmkDvDX1zl8I/iaj5G5OiA
yd7/NoXLjm+IxAozom5uYkdWxCTOZXp86eQxRrQQIvRZNHwMZymty0lXZkTC
ipcMZNN/4ht8BtbciBHtshPi064fxaeanb8OazOiwFa+Tk3REXz00FaAjh4j
2s99ZfiB2TDe9yD8RMlFRqQTfowxNOkH3qj6KvWhJSMKu3Ho3OsTNLzmxQnj
eTtGhHm9pHiIDOFl6/Vc5g6MaDV0+hCtfwDPKhnxkvVgREPKr2ojffrw+1JC
el2hjEjEM7TqoloX7nf/NVHlMSPy2fPdJfZcJ+4xqvT+1RNGdL7wp2u4XQdu
n2Qo4ZfMiCZbT906+OY7brE22jeewYisWA+07hhswy8a3Xx8PocReR9IHNff
0Yaf4o1cF3vHiLbFtrL9l9yCU27sLYioYER7SjvFdEa+4fJNOVeWqxlR6PUO
+dnHzbho8Oe2L02MyNAvLiNwRxNOWGXMdh1mRFei0Exs8SfccqRn/s44I1La
f1zc93M9Tm3Kx8OnGBFBxeuF+Vgd7v/Coj1zkRGtdd/5XKZUi9MeHBMuXmNE
qHcxPebGRxy5clyrITChdtbfUxJvavCtU+Vb/WQmFC9h16yLV+MWMo+1J7mZ
kHHG9ZvGj6l45Y7/Ypf4mJCjx412cmcV7jfJf4hXmAnZhNQcCbP+gG8+cjHU
kGdCVT60Dm6WMtzCSzPZ4AQTUvFRYrzAVopXWgtPWWFMSEe7PdpE4B3ud+zr
3dsaTOjhKpOOik4xPrg3remhDhN61pMu5uRWhOMknx1PzzOh/QcDH66mFeIb
vZJv3poyIZcf+sdnhApws9qtpUpLJpSZ37tWZfcWr3jTqdpkx4Qa9AO4Kory
8dv+gd1jN5gQ0Yg3QLM5F18XpzEJBjKhHJvYb2aHX+Fm3O90Dz5kQmKvD1DD
92XjFcvhzxQj6PZwpIVEsvDbX04eOR9Hj//xYfHHJzPw/iJeb4tEJqQRlO3p
eCkdpyT9qnVIYULDUW3CarfT8DXnpybBOUyoUfjV+XtDKbiJiVN69FsmZPhp
+73TQil4udrpmZclTKiNp3JnkXUy7i0wH/SeyoRc3X9qXWV6ia++1307086E
2CZ1ecQPPsdN0sXXN3qYULLxXnNGnni8PGJdnX2ICT0dPFfGyfgM97J61S/+
i+4/X//WAvEp3q1994D8XyZkZf6TsiHwBD+hYOSK5un2/5wKiTgaiy+zsJBM
N5iQN/Pdsy13o3GjmX79/xiZ0e2a5tCmkii8tKcw0Z2VGd03d06amH+Me+ZY
yUduY0aG/PueUIIi8aXzHyzqxJnRmuX8vPpyKB7QkzeAH2JGot+trlW8D8G5
rFLMSmWZ0bymrf1a2ENcwvm+yeuTzAiL+75xx/A+XrDk1SOmwozUb1rJvzob
jGN3HI2S1JmRJl/PS3u9INwg4rzh4/PMyPn9rjtJHvdwGv+pDvIlZvTHhax9
6FkA7pCoaBBoxoxGOj5EOdbdxQNy9ujfusKMIqSS39kq+eNcClytM47MyEFY
IjidcAd/9p6gd82VGVGb557VJ/ni+Y0/z5r7MqNfp9fecLH54BT97qbOAGaU
LvF8ceS7F/6pp/GM3gNmpJJUfNgkxxMfnMjTUotmRnnUX8Jt9zzwa84pDRVx
zChlNYuv9K47/m8pRkMxiRkRj54YZQl1wzlYvU8fzGZGtYcXqsc/uOJxEY61
KbnMiHJA7n7omAu+X+CymmAR/XyeO/a/3+mCK4ufUuGuYkavZLb1y8jewOtz
FKkPapnRBcJ2/eWG67i+wkFgbKTzHVpGSl0c8atqXNi/dmaEd5CKTGau4guN
hAqnXmbU1Xzw6VTtf7i//rzyxBAzysxoP9mZcQWPs+o+0TdJ1wu9bbCItMPF
fjW+M5hhRk23PqeNPrHF85w/KDb/Y0bH50RfPsqywevvpChUE4iotMnZzOa3
Fa7PGluozEJETWF25S/3WOEDEfflitiJKO8W/8ahi5b4QqKjbKYAES10mSrt
qDPH/cUv54kIEpHUpv7YMQcznP3NeZn4fUR09kmIX5+IKS5aoSgdLk1EqVUf
jBlLjfBctYOvWeSI6Ob62IpS3CVc6cseKf/jRCQaIBhvG2SI6/USJG+qElFw
VezcmUADvN9qPmNKg4hUf+zf/i/mAn7l109x+7NENKA153k1Xx/3W27cb2xE
RFwd1X+aiOdxsv+HlDZzIjJe5yzuwPXwWNb8fTo2RJQjPuxVxnAOzxGIpQ9B
RIQWj+slUnTwE0n3k0pv0v079HnMzWrjteLeQnJeRNSRVbJLtUQL71O4vEc8
kIhMez66HbyqgduvHOMOekhEL0atM21N1fGZDxxMPyOIiOWTyEiG8WmcWaN8
Mu0ZPZ/3udUPeKrhEeyPB5lfEOn35WPTK09V8V0tV9ps04hozLCm6y1VBZcx
5i8XyyOiQOfQkLQjCC8VmnoTWERE4dq3rsxM4LjqcE3yaBkReUQU+Bjfw/BL
Ds4P02qJyIJJbc/dcWV8+IiGL3MjEe3V95Tpz1PCHReEXGy/EdFKydXLR4NP
4P6+X4zEeonoQ+h4xkUTRZysmqITOEREM4dvpq4ZHsNjWbzQ6CgRjbaEzmle
VsBfPZKQTJsmonvFQs5NkXK4gsHGHuZ/RHQxCa6Ry47ilTvbuW1XiWh3l9q3
zUlZ/Hvy3aX9RBbE7vj+RVa7DG5hb/T7HpkFha480Gu6fhifkDoyNMLNggKf
Sv/bu0MaXy/sr0/dzYKsVy//dnt6EA/2LCxnEmFBm96Z2N7rkvg2LCTXRpwF
bde/2KaidwCXqD/+ZL8sCxKY62+KoYjj+SFcIfeO0f29rwtKPSWGK5/76Tui
zII6Dyg+nry0Hz/XHWWXepoFfVtYZhFL2of3Jlw1ZjrDglQZpN6Kt4jgtlbo
rI0eC+I0/ZPnyy6Ce07+UdhvyoIW1IZjuZWEcMa8Wsl7lixollJxZXh4Dx5+
87ngiB0LSorsVcUTduMp65rMqc4sqHG7ynCT8k5culp4mdGDBVl6HJZ8u3cH
XhK0+NvahwVpm5o3+nML4F+40r6LBrOgwwF/xGL4+XDD796fAkJZEIPG55PV
B7fjtKfn3w9HsiDaY/Pu15q8+ILIVkrKcxZ0n/PS2eY0HtzvZ8cTxmQW1EvV
VqfUcONsr3JCrDNYUJuWynqxDhe+V97EVfQtC5LOTPAlxrDjWUuy9gElLOi/
f4ocxufIuFwFq8nwexb08vRF87u72HCN08UqKfUsiETa/TCziwVvYws7xtjE
gti69jDZNhJxs2brg9atLKhribHN5TMz7nyJZ5toPwv6GuktdmaSEbfOOhIv
/oMF2T+Uel6yixG/uKK7/+AYCxLJc7fn1mfAlZ+HH5Odoedn+Z3BttIt7PBU
TqX8Pxb06cfF7WPGm5gI1qRxfJUFmZYWXqsgb2DEIbIJzsyK+IkvpseerGLL
R6RGVNhYEc/krziSywo26a/leJqLFUWs1KrUX1rGWkQf+OnsZEVDuzVk/2ku
YjU3M1n1hFiRujwWaav/DyuurY+8IMqKnnicfOVgv4DF2xNTTaRZkftw5O5b
OXNY2DsxaYujrMhzYPu9lIFZ7A7pVLGVIivKvz1gXbhjFrN9FfDpP8SKrO9l
tZC0p7FLa8l6jqdZ0ejVp6cFp/9g2jrVPTe0WVHOF1VdkdQp7Mjfrd8eBqyo
K/9dgOuxSUwUhN29jVlR4j+vpXDeXxhfJL7pa8GKbF9Lb8mvj2OrR315gv5j
RZUxjTe35n5iUwEJzx5cp++vWdixf2sUG/r+XjTMlRUlOXxX+co/itW6rypE
32ZF8cvKlb8th7GS+l2VT+6yooadCh73Y35g2TuUNOKDWdH1Ik+B5RYaFlF2
yzg5khXZB/fF5NUNYnfJT4fTYllR9Zeatn03BjA30xKHrHh6fkMiLOwO9GPG
Gwu+eWmsaF+rN623ugfT0eVjLcxmRXzjNxT7Urox/IV8ZEkuKzKxmCBqRXZh
YiquKR9KWVFGrBTHuYgOTCDq8aHqD6xI3osjYyyxHWMbyS+qrWFFHD7LjJPv
vmN/A6frvzSxIqFQAuE6Wxv2o4NL71srKyrQ0D3Oj1qxdgmZnrZOViTxZseS
150WrKzB8XcPjRVpMIpeWDzcjOXsCnMb+MmKyNXi2XX9TVjStdcbtElWFLxY
i5Tjv2CBHJPcEwusSNfZ7UwU/hnzMGd79nuFFT3szbZUF2vAruZKik5vsqKV
pQNXkMAnTFfvisIiiYQGF68/nxKsw1SSgz+scJLQrqGHZ1/K1mIKc+nqG7wk
RKx9cjtB9yO2K2bUiFmIzq/sN36dWY2duCcs4CZKQi6GB/tSWqmYoavJ95ED
JKS0p93jLZGKRem1nP0oR0JM/oIrV/k+YPnAzi5/goRo6cP3IwvfY99k1BtS
MBI6mVZYbm5TjnFwVqgGaJKQc8axivbZd5jU+uLW7FkSanjM28b2rQTT/H30
g9UFElJlvqSyVlaMBX3OPK5iQULyDUeLgkoKsbTS4YV8GxI60iE7N1lfgNVk
ChWIXCWhca9a7bTht9hmULQ0wY0e78Dtz0tK+Zige/OvG14k9GKYr+TAr1zs
pC1b5pAfCWUvJUZxubzBPFXv7Kt6SEKlocfbrxe/wp4cLR+UeUT3d3CpWdU5
GysS+fc8KYaEzhm7l/opZ2Gzm9cE/F6QkKVxianOajrG8zf9+580Ehpgltu8
9zcNkxmgRZq/IiEK38XY69Op2LX3huxYMQk5cLqfXOZLwR68etyQU05Cxiik
1udEMpb5rClIkEpCQYoSEe72L7HRW6qE9UYSypyJs8irSsQYr/h+cGghIZZv
xuzZBgmYiGGpd18HCVUzHN1LW43HzBVk/pXTSOjNEo/T11tx2O39Vwukxkgo
xv8D2tJ5isXzpt2I/01CSSFVlbayT7DOmV2TXoskRKh+6SUqHIMtDBlk/loj
Ie7eo17KB6Ox7d8e2RozsKGN7iu/mSEK03tDHDrBwYYWBS5f9g+NxJwSUELW
NjZ0uGv1q37AIyws1Md45w42xL00/mKCEIF9vjr7fWkfG9KQokmoKYRiE0bS
j68cYEPx7wcqDcYfYiyaV3S7pNnQ507uftVXDzBViYGGkuNsiBL3d6LcLBiz
5N8ZLIGxoXfp43qD2kHYHeYLak9U2VDyuQAjHvVArGK44YP7WTZESCvPl7YK
wHpbmXx+6rOh8Fs+KdN37mLLVPzERSM21Hn4Up1Ltj927EVRgYINGzL/V3TO
/JgfZhAxfSPtPzZ0/pWE0lTNbczVV+ownxMb6t6HHTtk7YPlmr7MnPdkQ/M7
/w7atXliCl37V1n82NCzFD+O2OJb2Hv9TJ3d99iQ2abElm+6B9aglTuLwtnQ
uHqAC2S7Yefqjp4yiGJDQXts+kkVN7FOVPzkylM2VFHqbXC9xxUbOV5xMiKZ
Db2M5Z+QlHPBrhVCRHIGG6rmFZ1NdHTGZmQ+0opes6EaEc2utss3sE3xxqC+
YjbkEa1s/ivJEQtMPtv9t5wNOfmN/5q+6ICxC7VKMVLZ0Owdn5D8PdewnXzd
3yQb2VBr4df0+pYrWNIjU1HKNzbUd3ms6UelPSbOPuR2rp0NFdzqKFcps8Pk
GMd2eQyyoWu+PCfTW2ywMt+rjg9H2NCP9FOfUqasMbQyVZkwwYZyuovvdfNa
Y2dn5m0+zrEhTqdehb23LbF2h1slnUtsiD885mHm7cuYyfgqaXKdDUV61D/a
yWuB/TfIkMvDSkatf3Kz2a6bYn+NgwhiHGTUtO3he6GjJph7B+nC8W1k9OHZ
jmkLJmMsoIl72XwPGVn6tYaPfTPESJrR2i4iZBTZm5y10XARe/RRIDFQnIy+
SnqkDn81wBLKhVRfHyEj3X8ih7aW9bH9iskxlQpkxP9+jFF5rz726q3YeKsS
GUl+oTRqnj2Pvcs6FLasRkbMlhZtmhHnMFwsb5Bdi4zUzjR6YqK6WO0LuaPC
umRUeyGJ41G9Dtb2RKnztBEZmUvI2ltj2pgR7wdJY3My8jA38Qri0sKGwpGP
ozUZEWLajDX+aGBTgRoi0Y5kFJ/QxIq1nsZuEr64ZriQ0fbc3TU6HaewVR/d
ujIPerz8tvcLRtUw1psXr9H8yci99bm4735VLOJvd8V8EBnFBibU/T2vgvFd
M+NmDSWjU+alt789RJiolU3R4VgyMr3/PNVaEsey+sdYVOLJqPDmdOe3LxTs
iNE1Y4MXZKRl7KA743cSo5xz2fTOJiNH7fAJ/21K2MfGBb2IXDK6tvWj48X0
cUxb3TM1uZCeD+GN8eZeRewSdkez4QMZDTzfs0buVMD6/41x19SQkXbMvGTy
L3nMOle36/0nMhI2LIt8zSqPOQrvtc9rJaPlC+o7tK2OYnNdQYezO+nxHGH2
YUiQxW5F/llI6SMjQdeTVmOVR7AAhg/3nvwkIxe9QeLWhjRGKhc7EzlJ5zPb
3P1YdAgLdw3jDZkmo6H3gva7vaWwuBHTZN8VMlIg7+6bPyyJ7U34+N+tTfq6
Mn5Tdc8BLNXgkKwLEzsylJgYLeeTwHLrVittOdnRzagFWTYpMUzBzzrYgpcd
OYQl9Q2c2o+VKTaeNdrBjpr+cPn0XBXFajOf9Z/Zx45y1W0U77SIYFqWDGmn
JdhRz8EPkfrbRLDmnVcd4BA7+qWe34sV78V6Hp5YlTvGjq6M2T/WJQtiFqov
q6WV2dFTHeHZy192Y6OrrA8lgB0Frnlfjo3fhf116NqxW4sdOa2/mJiz3IG5
icHQdl12RHz2KGnaUABb6c/I4LzAjvqzSzdKjfgxZl2PYwzm7Ci+ZGbwpe92
LIRlcH3Vih0pfbl+s+4FL8Zddbp2wZ4diTcNXaj5sg3bLct/YcKZHeUl2d8P
BR7sxcTt3cPu7CjHpcOLi5MbE0se/dHnzY70QzgO33zNiR3hLXL+FsiOCvSr
glIF2LGixj0nPj+kn3eyZ5p3mA1TvndvqyaCHbVO5rorvidhpxb0I0ri2JEa
w+4OuRgWrDGn/GJ+Ijsq5Yzj+RVFxM7ZiQq9SqHno6YjmjORGTPpnH2dmMOO
DMRllV+2MmK0COObT9+yo7/rBT171hgwO41q5ccl7Cj9+KKyiAwD5lwa+TmQ
yo6yi8zYZCy2KD4HLY08G9mRayt2rzhlnRIcf2TcoZ0deX9UucEttkp5zL7l
fnmQHb204HRb6F+iJNxuZr4wwY7+mOxQjWr4R8n4kxitPkfP/0ymx93hecpb
i+uiyuvsKGxq07xCYo7Cx+G2i4WVAz3tqgrpcp6heJR587Rt40D23bqCZxr+
ULrt77ImCXIgkTShhkcrkxRlvgebVw9woDDFcKqX0wQloTri3zE5DnSmc9vW
G5ExyqZT7BQDxoHq2oq5r5FHKZaCCSNfNTgQS/zeRneJYUrN55TeZ/ocSIzW
dFnAmUYRu5XdamfOgfooKUCsH6AEi+U3HP2PA4XIqWbkL/ZSJlpLqjZcOVCS
YKuMuEM35cydDyWffTnQnUvKKoxCnRSe3sY0q2gOZK4YNWQj2kZpV+iOWsni
QF3qv6NTP3ylxD366f+4kgMpLNxZ/2ndQDGfnHM62M6BHHQxzZTNjxQuFY9r
j3o4kF+6wXQRy0cK9emK3b9BDtTrp+VUt7uGInqaYF79iwNVj4jvfmJLpYy9
4DxjvMWBnnjqaw/QyilPFyPVq5g50TfmBhXb6DKK5lk+VXEyJ/pdZz3AZVhK
ebW6W2mWjxMZvMjYKCOVUG5clDzwUIoTsT/ZMdjJXUBZJqsxlV3kRFc3p09M
n8qi8P7liqkx4USRx4Ut5A9lUg619oo1XeZEqqpCo0p7MygWT13Vh65yop1Q
13NaMo3ycX/KQ6IfJ7ruFfav9sNLSgSFgUc/gxO9ODrxqHjHU4q4U5Xg70VO
JFw6vOvovyCKfutJRaE4LnR/VqAzocWGQj7JXl2RyIV0fLpQxjdrSnVa7xmz
VC40yjP3Ob/PiiLr6WX1PJcL5blduyu705LCJfwubFcdF8oxb9o/KmZC+ewo
N8I/x4UEDUe54/HzFEQ6GMmlw43uWbVotm1ilGWX5d2557nRpNWaCMWLQsnr
+5R+9hI3OikVV2fHepKyN8/+fZg1N5LYOXKIaHqCsn4xbYzsxY0uZtIU79TL
U96lCmOsGdyoXPO5/wleKYoT5/SnjNfcKPDr2lmLKkmKxK1KffW33Kj3de63
It8DlBht8/+CKrgRD0/SWoCUOMV1Nj6a6Ts3SvaLzxqT2UeRMr22N7WbG91J
Eff3OydC+VGrlK06yI3C7cwiehb3UvTiuivv/uJGT0X5G7nG9lBIjFla+6bp
9hl/Vqn77KZUOdxqpy5wo92z53MmRHdRPDrUL1uucqM9qZd8iP07KP//fxRK
ZzdULE8XoPwPYVvDZg==
          "]], LineBox[CompressedData["
1:eJwtm3k4Vd/3x03Xva4xiQYiIYlCknTPWRslREmSITP1KRIyJmOoTBlSkpSZ
FJI5wyVKkpB5vIaQlFlm3/t7nt9f53k9Z+29117vtdbZ+4+zz+qWni0TAwPD
RWYGhv97Hgb+ya0tbuqxx5Hyt2Zc4NbK/gcrq9xUA+63zGlbLpD3Xk5ifpGb
yhEzP/uTyxXkJXWsxn5zU3mZnqs/lHGF49sCexo7ualv5SYKDexcAY3MNjzL
5aZKzU5Mbf/lCnr3v2UfNeemZgqtMl784wbu3wNvXqvkovpcfNzYutsTwn67
dS6UcFHjXloWvTjsCcnE6yoB77moX+xNdT1UPaERdHa8yOSiBrHUfLpywxNE
83ZUtEZzUUdSowVHyzyhKTKdA7/GRb3AmXX/n9kdkNCrz+bj4aJa72DXDnvv
BW1t7JPVlpzU9zE5+deifMDfprAy+wonNVuO4P8nwwcOL5jFxF7mpG5Pv7x2
r9IHHmzPp1zX4aQuHTQVH/ntA5ie4SOeE5zUtP6R13ZnfCH9e6qCOQ8n1dB2
lNLF4AceDZjveiUH9UTmWb931X4gRL3Fd1yQg/pnu5mQjHkANPIec1EW4KAq
ah4muNoHwB3b1R8YLwd1pk448pNnAHSQg2JOkTioEWpXsoMfB0DkpXhevQV2
qg4XR7lXQwAw/67ludnITu3J+M8blO7Brx27OVPuslNLX5idsdgTCIV2tQTu
fjL1plleVg5jMCiJOMild5KpUV7FT+d5g6GsTcAUayVT1WIrBdXFgoGK2RXY
fSZT05I9+PnOBEMDN691/Tsy1StIaFE/PBho782p/sFkqiFnyMBtwftAXl+9
s3CETL22vGO3y+kHYBEmN9MdwEYNMZhrINWFwJ2C6OBv3mxUR/6/+mldIRDb
Ny9Y7cFGVa53U9WdCoEG6SLNTAc26rqfrHPL9lA4+k05xc2YjepxdOFsgHUo
sHKdMtguz0Y9eZ4dMghh8OaRQbn2EInKljN2XetSOCxHez2oAhK1y+MS5wne
SBgXrJ5UVyZRI/FDBut7I6EjnVWnSYFEPWX9uvrLoUh4Xxa1rf8giXqtK0rk
3ulIcBjOiF/dTqI27e8ccPSMhBG5tjfHJojU0zEEDxiJhKZm6ZbsSCL1XVcy
ZaQyClK4BnbFDbFS8QNNhofiYiDaBIgn+liplPfDV50yYiAg89VCdwcrdX3f
G4OPRTFgpWr9fU8jK7Vyc2ArpD0GRN0mAl8WsVL/CNZ7vt7+GJL756bTQ1mp
vok7peSjH8OrN8RPhcdYqXbBl3rT42IhQUvO+cdDAtWCQXLk/LenIMau1dAc
SKDqLBRLPR94CtlfrUSbfAlU/8aqhbnpp1Cm/bi13pVAFbjx8Wg9bxx0n/sn
X2lJoB47Qr1MNooD/osV85knCNRHnx4LLo7HwSMTTVefXyxUH6l3zGnc8RBg
b+lxUJOFerJH4kzwgwQYiDBLKFNjodon7ttYS0wA5Xcm1LM4C/Wo60F0rzAB
5hYvkRyOslA3+38nfxpOAEtfrbh8IRbqNpn9+qL4C0DRR0tOzjFTu0aktE8s
v4DNYsKyznNmat7glS/qd16CF/Nrd+c/TFSJ89fOBl1JAodnZqwWE0zUX+VS
iirXk8DqyPZYnREm6syJd6asbkmgZXI3X7KbiVr2bOnum0dJsPP9uT8DtUzU
zAsd+f99TIICq3mrswlM1NIRvCJdOhn+VlPOiZ1loto+9j/2H2sKWPp9F+vI
ZKT29D4+FNyVCgbdL/H+FEZq9umdO++Mp4KWvKPhaCIjNZKGP/ZYSgWFUZ6w
uceM1HplomEsXxqQNPTmufwZqW0HbnWcu5AGOdzt1WeMGKmKXJws9Y1psJbY
Y1bKxkgdr/z6jrUxHWIrfsYl3GCg3rIOPWvxJxPMPOJ9jtsyUJeIVyKKGbJA
8uh5m1ZzBuq8pfU9Ib4sKMssOUK6xEDVTNTM2XEyCwZiQj/dBgbqq29qsiUP
s+DADbkFLT4GarxxFPp+8DU4y6wmznltVem7kmqjXLOhbFCS443oZtX1+zKW
g1gO3KUwvo3fuVnVf8X9Q9bFHMCedes85Nqsco34Y3jveg5Q9UIeXV3dqCL3
bATaxObA57rfvPtaN6o48/aVDP7JgbbsnF1P/Deq7n4uPFeTlAt/3RUO+NHW
q3qvxxZUheTBfh6kqp+4VvX5vFZalEA+RMgO3bkRs1bVIJvTmiieD8u6Ae/9
HqxVCRxLv1d0NB8ao2rF3jrT34fUhBF088FluyaR9cxaVV+TB/P+h/nwiV+v
sXh6terVQfVGy418uCFkY7BHZbXq14pK3b6/7yFf6sGN4ZHlqmyrI1SduUIQ
brEoPdS9XNX1O/zFGFMRhLmfILk2LVet85TYhW4vAtvayTRi6XKV9etzy8sK
RbDTTGdIOmK5ysNHLtXGowi8o3gN3ZWWq7jivfoCGYtBYznhNEf4v6qu7cbr
QkIlMFj3TkRRcanKf0H4rbVXGfyUjpWvKpqvunBjZ9c57yrY5pOleJhxturi
c5LP0GwNSCtOS6fNT1U99DZPfuP4Ce6d+tNc6jFeNfln73pzWwPs0M+JNBIY
rvoRZJrk/fk75C/VcdeL9VQdLHzHrezZCmm9P8N/BTZVDdRVlXvdbwfTC4IF
vdYFVXt5L4QcCe6CUrJXe43re5BL1XYQd+iFVzI7fuSKFkAPo7ecyZ1eCNbN
bU74XgAmLnhlaHAv6D8Z+ep2sAgilq839yX2wsw+7Rqp/hJgddrJS/neCxIn
hHKjT1XCs3M3DbsO98GX9+an3j2sBZmVP9QvE31AqZP+eIBWC4oB7dLiC32Q
17GikqhYB9IU1jn3rT54shIDoSN1sBDAxc3M3w82UK9si32GR26tJ96o9sNW
g6zcrtkvYNz7eeFwfD8cG2bc62/4HVQimRR4VQbgcNnlWdms74A2T+fc0hoA
iei3tbSV76DgVchZc3EA2JPeHHul0wz6SpKk01cHYF3XsG/rbzOIZH0roYYM
QH9e7sEquVYQLS/hcG0ZgJ4E4+0Cxq2g/3SYcXvPAHQ8IGw4BLSCS6v4Zsrw
ADRZmDTv/dEK21MVIhPnB6CSh+ju4/IDKJjXuzm+QXjpaFaLFbcBw6g0rOkP
QsIVtpzYwTYokN81XnZlEOI0Cp7+IbaDcueLZ3Y2gxApQrZ7YdgOxbYWz1/e
HgS/5sJtGyvtMOJh6HYuahAsZTnNyymdkGb0zOD1l0EwEyzR4LPtBJ37Nnx2
zYNgTLKWtw/vBHPkUbu7cxD0aCUEwYFOsNScdlIfHQTVSJs3Xr5dYB57VPnr
xiDsn/mwolzTDY9qw9cK+Wlw95ta4MKfboiyLH5dvYsGHa+/cuXs6oFTcavk
GkEahNj27t/n1AMvlLvuvRKlwUzPqg5RpBdiIx92tsjQQKskoIt6thcq410j
/WRpkBpLtr7j3gsuvMZq+4/S4LLubo8/Tb0wbZClfEqJBpV1J5J/ePfBgdXw
sVkVGuxMqZYOz+qDBNfCMewUDZz9NIvV2/tgENt7wFudBuInjRpLpftBz0OZ
vV2LBmF5Hksve/tBeF9787geDcbCGfyNiANQxeKm9lWfBsjuAfv2owOAuX5U
TjKgwbx4nEgwXec6FSUjMWMaGD8v1rI/MQjRr15UB1rQoMAD2sVtB+FSb2fd
iiUNuAw+mw9GDoJz5d5oC2saVPN0uuhNDMLpNFsx5qs04HTP3SKQabCj9sgH
/BoNymzna4eFaRBX9/yD3X804FPzOp9wlgY32dbin92gj5er4vOkz9vSVKsV
b0cDBxHmnkvuNLgQOUAIs6fBHu4zL+XDabBe8KHA4SYN6jdCbLhTaPB79Aeo
OtDAdarp4FQJDQyepTxivUUD0V7e6fomGtjkvgn7QOemLwYFaaM0MFl3E7Z0
pIFXSbxnwCrdv9FI2X90lswYwM15hiBq9lGmtxMN2mJFWSgSQ4A7bXNcoLN/
4NUvOylDcJvzwy0TZxocvv06YvHCEIzZn4zMp3Ov5d+LrdeGwOyHVtkKnR/o
yu/K9R4CztrsDtnbNDgGbgOhMUNwOf1Q02U6D8uUpfyXNQQ37FMeOtD5keDm
f6erhkCTsjzrQmcKu+ph0fYhuLBbcOYGnX+tBM1vTg6B9xOum7p0fjLxpaSX
YRg0vfoviNNZrZPTp4R/GFZ80u7/oq8/U3dBLVZ6GHb9i/6XQOeEgliSs+ow
2IYPhwCdNVO6v50zHIaf/4akWuj7mwnKuVp3cxgYBZJO6tM57r97WyfvDYNg
9FjDJ3p80FnDuPy4YWh4av9Rks4TMjJyB3OGgTi6xX2HHt9IHqaGlx+HIdzJ
73kZXQ+l+Q4r/m66vfSw7iRdrwclfo+ZWUbAtMPvJz9dT9nnl2Tu7BqBr+Xc
z7fT9e7ylvo0c3gEGI6JH9i6TtdDre1fv9EI7K4Nckym50+zeFak/q0RWNQd
ZDGm55cHyefg18AROD3YL8RgS8+HbwdMSnJHIGuFEC5gRQPHvPX5w3UjkJrH
++EBPX93xrSEpfWMwMiFMKEJMxr8Z+hVGU0Yhen9TbJOJjTgOal7mW3PKChe
vVYWb0SDEiHxGV/ZUaAYbpPKv0wD0kjTvpsmoyCfm+jw+iIN8upSykYcR4FN
yUQo9AINDDM9LhoHj0LijT5bo/M0yLwpGnTm3SiwO1/3rKTX45ll14l9xJ+Q
6ZOTkYlo8LdHyz9O8Cc8sY0TWcDoelYI7+aW/wnlz8qSpE/S6zXgy9n1Kz/h
3vd/bjbHaBDMKZTbkf8TiJa3H/2RpOffzOwZnfqf0PZyu91LcXo/av1E+9j/
E4pHTtVj9P4jEefI+440BmMi2Z9hDw0+ida6hpqNweK0keRlDnp9EZ5xMbmM
Qc/c0hU7Eg34J25meDwcA6EIzWd2LDS4+lag27ZgDLrul9LMlweBVcmOgsjj
wP/QWy68nV7nOrzMi4XjsJZ/5ZLKg0GIsGSbXfkyDhxfdVKifQahy5VhcLN/
HLJTVPqqXAbhRuLfMhLrBAz2lTe9taDbTzc4CxpMwK2GzxwdinT7qHvDaksT
YNCYfEK7bwD2pd9p1iD/ghN3aRmXmgfgRplTpc7eX5AVNnBcuZb+fRo2j7+s
/gta9pNfPM6m2ytQ9Oye/ILEaLUP4R50+46F6mjFSdj0XjsUzj4A7yd/5z7V
mgQxTuoB9Y1+WN8cfpFgNgmUckO2nr/9EHGgxTM9eBJmrfsDo1v64b3HW7my
jklwH7LPV4+l2+++mjTk9htMRbxaqTv64ZF5p59s8RQo126Gaa7RzwNTFBhr
nILlOsuajrFe8PFM3ng+PAU2S4bHlVt7wSHm5h0i1x/oYi2zCczshXOfmV0G
bP4AW/rpvIMXe4HriOy1MN6/4OPkur33VQ9EbD7Qmbg5DQn3eKzlhbshOPQv
e+K9afAslRocIHSDz079hovPpmF7/tE9/011gYO88Jmq2ml4KXR2ZVtpFxx4
byzylXMGDjYfSvmq2wXE8ZldyTYzsEHmzhe60wmfzwlx6vLOQk5L2q/Sonbg
OzzE7yw4C228ERmxz9vBgjNN5LHELDCm3ei84tcOq1+lFbqUZ4FWIcCUq9kO
0poUEwvrWXB3u/nLvrcNItVMshwLZkH0QB9v2toPMFZ6djrKYA52WH+7N0w/
N/zZt8OnNX4eakObF08LfQMlrySn6tR5KE8gBz4YbYSANhnbvJx5cHifE9iT
3Qj899W1I2rmIXavYmSeciPgU+67tSbnIcNp22vc6Cs8Kuopqj6xAH//bD3P
i/8CcmdfTed1LYBdjBLviWOf4G6q9MjL4QW4VpETcYjhE3zaKOmImFqAvWny
M5pf68A4r6XCnmEREudfZHJa1UHADuYwSclFGKle9f0cVQs/Bm0lX7kvQlQi
d/j71RpwdTlk+Yh/CRY3fvPO/60CfvJ0ucG+JSBncbwYDqmCkpf5O/dKL8FA
Vo2Rw4EqWG840fxGZQls+97OmltVQsA+DWiwX4KMcN3Y5sFyiGiyESJ8XIKo
vGS2xZVSkLWR9Gz8tgRl/82vUF6VQsvK77aYriUQub0z/OiZUuATvx0m+ncJ
Qq+85pF9WgLxXv5r9OYONnXdrXehGNIlE7vv3PoHJxJzL62+KwCNSstjqnf+
gfZ0TKu/dQH8uigexRb0D6SKmKnVOwpA2veNRlz8P1gpLpawv0s/77eXFRfW
/YPBLOdPTnr5UBnQGTuzZxn47+kaGu7LA4udz2eLJZbp99yK1LnyXGDMMdPx
lVsGD7KTdoZSLpzq/snCdWYZ1MLjmq8q5EDDkYXbh5yXwfYxd70M9gY6+3j0
rtYvw57s8T/CMZmgFWrb5dK6DOkv44diD2VC+Ykys3t9y+Co6VetUpcBr55Y
272aWYa5sLIUxfV0+E+3KLBn5woMHn+g5uyRBqsfTYrPXV+BAyLH/NYyk8He
OQ8zvb0CO4zvfJLVT4YBEUKtnfcK5Fp84A1iSIYa75zmB1ErsHOF/OMe/f4b
epxxsqZ0Ba4zf5nM2PcKBLPTBY+TV6HqTMOLzxXPIcJoLfk03yoMqWQcuKz4
HBhIugf1966Cb3eA0XhePIzarBxzkl8FH63O5uXsZ/B2r/b5bONVmP7S//da
6VMQ+faqvdRmFYYTtvoDVZ5CtNeiSb3DKhQGyHf7fn0Cbl2J//0MWIVT7rnC
m6OxgEfP+gtnr0I2TE2/kHkMeUiddLhwFVJ5njnK1MaA6HR8BKVqFUzfXvjh
diUGWLVPPTf6sQpZWjcHxKKj4TvhaUHM2iqkG++k2W+LAgtPyjhRew3SU4xX
sOIwkLKpb/9rsAadnoMX59nCYP6cfm275Rr8eT56k2QRCsFi9kkp7mvAXprG
sJ8/BN58f24CKWsw6f9R/UfmfXArO6AlkbMGW7zGgmjHfYC090qcpWswqybc
nxsYDK13vu7obVqDtptVoTfsg2BFfO272+oaDEsaF/GY3YManvuVpoR14O3g
yzQcCoCwNd63p3jWIXxGYELzWgCItEiF8EqsQ2jG38/rd/xB/a7xqZwL66Ci
rck07ecLPNfG5GOvrENsTenH0lwf6L7gvO/utXVQDf/DJTPiDfYHQjY1vdch
m/e33YfLdyG6tbTkZ+Y6rISoJZ1y9YQrFaczGt+vw9HdhB7hzx4gntkS+75y
HSZvcdazCHlAifcvZ/+2dRAbukt61eYGA5K7ZIQYNuBnxYzFDicXyNyetoeF
fQOSbcQOKA7dBqdNWfLvHRvgdMcqsEn/NrC0aYyXHNoAo9BtcyLqziDl65Gk
f3kDVn2UJF3PO8LCdZbIk1YbcOay4K35/FtQoR/pI3pzA8xKa3OGGx1AVyrT
ZCZgAwauGp37t+0muLV37gjL2QCGh0lF2f3XAVGtWW6XbgC7yhOXWKHrwJY9
PWdUS/eH6+xBD6v/IMGP2HygZwN25wdLlK1ehY+Hjod8JGzCr4Z6w1NWNmB2
RD9llnsTns6Wu8q0WMOyvFO58O5N+Dy2U61YzRqklbP/eh3eBKWOMjazo1bw
WEP4osLlTfA0dns+pGwBh7Up9laWm5BtHp7q8NAc6s8bBUXabUKtwDZ+2RQz
2DCIKZ7y3aTHpf7fjYkrcNWWKJiWuQlaUS/u7ykyAobrYsd+5G/C4x+3U78t
GUK8vco5xopNGP/S8yuSYghNt738TFs2wSRlr9mPDgM4HjA9umN1E8omzuXu
U9OH1iCOTTWWLUCOc33yWRfB/uFBAWeuLTDd0pJw2X4RXkVaazaJbsH0vh5f
kYULQHrZ+Tb47Bao8h3o7/t0HpKTFz4VXNqCaKejc7HN54CSvo02bL4FDSx3
kw8P6YDj27O84LIFFWrLkbr82tD9ocrtX8IWWEqSlmq/aoBLVd8j8YwtkHSy
fD1M1ACujyuZF99tQe/rUqN4zTOg2nC0N7duC0L9fk+d6j8Nr7sy4L+/dH+d
L+7LU1GD0321hk+Wt2A+o35ndboqzEzPKFkxMiBLvpBGYx5VCJnn1ItkZ0BW
GSlTb2cQXHZNMMvgYUBGLkk9h64hEPsnZVe5gwGJ5o8yu38EqFw9EzglzIBW
O936UR0GoXc7IpnFGVBQiaSgbwsFDDdtXuyWYkDNXv2SpJ8nYY4xoEhDgQFV
GU2PHtmnDBJs5ROpGgwoQljWInxCEeY+H76RrMOAchhItr4yilAZnPT7pR4D
Ck7MmmX3OAYGLPf/xl9hQLED7nGXhRRA9OPKrThLBjSSlx7Z4H4U/vrbz8Ze
ZUADk39roFMegrYuLEQ6MqA81/ys5FQ50K2sdY1wZUDjt4y9zvLKgaD38X+h
dxjQXaOTJfaBslCwKrgaHMiA/JU95478Pgyji+Nbd+Po/qYubbryHIK8AmP/
Oy8YkCFHEMRKS8Hd29+YPJIZkMzc1srX8weBbzafcPsNA/pPVUks9/UBoOWK
33d8x4Bsij1eLA1JwBuHOJJDEQN6ev3Y41BhCVCb8ma/TmVApnahxsNvxIAr
eybsah0DShsLddFc3w891625bBoYUOKGWbTGhf3gPK6xzbyNHo+6Ec+r7KKQ
PLxd4NIEA4raPxLz0F0YHJKC4/T+MCA9HYklrmt7QdliZZfuHAO6mMWla2Iu
BK39A4Jn1xmQxxQvz8nreyAx4UKiBiMjenEF5LXv7IYbJrXC6qyMSDlt8Y1w
zC5g7M4SVeFhRDa5X3MEewWg8algKr6DEelGvp9uYROAOINH4pTdjOg/SRi3
AH6QbXORPC7GiO4GCO8+VskHFt/hsIwSI+rsVg+TIvCCdER+rhTGiBqY78vy
226DZW1xOUlVRvSKoFx6sYEHHjWQFfZrMyIeQZc2BQ1uMH7oXShygRG5aVic
SZHlAgmNGcW9BozINi02/aYoJ1TWtZ/YZcGI3mVfOT0hwg4hgRof+G0Z0T3Z
2H1EGTIYqH2g8N1gRAFCLARzFTb4S30F3C6MSGLa7GyOPxGEyu1OEx4worLa
sEfjRizAt2t11SGcEV0xSLDyimIGDrcHeV3RjEhJfn63VzMTrB9J2/PmBSM6
8TtavcCaERbCjrbsSGFE8nfennQoZoDfv6qDfTMZUbVZ+r/H2xigJ2VgVu89
I/qp2LPll7eBtzLczCgvYUSjbeUsbx6s419M165IVDKiufl2+Xm7NbxEYGf9
Sj0jYjY6vYb0VvAnoRcSXw0wIt8Wp7iAmEU8YmLwInmUEXXwPnwuVLaAB512
YHP5xYhA+9HHzYl53GUrxOXMAiOaP7vxy8JsDre/skvq3Qoj+sLbfex86ixu
XZoxuHuLEfVHi/Kbzc7gerdrtf6yMSGvm4c702Ea12rWYzDkZkLfat4ecmX8
i6vIDBVW8zEhRztM9v73KVx2fEMkVpgJjXAT2jMjJnEuk+P/Th5jQkyhQl9E
w8dw1pK6N2nKTEhJ8bK+bNpPfINP34obMSEFWyE+rU+j+FST47dhLSaU2MLX
oSE6go8e2grQ1mVCe7mvDT+4Moz3PghXKrrEhAzDjzGFJg7hDaqvUx5aMKHw
W4fOZyvR8JqXSkbztkwI83xFcRMZxEvXP3GZ2jEhtrDpQ7S+fjyzaMRT1o0J
jSm/ro306sXvSwnpdoYyIRmP0KpLap24z/1sgkoUE4re88Mp9nwH7jZ64sPr
J0zI9P1P53DbdvxqooGETxITWmg55X7w7Q/cbG20dzydCbkTD7QIDLTilwxv
R114w4TCDrwY1xNoxU/xRq6LFTMhztgWtv+SmnHKrb35EeVM6HRJh5j2yHf8
aOOba8vVdP9vth+djWrCRYO/tH5tZELXfeLSAwUacYZVpiznYSZ0NxrNxBZ+
xi1Guud9x5mQ6v7j4t5fPuHUxjw8fIoJbVfxfGk6Vof7vTRry1hiQv+6fL+U
nqjFaQ+OCReuMaFTPUtpj299xJEzx40aBmb0nfh7SuJtDb51qmyrj8yM3krY
Np3Dq3Gzw1Fak9zMyDb95m2jKCpeKfBf7D8+ZhThdquN3FGF+0zuOMQrzIwC
Q2qOhFlV4JuPnAzOHGVGjV60dm7WUtzMUyNJX4kZ6XqdYLrIVoJXWglPWWLM
6LJWW4wxfzHuc+yb/90zzCh5lVlbRbsQH9ib2vhQmxlldKeJObgU4DjJS+Dp
BWZ05GDgw9XU9/hGj+Tbdyb09Yb0js8I5eNXarf+VVowo8K8nrUq23d4+dsO
1UZbZjSoF8BVXpCH3/UL7Bq7RR9vyBug0ZSDr4vTmAUDmVGFdez3KzKv8Svc
xecOPmRGZ7IPUMP3ZeHly+HPFCOYUSmONJFIJn7368kjF+KY0YUoGfGok+l4
XwHvHbMXzMg6KMvD/nIaTkn8VWuXzIwWo1uF1e6m4muOT42D39D3L/z6wr3B
ZNzY2CEt5h0zMvi8/d5poWS8TO30zKsiZvSDp3JngVUSfod/PugDlRl5uv7U
vM78Cl/9cO7dTBszIk+e4xE/+Bw3ThNf3+hmRrFGe02ZeOLxsoh1dfZBZpQ1
cL6Uk+kZ7mn5uk/8FzP6mafnvkB4indp+R84+pcZXTX9Sdngf4IrKRg6o3lm
5P/nVEiEXCy+zMpKMtlgRj4s/jrN/jG44Uyf3n9MLMi/pim0sSgaL+l+/8KV
yIKSTB0TJ+ajcI83lkcjt7Eg2x37nlCCIvF/FyrM6sRZkLTl/Lz6cige0J3b
jx9iQQo/LG+UfwjBuSyTr5TIsiAmTZura2EPcQnH+8bZJ1nQ5bgfG74G9/H8
f57dYiosSP225dHXOsE45mtvmKjOgjT4ul9d1Q3C9SMuGERdYEGuH3b5Jrrd
w2k7TrWTL7OgdSey1qFnAbjdC0X9wCss6Gd7RbR9nT8e8GaPnvs1FhQplVRs
c8IP51LgapmxZ0GewhLBaQy++LMPDLo3nFnQSNPcs0+J3nhew08dU28WNHV6
7S0XmxdO0etq7AhgQfkSz5dGfnjin7sbzuo+YEGmiYUyxm888IGJXE21GBZU
S/0l3HrPDb/hmFxfHseC3q1m8pX4u+KL/x6fUUxkQdvklEZZQ11wDuKd0wez
WFCfzEL1eIUzHhdhX5ucw4LkD8jfDx1zwvfzm6sJFrCgQA+B/R92OuHK4qdU
uKtYUPnhbX2HZW/hn94oUh/UsiAXhu16y/U3cT2Fg8DUwIIC7JpHSpzs8etq
XNhiGwvC20kFxjPX8YUGhnKHHhb0teng06na/3A/vXnliUEW9DG97WRH+jU8
zrJLqXeShd4P3tWbRdriYr8aivVnWBDV/Uvq6BMbPNexQrFpkQXpzIm+epRp
jX/yTVaoZiCgr42OV6x/W+J6xNj3yqwE1BlmW/ZqjyXeH3FfvoCd/t59x8ah
Sxb4wgt72Qx+AmLtMjkhUGeK+4mb54oIEpD2pt7YMbsrOPvbC4fj9xGQ+ZMQ
n14RE1y0XFE6XJqA0qoqjJhKDPEctYPZrPIE9Gh9bOVE3GX8xNc9Un7HCUg6
QDDeJsgA1+1hkLytSkBRVbFzZwP18T7L+fSpMwRkMbR/++Lji/i1Xz/Fr+oQ
0LjmnMf1PD3cZ7lhv5EhAXG1V/9pJFzAyX4Vya2mBGS8zlnYjuviscS8fdrW
BFQmPuxZyngef8MfSz8E0edbOq77gqKNKyXeTyy5TUDn7Xrd5ma18FrxO0Ly
nvT9ZxbtUi3SxHsVzPeIBxKQWfdHl4PXz+BXV45xBz0koNejVhk2Jur4TAUH
888IAhL6LDKSbnQaZzlTNpn6jIAq7nOrH/BQwyPYowZYXhJQQ02UybWnqviu
5mutNqkEtGpQ0/mOqoIfNtpRJpZLQGGOoSGpRxBeIjT1NrCAgPK03K/NTOC4
6nBN0mgpAQVF5HsZ3cPwy3aOD1NrCciHWW2P/7gyPnzkjDdLAwHt1fM43Jd7
ArdfEHKy+U5AosXXzeWClXA/76+GYj30/YSOp18yVsTJqsnagYMEtCZzO2XN
4Bgey+qJRkcJaL05dE7DXAF//UhCMnWark+hkGNjpDyuoL+xh2WRgAwT4Qa5
VA6v3NnGbbNKQBKdat83J2XxH0n+//YTWNEu+w8vM9sO42ZXDX/fI7OinJUH
uo03ZfAJqSODI9ys6N1T6cW9AtL4+vu+Tym7WVHkqvlvl6cH8WCP92XMIqyI
2ysD23tTEt+GheRYi7MiMb1LrSq6B3CJT8ef7JdlRaJzfY2PKeJ4XghXyL1j
rOjwh7qglFNiuPL5n94jyqxo6IBi1OTl/fj5rmjblNOs6NfCMqtY4j68J+G6
EfNZVnSKUeqdeLMIbmOJdKx16euZ/Mn1ZhfBPSb/KOw3YUVMp4ZjuU8I4Uy5
tZL3LFgRM1Z+bXh4Dx5++7ngiC0rKovsUcUTduPJ6xosKY6siLpdZbhReScu
XS28zOTGiu66yUi+2yuAFwUt/bbyYkUWJqYNftz8+Feu1B+iwazoeMAfscc7
+HCDH3c+B4SyIsYzX05WH9yO055e+DAcyYoWo0y7sjV48QWRreTk56zIl/Oy
TlMqD+7zs/0JUxIr2qJqqVNquHG2129CrNLp9poq64XaXPjeo8bOou9YkXZG
gjfhMTue+U/2akARK4pZVOQwOk/G5cuJxsMfWNGr05dM/Xex4WdOF6okf2JF
fKTdDzM6WfFWtrBjTI2sSKBzD7NNAwG/0mR10KqFFf39x9Tq9IUFd7zMs020
jxUNR94ROzvJhFtlHokXH2JFDg+lnhftYsIvrZzbf3CMFcnnul7l1mPElZ+H
H5OdYUUNy8X620q2MJmpN5VHF1nR+tCl7WNGm5gI1njm+CorCi15f6OcvIER
BsnGOAsRKRBeTo89WcWWj0iNqLARkfTkrziS0wo26adpf5qLiBJWalU+XV7G
mkUf+GjvJKLl3WdkFzWWsJrbGURdISIyPYpF2ugtYoW1nyIvihLRW7eTr+2u
LmDxVwkpxtJE5Dscudv9zRwWViwmbSZHRAH92+8l989ivqRThZaKRPTxbr/V
e4FZzOZ1wOf/EBFZ3stsJmlNY5fXknTtTxPR4vWnpwWn/2Ba2tXdt7SIqPqr
6jmRlCnsyN+t3276RMT4rjjA+dgkJgrCrneMiChr0fNfOO8vjC8S3/Q2IyLr
bOmto+vj2KqcN0/Qf0T09XHD7a25n9hUQMKzBzeJaLZmQWD/1ig2+OODaJgz
ERXa/VD5tmMUq3VdVYi5S0TRy8qVvy2GsaJPuyqf+BNR304Ft/uPh7AsgRNn
4oOJyKPAg3+5mYZFlLobJUUSUXBw7+PcugHMn/x0ODWWiIa+1rTuu9WPuZgU
2WXGExFfSISZ7YE+zGhjwTs3lYiwlju0nupuTPscH/F9FhHJjt9S7E3uwvCX
RyOLcogo0GyCoBnZiYmpOCdXlBBRWqwUx/mIdow/OupQdQURaXlypI+9aMPY
RvIKamuIiMNrmWmy+Af2N3D609dGIpIPZWC4ydaKDbVz6X5vIaLPZ84d34Fa
sDaJw92tHUQk+Vbgn6dvM1Zab/+7m0ZEXkyiF5dkmrA3u8Jc+n8S0a5q8ay6
vkYs8Ub2Bm2SiFKWapFy/FcskGOSe2KBiC46upyNxr9gbqZsz36vEFFOT5aF
ulg9dj1HUnR6k4i4lw9cQ/yfsXO61xSWSCT0e+nm8ynBOkwlKbhihZOEJAYf
6rySrcUU5tLUN3hJiFj75G7CuY/YrsejhixCJDRe2WeUnVGNKd0T5ncRJaEA
g4O9yS1UzMDZ+MfIARK6tKfN7R2BikXrNut8lCchfj/Blet8FVgesLMfVSIh
xvTh+5HvP2DfD6vXJ2MkZJD6vszUugzj4CxXDdAgoTvpx8rbZosxqfWlrVkd
EhqJ4m1l+16EafyWq7C8SEImLJdV1koLsaAvGcdVzEjoYr1cQVDReyy1ZHgh
z5qEZNtl5yY/5WM1GUL5ItdJaM6zVit1+B22GRQjzeBCQhH9d7/8O5GHCbo2
/brlSUJVw3xFB37lYCdt2DIGfUio5N+LaC6nt5iHqu++qock1Bh6vO1m4Wvs
iVzZwOFHJGR28F+TqmMWViCy+DzxMQlZGrmW+ChnYrObN/h9XpKQg1GRifZq
GsbzN+3Hn1QSWmCR37z3NxU73E+LNH1NQuf5LsXenE7BbnwwYMcKSegBp+vJ
Zb5k7MHrqPo3ZSRkhEJqvZSSsIxnjUGCVBKKVZSIcL36Cht1V2VYbyCh1zNx
ZrlVLzCma94Vds0ktOe7EXuWfgImYlByp7edhFYY5fbSVuMxU4XDi2U0Evry
j8fhm3scdnf/9XypMRLK9atAW9pPsXje1Fvxv0nobUhVpY3sE6xjZtek5xIJ
CVS/8hQVfowtDOpn/FojIZ4eOU/lgzHY9u+PbIwY2RC5+9pvFojGdN8SBpU4
2NBuAXNzv9BIzCEBJWRuY0PnO1e/6QU8wsJCvYx2CtD53/jLCYYI7Mv12R//
9rEhfSmahJpCKDZhKB117QAbKvzQX6k//hBj1bh2rlOaDQ13cPepvn6AqUr0
1xcdZ0NH4/5OlF0Jxix27AyWwNhQU9q47oBWEObLclHtiSobSj4fYMijHoiV
D9dXuOqwIf7UsjxpywCsp4XZ66ceG3rq7pU87euPLVNxpUuGbGhF5nKdU5Yf
duxlQb6CNRt6tVhw3vSYD6YfMX0r9T82pPBa4sRUzV3M2VtKhs+BDY3vw44d
svLCckxeZcx7sCGeXX8HbFs9MIXO/ausPmyoINmHI7bQHfugl6G9+x4b8t2U
2PJOc8PqNXNmUTgb2lAPcIIsF+x8ndwp/Wg29HyPdR+p/DbWgQqfXHvKhr6X
3NG/2e2MjRwvPxmRxIYyY3dMSMo7YTfeQ0RSOhv6wis6+8LeEZs5/JFWkM2G
WPZpdLaa38I2xRuCegvZ0JMYZdNfifZYYJJO198yNqTnM/5r+pIdxi7UIsVE
pcfT1yskb88NbCdf13fJBjY09f5b2qfma1jiIxNRync2tGA+1jhUeRUTZx90
Od9GX8+9vUyl1BaTZxrb5TbAhly9eU6mNVtjpd7X7R+OsKGutFOfk6esMLQy
VZkwwYYquwrvdfFaYToz89Yf59iQsEOPwt67FlibnXtRxz+6HuGPH2bcNceM
x1dJk+tsKMnt06OdvGbYfwOMOTxEMmL7m5PFdtME+2sUxCDGQUaj2x5+EJIz
xlzbSRePbyOj7mcC02bMRlhAI/ey6R4yCvZpCR/7boCRNGK0nETIqLInKXOj
/hL26CP/i0BxMlqVdEsZ/qaPJZQJqWYfISP3RZFDW8t62H7FpMeVCmQk8mGM
SXmvHvb6ndh4ywkyUvtKadDQuYAVZx4KW1YjIwkLs1aNiPMYLpY7wK5JRrZn
Gzww0XNY7Ut5OeFzZFR7MZHj0SdtrPXJiY7ThmRkJyF71QrTwgx5KySNTMno
ramxZxCXJjYYjrzsrchI4HGr0Zk/Z7CpwDMiMfZklJvQSMRaTmO3Gb46pzvR
/cnZXaPdfgpb9TpXV+pGRiY7bO7nj6phxNuXbtD8yOhBy3Nx7/2qWMTfrvL5
IDIqD0yo+3tBBeO7cYWbGEpGp01L7n5/iDBRS+sCmVgysr//PMVKEscy+8ZY
VeLJ6P3t6Y7vXynYEcMbRvovySjAyO7cjM9JjHLeafNOFhnd1wqf8Nt2AvvY
sKAbkUNGLltD7S+nj2Na6h4pSe/JaJvwxnhTjyJ2GfPVqK8go4Xne9bIHQpY
3+IYd00NGZk/npdM+nUUs8o51/nhMxlhBqWR2cSjmL3w3qu5LWQkpK8uoGUp
h811BslkdZDRtyMsXowJsph75J+F5F4ysnA+aTlWeQQLYKy49+QnGb3QHSBs
bUhjpDKxs5GTZPSdxdr/Y8EhLNw5jDdkmowGPwhe3X1HCosbMUnyXiEjHfLu
3nkZSWxvwsf/3DfJaFkZv6265wCWon9I1omZHdlITIyW8UlgOXWrlTac7OhF
9IIsm5QYpuBjFWzGy478whJ7+0/tx0oVG3QMBdhR5x8ur+7rolhtxrO+s/vY
UbW6taJvswimacGYelqCHQ0frIjU2yaCNe28bgeH2BHxTF4PVrgX636otCp/
jB25jV2NOkcWxMxUX1VLK7Ojd9rCs+Zfd2Ojq8SHEsCOgtfumMfG78L+2nUK
7NZkRy/XX07MWQhgLmIwuP0cOxJ69ihx2oAfW+lLT+e8yI7Gs0o2Sgx3YCzn
3I4xmrKj50UzA6+8t2MhrAPrq5bsyPDrzdt1L3kx7qrTtQtX2dHxxsGLNV+3
Ybtld1yccGRHZYlX74cCD/Zy4u7uYVd29M2p3ZOLkxsTSxod6r3Dji6GcMjc
zubEjvAWOH4PZEctelVBKfzsWEHDHqUvD9lR12T3NO8wG6Z8795WTQQ72pjM
cVX8QMJOLehFFMWxoyuMu9vlH7NiDW/KLuW9YEc9nHE8v6IJ2HlbUaHXyezI
u6Y9hvMFC2bcMZv94g07ui0uq/yqhQmjRRjdfvqOHTFu5HfvWWPEbM9UK0cV
saPi40vKIocZMceSyC+BVHZUX3CF7bDZFsXroIWhRwM7im/B7hUmr1OC44+M
27Wxo8KPKre4xVYpUexbruYD7CjHjNNloe8fJeFuE8vFCXa0x0RANbp+kZL+
50WM+hw7ejaT4eY/PE95Z3ZTVHmdHb2a2jQtl5ij8HG47GIlcqCszqqQTscZ
ilvpHZ7WbRwosOuc4Nn6P5Suq/7EREEOZJgqVP9oZZKizPdg8/oBDhSuGE71
dJigJFRHLB6T50CeHdu23oqMUTYdYqcYMQ7U2VrIfYM8SrEQTBj5doYDycTv
bXCVGKbUfEnueabHgTRpjeb8jjSKmHtWi60pB9qgJAPhUz8lWCyvXu4/DpQu
r5qet9RDmWgpqtpw5kAfBFsOi9t1Uc76VhR98eZA/peVVZiEOig8PQ2pljF0
fxWjB61FWyltCl3RK5kcaFX9d0xKxTdK3KOfflGVHMh3wXf9p1U9xXRyzuFg
G338OUwjefMjhUvF7cajbg4Uk6Y/XcD6kUJ9umK7OMCBmHw1Hep211BETzOY
Vv/iQD9HxHc/saFSxl5ynjXa4kCFHnpa/bQyytOlSPUqFk70m6VexSamlKKh
w6cqTuZELJ+s+rkMSiivV3efmOXjREEv0zdKSUWUW5ckDzyU4kQiTwQGOrjz
KctkNebSS5woYXNaafpUJoX3L9fjGmNOVHVc2OzooQzKoZYesUZzTqSqKjR6
Ym86xeyps/rgdTpDXfdpyVTKx/3JDwk+nCjSM2yxtuIVJYLCyKOXzol+yU08
KhR4ShF3qBL8vcSJtEuGd8ktBlH0Wk4qCsVxoQez/B0JzdYU8kn26vIXXMjC
qxOlf7eiVKf2nL2SwoXI2+a+5PVaUmQ9PC2f53ChXJcb/rI7LShcwsVhu+q4
0BvTxv2jYsaUL/byIzvmuNBFg1HuePwCBZEORnJpc6MUy2aN1k2Msuy0vDvn
AjdSt1oToXhSKLm9n9N0LnMjkIqrsyWepOzNvfohzIobXd45cohgokRZv5Q6
RvbkRr4ZNEXfT0cpxSnCGDGdG81qPPdT4pWiOHBOf07P5kbF39Z0zKokKRLu
lXrq77hRX3bO9wLvA5THWqb/BZVzo+08iWsBUuIU59n4GOYf3KjWJz5z7PA+
ipTJjb0pXdwoMlncz+e8CGWo9kSW6gA3+m17JaJ7aS9FN66r0v8XNyoU3dHA
NbaHQmLK1Nw3zY2WmX5WqXvtplTZubdRF7iR4OyFNxOiuyhu7ermFqt0Trns
RegToPz//1Foit1AsSyNn/I/nlnRKA==
          "]]},
        Annotation[#, "Charting`Private`Tag$46852772#1"]& ]}, {}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{0, 0},
     DisplayFunction->Identity,
     Frame->{{False, False}, {False, False}},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     ImagePadding->All,
     Method->{
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}},
     PlotRange->{All, All},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}], ",", 
    GraphicsBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1: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
0GbH5n09O7Cej4ydmlLPC3XDvYOfNSo2cmIuRp1uDcm6U13w/SPiWb+3rKUL
/M+/qUOH8zH/+wn/rnZPdizmZtT8viZRyb8L9hcIrpZLekr8ToVVxe+w6IL5
RwqLIjlyOykuQ86lhVsdownnVhaEz/t2gj9rXb7kvSed8B6qTXlfJm5R/O/3
Nce23C1mZyhO7UHpXTlhvWpYb0G0/uxNF7fh/lKkMJwV2rSG6DbjmWL6rFgv
QYk/M4LLRzvg/jOz6Rs1Ggjv+psWlJNFsVIrusuctn5/JOYeFMuW+gH5dMC8
8UUpwrseYb0NSfMmB0Td6IB9zZb9WCdxivh/WYn8glWw3or6BZLWCm/Feiva
JJzo+3ZVB7yH8caENStYMLeg4E3xPm7D7ZCvU/L7qkV17TBfRCbO+1FGO/75
RTfc+Y2fFt4O/v7ysV7W3u2Qr1khZvmUA8WpvUhAOdrjhinxP3Ugamm/Xjvk
8T4c6X5pP+FqrYglLRK4vxUt1wl3O8lP9GhRl0RVZswVSPvXlc5tI23w/TlU
oMIj2IC5Ejn7Ce/mzMEcgMRuzZ//GY25HGUqN7i0+7XBPudXxH8rdiY83+vR
kniX+L9NusURcgHrbWi3q6bsK03CVYZbztrL43o3ZC7L/uSaKJm3mLUrUo+v
DfJ/qU2rV55vhe/nQ5/9WKT7W8Gv2/a+lEA14Yfa+vrs6YSF1u9wmPxK+MfU
ki+tbwifyh2uKnzUCvtP+xT8jb/VCvt4mIZu+ni2Fd5vm9Kj4y8PtULeYr4L
trY7SD4zrZfePza1gH/opPqg54IWqG9/w6JkVtdMcRUSUEx+pRbVDLpup2WP
4NNmmOf2dNueaUOKGe0oX2rAtWQ31jsQS2VQewgv0RXvGexk9DaBn7XgSmf9
1Cbwi80oa5L2Jvqwscs2jptNkF+cR/VR24EmuMeFmPnahHUUMzqQr368hPt0
I/RX/7nFMCkhzBu4pXJ/SCO8n/rBLrE19o3g7zjkd39CtxH8kt31SwqkCM/s
4lsfxIrrB5FMU8Fdm+YG+Hxfd3iUrxPXAHqwmKKgpGsD3KOtcObWQqMG2FfA
PDqraS/Rdfmvr4pb3gD3ckMbTV2H6kHPP9+SapRVDzoL25tliu+IrvDlmDH/
nXp4P6ujXGjkCOYhFP0za3HuBsxuyDXsQ7rCrzrKrxNdM7C/862I4n+/7x7k
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
GwUr/yb84J7sxsSjRZTfKJp0pgVJhxbBPY19i0RC5ovgng1ffd6vPVGMfx7Q
NVOuCHl8xhyP0ku3+3MylUD9jvYFgg/0SyCvVKLemPQnrLcgUfevma2/SiDP
4m8LjhzcWAr3W/T+y44ADWA6+3O9dTN3iM5yj4lD24/if3+/pl3+Oh6SjfUG
NKet3/h3uBTyzNCZs/X4y+DzMCkeHhGhiLkdjS47+YbNuAzyDtJYHp5zw/oo
6h0Mv/49vgz8OmtP6i5uK4N9WjNZlK5wlMPPy6bIiE0p28ohb7Hh6VLBinLI
l8zLZmlnUQH7J85FGVb7VsD8uN4z6lJZWI9E0ZVs2x8PYW5C4anRa5uXV0J9
2JezbDsVKuHzE+zNPvbcCDNCHxxj6rtccf0Y8r9pkLn3O9Zjke8ZjnDPFqy3
I++Dsa+H2Krg8+Gx/dwDVekquLebEOe1d/qY+9Azrm86U4wquK/TzDkFjU+Y
y5BjJ6f4xzLMfYhR+m3Jn1+Y+5ENMvytI1IN+1iFLur6ol4NuoVHXDHLbcxu
6CbjfPyZt5gr0PXrXB9iMzAXI2P97y5cg9XwvpdULty5tKyG4g50Xpr7HKLX
wDwDgfiDyy5j3Y1+iv2izPXnNeCnO8ktkPkNcyk61hq/UKAZ8wDSLLw4cpu1
Ft5TPZ6nrkCqFuapBSWkr9erBb/9bpe+3LfHXI0UbBZ7VYTUQl5540T7LaWY
m9FOnctXH85gLkQySrzHG4Tq4J5SEkl02UN1cP/NK41EXW7VwXxRliW8HW/q
wH/9aNIv+XTM5cimSNlxcojo1WEFPOGr6mGetNPxN1dU6+E9nC83rBe+hXkI
de6/GF7vWw/9e4UGdnvk1oO/1x/zDI3Jeth3tH5Wg02oAfKrxzvUph7G3IOC
PDkvWls2wL3nzd2HZAMbwF9Pe7XVUHED+EdKfmAKmcU8+O/7YfNzQ9FG4Eu9
Ufyrj2GuRclZch8qbDH3opWBaRLPPxE2Zxz6rlbVCPsWni3bR1vQBO+xcc/J
wgSJJvCzW9mme1u/CfLWThm3STg2Qb9Mxei17gjMA+hZpNVP/4YmeK/u57QH
J9ma4eev0jWnRUtlm2Ffn4O8XoUGmMfRxEZvocfOzbD/EWahz4pxmFtRcGvI
jl9tzXBvWvLW1GjuFvA79fa7+nW5FsgTa6VYtfFyC9Tz6Oaca3FrgX2MZbX6
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
          "]]},
        Annotation[#, "Charting`Private`Tag$46857931#1"]& ]}, {}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{0, 0},
     DisplayFunction->Identity,
     Frame->{{False, False}, {False, False}},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     ImagePadding->All,
     Method->{
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}},
     PlotRange->{All, All},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.819297575326285*^9, 3.819297602135736*^9}, {
   3.819298744441272*^9, 3.819298749537401*^9}, 3.819298837066124*^9, {
   3.819520276363633*^9, 3.819520291515596*^9}, 3.81954592094212*^9, 
   3.81962571069909*^9, 3.819828756139242*^9, 3.819828974413226*^9, 
   3.819866946091782*^9, 3.81986908076059*^9, 3.8203430048963137`*^9, 
   3.8203896519621563`*^9, 3.8204265766810303`*^9},
 CellLabel->
  "Out[910]=",ExpressionUUID->"322e843a-0ff7-4b8e-a8de-61a46e8038ce"]
}, Open  ]],

Cell[TextData[{
 "NIG factor copula\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzs3XWcHeX5//8+fp8WeLR9tMUhxQJFgkNwC97gDkGKE6R4kLgrxD3EiLuR
hLi7bNw37u67ce4f7+G76bKZe46f+5zd1x/PfiRnZ+65Z87M6X3NdV2F3/7s
2ZL/3x/+8IdSp/z6H8++9e19X375Vpnn/vHr//HCp6U+fP/T99595NOv3nv/
vS9ve/v/fv1/Dv31s6ed/Ic//PHX//0XYwwAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAid/DgETN82FLTr898M2P6OjN79gaza/cB5+MCAAAAAAAA
AAAA4IZihtddUcec9n/f/s45fylnvq8zxvn4AAAAAAAAAAAAACRX397zTKG/
lT8hhphb/34LnI8TAAAAAAAAAAAAQHLU+26sOf2PpQNjiPKfl7s4HysAAAAA
AAAAAACAxDp67Bfz5acDQsYPcxQ+u4r3N67HDQAAAAAAAAAAACAxjv36Hx+8
1yvsGGKORYu2OB87AAAAAAAAAAAAgMSIJA8xt0EDFzkfOwAAAAAAAAAAAID4
K/vt4KhiiDJqVKbz8QMAAAAAAAAAAACIr1YtpoSMFRb6ewXrv61YscP5MQAA
AAAAAAAAAACInymT15gzTy4TGEOsUHaIKXp1Xd9/u/jcql5fRdfHAQAAAAAA
AAAAACA+duzMNldeXCswhqh6p5Mnrbb++7tv9nB+HAAAAAAAAAAAAADi55UX
O4WMIepzb7/ezfqZgT8tcn4cAAAAAAAAAAAAAOKjXZvpgTHED0v29j63bt1u
a91T1TQ9ePCI82MBAAAAAAAAAAAAELs1a3aZ806taI0h3nFTQ3PgwG/xwTLf
DA7sm+j6WAAAAAAAAAAAAADEx3NPtrfGBs/9a3mzaNEW73M7d2Vb441nnFTG
i0e6PhYAAAAAAAAAAAAAsevRbU5gPdNWLaYc/2ytGqOsn3vj1a7OjwUAAAAA
AAAAAABA7LbvyDL/+mc1a2xQeYo5n92fdcgUPqeK9bMZM9c7Px4AAAAAAAAA
AAAAsXv/3V7WuKDql65bt/v4Z1s0m2z97BPF2zg/FgAAAAAAAAAAAACxGz16
eWA905bNJx//7IEDR8yVF9eyfnbc2BXOjwcAAAAAAAAAAABAbLKzD5sbrvze
Ghd8sFhzc/TYL8c//13t0dbPPnBPc+fHAwAAAAAAAAAAACB2lcoPtcYFzzql
rFm4cPPxz65Zs8sU+nsF6+cH/rTI+fEAAAAAAAAAAAAg/zh48IjZtm2/83EU
NPPnbzJnnlzGGhesVmXE7z5f4rmO1s/ec1tjc+wX98cEAAAAAAAAAACA9Hfk
6DFT9tvB5ty/lvdiUTddW89MnrTa+bgKAtUqVR1SW1yw6DV1vfhuzue7dZ0d
2ENxzJjlzo8JAAAAAAAAAAAA+UPN6iNPiEedf1pFs2nTXudjy+/at51ujQme
/sfSZsL4lcc/q3qmF5xeyfr510p0dn48AAAAAAAAAAAAyD8uPa+ab1yqedNJ
zseWn+3de9A69/Lxh32Of1Z5i489/IP1s+qXuHbtbufHBAAAAAAAAAAAgPxB
OW622FTVSsOdjy8/q1xhmHXuFV/cuSv7+Gcb1R8fWM+0aeOJzo8HAAAAAAAA
AAAA+cfwYUvtccTKxBETRfHbnH6Ufrp3nX38s/PmbTJn/7ms9bOPF29tjv3i
/pgAAAAAAAAAAACQfyiPjThi8r3zRnfrvN9/d7PjccEDB46Y225sYP3shWdW
op4pAAAAAAAAUMCph9KwoUvNqFGZ5ufBi83AnxaZ3XsOOB8XACC9ffFJf+KI
SZaRsd6c/sfS1nmfMnnN8c+W+mxAYD3T3HmLAAAAAAAAAAqekSOWmYvPrXrC
2mHhs6uYcWNXOB8fACB9PVG8Df0Rk+zZJ9pZ5/yNV7se/1y/PvMDY4hvvtbV
2TEAAAAAAAAAcK9L51nmzJPLWNcQLz2vmlfzzPU4AQDp6cqLa5GPmETKRbTN
9zl/KWdWrdrpfW7Fih3mgtMrWT9bpHBNs3NXtvPjAQAAAAAAAOBGg7rjAuue
+dU/AwAgXFlZhwOfM9WrjnA+xvxGOYS2+S5fZoj3mezsw+buWxtbP6dzNmbM
cufHAgAAAAAAgPR05Mgxs2v3AfLU0tTRY7+Yr78cGDJ+mGPOnI3OxwwASD8L
FmwOfL7UqjHK+Rjzk7Vrd5szTvKvMXD+aRXNjp3Z5tefAF5t06DzUrnCMOfH
AgAAAAAAgNSxZ+9Bs2zZNq8XXq8ec03TxhNNpfJDzUfv9zYvPtPB3H93M3Pj
Vd+bSwpV9Wpi5awzaa3qPy938dalXB8DwnPw4BHz+itdwo4h6hwfOnTU+bgB
AOlnQP+Fgc+Y72qPdj7G/ET5hqFyERUjDDonxR9o6b0v5vpYAAAAAAAAkHhH
jh4zGzfuNRkz15ufBiw0LZtPNhXKDjHvvtnDPPZwa1P06rrmn/+oEHZMyebp
x9o6P1aEphzSRx5sFdG5ve+uZs7HDQBIT6qfHfSMqf/rv7seY36xb/8hc9FZ
lX3nWX2Q163bbTr8ODPwfOh9sQ0b9jg/FgAAAAAAAMROOYCqFzZi+DLTscNM
753+Lz8dYF5+oZMX+ylSuKa1tlUirFmzy/mcwE7x5NtubBDxeVVequuxAwDS
038/6BP4jGnSaKLzMeYXrVpMsc6zeiaOHr3cnHVK2cD6A6NGZTo/DgAAAAAA
AIS2P+uQWbx4ixcjbNdmuqlaebgp+U5PL4dQ9UUL/a180uKD4Vq0aIvzeYM/
9UK6986mUZ3XkSOWOR8/ACA96XdL0DOmdaupzseYH+g5rxoTQfOs/ohB56JZ
k0nOjwMAAAAAAAC/Ue2phQs3m58HL/ZqjZb9drB5rURnU+z2Jubic6s6jwlG
6upLa3s1VF3PK/zNmbMxqvOqOmi6Vl2PHwCQnq76V63A50yXzrOcjzE/UK6h
bY4vPa+aueLCGoHnQfUsXB8DAAAAAABAQbNlyz4zZfIab42sWpURXk/CB+5p
bv71z2rO437xpLjn1ClrnM837CZOWBXVuX34vhbOxw4ASE+HDh01Z/ypdOBz
Rr2bXY8zP1Dd0mh/xz33ZHveBQMAAAAAAEgQ1R9VrlevHnNNzeojzTtvdDfF
7mgSsnZUOlAPnSIX1TT33NbYPPtEO+/YSn02wFSpOMzUrTPWtGg22fTrM9/s
3nPA+XlAsKysw755rmf/uaypUHaI9RpQ/Nv12AEA6Skzc1vI3xpjx65wPs50
t217lvc8j+a33h03NTR79x50fgwAAAAAAADpLjv7sMnIWG86dczwapDq3W3V
8jz9j8Hv2aci1arU2B+6t4V5/ZUu5ptSA03DeuNNt66zzZgxy70+h9t3ZHm9
dlzPO+JHfQ5zx7cVV9T5btxwgvVaGcf6LpDv6P6eMXO9VwdRPXj1PVed7YMH
jzgfG/IXPXdC/SbRu1iux5numjSaGNXvQdWc3bBhj/PxAwAAAAAApJsdO7O9
9VXF1t5+vZu5+bp6IetypYqLzqpsbr2hvnnq0bbm/Xd7mcoVhplWLaZ4dcO0
brxp015z9NgvzucYbihnoXfPub/LI1VM3O9aOvev5YkrAPmA7vl6pn32cT/v
eRb0jsn9dzfz8s3XrdvtfNxIf21+mBbyd8uaNbucjU/PuMGDFnvvU+ndqssv
qG4uKVTV3HjV9+alZzuY9u1meHUnXM9jKPrdF+nvxcJnVzGLF29xPnYAAAAA
AIBUpzzDyZNWezlZ6i1zfZHvnMcC/Zz+p9LmiotqeP0VlUP47VeDTOMGE7yY
kHrfrVixwzsW1/OJ9KLeVf/8RwXfa06xaNfjAxA9xT/0nFDOUaTPHL07ozgK
uWKIRVDd7Bz79ic/TrdzV7apWnm4b73vvC49r5rp32+B87m0mTZ1bcTfb70n
NGniKudjBwAAAAAASEUbN+71crFKfz3Iy7tQD0DXMUJRX5sbrvzePPlIG/Pf
D/qY2jVHmR/bzzBPPdb2eO3Uy86vboYNXep8DpF/TBi/0npN1q87zvn4AERO
+YetW0318qpifTYpnqg8RvrgIhpvvNo18Poq9PcKSR3PkaPHvN7OysWL6F2u
X3+H9ew+x/l8+tFvxki/0wP6L3Q+bgAAAAAAgFSxdOlW077tdFPy7Z7m2svr
OI0VXnFhDfPv+1t69UZr1RhlunaZ5b0Pvn79Ht9ao2W+GXzimtvfyjutAYb8
pVqVEdbrddasDc7HByAy6m+rvPV4P7/UU1d5T66PL1WtXbvbqw+g93/UR1n9
hvv2nmd+HrzYjB+30nvOux6jC/fe2TTwutL7U8kaS2bmNnPfXc2i/g7o95fO
s+s5zU25nLaaAjZ6x8D1uAEAAAAAAFLBkJ+XOKlRqvpXxR9oaT7+sI9pUHec
9873/PmbIu6vo7iiLZekWZNJzucX+YNycv2uscLnVKGPJpBm9M6M6hUm6vmm
bSufPxFj37v3oBk7doVp2XyyqVFtpFe7W8/Rku/09N530DM9Kyu1anfv2n3A
1PtubNi96fQu01df/GTmzi04tWJD5cQ++lCrpIyjX98F5rxTK8b8HdD5dj2n
uSluHcn4VcvV9ZgBAAAAAABSgdbozjy5TMLWUlUTSu/Ql3iuo6lUfqjp0nmW
mTF9nbemGK9j6NFtjnX/ymV0PcdIf9t3ZHnXst81plp0rscHIHzlSv+csGde
bqrv2LHDzLiM+cCBI96z7vmn2of1zFYc6OsvB5odO7OdzvWxX/+jfbsZYfXW
s3mtRGeTmbnd+XWTSIr7hpoHxYkTPQ71v86pDx+r/7zcxfm85vZgsfBzjxWX
dz1eAAAAAACAVKF1xnitmZ5/WkXzyIOtvG12+HGmyZi5Pik5EcXuaGIdk2qm
uZ5jpD/V4LNdY8pxcD0+AOEpX2ZI2M+0666oYyqUHeLlyut5pnz5yZNWe7HB
d97obs75S7mQ29D7B0OHLIl6vJs27fXyoqLt31j06rpm1aqdTuZaOZPFbrc/
nyOh2GnlCsPMoUNHnV9DibBkydaQc6Be0IkcQ9PGE8M+HzdfV8/rNaja87bP
PPdke+fzmkM1jMM9tnff7OH1hnQ9ZgAAAAAAgFTxYcneUa3pqceMYoZlvx1s
evWY6/XSUd5Bssc/bOjSwHFOnLDK+Rwj/QV9T9atS60eUAD8de86O6zn28P3
tfBif6GeaVu37vd684bKD7zg9EoRx/I2btzr5USddUrZmGNwl19Q3SxcuDlp
86x5USwmHvHDvO6+tbHXy9n1tRRvw4cF/5aRRNXJlUEDF4WVh/hE8TZeLD3n
7159qbP1s1UqDnM+rzn0WzWc60vvBxBDBAAAAAAA+D3FAMNZW1H/xJJv9zRt
fpjm1UJNhXWWgwePmKLX1A0cNzEexMMVF9bwvb7U68v12ACEprjchWdWChlv
iyZWo2fiTdfWC9z248Vbh7095Tgrvz+e8beLzqqc8NqgiruqFkHhs6skJIaY
Q+8x9ew+x/k1FU/q1xnquBMVP928eZ/X5zdo3+pn3b/fgt/9XdVKwwP/JiNj
vfN5FcXww8nnffv1binx2xYAAAAAACDVaN3vo/d/n2t1xkllzL13NjWlvx7k
rRtpjcn1OP2EWsNSzbmjvx6g63EivSmPx3aNKcfB9fjgTnb2YS82o7znfn0X
eLGAxg0meHUo69cdZ1as2OF8jPjNW//pFvi8eP2VLjH1Etyz96B56tG2gfvo
3Cm4zrZqdkZbIyAcLz7TIWHzq5oEjz38Q0Ljh3nlp/7HNaqNDBk7TdTvmaCc
QlEOYt7fgco1DPqbpx9r63xOZdrUteZf/6wW8lp67y1qmQIAAAAAAIQya9YG
L49g1MhMs2//IefjCWe8oWrJ3XI9uWKIXZNG9p5RI0cscz4+JNaWLfu8On6K
AVWrMsKr1/hgsebmsvOrh1yb1rsMQ36Ovjce4kN9+oLOk2qTxmM/iivfd1cz
636U07V7zwHfv92fdciLvUQaS1PdU+Va3XjV917PulA9GxcsiH99U/WOVJwr
3DErpjti+DKzc1e2d9zbtu03a9fuNsuWbfPqySo+GE7sRxrUHef8+oqHTz7q
G3icxR9omZD9qp5p0H7z5ugdOXLM64sY6r6nfo+u51T37HB6mH7+SX/eOQMA
AAAAAMhnlEOpHkmh1oZKPN/R+ViR/p5/qr11rVRxA9fjQ/yobmCXzrPMt18N
8upQhlMLLxTVytTau+tjK6gUH7jz5kbW86PzHM8Ywvr1e7waorb9KVc179/o
3R31Gw73mrrjpoamedNJXr3GvGOfN2+TKXJRTevfVio/NO5z/OhD4Y39qn/V
MgN/WhTWNrdtz/LiVaF69unf1SfZ9XUWq5ee7RB4nInIfc/KOmyuvrS2dZ96
X0L143M+v2v3AfPkI21CnudWLaY4nUvdb78pNTCsa7JOrdHOzz0AAAAAAADi
T7mI4awPlS8zxPlYkd4OHz5qzbPReqrr8SE2yoFq326GefO1rmHnP0Uj0X3p
YKecJNt5Ofev5b1YXLz3qf6Gtn2q72HunETdYx57uHXIa+iMP5U2r7zYyUwY
vzLk/tUX2NYLUjXL4328F5we3Hfy7D+X9ep2RvPexejRy639aXPo31VX1tU1
tnz5dvN9nTFe3dhidzQx99zW2Dz3ZHtT77uxZm+Y49J5CTrGvr3nxX3ctWuO
su6v0N8rmJUr/1eXedGiLabo1cH9qOWzj/s5Ow+i3NZwvk9S6rMBTscKAAAA
AACAxBk/bmVYa0SKD7geK9LblMlrrNdX/XxST6+gUb5WzeojzV232HPU4kn9
ZlW/0fVxF0TKpVIOnO3cJKq/nnLmH7inuXW/zZpMOv5ZxTJCXUMlnuvo1fyM
ZAzKqfXbluqBKw8tnscbVB9AuYrK841l+8pNfObxdoFzVLnCsKRfX4sXb/Hq
HgTlTOr6mzplTchtXXt5ncDj27BhT1zHrli2LdYs6vOa89ke3eaEVbc2bw3U
ZNM7ZkHf97wmTVzlbKwAAAAAAABILPVTKnxOFdaIkHBB+RozZ6xzNi7lhqiu
ofq6tW411ezYSZwqiHrCVak4zOshl4zYYW6u83MKMn03bOelSOGacY+n5aae
mrZ9q86qPqNegEHXjuJTynOLZv8dO8y0bnfG9Pjeu1SrNG8srfDZVby8TMVU
47EPxadKvtPTekzK80xWb2flVX795UDvHYFw7gGKwemdlKBtavy2v1ceYLyP
QbmSQdenaoPq+xGqb2OOjz/s4zSGqLxj5ReHe19Wr1J6IgIAAAAAAORvw4ct
DVx3E9W3cj1OREex4gMHjjgfh63vl/I4XKyZqnbfR+/3PmHNXjU5lWfner5S
ia6h9m2nezUGkx07VM6X8ouqVRnh1a10PRcFkeb9yovtuUmdOmYkfAyPPfyD
df/Tpq4NHJ/qmHb4cWbU+54zZ6N12926zo7bMSrnc9zYFV4fWd2XFINSb7ot
W/bFfT4V9wnqI6m4ZaLPqergqj9lpPcE5cnZnmm6VoP+9stP41t/U/OoOLpt
f2N/PZ+zZ28wN19XL6xjU83aRM+7jeYunJzevBT3dDVmAAAAAAAAJI9qnf37
/pa+a0TKV3Q9PoS2fv0e06/vAi/e8sarXb0eUZcUqvrbOvpJZbz/X7JyTPJS
zsk5fynne32pll0yx7J58z7zQ8spgfl0DxZr7vx8poKtW/d7uYcXnVU57vFB
xUnUi033HeVGaf1c8ahRIzO9nMdNm/YmNMcN4VMM2XYeb7m+flLeA1A9SNsY
lA8VdJ117TIrpn3rvmnbfjzquSpfrULZISfkgD18X4uE3rOnT1trPS7FGBN5
PlU3M+i8hWKrb6r7e9DfDRq4KK7HoXHY9qV3Z76rPdqcdUrZkMej52Os12ks
Nm7c611v0ZyLeM8pAAAAAAAAUpct10jr/K7HFg3lUKn+mWJGZb8dbN59s4d5
rURn739WrTTcdOk8yyxZsjVuteJcUJ5Ko/rjA3tquYzZ5VBOhm1MufubJYry
XrSf4g+09HKTwpmrvOv3uk60Rp0xc735efBi06fXPDNi+DKzcOFmL4/I9bUQ
T+r3pe9IOH28QtF833RtPS+Ordq2A/ov9OZMsWXXx4lgig8q1yioZ13f3vOS
Mhbdzwv9PfLrsWrl4XHZv/KU/bb/wXu9Ytqu8tnefK2rdfzvvxvb9kOxvT+k
c67YUiL2mZGxPuZ3E0aPXu67bdWpDorVxTsuW6fWaOv+Cv0tvNqgRS6q6cV0
k/E98jNyxLKoY7rKF3f1fhIAAAAAAACSS2uZtjUv9fRxPb5wKM6jPnvVq44w
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
+RoZGetN966zvTzZcPpNidZelUfs4r6htfZw6kLKlRfXMn16zXN+r0Py7dt/
KPDdgZ8GLHQ2tgplhwRet6ptmYj96hnltz997yPd1jWX1baOXz1it+/IMr17
zjX9+sxPeP1s9f2zjaVxwwkxb1/9eINq5Co+6/d3qh1u+xv1zs37eb3vEHRd
qPeiajHrWZ2M54ZqOeia0blM9ndkx85sb14jef9H+ZJjfeK5ctuNDXz/5tkn
2iX92AAAAAAAABA+xb+SsRYWb1pzPfev5a3/rnWvN17t6sUvtJb9zOPtwt62
YoEff9jHiw9GWgPuyJFjXu/ADj/ODBxfEL3Lr55hWjeN5dx26zo7rJiU4lvJ
rJNWs/rIkGNS7OnGq76POS4bDeVcKOdU/ae0hqo8l2i3pbmtXnVERPFZxcr1
vQxnnVo15pJ9z1CMP5y8FF17quFI/8OCS+9Z2K6VSwpVPeF9j2RSHr7t2r3j
poYx339t4lXXVPnItvHr/Zxkz2ftmqOs44lHHqR67Nm2r9oAfjUJDh066sW1
bPf5vO9hDB+2NOR9LSd3Tp89/7TE59eX+WZw0s+lnkF69kVau+GD93oFxqtt
z3O9R5bsYwQAAAAAAED4GtUfn/B1MNeustRazUu1Ips2nhh1/7/clHMW67iV
uxZtz6DRo5eHFf9SzdqFCzcn/boLNT+XX1DdbNiwx/vs3l/Ph/JZbJ8tdkcT
r5+V1neVI2erYSda99W68p03N/Jq9CoHU2PR92BA/4Vm8eIt3tpzzjg//W/f
qM6d5r5c6Z+9sUc7R1qPVW24UOdR5zpZ5009MsM5fs2v8pOSfV0htSgf2naN
qK+my7GpLq8txql820Ttt3yZIb771LsvkWxH76rY5lZ5/MmcS+XpX1/kO+s9
N/c9NVrq02s7Xr0z4/c3deuMtf6Ncr9zf1bvDOm+FereppzInL9RvK1n9zle
XfevvvjJq5P6YLHmXp5oOO8RqY6C6s2q56OtbkChv5U3ixZtScp5VK9SPXMi
fX9HcVz11w7atvIpbX/fuEHs+aoAAAAAAABInNWrd0WdN5dfqN6q1gHj1Xco
nJyGcKlua6T7V+xRcbhQ21YtMfVOdHHdad1Z+X5B43vo3hbH85VKfz3I+rm8
9d6UR6RYsPo76vjU20lzEmlu6Yzp6wJjkjbqnTl79oa4zZXq+ha5qKZ1f/++
P3G9R3NTjmyoY9e6uPJY4hE3QPoL+t7aah8mU/26404Y1xcJjm/a5kT1KyPZ
ju1dDOUBh9svOF4GDbTnCr7+SpeYt6/fKbZ78bWX1/G9tysHXDE427iGDV36
u8+3bjU1rPu7ctXDHbfeI1F/RtVlV09F1SxX7r/yM/WeTO5xN2syybpPxRkV
40vU+cvM3Ob1sFSPzkiedYo3Kg81nOstqO5t397UvQYAAAAAAEh1inupb2Gk
8ZL8QDlpK1bsiNtcKj8haC6Vc6J8hUjGmJOXF66vvwzO9VOtMvV7zNvrMdkU
IwzKMRH1MNNniz/Q0vfflQOTqPEpjhnp9VS5wrCE1ENUPori3bb9Zsxcn9Bz
FdRjLIf6hiUyjwvpR/EPv2tF8QfVgHY9Punfb4FXB/SlZzuYH9vPSPh9sdTn
P1m/P5FsRzWN/bZz6w31kzp/Oo+2vneieqSx7iOoboJf70Xdg23PjJw5yn2e
1Ws53H6vyn9PxDzqt4Nq29r2qzzIeMYSdfzKF9a1H2mPbH1etd8jGY/itrbt
TZu6NqnXLAAAAAAAAKKj9+IVqxg6ZInX/0z1PWvVGOX15tF76m+/3s1bZ1Xc
7b67mplbrq/v1YdUD7dI32FPFRXLDY17zMe2tptDtTMVw4tknOqDFe7+lfsQ
dD507pTb4fp6y7FzV7a3Pmobr3JQlLdkq7P21n+6JWRco0ZlRnw9Kc6XyNhI
UG3XRPaX+qHllJDHrhzMSOPdyN/WrNllvV4eebCV8/G58uWnA3znRDnkkWxH
c+i3nacfa5vU4wnqi6jfCJHmgfuxxQSVe6n4W97PN/DJM81Nv3Nyf16/bcK9
z+s9oETNZah3gIpeU9f7XsWyD9XLVu6jthXN76bnn2pvFiyIvBa6YvS2bcZ6
TAAAAAAAAEgPep/ftkak+pnf1xnj5Zap35xiP6rXqbXBu25p5OWUKRcjWfVV
9S69ekvFew6aNJoYuF/FZPW56dPWhj1W9R2KJNapfdi29cA9zc3+rEPOr5W8
FCdVjqRt3JcUqmr9t0T1VVJvykivq5df6JTQecrOPuz10vLbt/K+ErHPPr3m
haztqti5xub6OkJqCYobfPZxP+fjc0V99PzmJNJ8RFu+dN6+f4mk+py2HpPS
svnkmPehZ5ZtHy8+0+GEz6uGaNC7NK++1Pl3n2/XJrL3ehJZR1rv1YSqSa5+
k/36Lohou3q/ZfKk1V7NXtVEiOZ3k2oHaBvRHptqx9u2ffBgcuvwAgAAAAAA
wA3Vx7KtESkWEe52tN6lXnbr1u02ixdv8XrUjR693Pw0YKHp2mWWlxulnlbq
waZ39z96v7d549WuXlxSuZIP3tPcmrsmiolofTvex6+cuaD1VPVUylkr07GF
s26n+JlijuGOQXVCbXGmM04qY5Yt2+b8OrFRnmY0a5u6NuI9lpUrd0Q1lnis
mYdiq4mo63rf/vjGiDW3oXKN332zR8rUp0Rq0fsitutG+VCux+dKudI/W+ND
kWznsYd/8N3OM4+3S8pxKPe9SGF731a9HxSP+JBiV7Z95H2Wq1ZnsdubWD9f
+Owq3jtPOZ9fsmRrYL1oP4nMR5RZszZ4vTJDjUM1UG++rp4XNy75Tk8vz1Xv
aik/VO80ieL1ijdHeoy56T0wxYsTdd0rruny+wgAAAAAAIDkCaq5mMz4lfIM
g9bEGtYbH/d9qh6s1idt+1SeZe46YIqT2j6rWrK9e8718g327D0Y0TgU9wmK
97i+RkKx5ekE8atpF6u6dex5E7Y4rcyduzHhczR+3Err/pcv3x63/WgtW3GN
oLl/543ucalZiPzp0vOqWa+dcWNXOB+fK7rH+82J3gWIJPdcfe38tnPDld8n
/Bi2bdtv7X2ZI2/t0GgFPdP1rlHuz86ZszFwTL16zD3+WT2HQx2DH+X1J3p+
9f5UUI5+oulaVN5mRkb8+u7anu+6T7j6LgIAAAAAACC5Sr7d03eNSLmB8e5B
aHPo0FGvH5NtbezN17rGfZ+KkYaqQ9a61dTf/Y1iX7bPqsZatGOpVH6odbvx
yCdItAMHjgT2SsxLuTCJGIdq7frtT/kf1auO8P03xZGTcZ0rL9c2H8qticc+
VGdWNRaD5l79xMhDhI3erbBdO6orHek7EvmJcjFtc6PYVrjbUe6ZbTsrVuxI
2Pj1vkKo3nrKj4vX/iKphzlxwirrZ3P30tXf2fI5c/928fv/J6u3p2KJF56Z
3Fii8s9V4yFez5Lcvinl3/uROCIAAAAAAEDBcduNDXzXiBJdAyy39m3tfY5U
I3THzuy47k+5EKFiiKq5mvfvVq3aaf28ardGOx71L/Lb5jWX1fbqvSXjHGg/
nTpmmFuur+/VUlMPzJkz1oX990E5lXmp3lq8x681ctv+1P9QNWn9asTl9L5M
NF1PtvHFIzdz/fo9gbH4nHV0xXyTcbxIT61aTLFeP/fc1tj5+FzSPd42N5Hk
FP88eLF1O++9lZj8857d54SsuakY4944xolrVh/pu59Cfyt/wmezsvx7yF5x
YY3jz3/1cn3uyfaBx6DasKpd4Pdvel8nWdfK7NkbAnPg4+Wy86ubqpWH/67m
a7xVqTjMd9/Ku0zWfAIAAAAAAMAdrd2p/57fGpF69iRrHEE1yhTbiue+VO8r
1PreHTc19O1Zp5qRtr8ZNHBR1GO67oo6vttMVk1T1W799/0tT9i/+h8pdhru
dl58pkNYa59lv41/7M62diw9us3xPjNyxDJT5KLf+oKp/tv77/aKSx+wUDZv
3mftwalrP9btK0dMfTyD5lz/HknOFAqm11/pYr2Gvv1qkPPxuTRi+DLr3Myf
vyns7SgepnurbVuqjx2vMev9iddKdA55T1b+XN5ao7Gy5SPqN4dfDrjuz7lr
Mus5PW3qb32Gt+/I8n1G5aZ7+9at+73fNXoPKu/9b+eu+L6PFMqGDXsC3x+J
hXpK9+sz3+utnOjjaNp4onUcPFMAAAAAAADyv6lT1ljXh9TbKBljyJi53joG
5b/EMx9PtSVtNc9yKP9hzZpdvn8/5Ocl1r+bPm1t1OO6+tLavttUPbFEzr1i
peXLDLHGuES5COFuT30GFZ8LtQbavt2MuB/Lk4/453SqpmnuWozqC5iZuS0h
/RltbH3VpH7dcTFtW9+PUPFb5bVu3Ji4fBXkH7r/2a6jAf0XOh+fS4pR+d0r
FftS7CqSbX3+SX/rPGsfzZtOimmsyk8uV/pnL/cv1P1Y98gxY5bHfb50n7ft
05a/qXhhTp/h3Xt+i1HpuXJ9ke9CHkPuZ7BqpSt/tGK5oebH9jO82K2r60a/
s154+kfrO1vhUr65nteqX53M8Qflz+o3kat5BQAAAAAAQHK0aDbZuj6ktbtk
jCEoxhKvdWvFjlT7K1SMq/A5VbzcPNt2guqv2mKP4VC81G+bzz/VPiFzrhwG
9X4MVdtVPvmob0TbLvFcx5DbnDB+ZVyPR/3+/GqWitZvk3Ed29jq9YnWlZWz
Esv2g74/on6Jipu6nAOkB+Wu2a4j3TuTGXtPVYr7552XaN6LUJ63etoFfXdV
h1hxmnD7mar+p2Jn6oEabsxKccZhQ5cmZK7Gjl1h3a9+e4T6ex13o/rjvRhh
0DHoHMQzhzNRFCPt32+BF9/Vs105k7feUN+LD+q3h85Fzm+Uc/9a3vtd8GHJ
3t6zeuFC+++SRFPNVNvcf/1lYt91AgAAAAAAgHsl3+7puzakNaxk1MsSW821
wmdXCXv9NMiiRVtOqHFmiyGqp1HQtmpU8+/3pLU/5T9EO8a3X+/mH2f6U+mQ
Y4qEeuMpFnrt5f51VP106zo7on2MC1g7zhHv3Lg5czZa99WsSWx5PbH67ON+
1rEp5hrLtkeNyvSuEdv21b9Kc+Py+JE+gvKO1DfV9fhShb53qvv91Rc/mSmT
10S9ne/rjAnrHqxn4asvdTZ164w1fXrN8/avGJ3y6xWP+/S/fb2YU1BeuR+9
R5JTNzQR1GvxrFP8Y6Wqo6pns9/f6bdHrx5zvRhbOMehnp6ur4l4isfvnni7
4crvfec+HnW5AQAAAAAAkNpsfQkfuKd50sbw0L0tfMegWo2xbHfbtv1eXdBw
1lYvO796YB5ijo/e7+3798r5imWsyjewje3S86qZyZNWx7R95ZaqHtolhYL7
QualGK9yOSPdX9Gr61q3qdySeNaqFeV42PYX755fkWjZ3J7vK4oFRLtt5THq
urNtW+v3iahViPyrSSN7H7RI85IRmnoEKl86kntyvDz6UKuYc6HDEZSfrlii
YqMzpq8zEyesMp07ZXj5d6H6F+fQOxTt2kx3fh4LAn3/bech3vUFAAAAAAAA
kDrUe8hW51N5FskaR7Hbm/iO4f13e0W1Pa2NVig7xJx3asWw1iKvu6KOycz0
79WU1+PFW/tuo9gdTWKagy1b9gXWblONOuW1hVtr9uDBI966rPInb77OP1Yc
ROu4HTvMjDreV7umvdbmjVd9H/drSGO17U9zm6xrOTflDQXlCupainbbylcp
/kDLwHOovFMXx430VfbbwdbrKVn9cgua/VmHQn6X40m1BhrUHRfV+yHRCKpt
GgvVsVY+puvzV1AMHrTYei5efqGT8/EBAAAAAAAgMZSrZFsXUo+lZI3Dtoaq
Onr79h8KaxtaEx05Ypl5/ZUu1jpqfh6+r0VEcaZrLqvtux3tN9Z5qFR+aFhj
1hhKvtPTNG4wwfTsPsf067vAdO862zRuOMF88Ul/8+/7W3prxdGszSqu/PGH
fbw+TrEci+rVJSJ+ZvNj+xnW/am3U7K/WyOGLwu8DpUjG0v/0VDXyn8/6JP0
Y0b6K/XZAOs15bI/W36XnX3YvPla14TFDkXvNKiOeSx9fKOl2gLxPBY9A+NZ
7xuhqdas6jbYrq2VK3c4HyMAAAAAAADiT/XEbOt0S5duTdo4FLeyjeOOmxp6
OQfK2cj9Nzt3ZZvp09aaNj9M83oLhlsHLTetmUfS0zAr67A1v6xiuaExz4N6
F955c6OEriUHUU5lPHtlqfeW3360lh3va2jQwEXW48qYuT6p3ytdr8qVCZpr
ffei3b562NnyiOWuWxp511Iyjxn5Q7UqI3yvqSsurOHV4HQ9vvxO74PYYjXR
OvvPZc17b/Uw8+ZtcnZc6od71b9qxeV4FG/dsTPb+bkqiGz3B2naeKLz8QEA
AAAAACD+Sjzv37dIPYvi3b8uiPIIQ60dqq6n4lJFCtcMu16pjXrKRVMPLSNj
vXWbqqsZj7lYu3a3d4yJjBfmpbqnfXvPi/s5t/VTSkS9TeX22Y5P+ZrJuI4V
uytX+ufAGJ+88mKnqOd6+fLt3vfTtu0LTq/kfSYZx4v8Rz1i/frJxhL3RmT0
zoxyzVVvO5b7ut5JqffdWLN1637nxyS6L6mmdbTHc8OV33u1NV0fR0Gm3H5b
nj33CAAAAAAAgPzp0vOq+a4HPf1Y26SPRblwiY6XKb6jeo/R1uxUfzDbtuOZ
87Z69S5z6w31Ez4fd9/a2KuLmqg+WcpBufby36+FP/Zwa68+Wrz3tWv3Aetx
ak0+kdeujkex0asv9a95m9sjD7aKOldQ8YXbizYM3H6/PvMTeqzI/5TbW/js
Kt71pPzrr78cmNT3SvAbzfnMGetMnVqjzTOPt/Pef7F971XHWn2GP/+kv/dO
i4vapeFQHYE3Xo2sfqvec1Hd6kQ8NxC5D0v29v1tNX++u3xXAAAAAAAAJIZi
VbZ1O9WuSvZ41OtI9dcSFTN7/qn2Zs6c6PvRyaf/9c+vU66kap7Gcz7UL6tC
2SER9XoMx/mnVTTvv9vLTJq4KinndfeeA6Zl88mm7LeDvZp9R44kJmYphc+p
4nvMqoOXiP3pHLVtPe2EWKnNPbc19uYj2v2FWn8v9flPSTmnyP8OHjzi9UOM
tU8q4ktxuMWLt3jxRb27smTJVu//53pckRo7doV3P7vorMq+z1PVZtYzY8rk
Nc7Hit/T9aYezDnnS7/bfmg5xfm4AAAAAAAAEH99es2zxiOGDlniZEy9e86N
a9xMuTSvlegct1xBW+9C9XBM1Jwo3qv4UFAty1C0VqtY2oD+C/N13zzl+vkd
v2p9at09XvtRrk+l8kOtcUs/yi/dtj36mEz9uuMCt3//3c0i6vUJAK4p53LV
qp1evHD8uJVe7Do/P6PyC5039adW7vLmzfucjwcAAAAAAACJUeabwdaYRCzx
jlhNnbLGFL2mbkzxQ9WXrFp5uBeDi9e49u0/5MUl/fanPMVEz4ty34YNXWrK
lxnixctsMSzVI3ywWHPzwXu9TNPGE82M6esSVrc01TRpNDEwlqo+nLHMv/os
vvRsB+t1YPPwfS1i6lE2YviywH2q3uG6dbudzz8AAAAAAAAAAMgfFNvwi0lc
X+Q752NTXlXrVlPNLdeH1yNQOYwP3NPcVK003EybujYhvbxGjcq07l99E13M
k2pkrlixw2Rmbvdy5PbuPej83LmkGoyF/l7Bnp96UhkvthpO3p4+s2DBZtO5
U4Z5+/Vu5rxTK0Ycz1bPKMV9Y+nrpfOb06vOz5knlzHjxq5wPvcAAAAAAAAA
ACB/UFzj3L+W941LvPNGd+fjy2358u2mV4+55rvao803pQaaLz7p7/VNatxg
gunXZ76ZP3+T18sr0eOoWG6oNZajHlWu5wm/USw5VHzv0vOqmbf+082UfLun
+fjDPh7938892d6rD6p+h4o5xpITe/etjePS2+veO5sG7kdxUddzDgAAAAAA
AAAA8g/1C7TFJZo3neR8fKmo2B1NrDEp12PD/6i3lvpVxhIDjIVq8qrPZzxy
YufM2Ri4r/fe6uF8vgEAAAAAAAAAQP7Sotlka2xC/fRcjy/V7M865NWP9Juv
d98klpNqVAtUOYXJjB8qzqy82Xj2opw0cZV9f7c38Xo2up5rAAAAAAAAAACQ
v7zxalff2MQ5fykXVu+4giYontO+7XTn48OJtm3bbx55sFVCY4eKLb/5Wlcz
edLqhBxDVtZhc/G5VU/Y7yWFqnr9MF3PMQAAAAAAAAAAyF8mTlhlzju1om9c
5N/3t3Q+vlQ0eNBiayxpwYLNzscHf+oDqp6a8Y4f3nRtPfN9nTFm06a9CT+G
EcOXmQtOr3R834orTp0Se99FAAAAAAAAAACA3NQ77rLzq1vjI5XKD3U+xlS0
det+L1cz73xdX+S7uPTBQ2L17T0vpp6JZ5xUxtx3VzNTo9pIM3/+pqSPf/uO
LK/nYr8+883uPQeczycAAAAAAAAAAMh/gupzinKfXI8xVf3YfoYXT8qZq/NP
q2gmjF/pfFwI37x5m0zjBhPM269382qe3nZjA3PNZbXNdVfU8f73h+5tYZ5/
qr0p+U5PU7HcUK9mrXL/1B/T9dgBAAAAAAAAAAASKWPmemsMUbVOla/oeoyp
bNmybaZp44mmzQ/TzObN+5yPBwAAAAAAAAAAAIiHo8d+MbcX9a/v+F3t0c7H
BwAAAAAAAAAAAMCNVat2mn/f3/J4/PDsP5c1jeqPdz4uAAAAAAAAAAAAAO4t
XrzFjBqVabZtz3I+FgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABIJzt2ZpulS7eaqVPW
mGFDl5o+veaZLp1nme5dZ5t+feabUaMyzYoVO8zRY784HysAAAAAAAAAAACA
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
tj3L+Zjyu4yM9ebMk+21IbVu3LzpJOfjzA+CchGvvrQ2ucshTJ+21lx0VuWw
nxVX/auWebBYc3PFhTUCP6c+cK6PDUgV48ausH5XXn2ps/PxpbqqlYZb5y9j
5nrn4wMAAAAAAEhX35QaGNHasOJNrsfsp23rab5jPuNPpU129uGE7Tcr67A5
cOCI8+OP1qhRmV6vsvNPq3jC3BW9pq63Lrdq1U7n48xvFLe6+9bGgTHEdm2m
Ox9nfqB7lq5l21y3+WGa8zGmMr1b4Hd/yEt57bVqjDLLl2//3dyrfqntby48
sxJ5QsD/U6HsEOt3ZeqUNc7Hl+omjF9pnT/eyQEAAAAAAIjebTc2CDuOKKna
J/GD93r5jlf5Xomox6p8veeebO/Fe7SPN1/ravZnHXI+D+HasGGPef6p9mGd
cx3jf17uYnbszHY+7vzCFvfO0bjhBOdjzC+UR22bZ9XpTPV6zS5lZm7zagKG
ukd8/eVAs2+//f5X6rMB1r/VPlwfJ5AK7rnN/92SIoVrOh9bOjh48Ig5968n
1qWQkm/3dD4+AAAAAACAdKS4kGJEkcQRVavO9bj9FL3aP9+o2O1N4r4v9Vq7
/+5mJ+zrpWc7OJ+HUJQ/2bjBBC8PKJLzLk8/1tb5+PMD5ccG1Xt8+/VuzseY
X2zcuDewHqfiua7HmKp27zlgva/muOD0SmbwoMUhtxWUJzR27Arnx5rq0j3v
HeGdY9VP8PuOvP9uL+fjSxePPNjKdw7vvbOp87EBAAAAAACkoxHDl1nXdm3r
WZJqfWa278iyjrXU5z/FfX86ftv+lOfnej78qL7gDy2neLUHI40f5rZmzS7n
x5LuGtUfb51f5cft2XvQ+Rjzi2efaGed6+uLfGcOHyYX0eaVFzsF3gt0rS5c
uDmsbSnn0LadoUOWOD/WVKVnjfLe9Tw+46Qy5IXnY/Pnb7J+Rzp1zHA+vnSh
nqt+c3jxuVWdjw0AAAAAACAdfVfb3rcqqG/ie2/1cD723Ib8vMQ61p7d58R9
f61bTbXub+nSrc7nI68VK3b45k9GY9GiLc6PJ50p5+SSQlWt89uvz3znY8wv
gr6nzHUw9YwMmrvrrqgT0TsF48eRjxiJBQs2m5df8I/jPvN4O+fjQ/z9NGCh
9TuiHqWux5cuatcc5TuHqr2hvsSuxwcAAAAAAJBulNvgt96ifljKiTr/tIq+
/37WKWXNpk17nY8/R5WKw6zrb6tW7Yz7/j7+sI/vvs7+c9mU67U2e/aGsPqb
hePqS2uzDhejFs0mW+f3vruaOR9ffrFs2TZT6O8VrHP9ePHWzseYqvTeQdDc
XXZ+dbNy5Y6Ittmk0UTr9uiP+D9btuwzH73fO7AegJAXnv+o3rjtfG/btt/5
+NJF08b2e41qirseHwAAAAAAQLqx9b7KWWMPykmsVmWE8/HneOzhH3zHePkF
1ROyP/Vc9NvfPbc1dj4XuWVmbjeFzwkvhqg+Z9/XGWMmTljl5WmVfKenFxfN
+XfVBJs6ZY3zY0pnqi2rWKztHIwamel8jPmBYvn6Ltrm+bxTKybk/YL84rGH
W1vn7py/lDPTp62NeJu2nmU6F7yb8Jt2baaH3be2RrWR3jsJDeuNN3XrjPVq
C6hesnJwu3edbUaOWOblNO6lRnLaKPXZAN9z/c9/VHA+tnTSuKE9Hptq73kB
AAAAAH7v6LFfvP5lesd93rxN3lr0hPErvb4vu3YfcD4+oCA6cOCINefh268G
eZ/Rd9b2GfXZ0zZcH4f6mxX6W3nfMb76UueE7C93fC23/37Qx/l85FA+adFr
/OPEeT31aFuzevWJ+S3KgejTa54XV9y9h3t1rHr3nGs9Bw8Wa+58fPlF2W8H
B17v7dtOdz7GVNWl86zAuVO900i3qXiWbXsvPP2j82N2bX/WIfPGq13DuldH
o0jhmualZzuYOrVGe/VliaWkpuefau97/m67sYHzsaWTqpWG+87juX8t73xs
AAAAAFCQqUbM4sVbzLChS733oCtXGGZKvt3TPFG8jbn1hvpeH6ig+kxaj//k
o77EE4EkU0zf9r38sf2M458r8VxH6+c6dpjp/DimTV1rHZ9q6SVz3n5oOcX5
fOR4rUTnkOvLxR9o6eWtuB5rQaFYoe1cqDeW6/HlB7qe1QfLNs8vPtPB+RhT
ld49uPS8ata507Mgmu0G3YtyP2sKovXr95i7b7XnziaC6pW//24v730+18eP
/9F/Z/I7X4oBux5bOnn3zR6+83jt5XWcjw0AAAAA8jvVYlOvocGDFnt1kxT3
Ux3BIhfVDFyvi4Tet1Wej+tjBQqKvr3nWb+PuetXjh27wvq524s2dH4cDeqO
s45v5ox1cd9f504ZYc2bS1qbD7rfqr+Z3v1wPc6CRNei7Xwob1R5+67HmO4U
k1GetG2eFSNT/znX40xVFcsNtc7dRWdVjqonrvLfbNtUD8aCnOe8dOlWc+XF
tZIaQ8xLsasOP84kRzEF6Dvmd46+/HSA87GlE1vd+acfa+t8bAAAAACQX6i2
kmqNdu0yy8srfPmFTuama+uZM08uk5T1DOUzup4DoKBQLzzbd1F1iHN/VvFC
22dHj17u9DhstcC8vltH4t93q/TXg3z3p3cq9u0/5Py8Kk4S1GNL73+oXq3r
cRY0H7zXy3pOUimPNV0dPHjE3H93M+sc6/s5fBixc5sNG/Z4df9s89e+XeR5
g6p7HVRbudTnPzk/blfWrdvt1Rt1GUPM7YYrvzejRtGf1RXdv2znRr0vXY8v
Xeg3n+0+VpDvNwAAAAAQLeX9qV9Nz+5zvHihauao3ku8cgujpRp7rucGKCg+
er+37/ew8NlVTvis8hVs31uX/a2OHD1mLjjdP2b2zOPtErLPxx5u7bu/olfX
dX5OJShedc5fypmMjPXOx1jQKOfK1sNTMd9UiD+nu88+7hf4+yKn5yv8KefJ
NncP3NPcHPsl8m2W+sy+TeUiKnbp+rhdUC3uO26yv5vj0hef9PfeKXQ9RwWN
cn1t56RdG/q5hmvOnI3WeWzZfLLz8QEAAABAKtu2PcuMGplpGtYb7/WMUF7R
WaeUdb5W4ef6It85ny+goHi8uH88rNgdTU74rN6Vt/XN0vsHixZtcXIMs2Zt
sN5PlG+ZiH0WPqeK7/7eeLWr83Oq90OC+tGS9+aG1oFt5+SbUgOdjy/dde86
O/C3xV23NPLuYa7HmapWr95l/V2o+/v0aWsj3mbvnnMDz0nN6iOdH3eyqe71
k4+0Scjv56D7fqRUh0R9gF3PV0Gi3hG286HvkuvxpYvmTSdZ51Hxe9fjAwAA
AIBUsnNXttf3TD0MlR+TjPhfvKhHouv5AwqK666o4/s9/M/LXXw/X6PaSOt3
t+TbPZ0cQ+MGE6xjmjxpddz3p/wZ2/4SFbeMxNuvd7OOT+vXrsdXUCnX3nZe
lizZ6nx86Swzc7tXw9g2v8r31GdcjzOVffxhH+v82Z4HQRQvC6qRqhqaqnnq
+riTJTNzmynxXMeofxsrl/mJ4m28Z/CggYu893aUv7Zn70GvvkhOrqhqOu7a
fcCsWrXTOwc9us0xVSsN92oGBPUN9aPzp/i867krKBTjsp2LEcOXOR9funjx
mQ7W65l3SQAAAAAUdOqx0r/fAlOp/FDz0L0tzBknJaeXoY32f+XFtcyDxZqb
V17s5NVI0tpHi2aTvTUJrWmkWiwCKGiOHvvFmn9SrvTPvn+jvnu2tWF971eu
TH7PPa2P2tZdDx06Gvf9Kbfbdv8aPGix03O6Zs0u6/3/7D+XJZbiiNb0bTXD
9cx2Pb5YKI6RnX3Y2f71HS92exPrd1Lz/vNgt9/LVLdx417v/uB7X/9T5Lnm
6rEd1J9V52T8uJXOjzsZdH3q969tfgNjh3+vYP77QR+vZ2G8Yq46l8oDVY/c
cMfRtPFE5/NYEAz5eYn1HOg75Xp86UDfE31v/OZQcXjX4wMAAACAZFOfJdW4
UW8z9TR0ESvUu/9au3vrP91MtSojTKeOGWbC+JXeOrb6ldnGrv+Od/etja3b
7ddnvvP5BQoCrR3bvoePPtTKy2nw+7vPP+lv/TuteSbzGJSHYctDeurRtgnZ
p/rr2I7fRRw1N/V/s42N2pnuKE/Vdl7atp7mfHyRUgzokQdb/W69VrlOynf9
rvZor7ZussZS5pvBgb9V9PvE9XyluioVh1nnT7XwI9nW6NHLA3NDRftzfczJ
MG7sClP0mshrgtx8XT3vOaPf+okam56dXTrP8vYVzpja/JB+96lUo/9upFqx
6jVdoewQ82HJ3qbE8x29fsv6zRXUL1PvorgefzpQrq5tDhvUHed8fAAAAACQ
DPrvn926zjbvvdUjsFZUPOmd8asvrW2eebydtwatdYSxY1d48Ydoj0OxT9v+
1HOMmjNAcsycsS7w+//8U+19/27Fih3WnLczT05uTqLuR7bx160zNiH7tMUt
lG8S9A5FoiknzJYDpLHFct9GbGzrwzovO3ZmOx9fuPbtP2S+/HSANbcyt1uu
r28a1R+f0ONTnmHQGNT/VXnXructlendrovPrWr9Dbh0afg1dzt2mBky7045
QS7vk8mimtp6Hkbym1tx+DFjlid1nKqDWqvGqJBj1TNfcVHX85pudP8ZOWKZ
ef/dXta+yuHYu/eg82NJB3rvwTaHCxcm7/0WAAAAAHBFay7KrUlkzPCqf9Xy
6gPqHVm9o5yRsd5bM4zncQTl8Qh5A0Dy/DRgYcj7gnoB+v2t3mew/Y3eFUjW
MZQvM8Q6jkTVAXv9lS6++1O/L5fnU32wbHPxwXu9nF9vBZXiMLbz8vILnZyP
L1yqaRxNbpVy0/Rsj/fvCdU+CFqXV36k+se5nrdUp997tjlUXfpwtqHanaU+
/ynktXDrDfXTKm4eC+WZRfI9uaRQVa9GsKvxqjffNZfVDhyj+hUkMkcyP9mf
dcg0aTQx5JyGQ7F518eTDvSMsdU0df37DAAAAACSpWsX+zpPpM4/raL59/0t
vZwC5RfqnelkrAv07T3P67NjG5d6tfC+LZA8P7ScEvJ+YatPuGzZNuv3WXkN
yllMxjHcdK1/TTbFEI79kph9PnxfC999qjaZy/Np6xMpM6avc369FVRBNU17
9ZjrfHzhUE6N6u7F8ttDz3i9uxCP8ahuQbE7gnsiDhu61Pm8pQP157TN48QJ
q0L+/fLl2829dzYNef5V22L9ev/3UvKjoJ6dftq1me58zDt3ZXs5kUHjtPVO
xv+oX32RwuH3nwzlgtMrJaTXc37zY/sZ1jksKLWUAQAAAOCrL0K/522j3id6
T1z9FLW2n6i19SBaOwyqmaR4hOr+uJ5noCAJ6omVIzNzu/Xvg3ISk5H/lpm5
zbr/ku/0TNh+i17tn5OlXrGuzqXeBTnrFP96gnoGxGs/27btN6NGZXrrdaob
q3zQLz7p7/XF/PjDPqbUZwNM1UrDTasWU7w4zurVu5w8c1KJLd6l+uTp8u6M
ejjGa01c9f1iPW59v4P2odrDrucsHSxZYs+VvfPmRoF/q++1rotQvRDluivq
JO3dklShd/XC/U6o3kiq3CfVN/GNV7tax1rob+W954Drcaai7TuyTInnIstD
DRdxsNCCYvf6veh6fAAAAAD+f/buMlyO41r7/of3JDnXSa6QY4ZYPoaYmRni
mJkZZZQZJFssWWQxy2JbYMliZmaWLEaLZbFkySLnqdd3n2s721tdPT0zPVM9
M/8Pv+fkSbRnVlfP9HRX1VoL2dCw3rjQz5qqO6Q5AO1tVt0v17EPHLDIOr9d
pHbNUc7jBApNUK/SIkG1CDUvY+uTqP9ec9SZjL9xg/HWuHv3/DZj72ubN//w
vf7OzmXPb+ZZx6JB3bFpv75qpl57eeOU5j81Xsp5+uTjgV4/O/VxdPm5zybV
BbaNS67UNFUuYpS5NaI8YuU0pxJPUH6n3HhNM28txPW45QLVsbeNo+pV2P5O
13blX4c511qPLMT6sps2/eCtnyYan3/8/TOvZrDreItT7lvQ9b5+BL8p+WbR
ou+9nNsor5MlqVZuHJ7r4iioV7Zq8LiODwAAAACyZcvWveaMk6pbn5EuOLOO
l/MXt7mIwYMWe309gp6L1X8nLvuwgULy4D3tA7+b551RO+FrBOUFPflop4zG
f/st/nUWdc3JVJ6X6r7ZjjeK9bpUKRfQFpfqDqZzvHfe+kWkc6Gqra0cRuUq
uv4OZFr7ttOs46C+dK7jC2PWrPXWYzjm9596n/tmTSZ6v+VhctOK/P3ISknX
IQjq5Seljq5iVq3a7nzMcoH6bmsNy28c1WPMr1ef8tDKfjgg4d6wIqq1XMj9
9DSGj9zf0To+qtMxedJq53H60ffeVrv8yosbOo8vThYs2BTYq9V27lXbQHXS
VUv20Qc6hvpeqT702rU7nR9z3Dx0r/1+9suOM5zHBwAAAADZtHLlNvPCM129
XvHFa4SedkI1M3PGOufxlaT5Qc0xBj0P33J9c7N3b+HkpgBxkii/7OnHOyd8
Da1RBdUsnjE9M335NJ9tm+N84O52GRuzOXM2WI9VtaNdncuLz/Wvtao9Jum8
bqL6kenQ70O1KsPzOj9ROYd+x67PrvYHuY4vjOZNJ1rPYckehOpbqN5gqtMY
5jOgvOWwfeH0XkHz7OqJOGwoPRHDUn1i21iWrAu9YcNuU7nC0KTWiVWHUbms
ro/TNVsPX3G59ySMpx7rZI09bvsWXdE4qA5MmO+E9mbpezRxwirvWln8dZRD
HdRDvjjl9/Pd+o958zZax+p/j6ua1/cYAAAAAJCI5nRUx045iEV5N3pO0jyb
9ut3+mqmN6et///UKWu8+mGad8/Wc+e4sSu9HipBz8HqY7FjZ+HuUwdcC8px
FtVTDvM6Qblwt93cMiP5xurPZ3vP1q2mZGzM+vZZYH3f6dMys2aaiGrPag3F
Lyb1K0z1dXXejv9zhZTWCJOh2n+jRi13/n2ImuaFbesumgd2HV9Y2r/kdwz6
bCinzfZ3UyavNjdc3TTUZyBRbXO9lnLkgl5D/Tpdj1UuUU9T21jWqzPGu56p
Lr32kwTtFfGbtx8yeLHz44uDoP6T113ROPZrQdoTYItf30nX8bmm8xcmX189
clXTO+h86zktmd9NPee5Pv640DXKNk41qo9wHh8AAAAAxIlq6px9auL9sJoL
0r9Tr4jSL3T3nq++7jLbmy9S/booYpk2dU3CPevXXNbIbN2WG7kYQD7SfJat
t2ER7ZkP81rr1u0yx/7Bvm9AtR2jjl/18vzeS+tpiidT49ak0QTrcbrKz9Be
EVtM3b+ek/Lrzp1rz72MmvIwgvqx5aIJ41dZj7dOrdzpCXzVJQ19j0H98RL9
rdYZ1c8wzDqU8tdsn8OTj6oc+Lcl8+cQTGvcicY0FcoFL8ReiDZBubxao3Ud
XyJBa1sjRyxzHp9r6hMZ9H3Qs1DHDjNC7aUK6nHs567bEl9/C4F+H2z7qLSf
VXtoXccIAAAAAHGidbko5oBUI/WOf7Yy75TpY75oOdlbR0imz9j8+Zu8/kRB
76E5yVyp5wbkq82b9wR+T9VjcN++Q6Ffr8Ing62vddIRlSLt56M9CLb6hjdd
2yyj4/bxBwOs81WuzqXqQtrGXvPAqb6u+nYl+s1QTpp6rKlem5x+YvWE69NB
unaZ7fy7ERXt07Ed58yZ8atFbmOr2af7hGQ+S4nyn+Wzar/OHVmyZLM59fhq
gX+j3mJaF3M9Trlk+LClkdwzFtGaJD3IDvf80/65vOoRmwuf2aDPyaSJ3zmP
z6U1a3YG7p/S9U7PRGFf79Oyg5L6zum3N+75rNlw3532GtofvtffeXwAAAAA
ECeqcRrlfFBJ2ud50dmfe3VjNC+qPbOzZ683u0qsL6p/o+aTg17riosasDcU
iAHNbwV9V5Otu6h85lOOrWp9vVtvbBHZvGlQjkfYWqypeu6pLr7ve/E5dZ2d
S/Vb8otJOWCHDtnrTiaidWTtLbGNtd7X7+80t6k5Vs1BN2443rz8fDevr2+Y
3xutx2rtyNVYRkn5In7HWOqYKjk1/2urdfDeW8nVzF2/fpdXzzzRZ6Bl80ne
v1+xYps58+Qagf9WPV5L3osgsaBa1MneH77+Sg9vX4rrY4ojW29ErX27ji2M
oNq3Ue4NykVlXu9lHRvtnVq06PukXk/94pP9/un5z/U4uBRUZ179l/Wb4zpG
AAAAAIgTzd/barpkmvIE9OyrNUbNjQb924vPrWs2bXJT9w/Ar40evTzw+6r8
wmRfU/koQa9Z7qOBkcR++YX1rXPaq1Ztz+i43X9XO9/31jqpq3OpeXy/mLT+
k+5rq9ao7XxqzS+ZebqFC783Lz77dcLflTD1MuNO9TxtvSWffLST8/iSobU6
v+N48J72Sb/Wnr0HrDWJi6jGbdPGExLWatfatKtawrlMn81EOZ5hqPel9pS5
Pp4401qG39gpr911bIksW7bFmvd/ZqkazuNzSTVVbOdW1FcymdfTddE21kE5
j+pp4XosXJ4D1T/I9P0mAAAAAOQbzUumOyeUSZqz6td3gfnuux1endT9+w95
uS7KI9CzYDL1EwGkT33zgr6z/fstTOl1lWcR9LraP55O3EHrn3fe+kXGx03v
4ffeqq3l6lxqH4dfTKohne5rK4f00vP9c2rk3SRqWxZRvWxbz70i6i3oajyj
ENRbUmtkruNLxmMPfel7HOecViul11OObJj15CDKU8z0noF8pe9fVPd1q1fv
cH48caX7W9vYNWsy0Xl8QZQvffstrazxF/oajXKmbWOj3+NkXy+ofqxq4Nr+
t0LtRarPp21Pl6jOMv0zAAAAAMDfzl37zLNPdvH28UcxP5Rt6qf1zBOdvdxK
12OZST/+eNDs2LnP/PwI7DwWFDatZQR9J1PNHdZeAc3h2F5X9b7mzduYcty2
NQ35Ogu99Wy1KvXfuzqXtvyuG6+JplfkmDErrGOuHAqd82RfU3tJbL3D5IG7
2zkbzyi0bzfdemxTp6xxHl8yqlT0r5sr27an9puteeDSL3ZP6X7hf4+rahYv
zo/aty4E9bJN1m03t8ypGr3ZpFxZ27h16TzLeXxBgr7zul9fvnyr8xhdsu2X
0jNYKmOjPn7W8bY81517emr7OPJB+XLB1zDVvncdIwAAAADE3Q97Dph163Z5
VJNoxvS1ZsTwpeabbnNNi2aTTMVPh5iXnuvm9T4L6nvlSq7PHRenNVH1klQP
qZuubWb+fmSlX45TfcvUS1Lz//XqjGFOFFlXqfwQ6/cw3XqYyj0O+p7r2pNs
7yBZtmyrdU5Nr6m1qUyP2yP3d/R9/+uvauLsXNry0VWPMqr3eOKRr6zn8/23
k+uTV0RrUEH1sL/9NvX1ZteUp+l3TLr251r+vX7HbOdo5IhlKb+u6ms+/rD9
c+VHexTmzNngfExyma0utPrbamw/rz3a64v30fv9A/dtFGndaorzY4qjoHxE
7TNwHZ9NUP9hea10D+cxuqR18+P+5F+zOpVnGL1eot7yfl59+RvnY+FCqxaT
A8dF+6f02+I6TgAAAADIN6oxqnkjzRPW/Gyklx9y9aWNzNH/49+nIxvWrt3p
fFzSMXbMCm/uzdbrxObu29p4eT+u40dhsPXUk6ceS79/2ycfDwz8vGtdvWuS
+YOaN7O9XvWqw7Mybq+85B/DWaek34sw6nMZZb6C+jDZ1nDVB1A58am8rn53
bOc0lR6dcaG9On7HFEWt2WzT+r3tHFWtNCyt11aOvm2s/K4ZM2escz4euUx7
zGzj+/Lz3Xz/ZuCARV4dWdvflTq6ildnwfWxxZGth57y/VzH5kdryIm+g4Va
S7OInlFs49OkUfI1q7XXM5VnJe3Xcj0W2aZ6/OqDbRsT9WxOZY8aAAAAACB1
6l+keWPVXlIfFNXwCepnH6VcfQbUmmwUfSrVWyXX11LTsX79Li9/dvCgxVnJ
LytUtlqY0qDu2LRfX9cQ1bxL9Hl/7qkuofrYqBak6qn5vYb2PWRrbrNaleHW
Y3FVl9lWp/DYP5SPtIbyC8/Y65B+2XFGSq+pMVOtW7/XvOHqpk7GMwq2nlal
X+juPLZk6TOkXnh+x3P9lenl4WodMehzVURrVTNnsoaYLn1PbWOsOXrb36l2
cdBaYlzXxVzTXg6/8brzVnd1sP3o/jVMz9Kgz0ih0N5L2/gMG7ok6dcLu4+i
OP2+6NrpeiyyadDARV4+f9C4xL1eMAAAAAAUEs351qk1yhzxX9GuHRbRnEsu
9tpRLo7mvKMaB82ZDh2S/HxELlMNMK1ZF8/jvODMOmbFim3OY8tHQZ/XsRHl
xWpt78xS9rnnIup31qH9dGstKvWZUq1V299ns86a1rhtcQzov9DJuWzZfJI1
pg0boltfVZ1R2/soBzvV17X1ydP6cC7WJ9OY28apYb1xzuNLRdBa35TJq1N6
TdXzVv2DML+JJ/ylolm4MDf3GMWJ7Twq1zjRfo6g+rY6P2H2gxQaWz1o5Snq
d811fDJ69HLvXivRd/D9d/o5jzUOtJ/BNkbJ1nnWfU8qzwiFVltWtVpsub1F
yn44wHmcAAAAAID/mDhhVcJnuccf/tK8U6aPufPWL5LKYVRvHuUcuT7GZCnv
6t472qY0FxBE83rqaen6+LJBuYe2/jBx27efL1SH0/dz99tyXp/VqN5nyZLN
oa8Dl5xXz7T5YqqX+6K/VR7UypXbvN6Dtr/RunM215r1XrZY3n6zt5NzqX36
tphSyY8IcvN1zX3fR/XuUt0DEpQjlYs19CaMX2U9Hp0r1/GlQnlItmNSPk0y
ea/6zWxUf5xXgy6Z30StdWzZssf5WOQy27U4bH9X3dfZzk8UOYl79x7Muf6h
Qb5oae/l5rpus66ttjrdJT36QMec3NORCeo9bxunZPpezp+/ydpnUR570N6b
VLVQXY9DtmifimqnB30+tV6fi3tQAQAAACBfLV++1VvrC3qWUz5Zyb9Tnpny
WJRf17HDDNO08QQvJ6Nxg/HeOlnb1lNN717zU+6v5ZqOOZm50GSpf5jrY8wU
zRlq7SXo+NULJZ/mFePC1gP12ssbR/5eS5dusdZ3s1H9qkQ1rGzXnEy78KzP
fWNRfc6t27Kfk7Nq1Xbr+FQqPyTS91I+uu29dJ1P5TX791tofc1czEFTbTXb
8eRq3e49ew+Yk4+qbD2usH3BhgxebC6/sH7Kv4e3XN/c+91I9ThUK7tb1zle
PWXt/3nwnvbeb6zuU1yPcabps5fudUJ7vWyvoToKqf5Wa03roXvbe/untJfl
mSc6O6sTHSXVaQ+qx+2iVq9+o3S+w67jaz2Le7D/OHDgJ+v9U9g9FWvW7DTn
nGa/JzrthGpm8+Y9Xq2Gkv+b/k57MVyPQzbMmL7WWve8iPYa8vkEAAAAgPjQ
fI5yhYKe5TQvF2UvrlzQutWUUPMwl55fz6tDVL/uWO9v9H+ffbKLVwsszN83
bzrR+bFGTesDYeaT1eOtUOZMsiWo7uIH72amdpnyiO6/q13K6wd+Lj6nrre+
ke3x++j9/taYvu4y28k5tdWP1XU7yveZNPE767Gn2iNRuRW219Q8oovxTEft
mva1Vhef16go38x2XForaddmmu89gK7f2itky2VNltabDh78Ken4lQtq6/F3
zWWN8r7fWFBuXDL1GIN666r2abJx6TPjV2dba7yuxywKQXllWpvPVg37uXM3
mHfL9AnMgSupzOu9yEP0cddtra1jVr3q8MC/1W9aUJ120Z5L/Vv9NhZfR9Ne
zsmTUqsjnWu0Z0F1DoLGSdeN3QWwBwQAAAAAcoXmAO+5vU3gs9wd/2zl7fN3
HWs2qSZV0Jhor7dyL4N64GhOuXHD8ebEvwavJ2qPfrJ9V+JMNfIS1Skqonkv
1/HmG83p28a7awbXwTRfrHqGtr38ydB3JtX8t3QF9QlULpqLmLRPwRaT+l9F
9T7a968cYb/3STV3Wtc2W+wzZ2Q/XyddquvtdyyaA3YdWzpUM0B5MkHfS+0N
qVF9hJfzp7lwrUMk+puSv3VVKw+zrvcVef7prknVsdN8vF476DXbt53mfIwz
6enHO/set2pDJ7O+rXUM2xg+9VinpOOaM2eD9fWUt+V63NI1fdrahJ97fZ5V
LzPq9543b6N3Xb7iogZJ/b7qN7pVi8nOxy6uEvU1VJ1Nfa6L/r1qxQ8fttT7
Dia6Dmmdvvh7KX9U6/O9e36bs3VbkqW89UTPCJddUN9J/QcAAAAAgN37b/cN
fJZTrl0+1J9Kxue1RweOiebZBw4I3wdr9eodCXM1VN9o0yb7mmQu0Jr0xx8M
CDWPpTF887WeBbc+nQ1lP7Sfg7FjVmT8/Rcv3mxuu7llUvOaxSlHdUwW4gzy
5KOdDotL815B+wYySfNutvFSrbUo38vWYy3Vfl9B/R01D+7yPKfisYf884+u
uqSh89jS9U23uSl/bxPR52rUqP9b81a9x0R1F19/pUeotUT1NA2qyVrERY3k
bLKt5/7rppZJv9bVlzbyfS3VNk22LsX4cSut5yRX+4mWpPX0RJ8/rS9pDUn7
rFK5p9Z3QXUetB7+8vPdrD2nE1Ge/6xZ652PWZyptvIZJyXu+6x8Ol3XbHtv
SlL990JeG9MzwmfVRiRca1WvXNXVcB0vAAAAAOA/1Lsw6FlOa1srV25zHmc2
aZ4z0ZyA6r8l+7paL7PlCxQpuU85l6jXi/JWw8ylqEdfLtYzzBVBa9ZLlmzO
Sgyaa1bO0nln1E5qjlN5iEVrDS6pTmvxtVDlmmWrPp0f1XkMyuHq3CmaPMkd
O/dZ5/iUh5bKayrXwhZ3JnJ0Mu2ma5v5Hovq+rqOLQrKnUplfSLIi89+fdj8
ed8+CxLOJ+vvgnpjaV76xmv8z0dJqsvqemwzRfWWbcddtdKwpF9PeeW21/vu
ux1Jvda6dbusr6Ve2q7HLgrK97zy4oahvw/63CvfSvXvK1cYalo2n+Rdw/Wb
qbV8/Wf9dzp3Lz3XzVx/VZOk6pX6UV6q+ibme33fqAR9p1Kh+qXz529yflyu
qPbAdVc0TjhO6g+Z7DUGAAAAAJBZ48auNEf+rpz1We6Y339aMH06imiuXvtg
g55xtdaXTL214tSHRnXBgl4/1R5kLmlN8KxTgvvBFM2daV4sld5XCEfr1UF1
RXdludeMPvNaL1DtZPVYs8Wl9cP33uobuz3oCxZs8q6DcZh7rVt7TOD4RZFj
ouuP7T1S7Q2p/Bnba8btfIdh+41QjpDr2KKgXJywe0ISuejszwNz99t8EbyX
SS4+t65vfrJ+h199+ZtQcShXNJnvsMYgaP0yTlQnNujYU9n/ENTTdOKEVUm/
nq22u86f6/GLyvr1uxLeP7ryyP0ds7aHKJ+on3QU46986UJ7niqiWq26t0u0
Z0S0hlhoe1cBAAAAIO70nKb8mqDnuUz2UYuroPluUT27dNcTNDd5/ZVNrO9R
6pgqXi6U67EIS+sOWnNOND+gXCqtXbuON99Nm7rGeg60H95lbMp1Uw+hL1pO
9tbEVD9YPZr0uaC+bWK7d+/3csRt51f/W/GeTcnS2smFZ33u+9rK0VZeUSqv
qzxGW8y5eN5t50Bzzq5ji4p+5154JvW8RN1fqH/wgQOJ94wkqiNeRHt4inqm
ai9KorzJ8/9R29x3Z1tTverw0H3HNm7cbR66t7035619D8880TnWdd21dhW0
P0PfW113k33d2bPXW18zlXxxWw6vcuddj2GUVJs+bH5spuncP3B3u4Jdv4qC
9iq89UbimrVB1BtCtd5dH4sL2v8RZo+h6N5DPSBcxwwAAAAA+I8f9iSuv6Ta
R67jdEHP+7YxUa+mZPsC2aif0wl/8d+fL6+V7uF8LBLR/HCi3ppF7ry1tbO+
coWmedOJ1vOQD/3bCl3HDvZ8QVHPuSaNJiSd87t27U6vz6LtdVXjNdWYS7/Y
3fc11c/N9XimQuvxfseTav/IOFNN2rDzwHLJefVMi2aTvDqPybxPxU+HhF4b
ObNUDa9GY9C/0zpmsuve+n2/4eqmh73Wg/e0d34ebEaOWJZwzLT+mmydQPWv
tL1eKr1rbXmj6rfoegyjpmtvnVqj0q5Dmirlfr7/Tj/yDyOkGrPqj5zMeVBd
CF3X4lDLINNK5m+rzsA7ZfqE7hup6656I7g+DgAAAADAf2ieLFFdzcce/DLl
up25TLW6guZGw+RVJCOoN6WevadPi2//QK053HK9vQdfcZ+WHeTVtnQdc6FQ
bUXbuXj84a+cx4f06BqudYFE3zvVB6tfd6yXrxT0espN13c00RxpqjVNxbY/
I521SZe0Vut3PKov6Tq2TNC6SJ/e8738xDNOqn7YXLn63Zb9cEDaeU9h1xLD
GNB/YdLvr1xe2+vFta+Z9iSFGQ+taTVuOD70vd34cSutrzV1ypqk4wzKOY1z
vmc6dO19t0yfwDrjUdH5Vf9trfsXwrqVC8pVLvfRQK9GadC5UB606vfrPtl1
zJm2bfuP3v2I8rf13KIa1MqBDVOjpIi+I7lSQxoAAAAACon2SAc9zylPcXeW
+6fFRVCPoW+6zY38/bQeoHl023uqDlhU+Y9RUl3KoNqKxee1enSPftwQTPM4
tnNSqHnG+WbL1r3eXGWYOTrN7119aSNT+oXupnKFoeazaiNM+XKDzUvPdUuY
l178d+HQodT2AihW2+vmah1QW6+3Qvl+qceq8k10bqP+jWrWZGJgnc4wVMc0
lfeeMN6+lyjOuaZBe0dKuvXGFl6uYaLXbN9uuvU1li7dknSMuhewvd7cuanX
Ys4FqsXQoO5Yb709nc91ceptrvqpWntXTirrMNmjPYWjRy/3rlW65lepONSr
096506yUvhu5Stf+oBoGiSivfPCgxc6PAwAAAABwuGFDlwT2uVcdsFWrtjuP
0xXVLvMbl1OPr5axfLpFi74PrM8Wpx6VGgPtsQ5Tp0h9TuKav5HPNL8fdH66
dJ7lPEZEQzXrVBc0qnlpm2P/UN4sWJD6d7l3z2+tr9396znOxzEVtt7CH38w
wHls+WDSxO/MBWfWSenzms5armqx2vJy//H3z2KbV68cqWTHSXuYGtUfZwYO
WOStfRTtE9B/LvN6L2s+kdbQU9lToHNqi2XE8KXOxzBblKOonEGtS99zexsv
bzxo3VzrhaorfPstrcybr/X0eo4qVzTZusFA1ObN25jSNVqfd12zCnXPKgAA
AADEnXrjqA9N0FzF2BR63uST887wz+9RnddMvu8nH9vnADV/FIcaVco9ufPW
L0LNEWg9Nl/rlMXduLH2WnSS73kfhWbx4s3emn2m1hBVj69f3wVpxai+srbX
z9W6b7Zc0Fzoa5sr9Lun+glBfYSL034c9WVM931tvTzjvN51+YX1I/m+lzrG
fo9Y5JknOqcU47JlW62vmU7N5HygvC7dM61Zs9MbJ9F/Vs3IONakACRob4DN
FRc1MLNnr3ceOwAAAADA3/79h8z1VzUJfLZr2Tz9+bdcpv31tlxN1QLM5Hvv
3LUvMK+ods1RTsdGdYeUk5lofkB5cBqrQuytGRfKVQiaZ4+6xyfc0/yz+tZF
vYaoHlDKYU8nNs2Bn35idd/XV89E12OXquuu8K9P+Mj9HZ3Hlm82b95jPnq/
vznpiErWz6pqgM+ckbhWZxijRi23vo9qA7sej5K0Fh/1dz+IamimEqeuU7bX
VH1I1+MIIDna6xGmx4EoB1F9mKm/CwAAAADx9t5bfQOf78ihMN7eb9v4tGsz
LePv377tNOv7q8/g6tU7sj4met5//51+oeYI/n5kJdO/30Ln57HQBeXSaO3D
dXzIHPUtDdvvMJFnn+xi1q3blXZM06ausb6H6pq5HrNU2Wpg8x3LHP0eKR+w
Xp0x3j1NjeojvH5ks2ZFm9uifTDq2+V3fpUbuXev+/oAxbVtPdX6HYvqelDk
vjvbphyn9hTY9mqpZ6vrcQSQvIkTVgXu8dB3/qnHOqVVGx0AAAAAkB29eswL
nBdSniL7Q//vWdg2RkMGL874+6vv0lWX2Of8Hr6vQ1bHY8b0taFrpWnufMWK
bc7PIUzgZ0i9lVzHh8zSXL3qkD5wd7vAnlt+jvtjefP8010jy+sS5R/Y3m9M
DtfRfuuNXr7HpP0UrmND+ip+OsT6uVW/T9fxFffQvf5r2pq/37ptr3c9OOMk
/5zgZKju+6ZNP6QVq74ffq9d9kP6igK5StcZ9XJX3vgd/2zl5Siqv235coPN
8uVbnccHAAAAAEhMaztB+0TVC0d9E13HGQea07aNk3qQZSOGkSOXBc7jdc1C
DyHNB7xbpo81b6Ak/VvVzXV9/mC8mqWqXWo7V9nIq0V86Lvcu9d8r//qbTe3
NGefWtP7PdB6of7vOafV8ub8Pni3n+nTe77Zs/dApO9/8OBP5syT/fO6VDNV
/7vrMUpVw3rjrN8zflNz37x5G63n98Vnv3YeX5Ef9hwwx/z+U984/3VTy1/+
3a7d+03VysOs63hBjv1DeVO10jCzY+e+tONVv2e/9yjzei/nYwkAAAAAAFCI
tKYQ1BNRveyykWeXKzQfV+roKoeN04Vnfe7l+GQrjice+cp6zjQHmKn6pqrV
1qDuWN8x8HPiXyuaHt3nOj9v+I/58zcFnjPNjbuOEYUjaK3t9Vdyu5a26mu6
3O+BzFP/TtsauPopu45PtP5v+xzq+1fy3+/evd+0bjXF3H9XO2vf0iLab6C8
2yjqGxe5+Ny6vu/10nPdnI8lAAAAAABAIfr4gwGBc0RVKg51HmPcDB2yxFsf
Kxqj006oFmmNvzDUp1E9mGzn7form0SaN/TjjwdN08YTEs4ploxh2TJqFcWN
1nWD1qDV98t1jCgMS5duseZJyejRy53HmI5t23/09uL4HZt6lLqOD+nTPZLt
86s66K7jk1de+sYa45IliesobNm61zuWjh1mmLq1x5j6dcd6vZr132Wi3v21
lzf2jVX7p1yPJQAAAAAAQKEZPGhx4DqQatypH5/rOONI82rqKdm3zwJv776L
GFo2nxR4/tT7TOt/6byHapRpzjCZ9UPVOlXfqFyuR5jPalQfYT13jz34pfP4
UDjKfTTQ+llUnlc2c7wz5ZrLGvke36nHV+P3NQ9Mmbza+hlWjVDX8WlfiD5r
fvEp7891fH5uv6WVb7x33dbaeWwAAAAAAACFZNOmH7we97b5r1OOrRppnSpE
T3Psd97aOnBN77orGpuFC79P+rUXLNhk3n+7rzn+zxVCrx+KeqmNHbPC+djA
7tWX7bkprVpMdh4fCofqFNo+i9qn4Tq+KJQvN9h6jMOGLnEeH9KjdTr1kPY7
v8V7D7oybeoa6+dPn03X8fl57KEvfePVmrzr2JAe1cbPRA4rAAAAAACIntaf
HrynvXVuqXhPROVL7N9/yOuj6DpuHE71TW1zmEWO+u9PvLwf/Vvb66jvo9b/
qlYaZq66pGFSa4deDuJvy5kP3+vvLDcT4T39eGfrecxUX03AT7s203w/h089
1sl5bFFR7Ufb903951zHh/Q9+2QX3/N79P98knZNgHTVrjnK+vkbP26l87Hz
o76ofvGedUpN57EhNRs37jYP39fBe77Q/eIzT3Q223f86DwuAAAAAABg16zJ
xITrTpqvOe6P5X/13x/5u3JeL8ArLmrg1cx8p0wf06DuWNO713wzf/4m1hod
GTF8qTcvk2itT/M3V1/ayMtH++DdfuatN3p58zoXnvW5tYdXGMqJnDdvo/Nx
QDi2uqYP3dveeWwoLKp9XHJPi65R+TS/rH07ytO2XT/HjY3nWg7CUx637fy6
zs+31Sw46YhK5tCheNbVteXwHvenCs5jQ/J0Dbzh6qaHnU89R7iODQAAAAAA
+Pv2243mmN9/mvKaUaL1R80Bqx7moIGLnO/DLyRffTkzrbXAVFx/VRPq8uWg
rdv2mvPOqP2rc6kax6tWbXceGwqP5pgH9F9oatUYabp1nePlv7uOKWrqMWu7
jmpfTlzXcxCO9tHYzm+VikOdxaV1+pL7wYqodqjrcbOpW3uMdTzpKZp7Zs9e
bz2fK1Zscx4fAAAAAAD4taVLt5hLz6+XtXUm7Xd/762+5KplyZcdZ3g5o5k+
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
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAwrN1
215z4MBPzuMAAAAAAAAAAAAA4N60qWvM5RfWN3/9/z42x/6hvCn74QBz6NC/
nccFAAAAAAAAAAAAwI3Nm/eYvx9ZyVtDLK5aleHOYwMAAAAAAAAAIO727D1g
NmzYbZYu3WJmzlhnxo5ZYQYNXGR6dJ9rOnaYYVo0m2Tq1x1rqlcdbsqXG2ze
f6efKfN6L1P6he7mmSc6m0cf6Gjuv6udufu2NubOW78wt9/Syvzrppbmjn+2
Mg/d2968/koP06rFZLN+/S7nxwrgcMrNy9f8vCaNJhy2hihnnFTdeWwAAAAA
AAAAAGTbD3sOmCVLNptRo5abzp1meWuAH38wwLz47NfmvjvbmuuvamIuOLOO
KXVMFfO335bznWPPhCN/V868+vI3ZuPG3c7HCIAxc+duMP+8oYU54r/Kmr/9
pqy3D0DXDtdxRemu21r7Xo9OOqKS89gAAAAAJOenf/8/077ddPP4w1+ZF57p
akYMX+o8JgAAACBulDe0fPlW7365zRdTzadlB5knH+1krruisbc2mK11wVSd
e3ots33Hj87HEShkK1ZsM6ccW/Ww7+eZJ9cwu3bvdx5fFHbu2uftX/C7DmlP
hev4AAAAACRH9Y5K3tuXfrG7d+/vOjYAAAAg21QHdPTo5aZ1qynmo/f7mwfv
aW8uPOtz67x4LmlYb5zz8QUKlfYi3HB1U+v3s2qlYc5jjIJqM9uOsXnTic7j
A+Ls4MGfzJate82mTT+YLVv2ePbtO+Q8LgAAULgWLNhkvb+/6OzP8662CpAN
e/ce5D4fAIAcsH//IdPzm3mm4qdDvJ6DN13bzJz414rO1/oy6bEHv3Q+7kCh
Uq3joO+n8hTzoV+iajnbjnHlym3O4wPi5LvvdpimjSd4/Y7/8ffPvHrHJb83
qoX+9OOdzbbt1BQAAADZ17vntwmfY2bOXOc8TiAXqOfQw/d1+L8+Jz/f5z/z
RGdqhwEAEFPa33/lxQ2dr+tlm2onuh57oBCpnumxfyif8Ds6ZswK57GmQ+ug
Jx9V2ffYLr+wvvP4gDjQ3uMO7ad7fVKT+Q2nLjAAAHBh/nx7PmIR7cmeMH6V
81iBuPOrUfTA3e2cxwUAAA73Tpk+ztf0wtL+JN2Tn3p8NXP2qTXNxefUNVdd
0tDceE0z86+bWpo7b21t7rm9jbn3jrbevcfF59a1vtb1VzZxPvZAIXrk/o6h
vu8fvtffeazpUE1o27FVrjDUeXyw27Fzn1m2bKuZO3eDN1c0fNhSU6vGSPNa
6R7mg3f7mbatp5pVq7Y7jzOX7d693xvTdHoqr169w/lxAACAwqNeiInuU477
UwUzccIq57ECcTV79nrr92fZsi3O4wMAAL926fn1srIGeMJfKnq9FW+5vrm3
jqD6qZqPrVZluGncYLxp3266V1t16JAl3v32nDkbvHsH9WjUnO6BAz8ldVxj
x6wwpY62z09WKj/E+dgDhWbkyGWhrxnnnl7Lebzp+PiDAdZjmzpljZOY6Dth
pzUpnbNzTqsV6vOp2jsvPdfN7Nq933nsueTfP/8/yj887YRqad9XLFz4vfPj
AQAAhefQT/82DeqOTVhjRTVOVbfddbxAHGnez/bdadxwvPP4AADAr916Y4u0
5/KO/F05c8GZdbw8wDdf62nq1BplunSe5dUl1FrgD3sOZPWYOn010xz1358E
xjxu7ErnYw8UEq0fKA84mWvLvHkbncedKl0T/Y5J6yc//TwY2Yxly9a95sF7
2pu//aasd71+7qkuZs/e7F6X40r7VMp+OMAbl1R+/1QXXH09XB9HLlCOZxT3
HKL1Xs3huT4mAABQuNQH8fQTqwfes9x0bbO86PsORE3zhEf/j/+8nWqNuY4P
AAD8mnIA05nLU93/uNwXHzz4k1cLMVHM9FUCsq93r/lJX19q1xzlPO5UKE/K
dkxvvNozq7Fo/VbzFyXjePSBjs7HybWBAxaZM04KnvsJ44qLGni/P66PJ86U
g3j8nytEsoaovf1TJq92fkwAAADaJ6U6KkH3LspddB0nEEeam/P7zmiPZ7bz
EQAAQGIdO8ww5/+jtlenzbYfyI/6E2qO2nX8smHDbq9HYqKYzzujttm8eY/z
eIFCouuEepkmu15w83XNnceeinp1xliPaUD/hVmNZdYse9+JNWt2Oh8rF1Tf
9a03ekWyplWkb58Fzo8rjjZt+sE89tCXSY3lMb//1Dx8XwdTo/oI077tNNO5
0yyv9nm7NtNM757fmp279jk/LsTL0qVbvBr5yrVWz+zLLqjv/X68/3ZfM2L4
0qzngAMACsu6dbvMJefZ+8Wox8v33//gPE4gblo2n2T93qxYsc15fAAAIJju
cVWPVLmGX7ScbF589mtzZqkav/pNV22+mTPWOY9VVKM0TK8l1UFbvnyr83iB
QtO/30Lr91L5YLZ9iKrDuXXbXufxJ0t9YP2ORz1UtIaVzVjUK9Y29l27zHY+
Vtmm3zbVIo1yDVFKv9jd+bHFidZt2nwx1Zx8VOXQY3j9VU289ULVmnUdP3LD
kMGLQ+0h01451d9wHS8AIH+tWrXd/O9xVa2/Raqb5DpGIG7Wrt1p/vbbw/tL
nHp8tdjUPQMAAMnTfiDNw/Tru8Ds3r3feTyap1QvRr/7jpI0b6x9gq5jBgqR
X13NItqDqLUD2/+uXquu40+G9mFo/dPvWB65P/u1RLdt/9HLNfeL5723+jof
r2waNnSJOemISimvFZ55cg1z3B/L+/5v2oPu+vjiYtrUNd6aYNhx1bq71rtd
x43coc+Ybb9GkAqfDHYeOwAgfw0dssT6G6T9hNRFAg6nOb3i3xXN7/Xqwf4v
AAAQjY0bd5t7bm8Tat7o/rvaUQcNcER5zUHrMvv3H/L2Idr+zROPfOX8GJKh
OtG2Y1GNRhcxXX1pI994bru5pfPxyhaNfZg9J+rF8VrpHl4txEkTvzMjRy7z
1riKasBWqzLc9++O+u9PCr524q7d+721adu6dUnqc6iapXGpj47427fvkPno
/f6hP2N+6tOjCgCQQarNbvsNqlt7jPP4gDga8/Pz1scfDDAVPx1i5s3b6Dwe
AACQHwYPWhxYM6Tk3vNDP1EPAXDlqcc6Wb+fTRpN+OXfXXdFY+ve3Vzqsf74
w1/5HofmvbX/wUVMLz/fzTcm1fpzPV7ZoL5pYX4v1E9twYJNga8VlDv73Xc7
nB+rK6ovXrL+eaL9Peqd6Dpu5A59v665zH9PRDK0n0B9Y10fDwCkQ3tkdS0b
OGCR6dB+umnVYrJp2niCaVR/nLdfQvfY6ius/133NgcO/OQ85kLx7bcbrftd
Ljr7c+fxAQAAAPlOeUsfvNsv1DzRiX+taHr3mu885kK1Zetes3jxZjNxwiqv
f5FqvAwfttSba9azrGo/FnruTiHYsGG3NQes1NFVfrU+WLvmKOv3+Ztuc50f
Sxg//njQHPenCr7HcOM1zZzF9W6ZPr4xnXVKTedjlmnNm05MvK7wm7KmRvUR
ofacKD/R9jpLlmx2frzZplxCjZ2tlq/fvoBmTSaSg4ikaK5cfXLSXUMsop68
ro8JAJKxevUOr7bCS891MxecWSfp657qJqg+xeuv9DBfdpxBrZ4Me/SBjtZz
MWfOBufxAUBxe/ce9Op+uI4DAJBfxo9baUq/0N3r8/XWG728/Y59+yzw1oYy
+buzdOmW0PvQr7iogffvXY9VIdB6oNYJVdP+uae6eM+ntnWUktRn7NrLG3vP
w+qRp72bzC3nF10fbOdfNUuK/1utwdj+7ZOPdnJ+LGEMGrjIegz6jriK683X
evrGdM5ptZyPWSapt2ai69DpJ1ZPqjffnr0HTKljqhz2OsrtLLS9EQcP/mTN
dfVz921tzLJl/DYjOeqFGLavqdapH7ynvXn15W+8e8Ggf6ue366PDQCCzJ27
wVSpODTh9SwVel4rX26wV5Pc9XHmI+WB2sa+AfW1AcSE9n3r3ll7QrX/+9kn
u5jtO350HhcAIPf16D43sCeNfns0l/rA3e28vEHVU9G8utb0Dh1Kvbao+icd
/+dwa1OaO9JeGtdjla90n9G1y2yvf1gqe2ETUb8svbZyF6lHm/suv7C+/7Xi
53vUon5zxV15cUPr3HAu1Da1rdeJ1sldxaW1er+YLj63rvMxyxTtedHe+6Dr
jXJEdU1L9rWVV62c96LXUZ6U5vpcH3M2qT7AQ/e2D3VdVx/U7l/PcR4zco/y
EMOsIZ52QjXTotmkX+XXaF9SUA2LenXoUQUgfnTt6t3zW3PTtc0if87yc+7p
tZzeo+Yr3SfZ5i+0H9t1fACg35vrr2py2DVKz3iuYwMA5D7VwEv1GUXzuVpT
UM6a8nK0R0+9boLyz7RuoNzHMK9/wl8qerknrscoH+k81fxspLnqEv81nkzR
3HP1qsOd9ZRDeubP32Q9t7qW+O1zq1VjpPVv4l7bVNcy5bb5xX7eGW77ENrW
e264uqnzccsE1f5KVANRcziqQ5vqe6h2s/bWqH52oe3lV48ljV+ia/iRvytn
Pi07KCf2ACB+lLuaqBe29q998vFAs9vyHdyxc591Hveu21o7P0YAKE57krTH
KZvPW6J7plWrtjs//nxju//WeLuODQC0X8/2u7B+/S7n8QEAcpfmaDLx3KJ9
5v+6qaV5762+pm3rqWbK5NXenKP6Blx8Tt1Qr6E9NMuWbXU+RsXlQ33xLVv2
mDde7enNBWf7eba4Y37/qXn/7b5m06YfnI8JwtMacNB59dvnpp6atn+vPiOu
jymIau/ZYv/o/f5OY9N6oV9cqmHietyipjUu2/EWefzhr7yanK5jzUVaL3/+
6a4Jr9uqcV1oOZqIjtbpE9U8UP2CMDWJtX/N7+/Vo9f1cQJAkaaNJzh95tLz
NPdG0Qrq/c4+WQCuDR2yxHqNmj17vfP4co32FmsvveaFZkxfa1au3MbvKoCC
pbnDM0vVyMpzzBGqzf0be/3UX/7df5U1FT4ZHKtrs54JtD5SVF/86cc7m82b
9ziPK1m6b1DvNFfPsn6UU6B+e3E63+nQuugXLSd7ObdaZ1KPUdcxRSlM/qru
rUr+na22qXKa41yrv3KFodbjHD16udPYzj7VP5e89IvdnY9b1PRdCvrMqUef
ak25jjNXKfcr0fdavZNzfR8N3NFv/J23fhH4GdP9Sdj9Y6pfaruHpCczANfU
x+HtN3s7f86SRvXHOR+PfBLUN1018l3HB6CwDRtqX0dUrqLr+OJGzw2aw1Mt
8JEjl5k2X0w177/Tz6txcsZJ/nWpNId1/ZVNvF4LI4bTuwlAYVHdUNfPN0VU
P3DkiGXOx6Q4/a741aK57IL6OTVvPXXKmlD9iFzJ5TwX9W5q3266ufPW1oet
lSvvckyI3IpcsHbtzlDnslWLyYf9bd3a/nO+orFzfWw2l5xXzzfmk4+q7Hzt
29YnsOKnQ5yPW5R0Px/0edMadaHVII1SuzbTAsdX6zIN6o51Hidy28cfDAj8
nGkNUfXWw75exw4zrK9FzV0ALmnPzWMPfpnUc5D2qd58XXNvX0+vHvPMzBnr
vPtu1XHes/eA98x56NC/vdrtmu+cNPE77/dbtX/0d/p722tfdPbnzscknyxZ
Yq+z0rXLbOfxAShsQc/OyqdzHZ9L+i2dOGGVaVhvnHn2yS7miosaePN16c5l
qt+NeiC7Pj4AyJbuX8/x1sWyvXZU3L13tDXffx+/GpeqxWqLuec385zHF4b2
HZ3414opnRfVGFMOwbtl+pgmjSZ4fcMmjF/ljYvW/fR/x49b6f33zZtO9P7d
7be0Msf9yb93UZCj/+cT3zWouNI4vPRcN3PsH8oHHte1lzd2HmsUguZti3v4
vg6H/a1yFG3//pbrmzs/Nj+LFn1vjVnn3WVsuwJqUut76nrsojxOW96llDqm
im/+K8LRvvlE9dZat5riPE7kNt0fBH3GTjuhWtJ17LVX2PZ62tvj+pgBFCat
9ek+OMz9sp7NVL9E64ZaL0znfbW2Zbtf0n6gdHpH49e0V8V2Tls0m+Q8PgCF
TTWTbNco5Ra4ji/b1BNS9cIeuLtdwnm7dJV5vRe5iQAKivY9qg6j6nhqn4bW
DVRj9LGHvvTWGY/7Y/TXXc1hqj7VT//+f86P34/WinJ5vl696dT3Pcy50HOm
8gLLfjjAm/dbs2Znyu+rXC2NXflyg5Oupapn6rg+7+pzqvVjrQ2GPZ58qbOm
tbOw8yJ+32etF9r+Jo71X4P6n+j74TK2DRt2W2Pr0D6++Z3J+rTsoMDv1fBh
S53HmKv0e5/ot6Fxw/HO40Ru032E8rdtnzHdVyrvJtnXrVLRv+a0cnLiej8J
IP9pP2Wi+2T1FNG9mvIMo3xvrUfa3lP3ja7HJp/Y8ldqfjbSeWwACpvqu9l+
CwolH1HPuc2aTDT/vKGFN2eQ7px1MlTr1PXxA0BcaC1E+znGjlnxS91o5aop
JySVa6zWl6ZMXu38uILs3XvQy8nzi181ZVzHF0S1uv/3OP/YiygH8PVXepi+
fRaYLVv3Zuxzo/oKWo8O+zuueuPprGNmwqhRy801lzVK+nN+4Vn5UU8omV6q
y5ZtOezv27a254/E8X5La+p+sWofW9RzP8kKyu/s1nWO87GLgj5Dttqtkm/1
W7NJ+zxUBy3oO6z9JK7jRG7Tb796iwR9zlKt62CrGaj7StfHDaAwfdNtbsL7
4+ef7pqxnOlOX820vq9qoboen3xim/vQ/lnXsQEobP37LbT+FsyfH7+921HS
npkH72mf9bXD4vTeyuVwPRYAEHdaX6xVY6Q5/s/h6lk+8chXZvuOH53HHYbW
4074y6/rgipn3XVcNtqLr/4aic6BckyTrSWWLuWdhe0ZolwZ5TS6Hk+NUbJ9
TorTvILrY0iX+lYlc8x+5001Km31bpXDuDtGPe50zm3H9vjDXzmPb+FCe81V
7QlwHV8Unnmis/UY1RPxwAG3/SlzmeoMBH1/teeDnC6kS/Xdgj5n+hym8rpa
n7Tl0j50b3vnxw2g8OgeVzWag655n1UbkdEY1O/J9t7aF+t6jPKJbR2xaqVh
zmMDskHXFPWCdR0HDvdlR3svmtWrw/cizzV6PlAuQqpzdlH66P3+zscDAOJM
87latwqz70N1QHKpB16Rdet2mc9rjzblPhpoBg1c5DweG/1+vvryNwnPw0Vn
f+50b+rgQYtD5bcpH0m5ry5iVG3VyhWGejmbyd47/O03Zc2dt7Y2w4Yucf6Z
iEKYPdbFKf/U73WU+2r7mzhdF+rWHmON8+sus53HN3PmOmt8+fCZmz17vfX4
9DszfVph1GTJBNUTCPqt1hqtev+4jhO5bdWq7YH7yv51U8uU+4eoN7PtdWtU
z+w8PQD40Rph0H1xy+aZ75v38QcDfN9b9aNdj0++sT0bak+169iATFL/I+3Z
0lyHaslr32eu5AYUiqqVh1mfoePaOygKQfMjydIc5OUX1jfPPdXFq1etubBx
Y1d6z9GqsfX2m70DezddfE5d5+MBAHG1YsU2c8PVTUNdjy85r543/+M65nwW
1E+syBknVffqIrqOVfecTz7aKdRnR735spmvNubnewSttSZ7z6FagVoPy7f6
Qba5CRuNn9/rBN3fXXp+vdj0kbT1v9S8wa4Y5E3qPtY2juPHrXQeX7qeesx+
XdBatOv4cpXWB887o7Z1bNXHbvny7OaoIz/dd2db6+fs70dWSqtuudYKba+t
a6PrYwdQWFQrPCgXsX7dsVmJ45H7O1qfv12PUT7R86vtXDduQF9p5C89p/vN
+z1wd7uMvJ+eSV556Rsvx+yma5t5tfJ1nXv68c7e3JCeCd97q6/Xi0F7v7Xe
0+Dn66364rVrM8106TzL9O413wwdssS7P5w1a723zy3f87NV983v+nTWKTWd
x5ZJQfMjflQPSz261KuredOJXk0n1dTS506/64neT7V73nqjl3XOyPV4AEAc
qQ+Xrr9hrtPKkXPdUyzfBdVCL6JaYKqJ6DrW4vR8rT1tiWK/4Mw6ZtrUNRmN
5dtvN3o1/ZK5B1EPSvVqW7Ikf+ug33Zzy6TGZM4c+36BoL5stjzGbAqqafro
Ax2dxyd9es+3xjhv3kbn8aVD3yNbvpx6U6qGtusYc5VqrAR9b+Oca4/coXvD
oM9Z506zUn5tzWHZ9vjofpR6xwCyLej5645/tspaHOpX4RfDw/d1cD5G+UTP
OLbz3atHaj1/gVwQ9Nlfuzb1/WF+VH/TVj84Cpq/0dpk6Re6ezXHtN6oZ+gd
OzPTvzabbPfJ99+VmfXeuNBcc9BnRvmz+k1uVH+cl9sSRQ8P2zqi4nA9HgAQ
J7pGv1baXp+wOPUVjEMdwHynGgXaYxR0LrSXKw55iH5Ui1G5MIk+T/r9136z
qPeRqUaBejInc/+puqyquVoIvQFKHZ3cffzmzXusrxU0x6w+lK6PVc8Stvi0
r9F1fBLUd0z1ZlzHl453yvSxHpvqZyf6ex2/rhGqK/yPv39mzj29lveflVPb
o/vcyJ9zc4Wel3T9tI2t9vK6jhG5b+eufeb0E6tbP2faR57O648atdz62qo9
5Pr4ARQeW+6HZLNGxBUXNfCNQT05XI9RPunXd4H1fM+YTt195C/tN7R99qOu
OZZo72Mmad+q9q8rV035kJob0LHnQr0p1Z6x7ccthN8CzSkWz3M58nflzL13
tDXt2003W7bY56dSHWvVWPEba+2bdz0WABAXukdQfZQwv8Fat1Juj+uYC4Fq
OASdC82hh8nPd0k1BGx7aUs6+9SaXg/pdNbw9u8/5K1xh63LW0Q9n2rXHJX3
NTGKbNtur9/jR/duQa+nfBHbPLPyUl3XVVR/OL/YVJ9Cc+Suz4doPc0WYxR7
61xRzdjj/uTfU029dROtkapWYtAaRhGtLSpHXnlR332Xv/3mi7v1xhbW8dB1
V9dD1zEi9wXVwD7piEpp5xNrLsD2+soJcn38AArLlq17vT5KftekbPdH8qv5
rPnkqVMyW8ul0FSvOtz6OxT1PDUQJ+oRZ/vsRz3npxpAycw/ZMv5/6jtPUMO
6L8wljUwVJfTFnunr2Y6jy8b9LusvcPKMdV/ztT7BM2/li832Pk4AEAcfNFy
sjeXG+Y3VrkNcfxtzUea/1W9Utu5yKW9R1pHSKauqHIY1ed4+LCloebBv//+
B2+uUXOdqmeR7L3jy893K7i6ikE1TPz866aWCV/zs2r2/lbqc+DqWFXX1hZX
HHIli9j6iqqOievY0qG9grbxf/O1ngn/XteCVJ4JtYe/Vo2RXs8M12OQCer3
YDt2rd1Pn8b+eVe0HyVfctoXL97s7fu1fdZ0D5nO648ebc9FVO7xoUP/dj4G
AAqL6pLYrkvac5jNWPTc/eKzX//y/sqpUc9212OUb2z1a/Q75Do2IJM6tLc/
p23YEG09nKqVh6X0TJdNql2pvb1xqvcVtLY1f/4m5/HlC33eg/p7kZsOoNCp
n7ht3rokrc0MHrTYecyFRPuhbOfjuisam0M/5dbcmvof1aszJnA+0o/yBPVs
V7XSMC/PqG3rqaZu7THmjVd7erk46dTY155i7e9yPTYuBNWR86M68YleU3ll
tv3bx/2xvNm6LXN7x4JUKj/Eelzdv57j/FwUseXQ3nN7G+expUNr0Lbx1xpv
or//5w0t0noe1Jqa9r+OHLHMuw65Ho8o6Dhstc7E5bp9IVu3bpd56N72Xq6I
6s0+80Rn717LdVzpCKoNfuM1zdLKldYaoS1XXOrUyu58PYDcp/2HUyavNs2a
TPT2IemafMv1zb3rle4ndE3TM4SeSXQv7FeH5K7bWvtek3Rtd1XvQHui9MyS
678pcaR7qlOO9d+Hqn2wruMDMqlxw/HW+7Ddu/dH+l6aC7jwLP8+f3Gj673u
41XDyfU5Uv8Avxi15pVrc4JxZhtnoaYpgEI3aeJ35pzTaoX6DVUPqqj3IiEx
W41DUd8/1/GlatrUNc7vH1VjseZnI/MmXyQVQblMfjReYV5X/QZsr6GaQdk+
Ts0NqF6uXzxao1ZfWNfnooh6c/rFqTorrmNLldZVbP0cbrq2WajXCKrdmaxL
z6+XF/1Pe/f81nqM2vfDPGP2zZyxzstbKHk+NGftOrZUjRi+1Po50/q8jjmd
168fsL9avUn4HAMIQ2uB2hf2+MNfefd2ydwXKL9PtSkGDljkzcfqumPrO3zb
zYlrcyD3LFiwyfr5yHb+KZBt6j/v99nX3u9MvN+Onfu83oTPPtnFPHxfB69f
ofZ5XH1pI6/P0nln1DZnnFTdq0+lfci258hseeDudk7Pj/braSz8YrvvzrbO
Pz/5onWrKYGfA9VJcx0jALig5yPVHrQ9H/1qjujnf6N751zuy5XLbHthdW/l
OrZ0qX9xqrUK06F70Q/e7ce6+M+6dJ6V1Njp3irM66q2hu01NLeT7V7mQXmX
qmfr+jwU0XqnLZdT+ZSu40tVy+aTrOPfrs20UK+hXgRRXwu03qPYcrVO9zWX
NbIem47LdXyFplePed7vi+2crF2703mMydK9n+Z0bMcUpiZxkHnzNnq9X22v
rzkm12MAIN5UB0P3CNp3EMW9wZkn1zBPP97Z+r+3aMbvaz5S7qrtnKv2tuv4
gEzS87Dv9bBUDeexFTl48CcvN3Lz5j1eTrhq7s+atd7L0VbNtK++nOntV9ax
KO88nXpVcbuPnz17vTUu9jlEQzUMgp5J7r/L7VoyALiieihh68Mpf0c5i65j
LmS23KQXnunqPLaojB+3MnCeMiqqVaP18y1b9jg/5rgI6v3ip0/v+aFfW/v2
bK8Tpj5qlJ5/uqs1lmFDlzg/D0VUM8UWZ9PGE5zHlypbTUTtcQ1b51a5Adqf
molrg2ob59pvneqzBv125+raaK5Sne1Ee6U13+E6zmQF7TVRHSX1JU71tX/8
8aC5/ML61tc/9/Ra3r9xPQYA4kl91yt8Mjhw/0YmuKppisxSTo/f+T7m95/y
W4S8Z6v7ov/edWzp0LyP1oeUq964wXhT7qOBXg6k6lMmu864aNH3zo5Dsdvi
0lya63HOdZojP+2EatYx1j74OPXKBIBs+brLbHPSEeH2aqomTBzqgBcy7bmy
zUtqPcx1fFFSzoPu79TzMernffVdUh6dX++TQhe099aP7sPDvrbWZWyvo1p4
2j+YjWPUnkXb3jLVS4lTP4ElSzZbxyxOPRyTod5nqiHsd0x335Zcz0ftA7XV
p/3ls/Xbct7nK9nrhP5Ge1hzJfdeeyJtx6L9Aa7jKxT6vLxTpk/Cz5dqCMTp
WhOG1qIVt+2YtHaazuuXeb1X4Jj177fQ+RgAiKduXecEzvllinoSuz52RE9z
Htrb5nfO772DmoHIf3om9vv8v/RcfOr2ZIKeLbVPWuuLF51t77mj+2GXz4i2
nn16xlY/YNfjmMs0V6Q9xUG//TxbAyg0O3ft8+4Bwjwfac8d9VriYfXqHdbz
1L7ddOfxZcqM6WvNh+/1D92708/5/6ht3n+7r5k6ZY3z44mzoL1tfpKtBRvU
p1o9ELJxP666eLYY4lYrVHVZbLGqNqvr+FKh9WLbMTWqPy7p11u6dIs59Xj7
3KHWAwf0X+j1Dnzy0U7WOrE2TzzyVez3HCxbttW6x0TzADxPZofW2bSnOdFn
SrX2ktmDERdB9YhVKyGd/AzVMw4asxef/dr58RcaXfe+/XYj/SgRa/p8aq9r
qs8H6VIPMddjgOgF/SZpz6Xr+IBM2rP3gPXzX63KcOfxZZPmjlQXtfgeZNW0
cj2nZMudpDdietSn89rLg/MYVOfcdZwAkE2al1ZtqDDPRqoZN2fOBucx4z/n
znauhgxe7Dy+bFCfPa11PfpAR+9zXDLPqNTRVcxN1zYzpV/s7uVG9Ou7wKxZ
k3s9qFxJZh1R+76TfX3V/wjqw5rpvV3K6VWfG7/31jpM3OpT9O2zwDpW6iPm
Or5UdGg/3XpMqT6TJepfoD0I6p+hf6tenDU/G+n1Qgz7Wb/h6qZp1WvMtCoV
h1pjTzdHDOFozSWodnORC86sk5P1TLVGaNubLl92nJHyaw8fttSa9yFnnVLT
e653PQaFpG3rqeaEv1T0xl/nRr3m1K/XdVxAcXomCMqRttFnW/VO7rm9jXns
oS/NQ/e29/oLn3xU5aRfq3ev8PX9kTv0LGl7VsjF3sZAMrSHyHbN69xplvP4
XFCOWs9v5nn7UpWT4TKWFSu2Wc9PrRojnY9Vrvphz4GE/b40P140pwAA+U75
COoZEba+2xuv9vT2IrmOG/8xZswK6/nKxXnJKKhGovqpaT8yOTfpU8+9sHMn
yu1K5T3ef6ef9TU1h5PJ9Zqg3l7q2ed6/Etq39a+H3r9+l3O40vFp2UH+R6P
1pf37Uv9O5yot+fHHwz41b/XmrJqw2ruMMznXTnNy5ZtcT5+fi48y7/uzrF/
KB+63yRSp98fWx+Z4m6/pVXOno/GDe17TC49v17KNVrV1zOol5nuWenzkl0a
b79zoXrwrmMDiqgmQ9jeHKLf+ob1xpkFCzYF1r5Qfn+TRhMCe7UWpz1JGzcm
V5sD8RZUN+O2m1s6jw/ItKB9rJMnZb6ehuqKai1ftS6eeaKzt2fE9ZjEidYy
bednxPClzuPLRVob/NdNLQN/75UDqnsE17ECQDYob+WqSxqGeh5SPhd7K+NJ
67o6PyXPmWq3s08cUWjeNHx/RK1xpfIeyis5/UR7Xksm+y6oN6btfYcOWeJ8
/EuqX3esNd50agi6pFogfsejPgTpvvZrpXtYx0v1TNUzveTf6No5eNDiUHOG
yovasmWP8zEsTjUDbPFSCzLzNH8c5v5KNZFU99R1vKlQrmVQ3zHN96Tyuqo3
rNr5QeOm3GHXx19obPWcmD9HXOg3O9G1Q5Q79tRjncz0aWtTeh/Nx15/ZZOE
73PnrV/kTC9lJBbU+6Vjh9Rz74Fcob0Utu+A6rpk8r11T1nyPbXXVD20c3UP
bdSC6tBs2Zqb+xVdUn5pojxE7XnMxZ4UAJAsPdNoHjqo3tuvn4Nam3Xr+H2O
s7FjVvxq/63m9tijhaiEXUfU3Ew6+6+7dZ0T+PqZqJmidULb+ymfJo5r8erX
6Bev5s9cx5YqzUX7HVMU/Ry0tnrZBfb1wHfK9An827ff7J3ws6/6Z67HsLig
fp+DBi5yHl8+W758q5enmugzo+9xHK8vYQXlqWvNKZVj0zU+qJapqH45c/PZ
NXu2PQ9Hcyyu4wNUmyXMGqJyxJVXlu77qaZvmPtizbu7Hhuk77vvdlh/m078
a0Xq2aEgfPR+f9/vgOqcZPq9b7zGv6Zw0ft/8vHAyPo2a59cOrVwXFENJb/x
0X5X17HlGn2W1L8k6Pdde5HjuN8cAKKmutlh6mwVXRu13sh8TW5QXbRePeZ5
NSd4nkGUwq4jqq9Muu+lvjS21z/uTxW83gxRHltQrYr27aY7H3s/773V1zfe
VHpTxoUtJzSqPFTNg9vqd2svYaJ9mqqPmmh94+sus52PY5E7/tnKN0btN8nV
/LcwNmzY7fUMVm0f1SvWupSe8bS2l417Gc1PB+XoFWnw872V67FKh+qFB/US
TWWtOmjtu4hygNSnxPXxF5qgNRPts3AdHwqb6on9/cjgWqaaZ27ZfFIkezdU
rzlsL+Xj/1zB+11yPUZIz7tl+ljPsdZWXMcHZIN6l/h9By4+N/3aMYmceXKN
hNfb/z2uqqlcYaj5pttcr8a17snXrNnp9btJ9Pp6NlJfCz0/6XlRuY6qnRrV
2mQ22J4/HnvwS+ex5RLNqWpOK+izps+I+mK6jhUAMk01N9RDPsxzj3rFRrFf
M1fl6j4kIBPCriMqvybd91KvuaA95aceX81MnbImkuNSbSrb+5xxUvXY9tYs
/UJ335jVD891bKlS/VK/Y3r9lR6RvUdQTSqtYST6e/VsC5qrVA5aqv3goqQe
j5oz9YtRtdxcxxfVMeo6oL5WOq9aX0p0f6Nz9+yTXby8510Z2Gujz0eiGPTc
mWrt5zhp18beo/X6q5okfS7ffK1nwt8X5Ydv3hyv+sGFQOsu2stuOy+p1q8F
oqD7tEQ1pM89vZaZO3dDZO+pfRJh7omLfPBuP+fjhNSpJpOthpP2lylX0XWM
QDbY6jnfe0f6tWMS0fNLMtfd4jSvoPVB7eFT7rrqoKqfitaL1PtZuYy2NTjl
+Lke9zB0TLbjr1F9hPP4coX6lFx9aaOEz3Laq+o6VgDIpG3bf/T204T9rX3/
7b7eOprruF1QTUbVp1N9xlzchwRkQth1xNGjl0fyfnVrjwl8H62RKN8o3fdR
r3bbe8Q5X8j2LKX7XtexpUprBH7HFGVfzAULNlnP95mlaoRaA1Q+bNBaURSf
y3RpD5AtvtatpjiPLx3jxq70PhOqI5bqfELRnILqY06a+F0kcXX6aqZXwyHo
PTUPqZoBrscwXfqeqP+y7Tj791sY+rW0LqgeYonOl/KVv/8+s7134G/ihFXW
86IaAYX6vIB4qPDJ4MBrxzWXNYr82hHmmlWc7hlytXc1jNd/zXZuM9m7HYib
k4+q7Ps90F6wTL+3aqqFzQOP2tq1O52PfSL9+i6wxj9wAP0swtAaoq0+UhHN
D3eNUf0hAMgEzbmFqQNQRPWJVBezOP0uieaG9Ds0ZPBiM3zYUm/NQPXDlBOg
eUvNry5evNmrH7Z69Q6vjouux9rvs2fvAa9eQNx7AfnVwX7g7nbO4wJcCrOO
qLW9qHJ4VX9Q37tE76laa2FqlfgJut8udXSVjOQrRUV7HfzivuX65s5jS5Vy
mPyO6ZH7O0b6PvffZf9cKZ8szGuoXo7tNbTf1fVYak3LFl+u1hnQvYztM5IO
7RmqWnlYWvcm2ueb6H1U2y7s5yvutBZqO07lBYUdS91HKu870djpvGvPuOvj
LlTaW2g7N/mS34zcpOdOzenZPp+aD9Re2ijfU3tPUvmtUQ6M6/Hyo99W7d1T
zaI43/e6Mn/+JutnTPcPixZ97zxGIBu0H8N2fdM1JBsxqAeF5iqDrvuZkAvf
84qfDrHGT23txHSvkCgPUfnnPbrPdR4rAGSS5skT9XNyQb/9WnNQn6ZTjq3q
7S0657Ra3v72yy+sb669vLG5+brm5vZbWnn1+6KqYZhI0J7rXNiHBGRKmHXE
qGua6H4uKOeliNbOkq0ppH+vHgq216xXJzvPQ6l6/OGvfOPO5T0PD9/XwfeY
9HsQ5fsMG7rEet6T6fMV9KyhvTQux7JKxaG+cWnOK9fqdWve4oVnumb8viSV
vdSqx/nqy98kfG3d50yfttb5WEblxmvsedyqGZvo71WHsOyHA7zPY5jfFfo9
u6Pc09NPtK/1hjnfQKbceWtr62dTn1vVo4z6PYP2uJX7aKD1f+vQPl79trWv
Rc/axWM8+9SaZtWq7c5ji5Ogz5jqpLuOD8iWkSOXWb8LmnPMZizKW7D1aoza
eWfUzkp/9XT984YWvvHruu46trhT3/WgGlWimjO9e1HHH0B+0++d6rRl4/c1
07TuOHTIkoyPmfpX2GLQ/Yrrcwq4EmYdMRNrb6phEtSXqYj6nmkvdZg8GO0p
tPXiE+XHxL1OW5svpvrG3qzJROexpcqW83LcH8tH2nMwqNdXMv0lWzSbZP0M
hem1mEm2/pm59iypegiljqmStXsNndOwse3ctc/cfVubhK+pPVJLluTP/UPQ
fivNtSTKD583b2PCXmZFSr/Y3VurdX3MhUw5VLbzozkVfQ9cx4jCFLQnSHsU
lGcX9XsG5SLqPnT2bHtN8bjMP2pcbru5pTXOJx75ynmMcaH+V7Zx0twEcwMo
JNWqDLd+H1ztn5w5c5255/bE9+Kp0j7AKZNXOx/7RLTfzpY78txT7HcIoucM
7VkM+hyoL0UyPRsAIFepz1+25t6yIdN9v7Tuaquvderx1SKdxwZyTZh1xEzl
26xZs9PaO68kzeur7rL2lfm9Vp/e8xP2VWvbeqrz8U5E1yM9FxSPW/syc3nO
XeNuOyd6TozyvYL6Kdk+OyWpXrfy6v1eQ3UYXY6l7XlIc4euz3NYuuaEyVeL
knomqoZZotiUz6zaCWHuW/KtlpAtF1paNg9eh21Yb1zCHpJFPqs2wvmxwph3
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
s8ZmHVHC6hKmozZsumk/gi/eBQs2ZOx99Tt/3K8qxf1cp5wFPbdbj1e2hK2T
p6tfqebjw/ovivqQWo9FoahYbkDosUj3mp6v311x6VwjSoTyzcpe2eiweNRr
dt26nebHqtD07D7be46kc9/OGyE9EUXfEf053Vdors/359Q/kXnA3KV7tLCc
U6lTe6R5nAAQyzNPdol53TrqZxWojxlCdUTDctBzhWoIW48VAOCHtm3f690D
/Y+nPjOPD8glqmVW8nvybuXB5nGhdFJOXby91LRfXDVA1PNy9KjlbsmSTUHP
OuWaqa/B4w93cEf/vELoa6j3TTJxqjen7zUt19jVf8EXl+bNci2XLqwHX98+
8zI3TlNXh+YiFKe8OOVNWo9VNt12U3PveKjOY7reR/k/yjH2vZe+v/HsF0Dq
fH1KRfVO0/le6hcTz3fPqrbt9OlrvDF1aJ98fW0kp9tnM73H4+uvt6flPaLW
0S8+r04wP6u65VdcVD/0z3btMtN8zBDb+vXfBMcy7Pg9cn87eiICyFnnnFYr
5rVLPf6sY8t1zZqMd7//cXgtDGvqZWw9TgCAH+r/+XzvdTuV/ltAaaRaiKoD
obyRm65rGqzP8HyNTNJc3e03t8j4fbrqNqo/XzIxai3dt+5hPX6x8miKNG86
3jy+4lSj1hfrc3/vmvb3U1/Df/2zb9zPkH+5pUVQ39B6nLJJa/G+8bjx2iZp
fz/lhup1fe9ZSHmgVpQbGvY9UB/DdL7f3be3iuv790V/mzqi2pfii6lzp+nm
x6vQ6DzwHY+pU75O+fWj1hCP/WUlN2vW2uC34NLz64b+Wfoi5q5Vq7a7i88N
X0O85rKP3Te76IUKIDcpB993/apUfqB5fPlg7tz17um/do7sr2BB9xva72I9
RgCAH9Icou/avXw5vW0BwNqePQdi5sKmU+9ec5OO7+UXYudQpTtvJxnqy+T7
zKrLN3HCSvMYi/PlBqg+j3pQpeM99u49GOSQqnZ5POeG1hlVO1f5ctbjk21V
Kg7yjkvb1pMz8p7KJfblDlMnIvPCeobLp22npO291HMs3mt0JnOSw6j/5ynH
HH6tUE1tenZmn3KgfeeIruvJvq72xL31hr8WeJFOHacHtTCj1qD+eFz1pPcm
IbO0P8aXw1NE/aWt+lsDQDz07Oq7hvXra3PPlK90vVfv7xef6x70w1ZNcj0n
Z3LuIYz6BlHPAAByk692k/69dWwAgP/SHF+DuqOD9aR036s3+nhsSrH5ei6q
9671uGnt67IL6nk/u/Iwc2ktMawn5h23fpLSWp5yW5s2HufKnFwzofND+UjW
42JBdYW1Fh5rTNRPcvuOvRl773v+0jrm+yon1HpcSruo9RHVH07H++iafsM1
/tzTkixrO6mmqq6VxdeIRo1cZn6sCpFylk88omrMc0Q1mJN5Te1VevLxTpHn
oGoP6LwNy5kOro+/rpxUr2Vknuq96/sbdvyO/03loJ6xdawAEKZyhYHe61iu
57HpmUz7Oq3jiKIeINoztmzZlqAWwaSJq4LnQt0DysgI+jP686J/Hj58adDz
cOCAhe7zfvNdn95zg77P2verWnjao9nlu/+t/UrWnx0AcLiwel1vvtbHPD4A
wA/Nn7/B3Xlby7SsH2peuEe3WSnH5Fune/i+dubjJZoDD53z/FUl1+7TqeZx
imqNhfW9V+2ZROuMqWdW9apfulOPDZ879NGzrvW4WBgxYql3TDJRZ7a400+o
EfN9n3myi/m4lGazZ/tzvYqor3g63ku9BRP5HqbjWp0KzSMpBq1n7jDsewsX
9Dv2nSdaJ0rktVTfWrkHUeff66/2Dv581HdEOQTDhi4xHyMcTvO4xfcD+O6H
2CMAIB/46sIrl846Nh/VBH/g7rbuiB+VC2qJPvVEZ7d12x7zuAAAiId6u/me
I6z6sAAAomme55H72yXVH13PLc8+3TVYs0o1DuVsqX9BrPd5+81+5uNU5Pl/
dIscF43JzhyYH3/t5V6hcZ53xgdBrRflkPheQ/Vp1EvvrttapdzzQvPM1mNi
wVevVzI5Tz5z5lrv+6aaO4xwYfnARXPs6Xgf5bL61op9un1GfSf8l/pS+s4T
1ZMZO2ZF5Guo33ebVpO9OdfFvfpSz+97gY8f95X3z+leQHkG1uODww0auNB7
r/b99e3XlYNcEetYASAevv2R6gWSrvdIZ96gfkfLXtnosHhV18d6LAEAiIf6
7MT67VXdPPqqA0Du077GJo3GBXUQT/itf5+55oeUx1j3w5Fp7Vm0YMEG73s2
bzrefHyK6Dft6ks/jpwvveicj9JWtzBZqsUTT+9CrWncfnML9/wz3dxbr/d1
LzzbPXgW1TpjKuuGJRViD7T9+w8F/d9ijceZJ76XsV6R3bvOitmLrgi1AjPr
kj/VDf0u6LuVjvcJ603uo3PDenyQG5QPqtqTYefLow+0d+PGrgj2+hT9vYUL
Nwb9j5TXftrx8a1j//OVXt+vIYr2r8Sau9U9hnK4rccGh1PtuKia+KqVqzVi
61gBIB56/vVdz2rXGp6W11feoPbrpitvUPUCfDFTxxMAkA+uuqRBzN+xP9+Y
XH8NAIAdzRcuX74lqF1V1HNAuQGLFm3M2LqH+u35nonGjM6tvnp6JrygzIeR
86Z6ZtS6nOUznWqxJpNrmqywdctM9gHMFVornTt3fZCjo38e8MUC73iUf+eL
tL//nDnrgt6HUfO8+dBLJV/pGER9T66/unHK76N8H9WzSvQ72qvHbPMxQu6o
UW1IXOeNeuFpD432nSR6zvmudUOHLP5BfUytK+ba7z3+S3WIw2qli9aUZ8yg
HyKA/KF7Kd81rf/n81N67SBv8KrD8wYfuvfTlF5XteF9MWtfrvWYAgAQRXtH
Y/2OaZ+0dWwAgNx347VNYv6OHP3zCqF1N62sXLnNXXxunbjmULX/VLVxlizZ
bBKr8kwzvX6o+WWtmX34wXDvn8nUGnQuOHjwW/fGa32+X7PVeqryddT/0Dce
06Ym1n8s7L01H696uvHUnq1XZ5T5eJVm8azLaG96Ku+hfR5hfUrLnOyvMWnd
HxG5Rb+vV1xUPyO/C7oe6fcn7P03b/lfv8xC2GuSj9T3Oeq3RTnWS5ZsMo8V
ABKhmje+61qqz23q7+R77VT2mDasP8b7uoXaQwIAkD9Us8v3O9awwRjz+AAA
uU31P32/I+rLZx2fz7bte92jD7aPe05V8/5WuYkd2k9Lub9hLMqr6ttn3vf1
6t556/OYf045cNbHK5NU+yiRcVPvsUTfQ2Os80d5wi2aTXBvvtYnyD0sns8T
5dYbmgXrjun+/Ons+5LvLj4ven/B4w93SPr1NUcU9h5ay9aajO+/d+o4PWOf
nfMgPy1btiV07TkZJx/1bpAPb/3ZkJoPag6LPNaXnl836KVsHSsAJMpXH/6Y
X1RMef+j+oD4rpuq8ZPs6yrHP9Zrqnet9XgCABBFv6++fMTeveaaxwcAyG2a
U/c9Z2kfvHV8YbS2oz0zUT2DilSv+qVZrOqJF09vxyj6rOqLPHHCysPeQ/2y
Yv0d9Yu0PlaZdNkF9RIaQ+VuvP1mP1en9sggb/GzzjNcv77zgjrC3T6bGfw7
5XZqfkP1j/T6ydQTLE5rTxs37krr5y7q+6L6mqp5l46+L/ls1qy1cR2LR+5v
l9Tra51OvUzDXrtiuQFuw4ZvvP+9dctJaf/c69btDHqqFvX/efLxTuyJzzMr
Vmx1V14cu09Fou649ZMgZ9b6MyF52g8Qlk9fRPcUmzal93cFALLl7ttbxby2
6fcwldedN2+997p5zmm1ftBzOFG61471uheeXbqftQAApce//3V4/oF+H3ft
3m8eGwAgd7VvN9X7nKV8hnz5HZk65Wt3/lm1I+fcNC9nGaf2/mjN6trLGyY0
L6y1Ae2r/aT5hGCNwvf66osc6+9r7cP6GGVSvDVurWj80z3Xq7zG6644/DzS
epL18bBSrcrguI6H9rmrnmMir62eN7HGuzh9rzX//82u/d4/07jh2LR+Zu2l
uOGaw+tSX35hPbdq1XbzYxIP8ij/SzVOa70/LMgfT+Y6c9UlDYL8dOvPgdR8
9dU2V/bKw3t6laQ/w34BAPnM1+/+r492TOl1X36hh/fa2aDu6JReW7VFYr2u
apRYjycAAPFQbVOtJWqvvPak33ZTc7d4MT0SAAB+6oUUVpOxwn++MI8xETt3
7nP/ebt/kJeVrTn8VMyfv8E1azLevfhc9+CZVOugp59Qw517+gfBeoV6Oqqm
2aCBC+Ne8zjzxPdifm717rP+vJlUtdIg87XCWE47vkaQ01tUdzadwvpuWtXv
tRbPXoIi71YeHNdrjhu7IqifrPvrsNdT3WTllOnvaJ+778+/V31IWj/zzJn+
HEztKczlvDTlUSrfV2NVlEdZyPm0RTQGH9UeEVnrVOvhd9zaMsid1l6aTFxn
kF3KiVd/36jr1y3XNwtqu1vHCwCpUC3QWNc41XZI9jV13+OrU6M6bqneZ+je
qhCftQAApY/yHLSX1ToOAEDuGzZ0iXeO6vjfVHbr1/vz3nLZkiWb3AvPdg/m
WIt/prJXNSrVv5FhOVDpXrvINcpleuwhf33ebNP8Rbl/98/YPK9yUsNyllLp
+5Kvwvq8xnLCb6sEuVs7du477LW0F69+nVFx18vVPNiE8T+sM3zGH2Kv6T/z
ZJe0fu6xY1aExqZ6urE+ozWteam/a8l477+rjXlsuULPdapf3bzp+GBO9a03
+gV7JrSHQMe9tOVwFnJequa1X3mxZ1zXm/vubBP83lvHDACpUF0N33VOPSuS
fV1fjwdRb/OUYv7ud9m3X7VKxUHmYwoAAAAAmRA279608Tjz+FKlXnRaC/jn
K71cyxYTS/385OzZ67zHs0vnGebxZUPnTtPdH4+rbrZ+qL6LmufPdA6Y1sl9
MSgnL5W+L/nqnbcOr/EfD/UU1HFTfo9E5YAd9vd/Uj7orVkyHl/PH+Ut7tuX
vmuR1l70mmEx5mJueVgepfaCWMeH7Cne51Xfp0Lq86pr9adtpwS56/Fcb156
voc7cOCQedwAkA6+vvGxesDHo02ryaH3e0uXbk4pXtWd9r2+ek9YjycAAAAA
ZILyQZSjV/I5SP3VqI+Wf8Lm5VXzzjq+bFGexoVnf5TxNcOjf14h6If3/D+6
BflBs2atzcrni8o/691rrvkxyDbtaffl/ym3WnNHmTgHtOahHrOxYqpRbYj3
73X7bGZaP/+Xgxcdln9dnNaWrY9RSaoX64s31d5FyB/BfUiMXoCF0Od18KBF
7sqLG8R3rfnuGlavzijzmAEgncaMXn5YbVPtlUvmtb7ovyC0t4Xu11ONd8SI
pd7X172Y9XgCAAAAQKaodql6f2k+XM9x6ktPvaz8pLUU5VWVfK5Vv0X9N+v4
skV5LDqfYz3jX3TOR0FNONWrDKsLWuTko94N5nkfvq+de/vNfkF/Tc1TqG6o
xZiqH/al59f1xnvPX1qbj7+FIV8u9o6JagWqB2m61xCVtzhy5DJvTNOnr/H+
Xe2/T/dejUkTVwX9VX3vqVq41sepOP3O+NY+b7quqXl8yI7x477ynrOltc+r
7rv0OxTvteaUY6oxPw2g1FINAtXyeOO1Pq5n99lJ3R91aD8t2N/nu47qfkO5
hKnG2rbNFO97UEsBAAAAQCFQnSz1fLCOA6lR3uGZJ/4vL0v/W/VrrePKpj69
53qf8du2nvyDP6v6kqp/u2LFVrdw4Ua3YMEGt2zZluDfac3O+rOUFJbjpp6M
hdgXUdRz0Dcuo0YuC9bQLijzYVrWD4/7VaWgTuj2HdG9Ly+/0N9fsWOHaWkf
hwFfLPC+n/L/rI9TSQ/d+2nMWFXfMtfWPZEZmjv2nbPqU2odXyZonTze683N
ZZu6lStTn/sGgNJI9+5/fbRj5LW0Yf3k+y0W57sP131LLj43AAAAAADgo35p
w4YucUOHLA7+t3U82fb6q7298wjp2ItsZcL4ld48S9F8vHWMFrZt33tYTawi
ZU6p+X2vSOUAKV8z2fVD9S97t/Lg4HXijS2sT89JR1YN6nmlcyzC8jKV92V9
rEpq9+nUrK6zIvf46noqB6807m2aO3d9XNcb1eZ7r/qQgqolAADx0rVR971h
98VFnnikY9pqQKjGRaz3UG196zEBAAAAAADx8+WdXXxuHfPYkqW1slg1a4v8
6czaBblmLK1bTvKOi9b9Sv75vn3muVuubxbXXL5qZKmmbe+ec5LaZ65817NP
rRW6VlC71vC0rZdUqejP7Vq1arv5sSpJOYfawx8r3mT7IyF/KPfbd74++3RX
8/gyYeKElZHXHeUgZqvfriXVNi7U3y0Ayduxc1/c+8Kuv7qx27U7ff061Ls3
1vuoX7r1uAAAAAAAgPio/ptvLuGtN/qZx5esp57oHDpPojw06xitlL2ykXdc
wuoiKjdVfXjerzE0WLPS3NAj97cL/rfW9pTPm45ese3b+XPuiqi+ZzrWEn31
EnN5n/x1VzSMGbP6gFrHhsyq++FI73eie9dZ5vFlwt69B4Pc5lif+ZzTarnP
Os9Ie+/UXLN69Q537x2tgz0EyiV68vFOQV9j67gA5D5dP6657OO41xA3bd6d
1vf33bPoPs56bAAAAAAAQHxUC9E3n9Cv7zzz+JIRVhtTXnu5l3mMVqZPX+Md
F+UcWscnWhO4+/ZWkfNdXbvMTPm9tA4R67Vfer6H+Tj4/Ptfn8eMWbVqS/t6
SiHTsVWOeKxjrzzgePqP5qvhw5e6E4+o+v3nVY3jenVGBWuM1rFlmnK0r7rk
8Fq2zMEDiPLl4EU/6AEfRvvC0rEXrKQbrmkS8/3efK2P+fgAAAAAAID4vPhc
95jP98p72LI1//Idpk1d7Y75RUXvPMnF59VJa72mfPPqS7H71Ih671nHV2TT
pl3eNZMib7+Zer7s+WfVzrv5raaNx3nHJB+/s4jPiBFLvcddtYSt48s0nds9
us0KaiaX5jXTklRr2nfc163baR4fgNwyb95616TROHfnbS3jWj887teVXcP6
YzK2D0l7PmK9r37TrMcKAAAAAADER30CYz3f52Pfkq+/3h7Uo/TNlShnR/l4
1nFa0Tz8cb+qFHNslOuTa+ura9bscFdcVN97PFXjMdX3uPzCejFfO5dzVlW/
0jcmS5ZsNo8PmaFcEd9x791rrnl8SD/ti1EdU//33V+HGkBh0HVAfa+ff6ab
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
SwcOHHIdO0xz77z1uWvSaJzbviM38qEBAAAAAAAA2OnXd553TWD27HVZjaVK
xdi1E4/+eQXzcUJylizZ7E46smro2tPH9Uabxwk/rSWotmHYMSxzck3Xvess
81gBAAAAAAAAAED6jB2zwrs2MGrksqzG8tLzPWLGodpq1uOExKlO3rWXNwxd
f3rh2e7mcSJag7qjYx4/9XBUHd89ew6YxwgAAAAAAAAAANJrzpx13jWegQMW
ZjWWh+9rFzOOslc2Mh8nJO7F57qHriHedVurYK3ROk7EZ9DAhe75f3Rzzz7d
NahBrGuHdUwAAAAAAAAAAOB/li7d7B65v507+ah33cXn1nGtW05K6fUmjF/p
XecZOmRxVj/bzWWbxozjvjvbmI87EuOrUVvk6ks/djvoowcAAAAAAAAAAJAW
6lNW5pSah63JVK00KOnXrFR+oHetR73tsvn5tC4aK45/PPWZ+dgjPqpvqZy1
sDXE00+o4b7+ert5rAAAAAAAAAAAAKVFm1aTvWszWmvbtn1vQq+3cOFGd8Jv
q8R8vVOPre4Offt/Wf18pxxTLWYsb73Rz3zsEW7lym2uYf0x7pzTaoWuIR7x
o3Ju2NAl5vECAAAAAAAAAACUJrVrDQ9doznrpPddn95zI19n5859rkmjce6U
o2Ov28kLz3bP6mf79rv/8/sfl4sZy3vVh5iPPWJbu3anu/+uNqHnZXE6h61j
BgAAAAAAAAAAKG1GjVwW11rNVZc0cDXfG+p6dp/txo1d4SZNXOUGDljoPq43
2j1wd1t37C8rRb7GtKmrs/rZtm7b441Fa57WY4/Dae237FWN4l5D/Ocrvcxj
BgAAAAAAAAAAKK20FhPvuk2ynnqic9Y/19Klm73xdOk8w3zccbjp09fEfU69
8mLPrNfJBQAAAAAAAAAAKCTKAcvkWmKZk2u6DRu+yfrnUs6kL6YvBy8yH3cc
bvSo5ZHn0+9/Ut41qDvaPFYAAAAAAAAAAIBC0bD+GHfUzyqkfQ1x4cKNJp/n
837zvXEp7816vHG4Xbv3u1OO8ffYvPLiBm7ihJXmcQIAAAAAAAAAABSaOXPW
ueuvbpyWNcS7bmvl1q7dafZZWraY6I1tzZod5mON2JQresJvq3x/rI7+eQX3
yP3t3Bf9FwS5s9bxAQAAAAAAAAAAFCr1nPuk+QR3xh/eS2r98PabW+RE3dDq
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
Xn6hR9JrfpUrDIz5msptZB4sd0XV9Dju15XZRw0AQBb06DbrB3t7brquqfv6
6+3mcQG54p+v9PLes2odIdPvrzVErTNEPVNp3/FXX+VXTxcgF2jeIp41Et+8
o/rXqW7px/VGuxEjlrrNW3YH8xv33dkm8u+/9UY/5i0KiOqdqQdP0fE/5Zhq
QW5MLvYRHDVyWbA3Jd7vgnIw5s5dbx43gNSF1RS8uWxT8/iSpf7Dvjojd9za
0jy+RCl3y3ecyH3Lro0bd3n3CkmDuqPNY8xl8+atd6ceWz38nvsn5VPuz+rb
R5DN/cFIXKOPx4aeG+oNYR0jAAClndYcjvlFxcN+h8888T3qAgD/vwFfLPDe
s2a6tqlylJ5/JnoN8aQjq7o5cxKv7QIgfP94smL9tpZUtdIg88+O7NM6c8/u
s4O8vZ0795nHU9LWbXuCvf7xnutH/rS8q171y6CGr3XsANIj7DdMz4nW8SWr
a5eZ3s/VssVE8/gS1aaVv0bjhPErzeMrJGG1gM8+tRY1M0OoF7SuK2H3Gtr3
rr1YqbyP7m90zxLr9Z/+a2fzcYDfXx/tGHp+1K413DxGAABKu9YtJ3l/i6lN
BfyX6rppnS7W90R5JZmaB9YaYtgzaRHt3WSuAEje5/3mp30dMQrPu8hFfXrP
dWf8IXwur7gbrmkS5MNYxw0gfbTXIeq7r7w+6ziTEbY3b/XqHebxJcpXM0V5
W7t3s26VLQMHLAz9vqj+k3WMuUr9OKJqH6hf4rRpqe9xD1t313+zHgv4Rd2b
MhcCAEDmtft0aujvseq+fNp2inmcgLU3X+vj/Z5oPT7d76c1xGefjl5D/Pe/
Pnfbd+w1Hx8gn6mfRtmrGmVtDVF7nlWv2PpzA0W2bN0T9NKK9xzW3hrl7nAe
A6WP6gtGXQNysZ9rPHw5T6rLbB1bMq67omGp+jz5SDlu6i3h+67kY73cbFEd
gz/f2Dz0WlPm5Jpu0aKNaXm/qy/9OOZ7HPGjcm7NmvzbR1AotMcj7Bw54bdV
6I0IAAVKeT+jRy13H9Ue4f7x1Gfu9ptbuMsvrOcuOuejoE+DqHb5Hbd+4sq/
84X7cvCinOwpky9Ux//EI2LnWRW/r1INGOtYAUth/UfKXtkore8Vbx6i+sRb
jwtQWmgd5ZUXe0bWVUoXzWWo/5z15851yqfQvaF1HKXZsKFLQudAS9L9+fr1
35jHDSAz1Oc36jpQ872hwZ/VXrZun80M9qauXJnbPboXLtzo/TyVyuffPbXW
YI76WYWYn0f3M9bxFQrtDfOdV0f/vEJw3lnHmKtefK576HVG9+RLlmxOy3uF
5YyqZ6L1WMBv0MDwfN9H7m9nHmO+WLVqu2vYYExwL1+x3AC3bNkW85iA4vbt
OxjUe+P5H2E0d9exwzT36IPtg1qaic7FlTmlpmvSaBx9WZKkdduTj3o3dIz1
jDJs2BLzWAFLN5dt6v2OpKs3oXI74llDfLfyYPPxAEorrV1p3kK/j9pHU6f2
SPfay73cnbe1DO450rmeqH4fK1ZsNf/MuWbdup3uwXvaBnURVJ/tycc7BXv+
reMqTfScVu7f/YP9YvGcq9rHx71g6acac7r26dlMOaeq9aZ1JdaOC4fWBaOu
B3fd1srNmLEmqDdY/Hmxc6fp5vH7hPXzGDok//IrZ83y73Fs9Un6a6XgcLpO
xrPejsO1aBbem1x9O+bP35CW99IeXeXo+t6rU8fcvW7BuXp1RoWeK82bjjeP
MdcVPVeVvOdXjx76EyAbtm3f66ZO+dr17D7b1f/uO/3WG/2CeZBbb2gW1LbW
moSe+4ufn+pnq5rG11/d2D3/j26uccOxbvHiTeafBXaGD1/qHrr3U2+v40Qp
b1H309afKx9pn9wFZT4MHd9Tjq7GXCcKWof2/mdF7edK9fW1hqjfx6hrXbUq
rCEClrRHbsrkr4P8i7ff7Bf8PqZy/6L96rqXTtee69JAzwslx+n+u9qYx5VL
9JsxZvRy90HNYUHPL61za7+LehbedF3ToJbaow+0D35X9BvVtPE4N+CLBW7p
0s1uzpz1oXNqJZ/hqlYa5PbsoddWaaRaYKpRqfrtqvviOw8096T6z9pXka+9
8RAf7c+Nui4c84uK7tLz6x7274/9ZSW3YUNurjk/82Ts2s26xn2za795fInS
2ofv+OgexTq+0k55PKqn6DsG11z2MbUWPXR++nJpRbkFkyauStv7Kf/K916n
n1Aj2FdlPSbwi9pjvWQJ6wphvntciPlcVeSBu9uax4jSRfeBvXvOCeqn3XtH
64Tq3sRDz7zp2meC/LBgwYagdkA6z6PizzTaF2b9GfOR5gSi6tPrv+t3yDpW
wMKu3fu9z4uqu6K9jsm+tuaDX3g2vLaLVK/6pfk4APgvzQ899lCHtN7HqG67
9llZfzZLYXWkVY/HOr5coF5Bl11QLyP30sVp3Wj27PTk2yO3qAee9kEo5yPR
80L3Qh9+MJw58lJK+9VSuW706T3X/DPEoj5rseLVvgvr2JKhHi+xPo9y+Nn3
kVl65gurU6P9Yfx2xqaclD+dGb5npV/feWl7P801a3+D7/0afTzWfEwQ7sZr
m3iPn3IhrOPLdWHPVaI1HusYkd/0PKD5Cz1XxNpjlgm6rpNLXhiUz5NM7dJE
6dnW+rPmI9Vyi1rjbd9uqnmcgJWwtb5kayJpDfGl53tEXtdYQwRyh+aQnnrC
3xOnyCsv9AzWYhK9j1G9hq++yu1eU5miHDvfuKgvtnV81lTPJdN9PH//k3Lu
iUc6ukmTVjEfXYrouvV5v/nBPt50nCfKt0lXXXfkjtdf7Z3SeaE6uNafoSTl
Yfvizdd+477vsWo0WceWbXqWUq9O1T8/eDD5fZ3xql1reOh34ON6o83HJFeF
9ZOUj2qPSNt7aQ+wvg++9zrvjA/owZUHwuq+/Ptfn5vHl+vGjV0R+p277abm
5jEiP03+7jlR94xRfdIySfnm1uOAzKkfUdc63fr2Sd8+pkKiui5hee+q/bBj
5z7zOAELmhvxfTdUOy7R11N+7ysv9oy8nhXaGqLmAErSPqfi/6w5A/KjYUHn
3YvPRecPf9J8wvd/vnvXWe7c0z9I6D7m+N9ULsgeR1o/9Y2JanNax2ctqnZE
uqnmn9aL3nitj+vSeUbBrm/ns6+/3h706Tr71FppPz+0P7R3r9zMP0Ny4tkj
EyYXrxFhfewGDlhoHl8yTjkm9tz63//WxTy2TFOvFc0dqt75OafVCnIwiz6/
8tn07x59sH1Qo3flyvSej9Omrg7ty3PPX1rzfOLx2Xf3EGHXDu1fStfY6XX+
9lin0PdLZ94jMmPzlt2hx3DY0Mz17d6//5AbNXJZkGeVz3vqlCviqz2ha1ku
7v1B7tKcnO6p4u2PkWn6/VedcetxQfppX1Gi54P6tquHu/YsKVfntZd7uX/9
s29QHzuevf3Kz9Y10/qz56M1a3aE1jmq/m5hrWkARbR25ZuHU5/qRPY06vnm
n6/0iryWvVu5MPohah+xrvVaO0n4/uHH5YIaQprPPPGIqsHcinoy61ip3onq
K2geXHVRlHOteYfHH+7gnn26a3AMVBvq/RpDg/3DbVtPDvo/K79Ue6yU+7Np
066U6taidFEvw6hzMtZ6l55Ba70/LOG6DNqjUEi9W3Rt9I2Rxt46PkvaW2/9
vCbaw689MOp9sZO9ZTlJ9yvqh/nwfe2C38hMng96/TatJpt/ZqSHetkkey7o
/ss6/lhefSn2nj2tOanOonV8iVLvId8xUA9T6/gyRWvUTz7eKeFrmmqQal+W
fkNTeX/tt7743Dre99H8ydq1O83HKRfpnA3LK9PzWjr3qlepOCj0nNB+Cesx
QTQ9i/uOoeZetNaXifdVrYXi+z81rzBxwkrz8UiW5jU0XkWfR+uHD97T1k0Y
n7+fCdmnfYO6Vls/h5ZU7t/9zccG6aX9+PEce93H33BNk+DeV9ftqL1IgwYu
jDyH2beevM6d/L3bdQ+Y6n04kK9U/8j33Yi3J4yub8rtiLouVq00yPzzZot6
fFvfg0T9Rqlmg+YPbr2hWbBn9s3vjqHqaKtmt/Yqqs87+1dKtxrVhkSeKw3r
h9fXUI+/Z57sEpxT8Z5/6ptYSLUArriofsxxUH6BdWyWtBYdlgdhQXs4tDdD
ezA2btxlPkaFTuu6ugYlmv+cDoWYP10ahfV9i6J5Sev4Y/H9pmg/vXVsyRg7
xl+nrrTmWGke/KQjq6Z0jdI6X4O6o5Nee9B+9rDXJzfbLyzPWfc1UyZ/nbb3
atEsfP6xzCk13Zate8zHBNG6hOSwak9BJt5T8zSX/OnwHm/KU8nnfZ2bNu92
PbrNCq5TyvO0jgf5Q7XhNReRzmcGrWtrr/8dt7YM5kXeeevzoHaKfqNVS0D1
LDXvon2ryi8rvg5ekubnrMcI6aO6D0f9rELo+aO6E1o7VA5coq+vPWGq3eF7
bV3/rccgX+n3M6x2lu7PrGMELIT1qo63ltBbr/eN/G3N134tyQjrW5OPtB9f
c1a63/rrox2D+x/lPOreqNHHY4M+s+pRNWniqqDeXCK5jtrDQS8PG9qbFHXs
E8kDmDdvfZCDe9yv48vB1dxuoezh8eXD3HJ9M/PYLOla4ZtH1V485Z5prVXr
en88zl9XIlNUW0Y9u7SetH79N+bjJVOnfB3kmGufh3UsmaQ13PeqDwnN94ii
tce33+wX9IZQLUDNl+l1tS6hnq1Rf197I5Sjaj0WSI1vzS0e6htnHX9JWlv3
5a+pr491fMlo22aK9xgsXLjRPL50GzlyWbBnJV2/VZddUM9Nm7Y6oRii9sYn
09+iUHzRf0Ha7p2jaJ0kLF9V9ynqw209JoiP6qD5jmW3z2Zm5D3D+gmSv4dC
o2eoE37rX8OLoho2qgOmZxT1eZk+fU1S+zi0n1p7B3zvo9pm1mOF1Gmu48qL
w2vmKv8k1Voieh/lhvjeY/y4r8zHIl9p7sU3rnrGtI4PsBJrj5roNzZqjUd7
baJ+byuWG2D+GbNJe1DTNTeQj7QPVzVYVXdVawAvv9DDVfjPF0ENTNUF1zmj
Pf7aP1v0DKz7qK3b2EubLerpEpU/mGzNb+2J+qDmsNB9dkUKZZ7qsYc6xPz8
qmtvHZs15UCXHBf1tS7aj6CaaqrjHHUu6Xw+IoP1LjWPp/wDq+uUfot13Sz+
eUvjb6tquKhm4zG/qJjUcdI+Bv191euKqgUzetTyyDxH1SROdH4euUVzPsl+
778cvMg8/pJ03vriVT0J6/iSoXolMa+7390fZqrOnxXl4Weit6vWJbUeG08M
WncK2xv/pzNrF1TNiERoHT/s+KnfhOpwp+O9NEcdVbOhedPx5mOC+JW9MnY/
K31/M7VuoH2/vvNHa4zWYwJki/oQJ1I/ScqcXDOou6Z9heneU6p9jb73TWdO
O+zovjzs/FLfw4MH09NvSv3Rfe/z7399bj4W+Ux5xr6xVS6FdXyAhbDahtpz
6ft7WhuK+u0txPremu8N68mK2LQXx/rYFYLBgxZFzktorTfV91Fdhkfubxd5
3Ash3+fu21vF/Oyab7KOLRdoHkz1+DTfr3yaon2dCxZsCOp8RJ1DmvOcMWNN
MD+r5y71ttP9svIYVRtGc9Hpuk4pj81ijHx7dsJ+o/OFfjO1D/+2m/x1Q6Lo
3FHNoET3BKsWVtT7ag5BvbCsxwnJSSWXORdrG6s+li/e+fM3mMeXDF89Jq3z
W8eWblE1KlOl376wuiDKZQ97RtH9YT73Tcu0dysP9o7dsb+s9N34bk7L+7Ru
OSmyb6by7a3HA/HTd893LFWjJVPvq3th3/tSDxSFQjW04v0d1W+krq96poza
k5iKsLpwpbWmeyHRuXPxef4e1NpnnkgdtygHDhzyPvNcePZH5uORz7Svy3cc
635Yevu4A2FmzfL/hqlOYay/E9XvvehZ1vqzWRnwxYLgeTKTcwWlkeqiWh+7
0mzypFWRdUf1nU/nPbP6AoTNhZx54nsp13LIdb79x1pntY4tV6mXgGoqR10z
VHc0ah5E61SqO6Ncjdde7uUuv7BewvtRi1OOZLbHorTVMVTvXT0jP/9MN3fi
Ecn1CNN8t57BlDOWSv6H1p99a/3Fz7N0PuvlGu2lVG6w6jSVtvzLeGttl6T9
Cdaxx/Lic91jxqvc2Xw9R2+6LnYPy9K410Z1CHznnM5V1fFQPQjtr2nZYqJ7
v8ZQd89fWkf21ilOueux+ptrP8QFZT4M/bvaj2E9RrlK9bHDcuXTMZekvIT/
vN0/8hirrl6+ft8Llery+I7nP576LCPvqfPJdy+tWnvWYwJkg+pDx/PbqTUf
PStmq2/o6tU7vLGob5D1uCE1I0Ys9R7fi875KKjhle731LyA7z3Ttc+pEOlY
+eb21e/UOj7Aiu+5UvtxSj6nhOUvFlHPROvPZE33BuqrVe+7Z/Iweu5ULw3V
/FQvHtUf0Rhrz2ul8gODnM633ujn/vlKr2CNR88a6lOo3mGa+1Qt7GsvbxjU
p1XP9FRqvlsrjX1wcsWiRRsj82QzNS/Ru9fc0JwwzZlYj08m+WonvvBsd/PY
cpHqLMVTF/df/+ybdC0Q5a31/3x+kOfnq+2dC/fhWtP3rUNLPuX8a/1VuaL6
7Upln41yD7Xmlc71XM25R+UlJlvrOVfpWt+n99yg93Hxz6k19tJUKy8qp8cn
U/O6qfLVeVZPWevYklVU5760/0Zqz4LvfLz60o9Dr2nab6V5RfUMiOf8vf3m
Fj/oQa06pXpWiLoHzGTuRb575snYebNFxy/V2mSq4/HnG6Pz8vVbRW/5/KP6
GL5jquf+TLzn5/3me98zHbVngFy3dOlmd/xvwveTaX5E64fZ3puh32VfTI0b
jjUfO6RG97C+46seQ5l4z7BrvuphWI9JPtM+v1jjqj2A7OtCoVKfJd81p3j/
dq1zRT3fqIY4z6G2lJuhPgvK71Odq0kTV7khXy4OcrL1G6I9karXoFpSyrNQ
fk48uT+ZpL3/XIMzY926nZE9ojSXnMl5Ca2T+95b++xL8xqyb/+69glYx5Zr
tHcvKn9IeWjao5HO99XaoPpmaF9GWK6i9g+mq/dRPMJq3mg+WvVcrY9ZFM2N
q251Kjmgcsv1zYK130yN/6bNu0NzdTTeo0YuMx/PVGltoWnjcaG/Cbpm5WJN
z0Spt57vM152Qb3Q861Zk9xbS1XNIvXRihWv9ppZx5cMPS/4aq1rP511fOmk
+Uzf+ZZI7oF+J+Pp+6l6hlrb0nc+an3qiovqB73/rMcoV6meh2/s9Num56xU
Xn/Y0CXutONrRB5T7RfIVB892Jw/iX7/E1Fyn1BxzCmjEETVG9F3JN19D+Ol
+x/VkuD7Wfpo35hvT7TyPtLVE7Ek3cf56leUtr152aYaa77riPI1rOMDLIwf
95X3e6E+iPozYd+dIqoZZ7GGqFwC9mamTr956t+gOYqOHaYF68bK+XnikY5B
fSnVQFG/MtWhS3aPfyzaB0Y/lsxQHn7UHnT99x0Znj/S3L+vdpncd2cb87HK
BK1N+D6zejVYx5dLNI8Wlaeme/KhQxZnNA6te2kNQfkcxa9zp59QI6gxms0x
GTtmhXcslKdufcyiROVTRtH8rHpSjh61PCvxqidnWE6/8qYS7cGYK5TPpHWZ
k496N66x194j65hTtTNkr/cHNYeF7lnI9nc9HnPmrPPGqxqY1vElQ+el7zOp
F6R1fNk6fol+37SW9OgDsfdGF6f15TtubRn6Z/TbtmLFVvPxyWVhc9HP/6Nb
0q+rvQ56zo5nn43WgllDzE9vvtYn9NgOGrgw7e+p3m5h76l9WdbjAmSSnivD
vgN/e6xTsD/LMsan/9r5sLi0t0r7jqzHD8kLywusXCGz+8h993yF3HMsHcLq
1KqnmXV8gAXN8fv2QaoOh+ZUo55v0t1XLR7aP6Q5Rs31qm6i7gfydY4v3+hY
a45OOY/KidH185PmE1zVSoOCZ2r1c1H9re/XHf//upZaB7j0/Lrf94Dp2X02
z8UZovxOfT/Cvrfqu6yeOdmIR7lVYevPqulkPWbppu+G7/Pq3LeOL1dobTBq
DVG9NNXPN5txKZe3V4/Zrm+feSa5GtojE6sesdazMr32nw7qtRd17xCLahCp
toFFnnK3z2aGxqZ9Ndbjmiidv/HkuhQ3e/Y687hTpd6pvs+ndTdfjVDR9946
/pK6dvGfm9oPaB1fMpYv3+L9TJ07TTePL53C8hE7tJ+W8Ovp2U333MlcY4to
LX3qlK/NxyaXhe3nUS5Jsveu6kureqjxHCf1Ao7V8xK5T/uco/bvqJ5/ut83
6vmvtPVCBkoK61egelzWa4ii2h/XX934+7j0LKy9/NZxITXaw+U79zI9lxFr
DVM5iqXhuc5SWD9T1UW2jg+wonXAZJ9Dn/t716zWehOtY8XqE3LvHa3NxxKx
ZfscKXSqXRv2vdUe9GXLtmQ1pldf6umNpzTWBOjXd57386Zr7k7rSfmcjz1s
WHQeonpMFureTK2xFq+NonXFVGuoZYvyCBO5l1BtPe1bst5bEtanPt+eF9Rz
OdF7OtVDtI47HbQPwPcZ1XvGV09T7rqtlXn8JVWp6F8zsv7OJGv6dP9em4ED
0p+jY2nfvoPevVSp5Je3bT05qRohOv8HD1pkPi65Ts+VvjFMpvaunoUa1h/j
rXlfktaKeX7KX1F7kyTdNep1jxj1nqXxmQsoor4+vnNfvXyytYc6HprTVF0u
3fNs2pT/PQXggj4osc49/ftsvH+7T6e6Mif/t/f4xefVcV8O5l4vVbqHD3um
tI4PsKL96ok+g4p67Fn0tdOeCl9MynuyHk/AknItwr63qt2n+btsx6X741j7
cs8/q3bOzZPofkF1SVet2h7U+1VNMtW6mzB+ZdA3duTIZUGNg+HD/0f/rH9f
pNy/+3uPQb06o1zzpuODew/NKal2dN0PR7oPPxgezP1Xr/plUPtCdSi0r015
vsqF0vy28miUk1ZUA1/5vk8+3slt3ZZf+dgaR19viOL33DoG1rFaUl5Vj26z
XO+ec/JqvUB9uaJ676rmgeZJc6nXo2p8q2+wL2blSy5evMk8zihtWk1O6H5O
uUm63ui4WceeDrpu+D7rs093zbt5VvUZjRWneuVZx5Ys/U76xj9fcyzDXPKn
ujE/q/LSUnld5TMm8l3XuqPWN6zHI9eFrXOr1kqi91zKQQyr8V/y9fVsbj0G
SI3u2aOOdTrzU9R3q+xV0fXk9VxjPTZApmiPh+/cp68IMimsp022e5Lk8z7z
XKN5St9x1RyedXyAlbC+rD6a085Un9goYT0dtQfDejzzGf0m85vWs8LyLPTf
Mt1jLoz2RBXvQfbH46q7yZNyI79K9whawzvjD+8ldC3MFfmUR6SaSr4e5EU0
56qcIutYkTzluxQ/zpq/vvWGZsE6uvoRWsfno30DYfki6iurvQbWcYaNe1E9
8SgXlPkwmFfJt30IUcJqZv7pzNqR46L+0NafoTjtHYkV5yP3tzOPLVlf9F/g
Hf/SWIPplRf9NRm++mpbSq9drYp/3rQ49eLjOSk+2ivrG8f3qg+J+3W0h057
NMLuzYvTXrElSwqzBkNpopov8fS+TOf+57D1k+JK4z4NoIhysGKd95p/+GZX
6dgrh9ykfte+624u9kxAfLTH1ndcS1s/dyBRqhUe73z1w/e1C/rDW8WqfIGT
jqwaMzato1iPZZgVK7YG9RZWrtwWzNtZ5HMWp/dXP3Y9E5e9slHwzEO/yfyk
/aVRfThUA8s6Tu3VCvKres3NqT5v6tkZ7zUwV6lnqfU4Rp+nmyP7tV12Qb2g
B651rEhd8e+7eoFYxxOvpo3HhZ6j77yVmz3r585dH7lGL+odo3yXXMsFT5ew
fnTxUK50rpyvYfublbtuHV+ydF3wfa7SuI7Svav/8+r+I5XXbvXJpMhzWvf3
uXAPmA/U99C37qecdNUJiHqNbdv3ulrvD4vrelx0fP7zdv+c3qOC+FUqPzCu
456udUTdY8Wzbinqt2s9PkAmaH7Nd96/8Gx38/hQutWpPdJ7/ml/o3V8SI7m
13zHlb15KHTKyY3n3lO9InLhGUdr/yVj+/ONzYM649axxaI5La3TxRpT7Y9S
bSr1Wn7wnrbuxee6B88fOiaqV6Sa6eqnpnsjraHGen31i9ZzbVEdRtH/Vg14
5fRo/VLPKsoHU70z1ZJTnSzfemzRsbYeN8RH63GXnh+7ZlYR1cm0jjNXaS5d
daRSmXfOBQsX5lYtvpI0H37h2bH7BhTRGmIu9a5AYdK9hHJ8w85V9UC1jrM4
fb90LxEW8+03twjWGq1jzTTVnk31eporv5mldX9zp47TvZ8rH/bEJErrSr48
51OOrpZU3erVq3cEezvjPadVH9t6HPJBWG9Z1awP+7vag6m9mWHPVyWdddL7
prVCkF56Vo+q614kHXXdlb+t9e14zzflL1uPEZAJYfcV1IpGpqnPTKxzT/v8
rWND8pRz47uu9P98vnl8gKV4+mvccesnQd1L61iLdO40PVg7vOqSBsG6284c
ym0qTvORV1xUP+U5rSKqQXvqsdWD+ot6Tgmrv5YqrV1ajx+iPfpg+9Dj+NhD
HUpt3kk6aG9EvPt4c5Vq9VnnN4dRDrtyoMI+g2rRkIeIXKFz8fQT/LmzmifO
lbwp7SWK6sX0zJM2Pa0taE9FqtdU9Yxcu9a+trL65vpizOf9zdrD6/tcpbWm
tWp9+D7zyy/0iPt1tE6hfe+JrB2I5rIKvedwFF1LfXWEVa/FV4NW+zMq/OeL
H9Tuj4fmHePJb0T+CLu2laR9wqm8l+5TovYPlaS9B9ZjBGSCetDFvHb/uFyw
l8c6PpRuvpq6qvtnHRuSpxx+3+9pOmuTA/lG97BRdVduub4ZNcWTpB7qqc5n
WVENVuvxQzj1tgo7huq1Es93V+vd6o2pPfHq56J97spjVV6HzgP1M9P/1r/T
3KrmPfS6pWVe+uayTc2/b8nSvoJJE3Ojz6SP5kjDPoPmQXTOpft91cdXz456
bZ2/2vs9YfxKN2b0cjdq5LLg/6tHp67Tixb9f+3dZ7hV1bX/8Tc3/5sn3ifN
GyVYIhErUWNJMPYSDXZjLMTeS2yxBgWUJojSEZEuvUpHpCkdKYdugUNTRERA
iqCSctef3/JBD+esOXdbe49dvi8+T7yXfdaea+5V55xjjM/DOBjlnNZYonWf
wZ5iwXxrDGqf3CYv8jMrj4Hv/Dr/rE7OfAbFSPerOK6tqmlnvS9/vjw6Llbr
yKzblok+vd1j7fkwf5sNM2es9R5vymvpu/foGa1L5znBcUdEz3MlQ+t5iuW5
LRt8dTu1Jq/y55UrVnkU0vkttA709psHhHlplUvVet8RD61vTvYYyCSvgdZP
6x0v1eNO66Os+wjIBsU8uJ7VrduWjxQfoucK63YUA71jab7a9Wxn3T6kz1d7
OF/jmIBs0/rJZHJvqF64dVsLVVnZJ7GMZ+Xab456kbGGPLdw4Ybg4B896/wN
Nf7dssXbwSsdZgZNG08K1+ndffvgMH+u1gacdmLrMK5VcReZHCtqg64jmgvS
+7PGqbTe9babBgQ33dBv73N9t+Ds2h2Ck45tGZx7Rscwt65131W2bNnGhHX7
ckHPoBpb0tqOI6s3CY7/dYvglFovB2f+rn2Yk1CxpxrbVm7iDu1mhHnK0smH
lksaZ/Pts/ZTuZhdf693HI2x6X6leb8xo98PY+i1/6or9cSjo8JYK423Kz+0
cqfqt8w0Vlt/r3zUE95aYd6HsJOozpGudZb3StVq9LVP15Bije9y0dqXuK7H
eoaz2g+NS/zyfxpEtk33cet+zsTAAYuc/V7MuTD0POQ75jQvoHwrmkvVmhat
b1E+tscfGRXeK+M4rlW3z7of8tWN1/d19pvWlVT8rK8WUsrXmv/3TPi8zPrN
wjZlSnlKv7ve0dL5Hq2N0/Oub9u+90NiKFCMjjm8WeTxfsctA83blk/0fKH6
RhonUi1gjdfoecO6XYVMY3Ku6y019Aqban1F/a4a97RuG2BB47aaQ0jmOXfo
4CXm7S1UiodRzsG43jVzQfFNitmx7ju4ac16nPlyc631S1PN+7AyPUPrWU+1
Sbt1eTfo17cseGPo0nDeSuNHU6euDuMJdG4o/k8Uyyb673fnfPSdU38TndtC
ayUV76kYuV2794RzZMr5qetEvtZ3zYTWoCSap9bYmdZ6PfbwyPBdRvkZNe9c
q2aLjOe446C5hFkz15r3JWzo3NS6C98x8tTjY0za5lsjKTp/FGtr3Ye5Ftc8
oiiW0yovuK82Yoe2M8z7ORMjRyx37pviSa3bly0av9ecUTbvWTdc0zu4+Hz3
NUvfP3vWOvO+yDfKs6HaEVF9pve4itcB3RcS5fJJh8Z0dV0nRqQwueLHXZQH
N9X4a61t8+VcF60FHuRZq/HM0+NM+0lrZDjGUZnye+i559VXZgX1670Z/H3v
e6HWyr3QdHIwYvhyb+0LxQW5jnf9vfW+5QuNNWhNd+U+KvS1adY0ZuQ6/jLN
X51rxKl+T+uEXc96Gr+ybh+Qa6qPoTHaZJ9zU6nbgaq0RiWV/ragWk8aw9d9
MN/jmxAEnTrOMj9mMj3eirlm4+EHPh+53488ONy8bbn08N+Gmx9rcbi5Ls+K
pUxr/xON2+V6XkcxRYmO21JdA5bqPKLqmmn83vXvr70622Q/NIbmapPis637
ORNvv73KuW/5nqc7U4ny0adL9RKV91TfoZhOPWe5Pqt5BupF7U/5RV391bzZ
/uPQn3++K6vPHMoXojqv1n2C5KVbx0QxsMlsX2sPffeEitcBtUW1313vItV/
3MAkT4Hmga67+vVwfZ7WM6hm7NYviIMqZVpLq9w611zR07mOYx/Fz2kOTPOM
lWu26JnI9Xeqb2a9n/lCNT1c/UR+7fTpPSKqT3Wt07Xbun3J0D1B88nh9Xkv
rUd7c9wH5u2ypPcR1/nSttU08/YBuaRnOFesjIvyYlm3u9DpOUkxLVqDrbm6
zp1mh/lMtCbw3ruGhPkFlENP842uPFZx0b1Ba2uVj+3llu+E8VVaW2vdR0he
OjUx8k2x5tDQmnaeOb5d86i11tbHWRyUqzeufmGdX2FSLLJvjEPjGz26zc1J
W5o1mZTwmH2xeenmLkx1HnHVqi3e/LBai6r1d7ncB62zceXoKoZnctWqdfV3
JjXDCsVjScwHpEI5z9et2z8frPIp+P5Gawet+yGfuHLO6tqu2uCVP6+cVtl8
7tD5n+vrDtKn3Imu31I1JXy1lhOtVVHdTuXsT3TM6BllyuTy7/7OV5v8gXtz
v0b8grM7VWmHYjitfzvknt6F2ux9J060Rs/liIMahevptB1tb+KEFc7PEn//
Pd/63pUr3TVG4OfKfanrtnXbkhWVK1v3rbFj3jdvmxXVhXKdL8o/Zt0+IFe0
5iuV+t8VqUaHdftLidZZ6b1VsfDj3/wweL3X/PB567n6bwVPPjY6rHVX76mx
QZPnJ4Y5IrUGuX+/hcHwYUtD+u9ePecHfXovCHObaD2J5gu1TeXEtN4/ZEbj
iNkcv8g21fyz7sNs8a2J1LiedftyRbkgEq0tLRTKM5Zpf+yrR7FvHTb1KAqP
7qm+40TvW6pHm63v1zmle3+i41U1Q637ylIq84iKy9LfKA+DL9e/xghyuQ96
XnO1Rc+A1n2cKa1pdO2f1tlZty8XVOc403uT1pSpJpvrO3zzCKIc7tb9kA82
b9ntzDf7pwui1xG9Nf5Dbw26OOi7izHnfbHRGIme7aJ+Q8X+6fi69cb+zt9Z
8fCq+a31SqJjS3XAGz47PjIHoWsbWqtcsV2JYiSnT1uTsz5aunSjsx2V10Cg
uClH6XE1msdyjdQ8jepY9+w+j+MrAcU01Di4cWQf6fm3mPNEZZvr/SHZeHNr
yrnvOn+0/sO6fVZ+d1LryD7ROga9k1u3D8gFzUtFrQOr6DBH/gtRDgHrfQDw
rXvvHJLVsYtsqnZAfe+4V6Gb6skZkst39nxQ9y99zI+3TJ1zeoeMcz1Tj6J4
qGZLomNG9RLjXq+jccpEdRpF8walPu6cyjzig/e/8d3fDRm02PtZrefK1T64
ciSJ7jHWfZwpjVe55mD+8eRY8/blimqdpVNDXfcTjcUmOteVT+vUE9w5aPQ8
VrbgE/N+sKY1l64+8sWK6VqjdUb33T00PGdVX7tXj3nhmjHFxygPjca49Tn9
r+aHtO5Tx7jiH5PJP6P1K9b9Az/lFXL9flr7o8+oXrhyjmbjOVVjmq73KsUq
u/5OazpzlXNP54KrHYq3tP4NkX3KB606EXEf/7qOusY4Nb9Ozq1v6Txz9aFy
cli3r1BpnbCrXwulNqfWr7j24bgjmpu3z4Ke2Vx9ctdtg8zbB+SCcqi58rXs
oxz6s2evc77XK2+59X4A+JZymKt+SrLP2Fpn/etfNgnfGc8/q1MYW3H7zQPC
3FqKcVUOvPZtpodxAMrNp3Wwqieg2NZRI98L17jqvxXb2vv1BeEadtX4UV5c
xcRq3Fw5cvR+cOUl3cPv+MOp7YKza3fYe+3pGvz1ur7hOIvy8ZWXbzHvv2xS
nQfX7/Dee4Vd0ypVyhfoWvsYB70fHlm9SZir+8JzXg3rrtxzx+AwHqvxcxOC
Vi2nhse0jlmN6ym2W2PwGs9QvI/+V2MverfS8a3jXmOGivHWs7/mFbR+M9N+
UI1c1z5Qj6KwaNxe185Ex6augXHUt9qx85twnFrj/Ym+U+81rCdObR6xcg1J
Pev6npNVdy4Xx5jiJKPaUKNa46IZE3PNb5Xa+4bqmCmWQtcMX+7D3x73Uvis
NX/e+pS2rxyyvtwAym+h+FDrfrCk/ABRfaPfQ/Vxs/W96vdHHxrh/d31bGPd
P3DT/KArllXPqBVjoXzz1enSWrfycnc+Qj2H+M5/5VzNRT/pvdXVBj1zW/+O
yC7lFj32Vy/Efvwnongi633PF677nMybW9x1qbPJNz87ZnRh5ARVfmCNE0bt
g8bwrNtnwZcDWGOj1u0Dsk3jDTdc09t7j63+k4bheKo+f3md6PlGjWFVrmkM
wI7WB2jOT/c5zZ0o19lLL74drl3WM41qA+v9dtv2r0s+PiWXFLPiutZmczwq
X+kY1DiZ3uU0puK6v6hGhj6jut6KY9S8tGK/NL6g9f2KvdAcoPI0aSx/585v
zPctWZq/dB0T2h/r9iE1Gve/6tLoWhgVaV2W5gB3pHGsKp6x62tzgpqHJFc7
RjnTimV+KVPJziNq7H7Tpv3nT1SPTPUQXX+jPIPZzmUzY/oa5/db1LTKFo1N
RO2j6sJZt82K8h+qvpnWvnTvOjcYNmRJOP66efOujLardV++c0FzVaVat1dr
LxTPFdUvivvMRRu0rqlWzeh6BcqXqePCup8QTddk13ml/ACVP68Y+GTnQHw0
d6l1nMnkPtC6Ot+2tAYpF8/UrnWFeoe1/h2RPQP6L0w5B7SuyVprpOcB3zqL
RJS/yXr/84HqaLjWI2qNknX7Cpmvht769YVT43jSxJVV3n/0DlqKdTP1zK2c
5FG/qeZb41hjDuQzvRvp2dB3f9V9ffKkld/9TYe2M5yfrZx3HwCwP9VHc11D
C2nuK1s0Vql1b6L/LoX88lqP6DomSi1GtVh89dU/gz9f7o5dq/zO0bzZ5DD3
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
gLhofbrrnpeN+ktAqVu1akvWxrM2btzprY1VkXKhanw0aj5RtalOPt4/J6m6
mKWSF1u5TVz9oLyQ1u0rdnpPdK3xv+i8zilvTzm7o7al2D3rfd1H8QKu+Cjl
xEsm10/c1B7FSyj+2bp/sD+tm66cS6CiTGvkFjtXbUTheC98vnge1bGL+/t8
a19k2bKN5n1iSbn7fc+Wymls3cZU+eqI76OY2FTzuWi7ygfj2qZy+lX+G18e
B9VAtu4rJGf2rHXe2iPnnfkKaxlR1FQLptoB9asc+6pbva++Q6aUP0B5tDON
623WZJLz3YkaQACAYqH3NFfeHdUQIe8JED/FebreCQ/64bNhHGAm21f8luo5
JTs3cPyvWwQP3DssfP59rv5bwU039POOR+9rZyo1HAud5ltdfaFrKO8H2ae8
NXfcsn8eT+XoTOc4VM60qN+yVs0W5vu5j+byXcec5q5dOU+zQfmLFT+h/AXW
/YKq9Cx34TnueQuNKVu3Md/VOLhxZN8pP7B125CZFSs+d67JUH7muOeJFUuX
6Jpa6rEJqpHg6hvly7BuX6pUt9WVP0D0TJ1JHnxd413P9cq/V3He9a3xHzrb
obH3QpyjLUWqYX3UoU2dv6XiWpXfxrqdQLYp/8kJR39/fdU7XD7WVHHd13Qe
W7cNAIC4jH/T/a6htbvW7QOKVZ0Lo9cK1702nvNO61M17p+teYUe3QpvnCej
/vz3f7zxmWNGv2/exlIxdsz7Yc6Zl158O8zlm842GjWc4PwtVWPOeh/FN3c9
f95677/HQTGbD/9teDgmmU7tkWxSvm1ydH5P12Pn+PUP6qVc46XUaLzW1X8v
Np9i3j5kxpcXrcnzE2P9Lq0pOru2O3ZMjj6smXmfpELzTrrGaK2C5qEUG3fJ
H7uEee8VC3ff3UODxx4eGfaz1qJpTZruz8q3qDxvys+pulGDBy4O872OHL48
OPhHVeNL5LADn4+cY9UzmObq9G8aP86363/bVtO81+BhQzLPjezLbzllSnn4
Gd0bVefe9Tn9HtZ9hcSUgyNRbplSew9DadO9VfPmqcZz55Ly40Sdq8ppZN02
AADiorgj1/Np3LVCAHxv5crNYY2xiuec4h6UlzTO79HYxWE/fy7W+YU2raaZ
95+Fvn3KnH2iWu3W7UPyfHNwM2esNW+fqGaHq4375jo1dql4mkzPacXqKJZC
zwQd288MYyHzMWZBdXuvu/r1cFxW8R233TQg+HJXaedNUB0txYu6flutJ7Fu
Y77z5SOcOIH8/oVM80+uPNbKu5JODSSfPr0XJLzeXl6nm3m/pKJ5s8mxPkMm
K7zO/yA6jlTXf81hKr+Hdf9ofrPmIe64Mc2rxvE97875yPkdqjWpzzz1+Bjn
Z/TOUer3y0KgdaCunBn7KDeHdTsBfE/PGof+LHq85d47h5i3DwCAOOg51TW/
oNxu//xnadQ9A6wo5/8ptV4O84p2fW1O1mpcrF691VlbLhUacyvlWoC6Juq3
co13UaOkcOjccx3n+ZJT7ZEHh0e274iDGu33OcUKqtbWuLEfBJ07zQ4aPDM+
zFN8/Z97h3HPqtOlvJZXXdojuPPWgcHTT4wJ5yhf7zU/jDVUXyiGwXp/E3Hl
7tS8onXbLKm2m+tY1th2vsTX5jPFTbn6MN2YZ+QH1YJz/bYP3v9GrN+lODnl
mEz0LKVrsHW/JEv3l+o/yXytSrYo16d1H+m52NW+2ie3ie3ZUNvxzVdqDZCv
rzq0nWHeV0hMeSB8v6Nq2yte0bqdAL5XVuau+cu1FwBQLJQXzXW/a9nibfP2
AaVA4/e5mn9SjPFJx7ZMa6xGeZIUo2TdX9ZceaVUpy8f47cQTXPCv/jv6Bqg
zzw9zrx9onnAqPYp15V12ywoN6fr+rRu3Tbz9llQjl/fdXtA/9Jd95EKza9H
9V/lOXsUHuXZdJ0f8+Z+HOt3+XK8VKTcBtb9kizVjrSYH0zFxx/bzvVrjY6r
bZMnrYz1u9q3ca958FE+2nzLT46qfDn3RXV8y8u3mLcTwP585+7sWevM2wcA
QBw0V+i635Ut+MS8fQDit2fPv8OaGhpTSGbsodoB9cOaNztY+xpSTqiomESN
VVq3DalRLHDUMa/5O+u2iWpQRbVP+a6s22ZB+WZd1ynV3bJuX65t2/51cNwR
zZ19ohh06zYWAsV1HFk9Ooas0PNVU0c02Psbdov8bXXuxPk9qgGY7JxOIdUr
VU2qY3/1gvlcoc97731m1j86xw764bOR7frDqfGv+dH3uXK9uujzs2auNT+W
4OfLZS9a+zZ16mrzdgKoSnHCUeetcp1q7MW6fQAAxMFVv1t1dpTj27p9ALJH
sXMal3/2H+PCvIdHH9YszHOsta4nHtMyzBXYqeOs2GsHFQPVtrz0oi5hTTn1
WcNnx5PTtADpGI+6B55w9IvmbROdk1HtizsXX6FQfk6dc1F98veHR5q3L9f+
dt8w53ijclATs5CcRx8a4exHrS+3bl86VGf52qt6heeL6sgp922p5rc9rkb0
XLtq68X1HVMmlzvj26PuL5qbs+6XVIwe9V7S+5drqutr+c46Y/oaZ9tefWVW
7N+nmELXfdCFdW75r1XLqQl/R9VetW4ngKp87yf33DHYvH0AAMTBlwsrzndr
AChWWl9ILtPCpflf133QuvaM8q663kmbNp5k3ndWFN8R1Sfn/qGjedtyaeKE
Fd7xxtYvTTVvYyFQ7g3fmLzq3Vi3MVW6J5135itV9uWaK3qat83CIT+Nru3X
pNHEWLa/cOGGMN4gmfkcxb0WUixiRarBq3vm3bcPDupe2ye48pLuYb1aXZOV
914xizWqNQ772xWfFzfVonx3zkem/eKLQ121Kv61HIorTKWP9BvpecL6+IlC
vPS3Gj/nz2Va6s99QL5T/mrXuTt08BLz9gEAkKmtX3wVHHN4dJyDvDF0qXkb
AQDIphHDlzvvg2+O+8C0bar352pbz+7zzPvOiuIOo/pE8XfWbcsVrXv25TM9
u3YH4qOToPm2C87u5OzHQs1p6qsjun69bR05C645vibPZz6P+P77m5w5cfdR
DQm9V414Y1mwfcfX5v2RKzq/FDunNTlbtu4O521dfVTz0KZB965zg9denR3W
oG7TalrYb82bTQ5avDAl/G+tjejQdkbQudPs8LP50p+a34nap4N/9GxW1pk9
8eiopOcQax7S1Lx2ZJRPP90Z5mffFy99+80DSjJeWnG0jzw4POHv+NADpZmD
AigUzzw9znn+rlmz1bx9AABkSvH1rnudchp+9dU/zdsIAEA2bdiww3kvjGOM
ORO+WoAT3lph3ndWNM7s6pfNm0sjB/Ndtw1y9oFyDxZqvFOuKW+3rx8ta65l
YtrU1c79mj5tjXn7ck15RKP6QjF1mWx3yZJPg6MObeod/7/x+r7kLNhL+fFV
M8PVT4MGLDJvY7pcsWSav477u1Sf+/AD3f1YeR4zH2siKqev8gdUbq/yMFu3
LZc0x35z3X4Jf8c7bhlYcHmQgVKiPPIaP406f+OuwwwAgIVxYz/wPq9qnad1
GwEAyAVXbP4VdbqbtmtA/4XO+7RiYKz7zYpvHnHTpi/N25dtimvyPcOR+yw5
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
     
     "], {{0, 348.}, {905., 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->144],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{338.36499999999955`, Automatic},
   ImageSizeRaw->{905., 348.},
   PlotRange->{{0, 905.}, {0, 348.}}]], "Input",ExpressionUUID->
  "3106ec71-4a4e-4ae4-a54a-307311cae8bc"]
}], "Text",
 CellChangeTimes->{{3.819518185711096*^9, 3.819518188292141*^9}, {
   3.819519155177791*^9, 3.8195191987260857`*^9}, {3.819519251655056*^9, 
   3.819519273942664*^9}, 3.81951937499249*^9, {3.81952036496917*^9, 
   3.81952036828405*^9}},ExpressionUUID->"993247af-3574-40b3-a1ce-\
877030478362"],

Cell["\<\
Standardised distribution functions (mean 0, standard deviation 1)\
\>", "Text",
 CellChangeTimes->{{3.819801273576887*^9, 
  3.819801307346233*^9}},ExpressionUUID->"ae7223c3-d9a3-44c3-8a57-\
f09a8f434b88"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"NIGInv", "[", 
   RowBox[{"p_", ",", "\[Alpha]_", ",", "\[Beta]_"}], "]"}], ":=", 
  RowBox[{"N", "[", 
   RowBox[{"InverseCDF", "[", 
    RowBox[{
     RowBox[{"HyperbolicDistribution", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "1"}], "/", "2"}], ",", " ", "\[Alpha]", ",", " ", 
       "\[Beta]", ",", " ", 
       RowBox[{"\[Delta]s", "[", 
        RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], ",", " ", 
       RowBox[{"\[Mu]s", "[", 
        RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}]}], "]"}], ",", " ", "p"}],
     "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NIGCDF", "[", 
   RowBox[{"x_", ",", "\[Alpha]_", ",", "\[Beta]_"}], "]"}], ":=", 
  RowBox[{"CDF", "[", 
   RowBox[{
    RowBox[{"HyperbolicDistribution", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "1"}], "/", "2"}], ",", " ", "\[Alpha]", ",", " ", 
      "\[Beta]", ",", " ", 
      RowBox[{"\[Delta]s", "[", 
       RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], ",", " ", 
      RowBox[{"\[Mu]s", "[", 
       RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}]}], "]"}], ",", "x"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NIGPDF", "[", 
   RowBox[{"x_", ",", "\[Alpha]_", ",", "\[Beta]_"}], "]"}], ":=", 
  RowBox[{"PDF", "[", 
   RowBox[{
    RowBox[{"HyperbolicDistribution", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "1"}], "/", "2"}], ",", " ", "\[Alpha]", ",", " ", 
      "\[Beta]", ",", " ", 
      RowBox[{"\[Delta]s", "[", 
       RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], ",", " ", 
      RowBox[{"\[Mu]s", "[", 
       RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}]}], "]"}], ",", " ", "x"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.8192976134205637`*^9, 3.819297672191238*^9}, {
   3.819298548844801*^9, 3.819298560525545*^9}, {3.819298843222105*^9, 
   3.819298855277297*^9}, {3.819520292483081*^9, 3.819520307407906*^9}, 
   3.8195477667447987`*^9, {3.819547802998308*^9, 3.819547804302573*^9}, {
   3.819626942765409*^9, 3.819626944295127*^9}},
 CellLabel->
  "In[911]:=",ExpressionUUID->"6b875278-6e73-44c8-9481-6d40edd24d2e"],

Cell["General distribution functions", "Text",
 CellChangeTimes->{{3.819801289835092*^9, 
  3.819801301296467*^9}},ExpressionUUID->"27434571-7719-46d6-adca-\
fcfb8bd1467b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"FNIG", "[", 
   RowBox[{
   "x_", ",", "\[Alpha]_", ",", "\[Beta]_", ",", "\[Mu]_", ",", "\[Delta]_"}],
    "]"}], ":=", 
  RowBox[{"CDF", "[", 
   RowBox[{
    RowBox[{"HyperbolicDistribution", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "1"}], "/", "2"}], ",", " ", "\[Alpha]", ",", " ", 
      "\[Beta]", ",", " ", "\[Delta]", ",", " ", "\[Mu]"}], "]"}], ",", "x"}],
    "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fNIG", "[", 
   RowBox[{
   "x_", ",", "\[Alpha]_", ",", "\[Beta]_", ",", "\[Mu]_", ",", "\[Delta]_"}],
    "]"}], ":=", 
  RowBox[{"PDF", "[", 
   RowBox[{
    RowBox[{"HyperbolicDistribution", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "1"}], "/", "2"}], ",", " ", "\[Alpha]", ",", " ", 
      "\[Beta]", ",", " ", "\[Delta]", ",", " ", "\[Mu]"}], "]"}], ",", "x"}],
    "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InvFNIG", "[", 
   RowBox[{
   "p_", ",", "\[Alpha]_", ",", "\[Beta]_", ",", "\[Mu]_", ",", "\[Delta]_"}],
    "]"}], ":=", 
  RowBox[{"InverseCDF", "[", 
   RowBox[{
    RowBox[{"HyperbolicDistribution", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "1"}], "/", "2"}], ",", " ", "\[Alpha]", ",", " ", 
      "\[Beta]", ",", " ", "\[Delta]", ",", " ", "\[Mu]"}], "]"}], ",", "p"}],
    "]"}]}]}], "Input",
 CellChangeTimes->{{3.819519377390403*^9, 3.81951940931682*^9}, {
  3.8195194435163927`*^9, 3.8195194588880987`*^9}, {3.8195197801422167`*^9, 
  3.819519794048863*^9}, {3.819802460415298*^9, 3.8198024620740967`*^9}},
 CellLabel->
  "In[914]:=",ExpressionUUID->"dfa899f1-ba13-46ab-9fe0-4264ac8ee730"],

Cell[TextData[{
 "Joint distribution function (factor model)\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
g5RirY1dtmoc9tvtjnD4ga3DL3/WPquJc+6ZXcNFFzye1YWJ5/26v/cJDeoN
ct43QawxtMcOTUt1XuJ7OHW8xey5Y+F72U3X908eGwAAAAAAALB5evWVD3PX
YIcMmZa7Xay3UZ719tiXY+26/5Qpxs8WLAvHH3Nv7j53+lGj7DV52y9avCJ0
vO/V8LOf3F00ttgHZvz4T5Kfk5oizntV5Wls9Y264aILHgs3/vOZ0KrF0NDt
oTFhQP8p4ZVRM8KUKfPCJ58sDkuXrUo+J5uT2CuptOfvb399Knm8eZYtW50b
d9vWw5PHBwAAAAAAAGye+vSekLuWGWt3bPz6mBsR6xxsytp8v775dT/yzJjx
edht29ty93lXq5e/ts3MmYuy5+t3/GHDUse2zbfqhW5d30h+XmqCWPtiU/M0
Yk7Iz3/aLvzx/MdC/VsGhiMOblPwdUcd1jb5ePlfsS9SnR+U/n31yMNjk8ec
J+YD5cXdo/u45PFtinff/TS7B8Zctf33aBEuOPeRMHXqp8njAgAAAAAAAErW
4vYhuWuZMXdj/etin5QuD7ye9bHY1DX8O5q/VK5Y+z8zOXefsfbG+tfFWh23
1n0ubP/dW8sd473tRyU/N1Ul1ktZuGhFmDfvi6zHTWm3G/Tc1Ky/SUlzuft2
TbL15Njr5PZmL2U9dMa8PjN8+unSr+0zr7dOzPdIPU/8r1hvoyzvp2nTPkse
c55nB0zJjTvWf0kdX3m9OXZW1nto4zHF3jIffbQweXwAAAAAAABAceed1a3g
OuY+uzT/72viuv1h+9+1yXkc6/Xq+Va54738kp65+401PFq3GlZwDbM8qnNN
gfL6+ONFoW+fSeG2hs+H3//24Sx/Yutv1ttg3Dtv2Sgcc8Q94eYbB4Q3xnxc
dH8jhn+Q1Ws56fiO4ZI/dM9qbMTeNnGNfMKEORvkBJVk5co1ufkhDesPSj53
/D/jxn0Sttqi5Dye9fbeuXnymIvpcM+o3NhjHZLU8ZXXKSd2yh1X4waDk8cH
AAAAAAAA5FuxYk1uL5K41r9m7bpw/bX9KiyPIzr2qPbZun15Y469WvL2XZa+
KqWx3Xfqh/HjP0l+njbFgs+XZ/kzsZ7CQXu3LNc8xHXht96aXemxFut78XA3
PXCqg3Vf/scJx95XpuvnT3/snjzuYm78V/+Ccdf5foNsvKnjK69dt8nPa7vy
iieTxwcAAAAAAADke/qpCbnrfe3vHpm7zlmS2Osk1m2I9S3q/vvZcO6ZXcNv
TugUGt06OOvrsSkxx9oAFZGrUecHDcORh7YNB+5VPMch5p/EfiSpz1VZzP9s
WXig0+hw5ildwjbfqlch87Xtt+tndVoqM+5n+uX30xk1ckbyeSWEbg+NKfO1
c/+9rySPu5iYu1Yo7qMOa5s8tk1x3M875J6Tzh1HJ48PAAAAAAAAyFdsve/B
zq9t0vp/zCWI6/OrV6+tkFiXLFkZXnj+3fDPf/TdpLhiXsmTT7z13xohXyxd
Fc4/55Gi2zzV6+3k56okMeck5lv88fzHstyLisjh2Nju2zUJny9cXmljuKvV
y7nHnjfvi+RzvLmL5yBeA2W9bt4cOyt57MX87Cd3F4w75nmkjm1TDBkyLasx
tPG4zjmj6ybVSAIAAAAAAAAqV+8n385dfz3miHvCIfu2KnGdtjS1H35cp2m4
5aZnw4svvBc+W7CsxLiWL18dZsz4PKvHEGsBxPyNX/6s/SbVmdhqi7rh0ot6
5PYMiTknvzu7W+728fipz1eemOdyX4dXwmH731UpORwba3H7kEoby58vfaJw
Hsn2TZLPc20Se4jE3Iz4fohr/vFe0L7dyPCPq58Ovz7u/nDAni3CvrveHvbf
o0U4+vB24YxTHsz69cRcqLJeLzt8r0GF5XRVlrw+TTf+85nksUWx79WyZauz
3klz5iwJH364MLz33vwwceKc7L+L9YR59ZUPw0UXPB5O/lXHcPWVvUPPHuOr
/fkAAAAAAACAzVnsx7HPLs1z12D/enmvomu0sQfJgP5TwmOPvlnm9d3dtr0t
Wys+eJ9W4fADW2d5I/vtdkf23H+hZ8k3VVyLHvvGxyXOyaLFK4rmsEyaNDf5
efuqxUtWhjtbDs1yHaoij2O9ww9qXWlj+sWR9xQ85ikndko+3zXZmjXrwksv
vheuv7ZfVpMn5lhU1fUS8whSj7+Y+fOX5sbers2Iipn/teuy/JnJk+eG4cOm
h75PTwxdHng9tGoxNOtHFXNlLvzdo+G0kzpn99Z4X4z3xHivLM09MeZyvflm
9a6BAgAAAAAAADVV7PnR8o4h4ezTHspyKUqTf1BecW3xt6c/lLs2GPM84npi
3r83b/rif58Hj/99xZ96Vmk+QWkdd3SHbA27LHMT64Hk7a9p4xeSXyfRqlVr
w73tR1VIHkesw3DheY+Gxg0Gh073vxp6dB+X9dmJdQl+ckB+vY+Fi1ZUynW5
/XdvLXi8f13bL/m810Qx56fNncOyOhup3ocxXyH1PBQTe8HkxR7zLkrafsWK
NVmexrMDpoTOHUdn94lrruodzjurW1bnaM8dm4Wtv1G30uc53reXLluVfD4B
AAAAAACgNom173/1i/s2WJuLvUWGDn2/wo8V8y9iT4WS1l/z/i0+O75xbf8Y
f3y+PNV68VfFvioxJ+a5ge8U7UGQJ66H5vVeiPkNqa+V/s9MDofud2e55+fn
P22Xnd9YWyXWCyh2rH59J+XuZ/r0BRU+tmnT5uceL+aapJ77miTmGNzdenhW
8yb1e7JXz7eSz0cxfXpPyI095np89bWxrlG8tzRr8mJWTyPWxaiKXI3SirGl
nk8AAAAAAACoTZ7q9XbBtbn4bHdFHifmXVx9Ze+i64En/vL+cN3f++b+e88e
43P33/3xcWGPHZomW8s8/eQHwowZn2/yPP350idyjzFlyrwk18hHHy0Mv//t
w2Wek5jfEucl1tz45JPFZTpm7OWSt99YT6aixzjw2Xdyj/fyyxWf21RbDXlp
WpZnkDq3YL2pUz9NPifFxLyXvNhHjvggq9kT89WK1SyqLmKeVur5BAAAAAAA
gNrkjuYv5a7Pvf7azAo5xoQJc8JxP+9QdC0w1qWYNu2zcNDeLQv++3673ZHl
hBQ7zucLl4f27UaGIw9tW+VrmUOGTKuQuYpronnHiP0UqvLaiDVGYm2KvJoh
eWIflVYthoYPP1xY7mOfdWqX3H1XxljbtRmRO57Zs5dU6bzXRCtXrsn65KTO
Kdj4nrL2y4s49dwUc93f+ySfp4qw27a3VUofJAAAAAAAANicPf1Ufr3/v1zW
a5P2/cEHC8I//9E3bP3NeiWuB/Z+8u2w4PPluf/eoN6gMh17zOszw/XX9gt7
79x8k9YpY++ZA/cqnGOy3qm/7lxh52PZstVhu+/UL3icK/7Us8Tt33lnXvj3
DQPCb09/KBx1WNusP0rsp9O29fAyrW3PnLkonH7yg2Waq5OO7xj69pkU1qxd
t0lzMH/+0mzeCx3j4gsfr5T3wd//VrgP0M5bNkr23qwp5sxZEo4/5t5Nzgmo
84OG2X5iPYrYT2RT93fyrzomn5tiYn5ajLGqcy8q2o/rNK2U/lwAAAAAAACw
uVu+fHXYffsmubkMD3d7o8z7jH0CLvlD91LlcUTNm76Ybffuu5/mvqZP7wnl
HmPsg9L/mcnhnrYjQsP6g7I6Atdc1Ttc9Zensv+OeR91//1saHrbC1n/g0ce
HhteeP7dLDfi448XhROOvS83rq2/UTeMH/9JhZ6TM08pXJvi6MPbFd3u1Vc+
DDt8r0FurL87u1upepX06zspe96+tOu5p5zYqULXc4v1oOh436uV8j74zQmd
Ch4v1pWp6vdkTTJr1uLcmjqFHLJvqyzH64FOo7MeN7EG0Hvvzc9yudbvc+my
VeEXR95TdD+HH1Ry/5Gbru+ffH4KmThxTrjlpmezPIjUuRi7bNU4HLxPq3Ds
Ue3DGac8GP7w+8fClVc8mZ2j7J7Y+IVwV6uXs7pH8ZzFz4PY9yrej58dMCW7
18fPkNRzCgAAAAAAALVV/VsGFl3zi7UeYq2NvO3jc+ZvvTU7tLxjSPjJAXeV
aT2x3s0D/7ufuK6b97rnB79b5fMSa3zE/h7F4r/xXxW/ZhzXegsdK9YaKbZd
aZ71j3k2eduvWbMuW8Mt7bk74pA2YdBzUyt07IuXrAx77tis4PG22qJuVjek
Ms513jE3tUZNbfbZgmWl7m0Ua72UJucn1na58LzitTn+evn/Oycxl+TBzq+F
nX7UqODrYt5B6jn66rie6Tc5y32qzPyMmIO37663h+OO7hDOP+eRrJ9LzJeL
vZpiDsbwYdPD5Mlzw9y5X5TYvwoAAAAAAABIL66Rx14HxdYJY62NmAsQn3mP
OQyx98dZp3bJ1nO3/Xbh/iDFxLX5WIfhq3HMm/dF7uvjemRVzcfKlWuyWh0l
1ReJtQaWLFlZ4cfPy6+JNTOKbZe3rr2xmHuz8baxx0nsG1Oa7eNx4vP6Mf+j
osferMmLuceNeUWVcb4XLlqRe8wWtw+p0vdiTVHaXiEx5+fFF94r9X5j/kGx
/cUaNbF+x1e3aXTr4K+9br/d76iU92ZZxXo499/7SnavqMi8jZizce6ZXcOt
dZ8Ljz4yNqvNM3v2kjL1VAIAAAAAAABqhnZtRlTqc+MbrLXudkfBZ/XjWmRe
XslJx3cMX/5zpc/DkCHTsjXoksYQ43z77a/nRVSEmCtT6JiH7X9X0e1iz4TS
zH+DeoM22C4+rx97LpRm29//9uGsB01ljDuuR+/4w/y8opdeLH1eQFm8OXZW
7jGf6vV2lb4Pa4qSavrEPkQxN2fVqtLXgLit4fNF97n7dk3C++9/9rXt4n0j
5jWsv3f8+rj7w7RpX39dVfrkk8VZnsmu2zTe5PtlrLkR+/78+4YBofeTb4eP
PlqY/PwDAAAAAAAAVSeuiZ53VrdKzeOI9S6uv7ZfWLR4RW4csS9D3vb//Eff
rG9BRY897jP2DTntpNLVp9juO/XD4EEV22fkq+J6dKHjnnHKg0W3i2OI6+gl
xR9rF6w/B0NemhZ22arkNee4Lt398XGVeg3++dInco8fa0FU1nF79Xwr97jj
xn1Spe/DmuCVUTOy+jp5c7bzlo3KVJMjivVwSrp3xFyrYvuI9WI2rt1R1WJO
UrzHladm0cbv9TtbDs36o6QeEwAAAAAAAJBeXDe88LxHKzyPI65tXn1l7/De
e/NLjCH2Dii2r1inY+SIDzZ5rDGHI+7nlpuezeqFlHYssddIWdeqy+rHdZoW
PPY1V/UucdsRwz8Ifzz/sWyeDt3vztxxxFoIDz34evbsf0ljjrkUlV0TIMZd
LIZRI2dU2rFvb/ZS7nEXV4OeHdVJzJn4+U/bFc3leGPMx6XeX6y5E9+DJV2D
8VpNPfZiYm+Xpo1fCHW+32CT75c7fK+BvikAAAAAAABAQY8/9mbYffsmm7wu
ueeOzUKTRs9nvQdKe+zYn+GgvVuWuO9jjrgntG83Mowf/0lYvbrkng5xvfXV
Vz4MHe4ZleU7lKcPwuEHtg4TJ86p1LmP/STyjn9Xq5fLtK++fSYVzbEpzZhj
X424hl+ZY477P/rw/ByBC859pFKPf/klhfvb7L1z82TvweqqywOvF71enhv4
Tqn3tWzZ6nDZxT1KvAZj7lHqcRcTa/WUJSesJPG9kHpMAAAAAAAAQPU1f/7S
rKZGaeo3fFV8Pj+u0Q7oPyXLzSjPsWPfkLIcM8b4kwPuCqef/EC46ILHw18v
75X17oh5G785oVPWX2RT11j/dW2/Kul78Kc/ds+NoaR+ExuLz/jn9W4pSZ0f
NAx9ek+okmvtgU6jc+OIvW2mTfusUo9/1qldCh479t9J/T6sTuL1dPA+rXLP
1c03Dij1vmK9l1/+rH2J1+E/rn46+bjzxDykBvUGlfm9Fefw3vajwh47FK7D
c/GFjycfGwAAAAAAAFD9zZv3RXiw82vh0ot6ZH0W9tmlefYs+pGHts1yJWL+
xL9vGJD1Qxj7xselqpVRGg3rl32dtDLEniVDh75fJXP9VK+3c+PYbdvbwsqV
a8q8z5L61xQS819i3ZOqusaK5ZzEHhaVffxYgyTVsWuS+D7IO0+xds2KFaW7
Pnv2GF+q+jh/uaxXte07smjxinDmKYXzgPLEHkixZk7s9fTF0lW5r4s1jVKP
DwAAAAAAAKCYuJ6eKo9j9+2aZP1Nli9fXSVjjX1WYm2TvHhuuenZcu33vg6v
lGncvzjynjL1x6kIxx5VuE7DAXu2yHpyVPbxY87Sxj1+Yh7PZwuWJX8PVCfF
3o8xT6Gk7eN1FWvmlOY6vOaq3tU2lyPWLipNbZFo62/UzWruvP7azA32MW7c
J7nb9Og+LvkYAQAAAAAAAEoSe6/EeiBVlccReyHc03ZEWLxkZZWNcfr0BVl9
g7yYYu+T2bOXlGvfZcnnuODcR7K6AVV9jm9v9lLBeJ7pN7nKYoi5Gy3vGJL1
6bmz5dDw+cLlya/96ibW4il0nvbd9fas5kTedvG9FOd2xx82LNV1eNP1/cO6
/6QfbyFz534RjjqsbanGEedrypR5BfcTa5TkbRfrHKUeJwAAAAAAAEBpLFmy
MlvzjzUzKiOHY88dm4Vrr+kThg2bXqXryDNnLgo3XPdM2OZb9YrGd3fr4eU+
xr3tR5VqDm6+cUCyegixT8eFv3t0g5oGzZq8mPy6Y0Oxv1Je3kKh10+aNDfr
ZVOa3irZef9mvSz/KPU488yZsyT89OA2JY4j9lWJ9TeK7atxg8G52y+pwlwy
AAAAAAAAgIoQe2/E59pjHYlYs6K8+Rtx2zNOeTCrGTDm9ZlVnscQ6xX869p+
Ydtv1y8x1rNPe2iT4nuiSB2A9WvonTuOTn5uo7ffnh0G9J8SPvxwYfJY+Lq8
fI6YZ9Xp/lezfKjHHn0zXP/ltR371ZTlPbn79k3C0KHvJx9jnvmfLQtHHFJy
Lke9mweGNWvya5WsF+9hhbY/cK+WyccKAAAAAAAAsClWrVqb5WJ07TIm3Fr3
uXD5JT2zHI1jj2qfrbseeWjbcNzRHcJZp3YJV17xZFbvoVfPt8LEiXNKtd5a
mWKcpVnjjn0s5s37YpOOFWtfHH5Q4V4uu2zVODw/+N3k55Ka4cZ/PlPuHKpi
zjylS5g1a3Hy8eVZvXptOPXXnYuOYbvv1M/uL6XdZ+zrVGg/vzu7W/LxAgAA
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
8J0wa9bi5GPZVGvX/Sf06T0hHLrfnUXHHse9Kcfp22dSmWugxJ54s2cvST5H
UfxeGnv2rY9tl60aZ2NKHRcAUHusXr02q1Mbn93RgxYAAIDqLtYFT51nURF2
3rJROPLQtuGcM7qGf1z9dGhx+5Dw6CNjw9Ch74d33/20RtTYKI/4DO5eOzUr
OjcnHHtfWPD58uSxQk0Sf9f73dndvrbGHHs5pI4Nqrv4/om5Cwft3bLUn+Pb
fad+uOQP3bO1+5qaX1kacWyxF0uxuZg4sXw1Opo3fbHM35/22aV5GPLStOTz
st4Vf+r5tRhjP8D4fSd1bEDtMmnS3DByxAfV9u/E6h4f1ESxJ94h+7ba4HtG
fDbmF0feE26+cUAYN+6T5DECAABAIaWpAV6VflynaTj8wNbhV7+4L/z29IfC
pRf1yNY+Yj2N1q2GhYcefD1b74m/b8Xn5TfX37hWrlwTjvt58fr1sRbJ5jo/
sCliTYBC76mYNxbrdqSOD6qjNWvXhd5Pvp39Jl7az/y4Vl//loFh7twvksdf
la6/tl/unLS8Y0iZ9xdrCJV2zmO9lPPPeST0fXpiWLVqbfK5+Kq8emPxu1/q
2IDaIea5x1pI6+8vWR2gL++HqeNab/78pV/G9+AGzy3EHMnUcUFNl/f33cb+
eP5j8kgBAACodsa8PjPsvn2TcudfxGfWYw7Gwfu0Ckcf3i78+rj7w9mnPZT9
HRz7FNxw3TOh0a2DQ6sWQ8N9HV4Jjzw8Nhx3dOE8hNgXJPV81BQ3Xd+/6Hk5
8Zf3y+WAcrqz5dDc99YDnUYnjw+qm6efmlDm/NDf//bhMH365tkLbPGXn897
7NC04LzEXNay7OuO5i+Var733fX20ObOYWHevOqZOxPzVPNiv6ftiOTxAbXD
Xy/vVTC38KOPFiaPLa4hx7+HN44v1rCaMePz5PFBTRZruZb2O2rMo+rV863k
MQMAAMBXfb5wefb3asf7Xg1dHng961US//9+fSeF5we/G0YM/yCMfePjMHny
3Oy3pLgWEPuNxn7w5TlefMa90N/Nsb9B6rmoCV54/t2ivz/E3wFjD/rUcUJN
9VSvt3PfX3ENduGiFcljhOrg448Xlen38Wi/3e8IA/pPSR57arGud6H5OWz/
u0q9j+6PjytxvnfdpnH2/S7mS6QeczHxe2XeGO6/95Xk8QG1Q3wWodB9pnPH
tPm6sUfo/nu0yL0Ppo4ParpY/7Us31ej2Mc3ddwAAACQQqzHHp8xKvT38r9v
GJA8vuouriPvt9sdub857L5dkzBt2mfJ44SaLK57xppDee+zW+s+lzxGSC3m
fO627W2l/k18qy3qhn/+o29YtFg+VNS08QsF52mvnZqVavsJE+Zkz5QXm/PY
U2DWrMXJx1oaMQ81bxz6rQAVJe++WfffzyaL6c03Z2X1Lovdz+MzF6nnDmqy
WDO2rPkcUeMGg5PHDgAAAFXtgw8W5P6t3On+V5PHV93969p+RdfKXnzhveQx
Qm0Qe5XnvddiTpq+ymyu1n35H7c1fL5Mv4X/7Cd3h1dGzUgee3Vy+SU9C87V
QXu3LHHbNWvWhWOOuKfonP/j6qez16UeZ2nFWnF5Y3mw82vJ4wNqh7zeYLFX
aIp4hg+bnvV2KHY/r/ODhmH27CXJ5w5qstjr7oRjy16jI+r20Jjk8QMAAEBV
iv1b8v5OHvLStOTxVWex503M2cibvyaNnk8eI9QmvzmhU+777bq/90keH1S1
mMtx9ZW9S/379z67NM/W4mtSXkFVWL16bTY3hebs3DO7lrh9h3tGFZ33v//t
6excpR5nWeckbzx3tXo5eXxA7fDb0x8qeJ859qj2VR7LswOmlFhnaYfvNcj+
fk49b1AbxFqx8X3Xvt3IrJfbfR1eCTf+85mw04+K51Rt8616YeLEOcnjBwAA
gKpSbA3io48WJo+vOjvp+I65cxd/g4xrIaljhNrkzbGzcnOoYo0Oz0qyubnx
X/3L9Dzjzls1Dn37TEoed3UT65HlzVmbO4cV3Xbu3C/CLl/Oa972MR8krlek
HmN55PXv+evlvZLHBtQOMR+30H0m3n+qMo6ePcaHrb9Zr+hnaLzXjxo5I/mc
QW0X/6Y7+7TCuV7rxd9ialquLAAAAJTXtdcU/g0t1pH193G+fn0n5f62EH8L
fOut2cljhNoorydC1KDeoOTxQVW5t33xmhDRtt+u/7X/LT57LF/zf02bNj/s
+MOGuXM4deqnRbe/9KIeudvuv0eLsODz5cnHWF55NZH23fX2JPFMmjQ3jBzx
QViyZGXyuQEqRqz3k3cP/WLpqiqJoXPH0UVrLkZ77dTM33cJxPv+iOHu+5uj
mAv7z3/0Lfq+fKrX28njBAAAgKqQV2PiuKM7JI+tulq77j/hqMPa5v6uUPff
zyaPEWqruLaa95v7rts09nsvm4W4tlHSc8Sn/rpz2OH/a1Dw37o88HryMVQH
MdfiiEPa5M7hGac8WHT7vk9PLHoOBvSfknyMm6Jxg8G5Y4trbFUVx+cLl4fT
T37wv8feectGoU/vCcnnB9h03R8fl3ufifl2lX38WIOppNzIg/Zu+WUsnyWf
q83JZwuWZZ/B689BrI3ivr/5ic8XXXZxft5s/E3GM0gAAABsDuL6Z6G/ja+8
4snksVVXTz81Ifc3hT13bBYWLV6RPEaozS664PHc92B8xjJ1fFCZFi9ZGfbb
/Y6ia0+xD8vSZaty//2etiOSjyO1+Nz3yb8qnNO63ssvv5+7/SefLA67b98k
d9tzzuiafIybasiQabnju7Pl0CqJYc2adRvkcqwX68zMmPF58jkCNk2x+0zM
XazMYzdr8mKJuRxHHto2u9+nnqfNyfzPloVjjrjna+ci9lb88EP1xTY3Cxet
CPvs0jz3PTp40NTkMQIAAEBlivXW8/4uvrv18OTxVVe/OPLrvy+t90Ana8lQ
2d4Y83HR57RSxweV6baGzxdde1rfdyjmFua9puN9ryYfR0oxJyavl8h6F1/4
eO728VnQM0/pkrvtDt9rUCue5V6xYk2o8/3CNV5+9pO7qySG66/tJ38ParFY
6yfvPd63z6RKO26x+kPrHX/MvVluQeo52pzEulnHHtXefZ8NPPrI2HJ9XwMA
AIDaoP8zk3P/Ln5+8LvJ46uOhg59P3fOYi3eVavWJo+xrPSjpyYq9lz92Dc+
Th4fVIa5c7/IXV+P/np5r/++ds6cJbmv69b1jeRjSSXmsh59eLuia3jxOdA4
13n7aH/3yKLbt61FObF/+P1jye61MUe22DzrGwQ1X6x9kfcef7hb5XxWNaw/
qMRcjtNPfsDfRlVs/vylRZ+bcN/ffK1evTYcsGeLgtfEtt+urz4qAAAAtVqx
Z3xnz16SPL7q6MLzHq01zwvpR09N9lSvt3Pfi/VuHpg8PqgMxdagYm3yWE9h
/WunTZuf+9onn3gr+VhSGPTc1KI9UqKYLzPm9Zm5+5gyZV7W6yNv+5hrtmbt
uuRjrSi9n8y/115zVe9KO27ss7DNt+rlHnvHHzb0XRVqgaruDdakUfEaV9H5
5zyywecplS/2zzr8oNZFz4v7/uat5R1Dcq8Nv2EAAABQm8Xnjgr9Pbzf7nck
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
J69fQrs2I5LPVVT/loG5vz3F53ZTx1ceJ/7y/oLjOeOUB8u9z8mT51bL+irU
bi+9+F7u+/O10RXfdxtS+GLpqqwe1Ppre7/d7wjDhk0vuk2L24cUfF/E3hVf
fd2bY2flvoceevD15GOPa0IPd3sjy/ssay2OKG4T15TKU0dj7br/hAP3allw
v9t8q95mVZtjvaMOa1twPuJzzgsXlW19ND53n9fDJfpxnabhk08WJx/z5ubt
t2eHc8/smnueP/zQ8+xUrJg7lHcfiN/zSruf996bn+UFFPtMiPew+Z8tSz7m
2irmTjz26Jthjx2alvpz+qq/PJV91ldWTLGXaN6xO973avI5o2zyfpvZdZvG
yWMDAACA9WL90fg7ann7lMf6G3m/Z1T1c6axX3HMAShWD7dYLfmqEmt3Fort
4H1q7jMgeetTV17xZJn3FevUfrUfcTyfTz/l+U2qRny2O+/+EfsxpI4PKlKs
xxGfVS5NvYKmjV/IXY/96uviWkbee+iNMR8nGWf8XIn93845o2uWN1HWHI71
zj/nkTBhwpxyx/Hyy+/n7vvSi3okvx5SaNViaO6cdHmgbPk//7j66aLn77mB
lfOsNoVNn74g/PnSJ7Kcr2LnpXPHdL0ZqZ0++GDBJt9X4udGSX094rMLc+Ys
ST7e2ir2MsvrhVHITw9uk/Vyquy4Ys+ovBj8zVrz3NG8cN20mL+bOjYAAACI
7r/3lf/mPsTfWuOa/NmnPZT9Hh6fw+3W9Y2sTunrr83Mnk+Kz6LEnImv7uO+
Dq/k/p7x/OCKX/uMfYk//XRpFs+okTOy53VuuenZcNLxHXPru29syEvTks15
fMZol60aF4wr1vpMfU2UV1zPKzSmBvUGlWk/fZ+eGHbb9rav7We779TPfptN
PU5qv/HjP8m9d1RW3WaoCW6t+1zB90X8TPvq6+L6bV7eR1l7k5RXzFGN+Vf1
bh4YfvaTu8udv7H++9GF5z0a3nxz1ibHVajPzXpleWa8NimWF3zc0R1KvZ9B
z00teh6vv7Zf8rFuLmKe2I3/fCZs++36pXqPlTVvB0oS/17d+puFc/fis/gl
bR//5j38oML1J9c7aO+WNbauYnUXe9zEz93Sfk7HPM0mjZ7PnlOpivjibwl5
scTfJ1LPH2Vzd+vhueezqr63AgAAQJ4B/aeUe20j9ovdZ5fmWZ+VvFoY23yz
Xrj+un7Zb2a3NXw+NG/6Ymh5x5CsT310Z8uh2f8W1/tvur5/lkPyl8t6Zb/d
xB4dxx9zbzjikDbhgD1bZPVV4zFLer6vtOJvzKnmPdZCyYvrnrbVox9MWcX6
5ps6prj29v+zd5dhchXp38dfPLC717LXsrtBAwTCAiE4BJcNmg2Le3APrkHi
IZ4Qd3d3d5u4u7u7TzLxUA+/w3/CJJw6LdPT1T39ffFhF6blPtXdp09X3XXf
X3xqX+cS6tciHpYu3W59D+q86To+wBXV3PL7XKiHRdbb2fpdFHmoWY7FdjDj
qFf7QjW4ij7S3MsBzO61gh5D/duWLNkekxjVa8VWt1/9bvR316+xK0H7r6dM
Xhfy/rv3HPKuS22PoevVaOvQIXy6HtRn8JJ/lAv7c6bbbtlCfQPE3q3X1fJ9
z+m3ZtD99H3y0P1NAt+3115e1as/4/oYcxvl7n/4bo+IeqHdU6i+mTNnc1zj
7NpljjWelSt3Oh9HRKZuQD7HmXuZAAAAAACIt9df6ZzttY5kVfL7wc7GXfuF
bXEl697coBwV1U8JdX/VrL3zlrohX7dWLaY5P9ZY0nGrJrDWP1zHgt/Nn7/F
+h6k3wpS2ddf9Pf9XBS8otqp2+zclWH9/ISzJzoc6g2j3mqdO8328jML39so
Wz1UzqT6+uoBohoDsRw/5SUk4nVJIujYYZZ1bEKtvco7b3S13l979FWz3/Ux
5mZa71KNDVu+ks01l1VxWjMvUXF9GBsvPN3O932nnhy2++i9bLtfJuUwKvfX
9fHlJqq9qf0d4db0Ed1We0Nc1E/QfgVbXPv53CadqpUt/VZ+vX5wHRsAAAAA
AC8+EzxXlVtpv8/sWdmvmR6toP40GzcmZ83eoP4UgwcF1zPo0H6Wyfv30H1y
VJ9l06b9zo81FrSP+IkiLU8dm3oVqM+M67jwG9VJtr0P49GTG0hUqlXh97m4
qUDNU7cJqkEeTU95rYtMm7retGk13euX8Wjhpt73QayvDZQPUuzFjl4NHuWL
5MT4lSs9zPr8qV6fXfvh819Y0To+CxZstd63Z/d5ga+t6kW4Pr7cbPiwZWHl
5GZ16T/Le30dDxw86jz+RKIeH08UaXVqnFQDsW/vyM+b+M0PJfxrSqn2ku08
H6pW4OXnV/B+97g+ttxCdZOUP6lzQiTnENX7Ul6nq7hVX9QvLvV+dT2miFyJ
rwf6vp75L6roPDYAAAAAALSPLtbrIYlOv8l7dJvndNxt9eqV03DyF/fvi2ik
pa22jvnkSWt973Po0DHzSXH/tcEzXXHBT2bUyOSsXeLnvbe6/eEYLzqnjFm/
fq/z2GC8NWfbezFWfReAZKQa6H6fi0I31j51m6Ae5Lba9FrTXb58h5cLoryN
Uj8M8fZHq99aTl4TqIeb8kOUZ6m9wTk9ftoT7heHesrlVA5JMqlYfoT1tXqj
WGff+ygPVtcItvs9cFdDc+xY/Pdup4KFC7eaZ/7XJqLPnNbRdR2svAXX8UdD
68cTxq/Jkf33qnWnvkB+Y7Z27R7nx56MWjSban0v+o1pnZ/TAt+/+q1m+12D
yCkXT73GIjmH6PuyfbuZzn8z237D6rrF9bgicm++2sX39Qyq5QMAAAAAQLxo
7SDc9fRkpXm3e2+vb776vJ8Z0H+xOXLkuPNx15qEX6x33Jy88wUDByy2vgaa
7z/z9qtW7TL33dEgrNfwvw83z1V5DtpjrDVEv2PNbf1kklX9OvYayrt2ZziP
L1ZWrtzlrV1UqjDSNG082aulo34yWlMPh/pDZdK/jx27yowbt8rL71IdE615
TJ2y3utzMGvmRm8/q97/yolZsWKnt7a/YcM+s3VrutejY9/+w16e14mTvzgf
G/iz9bS4+7Z6p25jy/m46G9lzE/lRng1NvQ4Tz/e2tvTr/pE8bwuUB0O7X9v
1GCS9/6L19jp82aL6aMPejl/bRPB9u0HrPW69L155vWE1vOeLNrKOq5aB1ff
CtfHlduoD5FqGKjeXbifO922+Hs9kzYvYe++w+apoq1PHY/qZkRTb8hG79Nr
L69qHT/lJbgeg2SkXHDbmI4Zc3qfH9XJs12fe+/hP5UyQwYvdX5MuYF+1+ka
IKLf9OeWMxXKDjd79h5yHr+onpdfnMohdB0bIvfwA018X09dY7iODQAAAACA
TMuW7fB60GuORLkG/7m7odcXOJ7rK9mleWLtn9A6UvOmU7x1RM03u9674ydr
HeWs1H/DdWzRUs0T22uzZs3p+7FVy161isN5TdXLNrftWS72gv/8n7RtPcN5
fLD3lNC6s+vYYkWfQ611uj5322jN/ZJ/lPP2YRa8opq5peDP5q5b65rC9zTy
cry0J/yV5zuYt1/v6q2FK0dANR0q/TTS1K6Z5tVbaNd2pnduUr7Z+LTVJp1+
5tn2+iv++Yi6bsi8TeF7Gzl//5xJ+3+Vv9q753xvXdbF2ClnyhZfv76LnL+2
icJWw0z0ec9624b1Jga+7qoV4/p4cpPDh4+bWjXHRdwX4eXnOiR9Xs3HH/b6
w3Fd8JfSXn5ydh9bvZaCasyIaiq6HoNkpNcnnDFVH85QvR9VE8L18eQGXTrP
8fKhwj1/6HNW4qsB3u9617Fn9fijLXzjZf0/OamGq9/rqWtH17EBAAAAABCK
almojvXs2Zu8/de9esw3LZtP9eZyy5cZbm69rpZ17uX6f1c3111Z3Vx1SWVv
7V57arQ+d+a+J+110vyZeqZrvUU127Vep9wGzf+qL8Xnn/Tx5veVb6Je25q/
Vz12xaM94UuXbvfmmF2PV7i07uU3Zq+93Ml5bNHSHKftvaC997qN8jL0vgl3
7U37+10fV6zps2Q7ZvVb2bIl3XmMMNbaMdq75Tq2WFDvAZ2bo10bT1ZaP+jb
O3b7qVORcmj8xvah+3//bISTr5fTlJOq2tm6ZlHOqutxk5eebe8bq9aqyDX6
3ebN+73vQ7+xUp6n+vLodqr1E5STprU2av3EhnKjdc19w9U1Ivoc6jtTuQqu
448F2/qz6pRk53GVy2V7v2dSbiPXh9E5fvyk9/vTb1xL/zjEu43OOUG1UaRy
xVHOjyXZqa/aB+/41+/yozkD7dM4c19AorD9VlDeq+vYEBn127O9DzXv5To+
AAAAAACyIyPjmDe/6Pe7V72fg+6reWHNsSdi7Yx4UF16v3HTHJfr2KKl/Brb
PIh6pCun43+P+e9jOtMLT7fzei+4PqacYFsLFeUsxfr5NEc9fNiypN8XG0/q
+WGrIa8aEK7jiwWtb8d6/TxZaP03Wev9J4Lnn2rrO65FHmrm/V3n7ni/pvq8
qnaL9lCqxpH6+STa9YVyqGzXTOzl/aMSXw+0vt56nZXDa7uWEtVSWrcu9/Rp
c0l1Cx57sFlEn8mbCtT0auEk2ucwO2z1M/SdEm2uhfLTg/p7iHLe1QfN9fEn
s9uu999/oGty9XgLVVNKfYJcH0OyU15NJOcRXWsoZ8913EF0nvOLXbV8XMeG
yKj3ku29qH69ruMDAAAAACA7NE9r+92reveu40tkd9xcJ9fNF7ZrM8P6ftDe
w6svDV0LQGtyNauPzVXz/1lpjdE6X39uuZjXEVbPCdW/yXwO9XnRvLXrcUh0
mrezvU5du8xxHl8s7NqdYc1ZSQWq2eD6NUhW6nPjN6bK19Pftfabk6+d9lnf
e3t9U/z9nqZxw0ne3n/t+XU9LqGoB5ztmOrSE+QPVBvOVntD9Uw+/6Rv4Psk
t5yrXVJulmpPhMo3yEp5NPXrTPDq+7mOP9Y++7iP9bgz6zyES2vbX33eL+R4
Kodk6pT1zo892b34TDvf8VWfznff7Bb4GhR9pLk5evSE82NIdup7F+55RHk2
3bvONUOHLDVpaavNtKnrvfqGCxdu9eozrV6926xfv9ds2rTfy1sX/X/Rd0cm
5Vnt2Xsox/p22urcKR/R9XgjMvrNbHs/rlyZ/Z5aAAAAAAC4pLVh2+9eagEE
u/9O//qsZ/aFTyYd2s+yvh/yhLFurDmxsWNXOT+OnPT1F/2tx1+m5NCYPtf4
tNW+z1OpArlWoQSt2Wh+2HV8sfLpR70jWkfPTVq3nO58/JPVE0Va+Y5pZo2J
oHyoSChvQ7W+ir3Y0fxUboS3tqO9usm6rqZcRduxap3KdXyJSL32onnvvPNG
8l5LJQLVz2vVYprXBzHcMVfu6LdfDvDqsbmOP6eorpUtt0W9WFTbK5zHUW8l
1aELNaYFr6hmFi/m91Qs/PjdYMv7Nvj3yS0Ff8619QLjrUHdCc6u+fS5VR+4
m6+taR68r7HXz7VJo8nZvp649J/+PZjKlR7mfLwRGb0n/F5LvW9y6z4TAAAA
AEBq0N5u7Y/0+92r+teu40t0tnqzzz3Z1nls0erUcXbU82yPFm7q7alyfQw5
SXOGtlrdF/+trNm+Pba1OUp8NYDPZxQ0Z3fNZVV8x077OF3HF0t6T6rHj9ah
XM2xu6CeF9HWxofyOVr6juvTj7f2/t6i2dTA8de1g+o1qU6VerS8+lIn73yl
vZGqqaBctDVrdnv7110faywp38VvPPS9oPVz1/ElopUrd0ZcR6hg/mrefmzX
sSerefO2mIfubxLRmCs3YenS7c5jj4fXX+lsHQf1Tgl1f/UefOCuhiHHVOdH
1R9wfby5hfKTIr1W0Dqucnhcx55bjB61wvn1n9+5Kztr9VlrIGZVpdKobI2V
ao6pV+aggUvIJ4oDXW+qtpTfa6m+P67jAwAAAAAgO4LmxWrVHOc8vkRn2wPy
n7sbOo8tWtHmc3z3zUBz7Fhy7reOhGoG28ZANbdj/Xy29Zh/563kfCwSmWo6
216nkt8Pdh5fTtBctuaLVU9YtaxVK2DWzI1m5ozf6P+HQ7edMX2DmT5tg1cf
Xv0lJk5Y463Pq/aO5vJHDF9uhgxe6tXd7tdnoenZfZ63hq/6Pm1aTTfNmkzx
1sT0PaL58PJlhpsfSgzyatuoH7nqomv9X7lvjz/awttnqRwl7aG99vKq3vqL
LddQCuSrYsaMXul8zJOZxt1vbNWHRX+vXHGU799Vp2l/+hHn8bug3Km8fy/r
Oy6qP+I6vkSmumXhXk9oD/a4cbm7zldOycg45vUMsa1P+tG5V+d117HHU1A/
KX0PBa0Nr1ix09x4TY2Q4/rfh5ub3XvISYqlNEvNOhvlkY0csdx53LlNUG1P
V6K9JtT3uu0x6/ycFtVjKodLcwRZ8xj1vaa6nrm9hqVLQecH5Rq7jg8AAAAA
gOx45D9NrXPp69axnywUWz8H7Q1xHVu0OneKLJ9DNQH69FrgPG7Xr7loLTyW
z6W93ra1Q9Uadj0WiUw5G7bXSfN9ruNDeLTXTrkD27Yd8PqsqweY6tbntpoP
LhR9pLnv5yOzvpTy0/z+rpocrmN3JShPrFGDSc7jS2Rz5mwO+7oit+bc5TTl
wCgXIdxxVl6o8u+On0jN86mtRpFMGL/G9z66zrvy4kohx1Y5i4cPH3d+jLmN
rgUi+Y3SsH7oWiuInK7Bnn2iTbbyL2KtccPovoNVQyOW3+vKgw7qcaUcj3Zt
Zjh/DXOjoH6oyuFzHR8AAAAAANHS/jLbb17t23UdXzKoWX2sdQx37EjO3uNt
W88Ie+7s3tvre3XUXcccT9ddWd13LG4qEPv8iuXLd1jHXusQrsciUWltSjUe
/MYt/0UVyQUAfqUeKX6fkcya1G+91sX373fdWtd57K7UrzPBek5WvoLr+BKd
ar+Euq6485a6rINHSDU5bL3Z/Jz/51Lmx+8Gm737DjuP3aUB/Rdbx0j1pM68
vfbVX/rP0H3NKlUYma3eDwgWTj6NfFK8t/NYczNda7dsPtXLL89OHkasRFuH
RX29bI/ZvOmUiB/L1usxK+2bGTxoifPXMDc5cuS4NY9Gvwk5JwMAAAAAklnF
8iOs8wzt2s50Hl8yUF0K2xhOmrjWeXyR0t539TEIZ95MdSoOHTrmPOZ42rIl
3ToeWhuJ9fOph4Xt+XKit0tuoZrLtnH7/JM+zuMDEsFjDzbz/Yy8+Ew77++q
0+H3d+WBuI7dFfVU8RsTrfGmao2DSIwZYz83i/IM1CfKdZzJRPUiCt1QO+w1
zyeKtDJLlmx3HnciUG6nbe31zBpoyv246JwyId+/6jnm+rhyO72HQ73PVX9S
67uuY00FWifXeUj9LF57uZO5744GXh2vSHo+ZddTRVt7NQ2jiX/7dnvNl0jr
aJQpOTTsmNVXUH1ZXL9+uUX3rnOtY13i64HO4wMAAAAAIFpadyiYv5rvb96L
/1bW7Nuf2nv2wrV06Xbr3EG0PXdd6dFtnsl7brmQ80/q/6GeLK7jdWHUyBXW
cRk0MPb7rLQ/1PZ8ke4ZSyXvv93dOm65tdfKwYyjXs2l6dM2mPG/HqPWTfV+
FdWN1xqp+pWkpx9xHisSg63f2kvPtvf+bsv3yOzHkoquuqSy75io7oTr2JKB
zkVB1xeqCeM6xmSi/gIX/KV0WGuHyltQjqjrmBONra+UrFy5y7tNxw6zQq5N
K6dL37eujycVvGrJq8ukvHTlX7uOM9Upv2L3nkNm1apdZu7czWbK5HVeTyjV
0VBtin59F5lePeabrl3mmE4dZ3ufM9H/1+9M6dJ5jkd5UvrdU6PaGO+3UfH3
enq5p7oeqVt7fLZqOm3YsM/6XtJzh/s4x46d8HpYRZKHksrXU7Fmu6aVmTNi
2w8VAAAAAIB4GjF8ufU373tvdXMeX7LQXNVl//KvvfzC0+2cxxeOo0dPhF2n
+4arang1PFzH7IrmEm1js3btnpg/39231bM+XzLWf4kH1TpWTprfmKlXTrT7
9xKV9hW+/FwHr3ZzuPPHGp8brq5hHn6giXn1pU7mmy/6m59rjPXmrbXeqrlt
ag3kfra5b72f9Pfbb6rj+/d33ujqPHYXdI63faaqVh7tPL5Ep3pet11fK/Dc
VOSh5s7jTAbqr/Lum93COt/ru+HrX8/xqd5bxUbryraxU63ChvUmhhxj1SKg
rkx8rFmzOzD3XPlN06audx4nkofytmzvp94954f9OKHqT9n07b3A+RgkO+UK
2cb3nkL1nccHAAAAAEB2qB6q7Xfv6FHsL4vE04+39h1H5Xlor47r+IKsW7fX
PHR/k7DnnHr2SO29nRXKDvcdF9XYjnWewIIFWwPXZ/ZTZ8FX08aTreOmHlOu
44s19b6IZv44FL2nb7ymhin6SHPz5qtdvD3MZUsNMzWrjzVNGk329lAOHLDY
WzfZuDG8/A/VPtcezYkT1lAnJAEon8fvtc/M57jigp98/678P9exu9Cvz0Lr
50U5sq7jS3TlSg8L69zDuniwbdsOmP/c3TCssVRO1uRJa53HnMj0XWSrvXHv
7fVDjvFNBWp69QdcH0cqUE7Y/Xc2CHw9UjXfENFT/ynb+0k1RMJ9nJLfD7Y+
zi0Ff7b+Tdfa9AbKHtVIs41vqxbTnMcHAAAAAEC0VINWa3V+v3mvvyr37V/P
abVqjrPOIaiurOv4bDRHZVuvs9Faruu4XVLtGr9xUd2HWD+X9tPaXodCN9R2
PhaJSOeuoP3fK1fudB5jLAX1e4o3rYfpc/Bo4aZevuAnxXt7/apVF1v9b7T+
mLUvQL48Fcywocucj2EqC8rnUO1yvgdOZ8vnk507DzqPL5HNmbM5ZL+KTB++
28N5vIlKtQmC1gVPnY/PLmnKlxmerR4EqaTwvY2i+t5TDTX6esTPxx/2Cvma
vP06+RyITFA+h/KWw30cW02zay+vatav3+td99qep02r6c7HIVmNHbvKOq6a
51A/StcxAgAAAAAQrepVx1h/91arQs3wSGkvqW08v/i0r/P4zqR5DcUVzdy1
9r+4jt8l217NJ4q0iunzbN2abu0ZIh+8w3qXn/79FlnH7IkiLZ3HF2uzZ9nP
PclA73HNcbsex1QVlM8R1FukfbuZzmN3QX3u/cZDebCuY0tkx4+fNA/cFV49
CVHel/pIuY470ei6QPu4Q42f8j1Ue951vMnk2y/D6zmYlc6fu/ccch57qmjb
ekZYr4vWzl3HiuSiXG/b+yncfivLl++wPsZHH/TybtOy+VTrbZSLzn6ayOn6
Qv1UbONa6aeRzmMEAAAAACBaR4+e8Oa6/H7zaj+f6ua7jjHZnPz1HwWvqOY7
ppf8o1xC9SyfNXOjV9shO+uvqnfs+jhcvc62HAvVIYjlc2l/ctDroJ4irscj
EQXtse3TK/f1p9b5vEC+KlF/nhNB65bsSXTlkf809X1NlM+hPjq21yxVe4tc
c5n/Z+3Vlzo5jy2R1fk5LeLzQqrWgLHR9YdqH4UaN/WaoBdb5Dq0nxXR+1N9
Fg8cZM93vChv/qJzyoT9+mht3XXMSB7KH7S9l8Ktm1G18mjrY6hXm26jvoR3
3VrXejv63Uaubu3x1vFUPZRduzOcxwgAAAAAQLS6dplj/d1b7MWOzuNLVkE9
c7WW4To+rftWrjjK2mcnqzxnlfTmqhNlvmnx4m1m4oQ1ztco1LM+HmvS3brO
DfkazZyx0fl7KtEMGbzUOl43XF3D28PlOsacMGH8moj7JiUS7bl1PYapKiif
I6jWzbx5W5zHHm/qp2IbD9U8cx1folq5cldgrak8Z/n/d/Vu0tqX6/gTxdAh
9u83US+bRg0mxTUmfaceOXLc6+kiyfx66Zoq3O+sN1/t4h2365hThWqghFOX
JqvmTac4jxs5QzUsdA0yPm11zH4X6txl6wemvlWh7n/s2AnvO8vv/vr+y5r7
1avHfOv7Vr0JXY9vMlm0aFtgnpf64bqOEQAAAACAaGleXb2ebb97x4xe6TzG
ZBXUe/ffeSs5rdGhfdZB+4Gyyn9RRTNs6DJvjsR2my8/i08PGY3Zk0VbnXre
y/5V3mmd/6DXeNTI2OS4aE0h79/ta1+iv2vu0NU4JCKtK915i/093qxJ7p7b
37P3kOnXd5E3T6w+0lOnrPfeS9rTKpMnrTXDhy0zXTrPMQ3qTjBlSg41xd/r
6fVP0ndC/gsrRrRWEiuX/rO810PA9filqqB8jqC64Mptcx17vKWlrbaOx8AB
i53Hl4hUU0K9yGzjprpmth42ohw918eQKHS+DjqX/u+xFt4atvJBB/Rf7NXQ
Ue6truv1vzr/632q3gH6HmjXZob3vVi/zgQvH+mnciPMj98NNl9/0d/rDfD2
613NK8938HJ7izzUzNx/ZwOvtpvq++laTPX8zoxB/02v97JlyVcbQfvzlcsc
6jvr80/6JHXeSrLR2v0LT7eL+NrixWfaOY8dsaO+fKqho/pD+p2a9Xehrn1j
8Rzqd+L3XnqqaOuQ99VvU9t78a3Xupx2W50/1KPNdk2s3DjX450M1Dv2jpvr
WMddOWCpWk8UAAAAAJD8NF8bNFeptVDNvbuOM5llzT04k+p3xDueHTsOmk+K
9w5rjlr++3Dz0/rt2PYaaf4sPQ61Mj7+sJfv82utISMj/nM0CxdutY5dLHp5
qBdO1nlKG62XuHqPJyqtY9nGSz0SmNMLTXOjWofTOmCLZlNN6R+HeHPnjz/a
wssH0zqe+kdFuq5io8ebMnmd8+NOZUH5HFUqjfL9m9ZsU3E9s1WLadb3snJl
XceXiILWuGTQwCXe+cb295eebe/8GBLFf+5uGLNzb07Tud11PbVIKB/ywfsa
hzyucqWHOY811ei3a9BrcuXFlXz/u2oi6JrGdfyInHL5p0/b4F2HKo/t5mtr
Br4HVJ9hw4bs94p9981u1vdS0G9O/R62/V4Wv/50lSqMtN5+5IjU7GcXqQ/e
Ce5Lmqp9AQEAAAAAyU97s0PNU7Zr667uQW6hORjb+KrPiWpexCMOzTs1rD/R
XH5+hbDm3lVjVmt3Z/aj0F5N230a1puY48ehfUq257/39vpm7do9cX19Na62
eryKJzv9PLTulffc8NbK1aPZ9Xs9kWhfbVC/kSaNJjuPMTfRftl9+w978+eq
ea16PqrloP3dmnvXXsb77mhgbipQ0xTIV8VcdUllbz5e+8e191v9VWbP2pRr
+98kk6B8jhJfDfD9m+pNuY7bBdv34QV/KZ2S+S2hqIZL0Hk5c8+yzic6V/he
m5xd8rQc01QWTr5BIlENENdjFo6duzLMA3eFzpX5/JP41KXD71T3zq8OTKZb
Cv5salYba/27eoa5PoZQdP5zHUO8qf6E6h0OHrTENG44ydvvoFwK1QHS9WI0
55s2rbLf81Kx2B5fte/87qN9MO+95Z8HIrffVMd3r8yCBfb9AaV+GOL8NUp0
9WqPD3w/FH+/p/MYAQAAAACIVqWf7PtARHvp6AUdG0UfaW4dZ62d5fS6j+bH
tN4W7hyY1lFse+Tnz99ivZ/qSOR0D5mgtSBRndV4r6NpTdoWz3ffDIx4blb9
nx8t7L+maqP7uH6fJxL1m7aNlfIIOLcB/oLyOWz9HVST3HXcLqhWhO17yHVs
iUj5Grbzsr7bs/bsUY97221/rjHW+bEkgq5d5kS1zumK1kZdj1koO3ce9HJx
wzme8mWGO483lai/RlC9OtVMUD7p8uU7rLfR/v1Yx7V48TYvz0T9i5TLqp5Q
qjOU2e+uU8fZXr242jXTvHoun37U2xR7saP326HwPY289X3VctCx6RgUp+pL
qL6j+iS5Hncb1XvUvg/tFVCvph7d5p3q65Q5HhoH9XPSGCjHV739KlccZUp8
PdDLedDv44L5q4VdMzISsejFGfReUn2kM3/f6bdFqD5Y3bvOtT6fraaH8qFd
v96JTO+voPeQ+rjt3nPIeZwAAAAAAETLVjc9k+aeXMeYW8yevSlwnqFi+RE5
9tyrVu0yF/61dNjzX5993CdkTezHHmxmvb/6MeTkWNr2h2c1ccKauL6+nTvN
DoxHvSkUU1DvIs1Tq2+9+tFHOmepeV96K/9Oc8hB4xWrvtpAbhSUz/H6K519
/6a97K7jduHu2+r5jscrz3dwHluiUV5pJGtvW7emezXM/G5b6Ibazo8nUah/
XrTrnfGm/eeuxyuI1qdtn2k/he9t5DzmVKF18lD1aDp2mHXq9sqR8LuNavzF
qjejevKo12FOf27efLVLwvU+nTRxrcmXJ7x6jy6oB6jq9MXiWIN+lyl3Q3mI
qk/Xs/s8U+jG2oFx+eWAZGU7n2sOgXwEfx3azwqs2aMamhPGx3deAAAAAACA
WOvbe4H1t6/q1R49esJ5jLnJF5/2DZzj0TxQTjxv3RD1RzPdcHUNbz9VOI8Z
1Nte8ybq5ZNT46h5WK2VBR1L08bx7aWhz4qtNnxW6uld7IWO5vtvB5mypYaZ
Lz/ra55/qq23byg785ZPFGnp/P2dKDTfGTSe6vvhOkYgkQXlc4jf33Qf13G7
YOtf9u2XA5zHlkiUI6o92PbvsFa+65X6vrTdZ8b0Dc6PKxFobbBShZHW3JdE
oLXIRK+porXfu26tG9FxaQ3xwMGjzmNPBbpeDnotPv+kz2m3V5687bbdAuoj
REL9G+L1GVLdD9evQSadq1XnzvV5xUbfNWkxrFnYuuX0mMSlPmza3xH0XEE1
l1T3xfVrn0j0PqxWZXTIca9fZ4LzWAEAAAAAyC7t57f1pNV6vev4cptduzMC
e55c8o9yp9Uaj5Wa1e19pDPnl5RbEOmctGpO2B7z6ksrezWrc2osNYejusW2
/Tiq4RHv11e5MDlRLzgcNaqNcf7+ThTvvNHVOk6qU6Paya5jBBKZLZ9DvUWU
f+b3t/8+3Nx53PF2MOOo9VxT5+c05/ElEuW32MZK/QVWrtzlez/V7rfdT/X6
XR9XIlFtCdWc//qL/l6/tmsuqxK4ZzkUXc/k/XtZk//Cil6O5K3X1fJqV6hG
gq7/dC5QvZ4P3+3hPWeZkkNN1cqjvRxi9VRoWG+ip0WzqV4/CtfjE0TX3nfe
ElkuRyZbb0LEjnp5BL0GqnlwZo061YKx3V75Y7GIS7/b4nWdf2a+ikvr1u2N
+++cIDrPPXR/E6+PrPYTHD8e256bhw4dC8xHDJfOhaGeS7UabfevUJb+Tpl0
zn7uSf/r0axUP8V1rAAAAAAAxMroUSu8mqSZv3s1d0uflZzTv9+iwHkHzcXH
+jkXLdpmndNXrYKlS7dH9bizZm4MzF+oVXNcjo+nrS621hpcvL7Vq45xMpfJ
esJvVGs7aJzIewFC01qw3+eHfI7Tbdiwz3quyVr3P9VNnbI+8FohKPdFta+U
T+B3P+XHxnrdLrc5fuKkl0u8du0eL6di7tzN3rWbzJ61yft3/Xfl0+j9rBoV
6hug3hauY48XrQvecbN/b45Mynu2/a1t6xnOjyE30/kjqGekzg96f/vdN6hP
RrS/fbKKZ7+R/z3m5neNH/WZyU6uWHbp/fDwA03Mj98NNgMHLI5LHxLVR8lO
zv5P5cLvq2rLHUm2Woz6blGvUX2nxPJxVc9U9S5DjfnTj7em1iwAAAAAINdR
HQXVnu3+q527MpzHk9t9981A69xD506xz+eQdm1nentgM59H+69jUYPlmy/6
W48lHnvJ3n+7u+9zqz+2q17TQTWeo6V1K9u8sfYHHjvGfJXylvKea98rqXl9
xgkI7bEHm/l+hl58pp159ok2vn8r+kjq5XPMm7fFer4ZPGiJ8/gSgdZSguoe
6LwcKifjq8/7We9PLTlkx+bN+02hG2sHXn9ddE4Zr8+BrZ8NdWJyjupA2OpI
itbXhw+z9yFR78Wc/I3ydcBvoFjT96/r1yOrjz7olaPHq9+sqgmka4sP3ulh
qlQaZXp0m2fmz9/ibI0+VL1LP8p7ibRe11uvdfF9LP3GSYYcxr37Dpsni7Y6
Fbfyb9Q7rXfP+V5ds2geU7mJY8eu8nJawhl37eugFxYAAAAAAMguzcWoLsaZ
cw+qk6J62Tn1vNq/pLmQJUuyvyctk+ZlbDUyWrWYluNj2aSRfa52y5Z0Z69x
n14LAuegw6W+NaopsWnTfuv+0Jef6+D8Pe2a5g4L3WBfk9FcovI9XMcJJANb
fQ6tJ2m/o9/fEmnvcLxMGL/Ges5RzXfX8SWCoN725/2plFcjItRjaCxtj/Hx
h71yNP7M/cXp6UecjyViSzUdbin4c+A1mHI5Ro74LWforlv985LU68P1seRG
+3/9zNl+X2RSf5+gx1AdCVuer64LN27cl60Y9RvozVf9195tVAdT9ReUy6Y1
72IvdvRy03W9H3S/RKv5pP422p9w+fmR1yjRuV956rpuV20vHX+lCiO9Y5w0
ca3ZujXdWU5+KOohFVSvJyvlikVzLRD021Z5pK7HIBR9Lwe9/5Xb0azJFK/2
jj6jWe+rHLtBA5eYhvUnmlI/DPFyeZTTE0ktnBeebhd13ggAAAAAAMCZVHs0
a936AvmqeLkWruOKxurVu70+7VnnUlQH98xe1jlh6JCl1vmchQu3Oh0XzUVr
T9ZNBWpGNM+pPaCai+raZc6pMdReb9vtU70/kvZsheqh3KjBJOdxAslC52+/
z9Erz3c4bc9lVvrvruOON63z2s45c+Zsdh6fa8uW7Qjsk6C1mnAeR+t6N1xd
w/cx1GshJ/Yra43piSK/v9eVb9u39wLnY4rYUK+Nglf49zTIpPoA6kmZeR/b
GqVqRFDbMLb0mQ51Xadc5hO/nhxCPdaXn/W1Pob+Fot4lX+gc776F6l+hH5/
KBdM58BVq3Z5eSM6p9hqxIXqFagaR4lcX05r5+pbpN+DmX2dZs/e5OUeKJda
/ZyUl659BfH4bZjTdP5QDQ3lpfi9Xg/c1dC0azMjZN8qjY9yHtWLZfq0Daf+
u/ph2d4LqqXq+vhDydrHNxzK1bj52pohc5rCobqhyVDDBAAAAAAAJB/tD9Tc
XyLP04VDPddVR+LTj3qbFs2mxm2+rn27mdY5Hc0fuh4X0Xyz9vdqzk778LSX
U3NW2tOmPXr699de7mQq/TTSy0/x6zMcVNM5UY7TlaBa/KK8qUTd5wckIp2T
/D5LOk+pDoff31S3w3Xc8TZwwGLreUfrPa7jc0nnXO2ptY2P8hwj2T9bpuRQ
62OpTkqs4y/+fs8/PI9yU9T/wfXYInumTF5n8l9UMWQux5jRK0+7n/oh2m6v
/FvXx5Vb6Jr5nTe6Br4+t99Ux/da2c+KFTu9nBu/x9F6vPIPXB6v8rVtvXxE
f5s2db3z1wV/pH61ug5QPUr99lXO35o1uwPvo+89/XZ98L7Gf3itVftDt8nI
OGZ9P+i3tuvjDuWKC37Kdl5GpNR7NKd61gIAAAAAACD7/NZcRLVwXfVXjjWt
i9n2kapWuOv4XKpccVTg/N51V1Zn3ywQoXsK1ff9PL39elevJ7nf3559oo3z
uOOtX99F1nOP1hBdx+eCapYodzEoB1FGjVwR0eNqPdP2WOVKD4vpMeg7V2tD
fs+lNTvXY4zoaa3V9tpmUj+AMWNW/uG+6gNgu88z/0u9819OUc25oNdHuTiq
eRHJY+q7y/Z4RR5qFladj5wwYvhyr6dP0PGq74Tr1wTZt3z5DvPtlwMCa1fo
t6tqvej26kfjdxt9t7o+llBKfDUgrrkc6tmT6nsbAAAAAAAAEp3qs/rN7ahf
gOvYYiVoHUu9q13H50rN6mMD5/c0Rz5zxkbncQLJRnlifp+pjz7oZa25oNr4
ruOOt/797PkcWrtxHV88KQdC9bnCWXv54J0eET++1luvusS/FvujhZvG9Fi2
bEm3xt6sSer2N9NrfODgUW98lK80e9Ymk5a22oz/lfrLuY4vHKqDFvTeVK6H
jsd2/8L3NvK9n+o/uO7xl1s8UaRl4Hp3NPV41PfE1htDatUcF/fj1PdHUD8q
0TnV9euB7FHPphefaWetEXOmYUOXefe769a6vn9/981uzo8pFNUXCcqhihXV
umzXdiY1GAEAAAAAABKc+lHb5nh+/G6w8/hi5YcSg6zH6beHNBVUKDs85Dwf
9c+B6Fx5sf++0BJfD/T2Qfr9TX2NXMcdb0H9VpYsSa1+KwP628ciK+2tV436
aJ5D+UR+j6m+ZbE8lqAcSvVGcD3WsmfvIdOt61zTqMGkUxo3nGSaNJrs0Z7+
erXHe3mPymEoW2qYdy2hvd1aI1ZtM+XVqK/FG8U6e73gXni6nXmqaGvvM668
hbtvq2duva6WKZCvirn0n+UD1yO151z1alyPSyhBdWPUI2D6tA2B99e42u7/
6kudnB9fbvBk0VbWMc5OP4Wg1149TUK99rHUptV0c97Zwev7ypFM9l6cqWzu
3M1e7ZdIcxTmzdvi3f++Oxr4/l3nbNfHFq7Vq3eb2jXTrDXfoqXai3V+TvPy
C10fIwAAAAAAAELTWoZtrkf73lzHFwvak3zt5VV9j1FrrsePn3QeYzzpeD//
pE/IuT71YXEdK5CM1KfKtm5btfJo6/pEKuZzqGeI7Rw0e/Ym5/HF05ef9Q1r
HaZTx+jXY3t2n+f7mMpFiOWx9Oox3xr//PlbnI+13lu2WvwuqSbWhg37nI9P
kN49/V9b5awsWBC6vob6t6kfi20MoqkdgdO1azPDd2zr15mQrcfdvedQ4OdG
74FI+7hEI1SfQHnwvsasVScp/U4pX2Z4YD0Ym6zXUbb6HO+/3d35MUZDNcuU
g6GefaF6DGVSHuFt19fyavbot59yFvX9d/xEav32BQAAAAAASHa22u5ai9Sc
u+v4YkF1em3zXF982td5fPGk11T7FUPN/1GfGojeokXbrJ+tDu1nkc+RxcQJ
a6xjpb+5ji+e1OMs1LlZ++6z8xxaw3n68danPabqfSxdGttaKHVrj7ceg+pi
uB5r1c2IZR5GLKnugOvxCaK6/KpLkjVm7YNft25v2I+hPne249drw1pj9l+j
cqWHeTUzNKbKn2naeHJMHls1ZILev6r1k1O9slRr4+MP/WsMZaVaBrt2547f
MKlGtaeC+gXZqL5Rye8Hm4MZv+fwKI/B77aqU+X6OLNLOS+LF28zfXot8HI8
VFNTOaHffjnAVK86xquDtXVruvM4AQAAAAAAEBs3X1vTOhfqOrZYUV1d2/zf
uHGrnMcXL9ovXfCKaiHnRDVerKUA0dEce1DP8ymT15HPkYVqNdjGKlH6csSL
rUdPJu3HXblyZ7afR2uiyitSPqPWfTZv3h/zY/nq836+x5AvTwXn47xt2wHn
ORtB2reb6XyMwjE+bbVpWG+i6ddnoVeTKJL7btmSHlijY+SI5c6PLzdQToN6
T6SnH4np49r6NmVSjljar++PWD7nvv2H/5CL5ufe2+tH3Y8Kbum9esPVNSI6
X6oOS7u2M31rsVx/VXXf+yjvwfWxAgAAAAAAAOFSTW/b/Nj33w5yHl92aF5P
6wuay7bVpNUeQvVicR1rTlq2bIepV3t82HuRVYM41frPALFUs/rYwPX4Q4eO
mf8+3Jx8jv8T9D3UscMs5/HFi3LobD16Mum95TrOcNnWXe+/s4Hz2HR9kFm3
INFoj/n27Qecj1E8VKlk75nRtvUM5/HBbn/6EVPoxtqB72V9xmJVE0TfE+Fc
xz5auKnXE8b1+CByygvLe265sM6TF/+trPns4z5m7tzNgY9py5FM9t+4AAAA
AAAASC3dus61zpUN6L/YeXzh2rHjoBk2dJm31vXmq11O1Ry58K+lzQN3NbQe
Y6UKI53HbqN+DeohH2nPmyNHjpshg5d6e6NvvCayPW66T27PbwFy2p23+Pdr
l5ef6+DdhnyO3x0+fNw6XjWqjXEeX7xo/3zQ+Vl7zlVXw3Wc4bruSv990W8U
6+w8NtFaoOvcjTMpxzTWNQ0SWUbGMete/Dlzgtdp4Z5qBYWqKSTFXuiYrX5O
qtlw7eVVQz6Pvl/1nnI9LoicahKFymeUAvmqmAZ1J4T120g5kued7f+YlSuO
cn7MAAAAAAAAQLhs6xmaU4s0jyCelL+h3iGqFV/ohuD9gTY6xlWrdjk/ljPt
2XvIPFGk1Wmx3n5THfP5J328verK8/Crn7F+/V5TttQwr8Z1NOORSuumQE4K
2rM8/v/WasnnON3Vl1b2HY9Pivd2Hls8qc+Z3zhoz/LChVudxxcu1b+wrc39
VG6E8/hEeUQlvhpgLvlHePvBlR+q2hlav1bfspsK1PSuP+64uY5XN0B1R1T3
/7EHm/36Hd7SPPdkW1PsxY5e7yX1pvjmi/7ed7T62zRqMMnrD9C753wzYvhy
M3nSWrNkyfaU7HOmvNUz+658++UA53EhPKqPkP/C0NedqtWhHPJIH3/M6JXm
0n+WD/n4ukamtlxy6t9vkTXvIutvNp0X9kfQN0i/Y22P17rldOfHDQAAAAAA
AISr6CP+a4raB+w6tjMtWLDVyzkofE+jsPZwhaKcCdfH5Kf4ez1Dxq6eDXqN
tBdR+x6V7xHtOGievG/vBc6PG8gtKpYf4ftZ+/qL/qduQz7H6VQj3288Hn6g
ifPY4mnK5HV/WLvUOuiggUucxxaJiRPWWL9zunaZ4zy+rE7+8ludiEwHM456
tVKUk6J/T6aaKMlq5cpdptJPI8133wz06ou5jgeRmT9/izUnLyvlTu3bfzjs
x+3eda654C+lQz6ucqRcjwGio7otZ+Zz+b1vlPMR6WPPmL7B+phDh3CeAQAA
AAAAQPIo/r5/7kDpH4c4j037VLVv88fvBnv7YLObv3GmHt3mOT9GP+HuFY6F
R/7T1FtHcX3MQG6iff9vvdbl1OdMfd613pR17z35HKez1YrSOk+q7bles2a3
l9envj16P0yauNZ5TJGqVXOc9Xtn8eJtzuMDEFuqEXffHQ1CXnfquj6cx2vS
aHLI3G3leiRafhgiU+ShZoGvsfpnqi5hNI+tnpq2x12xYqfzYwcAAAAAAADC
pXUV1XHPOselWuIbNuxzEs+hQ8fM4EFLzMcf9gqrJ3e0VBtaa66ux99PvjwV
cjyPQ7Xi27WZ4e1Ldn28QG6lfk5au1IPpTP/Rj7H6Zo2nmw9X2nvt+v4EBn1
GvF7LS8/v4I58esXj+v4kFq0HqyaMekR9GpA5FTbRv2Fgq4/VY8h1OP8XGNs
yOvYKy746VT/MiQn1eIJeo3Vt2rX7uh7f6oXlt/j/jtvJX7/AAAAAAAAIOmo
j4nmX9X7XfU64l2vQXuvVfdW+9nPzC3JKd9/O8j5uNt880X/HDlm1f3QGKtm
MfXjAbdeeb6D7+f0vbe6OY/NhWlT11vPXc2aTHEeH8Kn73RbnakXn2nnPD6k
DuXSqbde5vvvsn/RXy4eWrec7pubHE6+YuWKo0Jez95wdQ0vL0Q1Ftq3m+nl
gOuxq1QaFVE/F7j1RrHO1tdY10jK8Y/2sdPSVlsf+8N3ezg/dgAAAAAAACBZ
zJ69yeulEk7P7Ujo8Z5+vLU572x7neYlS0LvD3RF+xvffLVLTMbi1utqmR9K
DDIjRyxP2HokQCrq3nWu72d20MAlzmNzQes2F51TxndMUrVmSbKaOsWem1Ov
9njn8SF1+PUU1Hlm7do9zmPL7XbuPGhKfj/YFMhXxVx1SWXz9Rf9Q9ZHqVh+
RFjXto892Mz62+Hu2+qZjIzo8wAQH8r7s9UjvP6q6qf1p4tGsRc7Wt8//fou
cn78AAAAAAAAQCJTroL2Wt95S92Y5W/cdWtd8903A709l5s27feeZ9y4Vdbb
q36v63EIh46lZ/d55tsvB3g9yYPyU7JSP3Ht8Z8+bYPzYwBgp33I+rxmrjHW
+TnNeUwuPVm0lfWctnNX9DXXEV9VK4+2fj/NnLHReXxIHbY6MS2aTXUeG05X
v86EmP0uaNVimvPjQbCczPtTr7s8Z/n/Zrrmsirm6FFqFAIAAAAAAAB+1Ke4
Q/tZ3j697M7Tan5eNXq7dJ5jtm5N930+1XS33T9Za20fOHjUTJ601luHKPH1
QPPycx3MI/9p6nn9lc6m9I9DvGPbveeQ81gBhEf9AObO3UyN+F81aTTZet7W
31zHh/DoO8nvNbz8/ArZ3nMNhEvnVNv5pHHDSc7jw+82b95vzvtTqZjlcyRy
T0X8plbNcdbXb/Hibdl6bOX42x67WpXRzo8dAAAAAAAASEQLF241jxb2X98J
l+oqf/FpXzNs6LKQfUO0Nmp7HOWTHDvGviwASDQbN+6z1iG64+Y6zuNDaMon
tL2GysN0HR9Sx5o1u63Xgl27zHEeH36n1yNWuRzSuuV058eEYMpJ93vt1Gsl
O4+rXkoX/rW072Prv2/ffsD5sQMAAAAAAACJRjU5MvsJROq262uZsqWGeTV5
T5z8JeznLPaCvWcy+7IAIHE9/Xhr6/l7+LBlzuNDMNWIsr1+7drMcB4fUsec
OfbcXuUGu44Pv2vUYFLMcjnuKVTfZGQcc35MCPbck219Xz/leUT7mKoFqX6T
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
6G8q/k61kdUTo8IPQ+2++e+/HWS++aK/Xav+6IOedn/May93Mi8+k2bXX1Ub
+qF7GtvaDLfmq23y5a1u9/VfkaeS7aGtOWHlYKjucqzW5/T8+m3v+5xKJBXL
DQ05VtrbpL2eQX+rnu/qP0ztk8gN+WVp4Dla48dRMXvtDRv2mmFDl9n1Eu3P
faFomrnzlnqn5eUkC+UPUavDH82F+z4H4qFTx1nexxoAEpnyrpcs2Wr7xCjH
Wr8P9BugwL1Nsvxdod8DR4+e8H5MABLfmDErzNNPtM3SNSbvBZXNqJHp3mNH
bKmHZ+a9PepLpr6fvuMCAAAAAMTO1q37Tf6b6npfU0L0tG5Jv9zM1D8j1Djd
eHVN77Glmm3bDpirL6nqPDfvurV+VNcxVA+lW9c5tjfGdZf/6P2zF235b6zL
uo8nQTVmRHskVa/nycdb2br+X3/ez+b9KX9MypQabEp/N8jmA9asPso0bTzR
7p/r3XO+reczdMhS24dJ87Ht2063e8OVP6iaGbbvz4sdTZFCrW2OoOoxqVdA
LHJM9LycYwCQParntGrVTtOv70JT9vvB5r47Goa97i5YsNl73Igtfa9qv/zK
lTvN3LmbzMQJq22+seooduww0/5Wa1R/vL0/0D2Dev599dt9xCcf9TLF3+1u
7yveKNbZ3guoXox6BxUt3NbeFxQu2Mo88VhL899HW9r/LfpvWaW/1/PptXSP
ohx23+OG340alW4KPdIiy/d0zzzZzmzcuNd7/IitnbsO2bz/M9///1xUxaxb
t8d7fAAAAACA2NAedt9rlogu9f/wfV4lktuurxNynFS7wXdsqcaVOyOqSzNz
xvocv4bWTlQf/dki7RK6Z0q0aC+w7/c1N1Ltnjdf7XLqfdC8qebJ69QaY2v0
+1r3OPHbB2DvviN2vn7p0m1m+rR1tjdXz+7zTMvmk20dqs8+7m1jvfnaWhH1
WJ8xPeefSwDA79Q78fVXOjuvueqp6DtGRG7hwi3ml8FL7Pes+vY1bjjB9ltU
DobyL1WnUb0YlbOc74rq5qJ/JGe/NtWaPH7ipPfxzs2ym8ehmhz6vaDfSL6P
AbGn3DDXufDw/U3J0wYAAACAFKVeBL7njxA99Ms9nXoJuXoNax+l7/hSieYR
g85N9TLK6Wuof/RjDzX3/jmLJ+XI+H5vc7MtW/bbvIljx5JzblS5H1qH0j5f
1zmm/cK+4wSAVHHw4DFz/52NnNfcZcu2eY8R4WkPvGpw+b4PjCf2BMSf8nQH
Dlicrd836rehenC7dh/yfhyIH+VyB50X5csO8R4jAAAAACD6cts8VSpTvwn6
5Z5u3rxNzvFS7wPf8aWKNWt2257wrrEucF+THK2Ha7+galLHsh7Hpf+uYPta
KNYihdqYl5/rYN5+vaspUbynKfnVgFN9Mxo3mGDrZOv8Ua+Mvn0W2vVyffbG
j1tl993OmrnBnntLlmy1+3RVb3v16l22JrvWcZSXosfqb5s3nWQ+/rCXcz/n
80+39/7+IvnpPHSd+z1+nus9PgBIBbrXeeX5Ds7r7RV5KlEDIUmo74nv33bx
dsNVNajxECeq89aqxRTbWzGr71Oes8vaGqtr1+72fhyIP31GVYfDdX5oL8vk
SWu8xwkAAAAAiC7tB/E9d4TIXPj3cubGq2va/TvqA6D9OFoL1nuoteNk3T8e
S716zHOO57Sp67zHlwo0p6Qaza5xVp5CTvai7th50Dz+cIuofY6UE1Lg3ia2
T/lPaTNsr4ndew57HcOtW/fbPXah4lUvdd/vMZJfjR9HOT8TY8eu9B4fACQ7
1eUIyuWQKhVzXqsM8ZGsfVNyavNm6jzGknK7S383yFx2TsUsvzeqw/n9t4PM
+vV7vB8H/J9H6rPjOlfuuLmeOXLkuPc4AQAAAADRpTXve25vYOetLvjbD0lP
66LhhHsO5U5oPC76Z3lbd+Dy8yqaKy+sYq69rJrdu3Tb9XXM3bfVNw/d09j2
TNZ+/heKppnXXu5k3n2zm93T/+Vnfc23Xw+weRfa21+5wjBTtfIIU73aSFOr
xmhTv+4424O5RbPJpl2baaZTx1n2vRg8aIkZM2aFmTljva3zr/4pBw4e9X6e
JCONtWuew1WbVn2yJ4xfZfbtO+I9/mTQptXUwLlH/XtOnl+fp+zMR+tz++Dd
jW2/ku++GWhrSKs+rXrw+B6zM332cW/ncej64Ds+JLdt2w441w30fac9or5j
BIBkpt5cjzzQLPC+RL8fuN4mj6C6c6lKv299j3uqGjd2pXn1pU7OPqBBtG6v
GoH0VUFmw4YuM+f8yX0+kT8IAAAAAACSxftv/xxyfuPqS6r+4bGaI1NeTsZj
1H+jT6/53o8hkWl/WNB8t3KccvL8qv2h9eZw85yay1LNjYrlhtreJ8m0b234
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
ytmeO3j6ibamVYspZtrUdfa5fB8PUt+2bQdsLdJQ56PyE33HBwAAAADIGdUQ
vf/ORt7zJRKd6qz6fq8QGdWydfU1PnNPmnrxuN5z1e7wfSyJRHvMXGPVtvU0
7/ElIq0JhcvlePWlTub4iZPeY0VyWrduj7npmpqB55j6Zh8/zjkWbwsXbrF7
e/exXx3IstWrd0X1Pl79ppTvUeyFjnbdW9/PQ35ZapYs2WoOHTp26jXVrzHS
5/zw/R65fp22RPGefxgX6hrGl3KQSn41IOz5qtzh3FxDJqv69V0Y1WvQtZdV
M4ULtjKffNTL1K011tZMU02bZcu22XX4VLhP477Hv+efbh/y/NPcyPYd0a9l
BQAAAACIL9UzbtNqqin2Ykfz0D2NbW2D6y7/0Vx5YRVbv/3Cv5dz5vrnBtqj
t3EjPUeThWo+u97Ln9JmnPbY/DfVDfk4/Xffx5FI1q/fY+sGhxorXScy1kLw
P3VqjQl7bXnmyXb00ka2bdq0z9x+Q53Ac+ye2xvk+vXGeJsyea0pWKD5qfdA
+9VVJ8B3XEAy0Z72eN3nK+/y8vMqOe9zznT1JVXNgP6LvI9RItD1LdQYUds/
PpSfEZSbnuHjD3uZE7892He8ySTa+RyR0Ofp+itr2Hs31VN4oWiaefv1rjZv
Su+zaq2VKzPEVK4wzFSvNtLUrjnaNKg7ztYjatxggmlYb7ylvhuzZm2I21jt
3HXotFw4zR/17bPQ+3uYG6kupOv84l4UAAAAAHIX7SNXXwWt36q2x67dh8zW
rfvteq9qvmstffbsjXY9Y/ToFeaXwUtM757zTaeOs2yNC80xVKsywvbD/rRE
b/PWa11snd5HH2xm7ri5nq0Zr31d8Z4/cdFempEjlnsfd0RO80eu9zNzD+MN
G/Y6H/fV5/28H0ci0Zyha6w0p+g7vkRT4YehYa8tmvdULp3vWKNB133tMWQ/
Xvzoe/fOW+oFnmP58la3382+Y80tdA/kqmN0wd9+MGvW7PYeI5As9BvDlSvg
052//VZp0miiGTUq3X7mc3uvOa3bhhqn997q5j22VKdcji8+7RP2nCWXI3ty
2m8lEZxZlzJWir/bPeR9z9q13PfEm3K9XefDt18P8B4fAAAAACD1aJ1T61Dz
5m2yc6Y9u8+z+SDa8661Uv0e1RyW9qtoDuGdN7qaN4p1tjVGXnwmzTz1RJvT
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
G+Vy9O1DLke07Nl72JT8sr8596zwe/kzXHlhFdO08UTbe8F3/IlM57xrDL/5
on9MXlN5VtWquOtLZVCOoO/xQXQpN+Oxh4J7VInW27WGnRvrFKiXVKLXlohU
IuSMqmab6rsojyjjv2Xk7ag/TMcOM02VSsPNe2/93pNH9wm+xy3cmKqux7df
D7D3s/sS4J4LiY98jsQSNNcRzxxGAAAAAAAAF1e918zrRlqTDvUYrcVn9GTJ
7TT/5poHUj96HzGpBoJyC+Ixn60991rv0Br8kF+Wms4dZ4XtOa+5zNGjV3h/
78LR+lW4Y0l0hR5p4XV/WZ1aY6JyHFrXUd8JnWtlvx9smjedFLY+hNZaevWY
5/08ShWqcXLtZdUifs/0PaHrY1Zr2ORWWju+7JyKIcdS+VDRzofRmurbr4ev
zaB7hY0b93ofH0SP6k49cFejsO/91ZdUtevsvuP1bdOmfWbihNU2N7BNq6nm
x6ojzVef9zOvv9LZfsfefkMdc+m/E7s3i/rpJGM9CX1/zJq1wX6X6z5Tv0tU
My0r30Xxous3tcAQjqsWFv1W/Pih9C8h3w/lg+fGPEYAAAAAAJBYNm/e55yP
bNxwwqnHuWp4aN+c72NIFK5eK5efV9HrfnTVZij51QBz49U1vc9xZ6YeLOrj
4/t9i5RrH10yUc6Nr325+fJW93LMWrsq+VV/M2/epqRcw0okqsnx/ts/Z2n8
Vdt/zZrd3mNPNlojdo3psKHLovY627YdMI8+2Czs+6jaQ8OHRe914Z/uDYJ6
+2QoWKA5eTxZpBwpXffUb0510lRzRzkIqt+gWl/qDabvJh/fiaod5nt8ou3r
gOulL8pjXL9+j/exQeJy7aegPocfxV4MXedPeXq+YwMAAAAAAFC9Y9dc5MAB
i+1jNC/t6mutOVTfx5AItFbsGscP3+/hPb4M23ccNCNHLDe1aoy2/SmuudTP
vkbtdSpauK2p8eMoM2jg4qRY71XPFN/rA9EwdMhSL+OXCPkwWj9TXtPzT7e3
+/A6d5plZs/e6L32fDJQXy3lA0U61qo9P37cKu9xJyutA7vG9rOPe0flNdLT
dzjzEDPT+75w4RbvY4LoUe2uZ4u0C/vef/JRL/ojxYhrzL/+op+tW9a39wLb
m0092ipXGGZr5hV/t7tdc3zqiTY2n/rOW+qZ66+sYev2uO7TM9PfKI/b97FH
U/myQ8Ied6lvBtrvo7T2M0y5MkPs/e8dN9ezPd9iec+h98/3+CQL9RZUj8ZO
HWfZem7ffzvI1mB59aVOpkih1ubBuxvbdfUbrqph8l1R3eYIq1ef3kfVGFLe
mT4XLz/XweaRqm+fviuVG6nfquoPV/q7QaZiuaG295/6Raq/hu4DVUtFnznV
f1HPn8x9gGLpqourhr4GROm3tY6le7e5plmTSbZuItfyYDq/Qr0fLz37k/fY
AAAAAAAAfu46xzkPuWDBZvuYmTPc60rac+j7GBKB8hJcY6S9mb7jC6L9g+r3
rfUCre/46lOuOiaFC7aytUTat51upk5Za+sB+B6fDPsPHDVvvtrF257aaPHV
d0Rz8r6P3UXrYHfdWt+891Y3U6/2WFv/YN++I97PuUShdUVXXfAzXXlhFdOu
zTRz/MRJ73EnO1dNJa0BnTj5a46ee9bMDc61pMy0jqY8QN9jgegKl5+oa6LW
AH3HmcqU1xpq7NXDJbvPeeTIcdtDZ926PWbZsm02D2/ypDV2rXru3E0p1zNA
39fhrmFBtQ6U16Q+dFrrbtJool37f/qJtjZnIBr3eh07zPQ+RolKOYLK29Ba
eSL2zNFvkrtvq29/F31aorfNAdFv3lGj0m1to2iMwT23Nwj52spJycnz6v5A
eU7nnnX6Oawcfn63h6Z+Tq7PvHo7+o4PAAAAAABAdRpcc1kZ65naz+Z6jPYy
+T6GRFDg3iYhx0c16jW/7ju+rFq1aqfp02u+3cdYpFAb2wvc15yq9p6qnkKZ
UoPtPKTWJrSPz9fYaJ1E69XaI+tzXLLjwr+XM1u2+Bk7jZtr71si0ntLfwlj
c6siWdfSuoH2v+7afch7zKlC+5Nd463aWtl93lEj0yOql6M1/2PH2M+bahrV
Hx/4vqtmQUZ9NsSO6zNIr4XIBP02yaB6DNl9ftXtWrp0m83Jbt50kvnum4Hm
lec72P6Tl/67QtjX1mPUz8r3OCUa7RFQrQ3f93g5ofdWea45HQvlsoR6ftXd
ycnz6lwNil/1P1IttyundL/vGi/VOPEdHwAAAAAAgGpph5q70B7rjMe45oW0
f5M+BcZs2LDXOQekeg6+44sGzfstX77d9Ph5rs2rePLxVhHNZ8d6PlVzwhpj
5Z20bT3N7puLZ10F7YHTHkPVvFBNdH1W3n2zm93P9+iDzezeO/UzUE6KPlPn
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
fUxQ3fYMWrMnlyP36dt7QZY+O+eeVdrmSd13R0O77qV6/Lo31Hd9uL+tUmm4
9+NNdGPGrHCOn3JlfMeXKJQj7BonnZ/aY+8jLvWpUu2NDj/NND1+nmt7Eeq/
6zvmicdaxvR7jfMj9QTld0mes8vaGmXqOan8JdUknDF9vfnmi/7mvL8E137J
vL9A56erVox6cvkeh3gJtz/hg3e6e48RAAAAAAAgsztvCV1/+9WXOp16jGv/
StHCbb3H75urn3e+K6p7jy2aNm7ca/JeUNk573XB336w89rRfM2pU9aetrdR
fRfS03d4H4tomzJ5rXNcR49e4T0+H9QDwtUbwH6+8lb3toaTm+3dd8SuXWnO
PxlzO0Q5Qvfmb2i++2agGTpkqe0R4XtcIzVv3ibncb3+SufA/mmZv9u1DuT7
WOCHeuzE43OW9/zK3o810Sm/zDV+8+dv9h5folBOb9C5prpFuv6pXtfPXeeY
SRNX23tFrVvn9FqnexG9vuof6P1qUHecXedVvZAz18SvvqSqXWtXvlxOPz+6
xwn6jlXdRN/vC6LPVTPzTMq1C8p3zky5RWfmPrvqxlyRp1KuyJOeNXODHUPX
mOW/sa7Z99v9ru84AQAAAAAAMnPNF3779YBTj3HV6H76idydz6F1QNUnDzU2
ms/1HV80Pf90+8D5ws6dZkXttTQf/trLnUK+jvKPUm1fedCeaY2F7/h8qF1z
tHNMNIedW/NcEonWuZRz1bTxRPPRBz1NgfuamIv/VT5m68Oxou/A4u92N+vW
JUcNIFcOZrj9ufLK8x3s++b7GODPgYNH7b1brD9XOh9zw7pgTqimg2v8VqxI
vdzV7EpP356jc1HfS+o3cfsNdcyDdzc2/320pa3v9eIzaTa/Tf1LlA/y0rM/
maeeaGO/y26+tpbtY5XV19L1WfnNkT5ej1U8Jb8aYHtdjBu78lSdD/ULc8Vw
4d/L2fogvt8bRJdyCJRLEK3rsHKM1q7d/YfXCcr9XLAg9XPJ1Jsv6J5QdRN9
xwgAAAAAAJCZ9lq75jO0By3jcZrzDPUYzYf4PgaftAfQNX6p1INYfVaC5gtL
ftk/x6+hc7Frl9l2nSncnrPp06JbB8S3Zk0mOY81N9ag0Lq61ipcY5I51wyJ
RTXAN23aZ2v19OoxzzRuMMGU/X6wef/tn+1nW30btK4WSe5BvN1wVY1T62iJ
LJIaHKGQy4EMR44cN6VKDnTW3I8G5YD6Ps5E17HDTOf4qSaa7/gShe0PEbCX
PtGox1fQv+v7T3kkfXrNt/lVQceuvkWu5xk1Kt37e4PoU/5SJD2twlEukPqx
hHoN9TN0/V3b1tO8j0EsqfdM0Lhl9K4DAAAAAABIJEuXbnPOZ6hmccbjtHct
1GPuv7OR92PwqWG98c7xS6Va2UF7eR95oFm21wi3bTtgczi0LzIr+xknTljt
fUyiqcIPQ0Mep2q/aH3cd3zx9vGHvZzvvfbXHjrEntRUoByuNWt22zr2Y8as
sHPommdv3HCCqVp5hM3bUd0M7Zl+/OEWdt+z1jhiuQbdvOkk7+MSjvoIZPW4
VO+IXA6cSXuQdX8X7bVy7S8nHyG8tHbTnWOo+yPf8SWSD9/vEbPrfjTps1Si
eM+Q/3b5eRXt/d6GDZF/Nlau3Ol8rUb1x3t/XxAbqs1y2/V1sn0eqgdR0O9Q
3UfnOTt0fUnVW/N9/LGieY+gOnLffJHz/QkAAAAAAACxoJ4FrjkN1fzNeJzm
dlzzRb6PwSdXTxDtiUqVniDar+5aP9Vxaj021N/p+PfsPWz3mWkfmPKD6tQa
Yz7/pI8pWrityXdF9WzNUWpvv/rc+B6XaPrs49D9sjVGvmOLt1Wrdgau12vd
33eM8Es5TtqvvWjRFjNqZLrp1HGW+bHqSLvepz7x11xaLdtrIKol4vv4IvHo
g80iPiat1x87Ri4H3LRmXK3KCHNv/obZ+tyonpJyrkp/N8jmZaXad3SsaKxC
jafWWcm/Op3OKeX3ZffaHi/K5VDNjcx58Ndd/qOpX3ecvSfOzrG7eq6oxo7v
9wWxo94rqn+YlRxWPfaLT/tEdK4pHz/Uc9x9W33vxx4LW7fuD8yR0b2jxtx3
nAAAAAAAAKF06zrHOa+xfPn2U4/THH2ox6jHrO9j8ElztKHGRfUsfMcWLUE5
P3JFnkp2DkyuvLCKueycilmqtZEV6gM9edIa72MSbW+9Frr+zT23N/AeW7xp
fcL1/r/9elfv8SE57Np9yOaRNW080fZ6US+VSK4x6hHjO/ZItGg2OaLjeeeN
rub48dTILUR8KFdK3/vt2kyzOR5fftbXvFGss83DfObJdrZPhHIQlZ/Zt/cC
s3DhFs6xbNLaYaj8M+Wm+Y4tUSmnUz0gY1mnKTsu+kc5+1nJnIezZct+Ww8g
p/nd+W+qG/I1OU9yB9VR+rREb/Ofi6o4zz/9W8mvBtj6XZE+r3JFQj2XPlup
lpO3efM+m6cS9BlW/yvfcQIAAAAAALgE9QvZm2mPiurfux6XlbrBqUS1xF1j
UqXicO/xRUu/vqH3j8Z7nrxS+WHZ3tuY6NRPItRxFyzQ3Hts8aR1kLznVw45
Fuo3v2JF5PPUwJnWrt1tcxi1Fn3TNTX/cI49/3R7c+Lkr97jjETPHvPCXjff
e6tbytSJAlLV7NkbzV23/r7OeM6fStu8xf0HjnqPK9GpH43yidS/5Nki7Wzt
tnjdk6pvyn8fbWl7M6hHmHqGxbKeinpbhorj3Te7eX8fED/6Pp8+bZ3Ntavx
4yhTt9ZYW59s1swN2cqpS2s/w3mOz527yfvxRot+O9yar3bgZ/qFomm5sr8l
AAAAAABIHqot71o/z/y4YUOX5Yo5n6wYNHCxc0z0b77jixbtaTr/r6F7LMcj
j+O7bwaaTZv2eR+HWFJt5FDHr9rivmOLpyG/LHWeCx++xz5URNeCBZttjQHt
UVWeR7LkPmjtMKj/u2h9M1mOB4Ax69fvsXWFfMeRzJSHrnoxI0cstz3+WrWY
YmrVGG3KlRlivvq8n72PUJ/E555qbwoXbGVzZgvc18Q8eHdj89A9jc1jDzU3
RQq1MS8/18HWvlBtwto1R9v1c+U2ay1d98TxPq6MfJ8zqfaU7zFH8poxfb3z
HqLHz3O9xxcNgwctsbUjg+6X1Nty+/YD3mMFAAAAAAAIojnNUHMbN19b67TH
qf52qDV9rSmpT7Tv4/CherWRzrkh1e7wHV80aU48nnkcmldv0miiPe98H3s8
aF35zB41ec4ua+dafccWT9rr6jontP8wVq+rfY3KWVMPi/HjVnkfB8BFNUYi
2Yf+cfGe3mMFAOSc65qvXGDfsSF5qd+T6x6iZvVR3uPLCeVdKd8p7L6Bf5aP
6e8LAAAAAACAaFBdea0Zh5rf0B61Mx/fqP7pvVlUF1p71nwfhy/qIR9q7K6+
pKr32KJNNWi1XzFW+Rs6l5TDoX2Q6enbvR+vD5MmrjaFHmlhrshTyX7+Ro9e
4T2meNM5EOr8UO/4WLzezl2HTIO648wNV9U47fXeKNaZ2gZIONq779qnfSbl
h23Zst97zACA7FMfl3PPKh3yOl+18gjv8SG5XXVx1ZDnlvrS+Y4tOw4fPm7q
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
PTYAALJDeRXt2kwzl/67QsxzOQoXbGUWLdri/ZgBAAAAAAAAAACQOo4dO2Hy
nF025PpUya8GeI8PAICcUP+V778dZC7+V/mo5nCc++cyptgLHc3IEcu9HyMA
AAAAAAAAAABSz5IlW51rVW1bT/MeHwAA0bBj50HToO44c9v1dbKdw6H8xyKF
WpsWzSbbPBHfxwQAAAAAAAAAAIDU1b/fIue61cQJq73HBwBANKkPy7Sp60y1
KiPMc0+1N9dcWs2Zu3HnLfXMO290NfXrjjPjxq40Bw8e8x4/AAAAAAAAAAAA
coeBAxaHXMc650+lzc5dh7zHBwBArClPY/36PWb58u1mxYodtvbG8RMnvccF
AAAAAAAAAACA3GvvviPmPxdV+UM+x4vPpHmPDQAAAAAAAAAAAAAAILeaPXuj
yZe3+qlcjicea2l27aY2BwAAAAAAAAAAAAAAgE/Hjp0wc+ZsNMuWbfMeCwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAQLwtWrTFjB+3yuzbd8R7LAAAAAAAAAAAAAAAALnV
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
22ZWzN+7yDfBeYYprqVLd4mPE0LCDGpBrV+/X5/14J0HvVaf3ou1XrZpkzRd
6wh108qU6q21YKhvBM/kpx5LVsWe7ag1VXgX/vLjWNUsaZr26xo7Zo2uH4A6
eKyFRAghZkyaeADvTen4SDh4921zbjw89aTjI9GxevVe7UOIHAPpWBINrHtN
zxTvxx+gPrDdHgJqsBxjf+UZ7HmY+rh1ixni8UUC9RyEEEIIIf6APfgtWw6p
yZPWq3bJs7Su+tXi3dTdtzTO07lgNNx3RxNdS2bWzC3i/ZIImPwS4YmS+9r5
87Yb71vD+lPF2+IVqE8BfcfZs+c9/budO8419h/qTEi3O5GpXcOcBwHga+zm
71SvMt74N7z2a4UfZ3r6Jn0GgJpbeX333n59fa0Hya3jihU4VzbFVvrNXuJj
hJCwAN0G6qXBo+3tN3pqbWwsdLtX/62afhe99XqKqvLTWJXSfYGeN8C3SLpP
CCFEEngCmt6dV/6lqtq6VaYmHwkX8N6z+x1mXcLwgTkb9t2y7yFqKgwbElt/
xEQHeW5WzxP8lFBfRDq+IICcFfxW2a0BFi/aKR5nPIAxh1q/Vv388fv9xeOL
BOo5CCGEEEJiz4msM7ruxohhK1Wr5tPVt9+M0Hv1RYu0VY8+2FLv3Re8u5l6
rGBLnctZolgXndsJ7w/keSKXE//+v+c66TxPnCvgc8j3fKV4V/2/JzVOU+PH
rdXn6NLtTTSgo7eaX79Rovsl18K/wjQfZ51MZxo1mGrZd9BMwftEOr5E5oWi
HWz3R4cMWu7q7+AdZ/X5u25qmOcYsbbHuxg5RMiTRy0gL85g4UkDn1npeqz4
TTDFGM/6viNHT6lNmw7qPbCpUzZoz4SeKQtVh3aztb4GWjn4rsIT4YdKo9Q3
Xw1T5csNVp9+OEDn+kKTh9/Yd0r20roX/H/kbqLWGn5foY+Ezgh/C3lV06Zt
VDt3elNDigQHjB/ozuDPE22NJb/AfvgTj7RRlb8brXUmqA0o3V+EEBIrkDeB
un2mdyR+p6VjJMFnzuyt6qq/VjOOI8wFpWMkkYE1APbPct9L3OfNmw+Kx5co
/Pj9aMtnKv81dcVjCwLw4bOr8QRQ61s6zngC++RW/Qy/ROnYIoF6DkIIIYQQ
QrwDfogm/xWc/+W+Hpocq2uhH2fNZ2dwFsu9guABzZrd/ihYvNg53wR6NNPn
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
PUb4mGFObXdPMCcfPWq1eKzkAqjrVvBuc50V7E9Kx+gVHdrNNrYT/SAdHyGE
EEIIIUEGORpu9snefKWH5TXYs4z2u5H3Ag0IfEwnT1qvevVcpPM3oGlAzinW
NG5zYvwC3//iMx1VzWoT9N6IF3VaDh0+afy+ZknTxMdEomNXO6Vr53mWnyn8
UCvL63GWJN2eoFH6zV7GZy0rK7hnaqhfgnowueOG/y7qJyW3nqnz8vJ6Loj3
Q/lyg12/o7Bfh/endP+EBWgYTecp334zQjy+eKR/vyWO+s17bmustaHSscYC
vCOSGqfpPOxI5ySYG8WzjiMnpnknWLLE/jwK+e1u9HDfVxyp67tIt5UEF+g3
ncYRdOo59Z04Exw3dq0qU6p3xL47N/y3lho+dIXv7cJ5H3wjoL1HG+HxDl0o
asA88kAL7VPnlx+JF8B3B7kEEmMCNVX8aBPWDD9+P1r7YsJfYfGinXpN8tty
Wfw5SCRSp2aoW66t5+qePVigqc7/kI45N2lpG40x+1HjCVoHu36CJk66T9yA
vKSwtwHryCKFWtveD8w/p6dvEo+V/AHy3kz3C3XSIq01GGTs5lVB0sURQggh
hBASREYMN/tx5vTwNvlJYK/Sz/ig+UCOJfYl4M2HXFbkpd55Y+S5b16Avc2n
Cydr75Ixo9dEpSHH/pzp76Nuh/SYSHRWrdprvD94XnJfj9oAprzNShWGi7cn
SKDmq+kME8+1dHx2mDwdcgOtwLNPttfvCIyXSPwG4Pnh1pMDZ0Q1qk4ItAYm
iOCcN+x7tWECOVhOee3wxfKrnnvQQC4k2hvp3APe/kHxcY8V0Pia+gPnzqbP
wa/aNGfNCbzjpNtIgk3D+lMdxxF+73F+ZvobO3YcUfVqT3Y1JrOBvjUI+jbo
CLDOwTkSzjmXLdutHjecEz76YEtdWwRaBOTi1601Sc+DoJP84rMh6uP3+2sv
HKwb3ynZS9e7xL+/X6av9gtxy6cfDtA1l6Q9dZ54xN2c0AswHpDjgHky+hKe
mSk9FqrU1AzmMnsMfEXd6phQuyioNfowXzDFjT0VL78L7wmneQ1yYqT7xA3j
x601tiE9BPoHaNahybO7FzdfVUctmO+9podET98+i23vGX5bpWP0khZNzTUV
oYeVjo8QQgghhJAggz0303w6M/OEvgb1N4O4H479U+TEoP4B6rm8/nJ3xzqh
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
EldcVNeOZU6e9K05+uP/khqraklVqjDc9sGKNt4H721j9qRJfQvlS11VrH7g
dpz+l/Lmu+92eY8RAAAASHXKq1CdwPbtZtgcDNV3ffSBduaW65qYi86raQr+
PXF9hwsVqGRuvraJ7dlbq0aOzRNZu3an930Sq82bfzDFitQO3eZzz6hiZs1c
7z1WAAAAAACQOOvW7TKflh5kHrqvjXn6ic7mnVJ97byt1sWoB8PQIUvMtKnf
2b4N3+/c/0vPBiSXehi55pp9x4a8695tTlR1ObQWq8wng83s2Ru8xyyHDx81
PX6K/epLg3Mfjnf3bS3t+jvfcYfR/o20Hcq98R0nAAAAkGp+2HvI1rNTX+BY
6volw78KVjElHu9kWjafbNas+d77PouG+mXeeUuL0O0qcnY12z/Td6wAAAAA
kIm0rlp17DWHZOfNG02wNd5nTF9ntm7d6z0+ZA/VOD339PA+rMc75Q9lzb/P
qmauv7KReeDe1ual57qZjz8caGrXHG17PwwauNhMnbLWrFq1I23W5qeDF5/t
Fng8NGbmOzbkTe+e8+zvKNI6q9atppoDB454jzeIepNozZ3ijHTOUJ5YquaB
RZPLIR3az/AeKwAAAJAKlOOtdR+qg5HIehuJcsNVjUyj+uPNxo17vO9LF/W9
DNuGoufUoO8qAABIOvXXXrx4i70X7NxplvnqyymmWZOJpnGD8bZnXrUqI03l
it+YiuWH2zrTuT4vFzu9v2rlkXbtMfOnAJJFc1qa2wp7Lvvn/31ubry6sZ2/
rV51lM39WLhwc8rO6yE97fh+v7nw3BoJHys5468VbF1V1Vd9+P629nv97ltf
2164ygFp1XKK7XUwauRyW4NAfQ1SfT2/D3fc3Dxw/xa/5yvvsSF6yt+LVJfj
keJtzbbt+7zHGo1t2/aap/7bMeJ5oH6dsd5jPZ56ckdzDjvrpIpmy5YfvMcL
AAAA+DRv3kbz2ceDbQ1B3zkZ8XDqn8rZfjBLl271vm+PpfVeYXFr/5PLAQAA
Eklr+XS/oTkb1S3+4N3+dn5H908+7980Tqu61773D4DMp/6dsZ6rTvl9Gds7
U71HS78/wOa9KQ9O9RX37WP+G3nz+ss9vY+fhDnzHxVt7Qn1a3j2qS72O6/8
j44dZpqRI5bbHCf1f/G9H5PFNWb25uu9vceG6Lh65hxLuRHKc/Yda14pXyMs
T6XAH8ua+fM3eY8z15ctJkd1HtK6t7FjV3mPFwAA5J+eHzQeKWPGrDTDhi61
86Z6vtC9gfpN1q09xq6pUB1NzVuX/mCgXSf/3ttfm/ff6Wf/u/53rTerVSPH
NG86yXTtMtv+LfWoVI1C9Z/wva1APKi27Jw5G+xzuGpa+B4jSBTVTtTvOxXG
F9au3WkKFajkjFXrv2bNWu89TgAAkFm0Dn36tO/s+rf/3PGlXaPr+x4tDDkd
ABJN40KJOoedf2ZVc9uNzWxfUOXLaRxK9frVy3TSxDVmxYpt9L+ApetzOtZF
dY1nXFWsvnnovja2Z69qeqkPhHI+VPtr1+4D3vd3fu3dd8i5/TWr53iPD5Gp
5lyk7/KD97axfZJ9xxqrHj/dR4f1kbnr1hbeY5Rvhi+z+ZFhx0K5k22+mkZd
LAAAMoDqEqqmXTKfUc4+uZK59vIGpsRjnUzZT4fYnI9FizbbdW6+9wcQRvX3
lN/05KMdzTmnfuHtOf/0v5S3vyP1d9T/15xCpJ6V+VW0cA0zzmMut8Zp7rur
lTM+5c8PGbwkbp+3c9cBuz5s/LjVdu2ZekzqufWLz7+xOWyqrarvgfrsal5H
samWpNbbvFOqrx1zVE4c5zYAANKXctEb1Btn74N83ffFosjZ1cyRI9x/AEic
aNcEJ5Lmvy8+v5a55rIG5uZrm9g+Dvff/fNzmdaG65lN8+Kflh5k+1LpeU7z
4+r7onVMu8kJSXvK6/H9PUwm1eHS9121bTTuUKPaKLsOb/To9Pg+q66Ba9u6
dZ3tPT6EU32HSPkDqkOTCWs5NQYYtp3Dhy31Gt+aNd9HHJfW2CXjkQAAZI5U
qkuonHrNi2rd24Txq9OyLhsyk3qfvvZST3Pan+NXQ1v5F+q9qmcd5Ta99UYf
2/9ccwbt2063a4/0rKQ+Luq7qvwC5VMrr8EVp2qGaDxD9/WzZq636ziUV66/
qRobxe9pbf59VrWYY1ZdQa2L8nEMIo0Xau1KXv+m9tfKldvNwAGLbJ2Vl5/v
bscBVQ813mMuzzzZ2dYQDjt+AKBzvnLndM73HQuQzXS97txpVr7um3xT3UXf
+xFA5tK9ip5nfZ/r8vuc1q/vAu/7ErHbunWv8/gWKvBFXMdwUp3GMXr3nOf9
mITp32+hM/6pU9Z6jw9uqq2iWg9h30Gtc0qHvKJoffzhQOe2PvZQe29xKWdb
+Ythx0JjzIw/AgCQWQr+LXVrBWutxROPdLB1wTZs2O19XyH7rF69w67pCeud
GK3rrmhoynwy2D5fL1261euaSY15jPhmma1nqRyPvPZ6V+5DMuNVnxWdD1zx
aBuUm+F6v/5NNXmVI6PYlZtz6/VNvZz/tJZGeR2+v9sAUsv2HfvMvXd++cu5
QvlzD9/f1rRqOcXm9PmOD8gm+j0qx9z3s1B+Va74jfd9CSCz6Tnt1Rd7mAvP
rWlrSPo+78VCcXOvlb7Uh8R1bFWHRa85ds2LxkHUk0z9oatUGmHXvWjtha77
V15cL7S/azrQ2I56Xfs+Li7164x1xq56uL7jg5tqwYR99155oXvG9fRQDour
Rp+e1331pVa9qbBjoXMadTmQDAsXbrZ1remBB0Sm9Xu6N9WaZa29btJwgmnb
epqdr5o86Vt7r5rOvcqQHFqP4Pt5IxqaT7/n9pamZfPJ3OMjKVSHNSyHIBqX
X1jX9t1QLoHv7Qmj+y6tS1KvED2TRLNtzZpMTFp8issVR+HTKpv163+b76Vz
hGpuqN6J6u3m9zgmQun3B4TmoADILhr/CjtnXH9lI9ujTj1yeVaOnnpeMb4Q
O43PqGbetu37vMeSTKrXlajrv+6zlE+qNbR6DlPfPP3//HDVvX6uRBfv+xJA
dlE/3zlzNtg1+Bqj/ODd/vmuEZkMGkv1ve8Qm8GDFjuPq8bGY/mbqhWsMQbV
aVX+R5fOs0yj+uPt+MKbr/e2vXw0Pqk+0kXPqRH3+p75pVwV38fF5Y3XegfG
rL4RvmOD267dB+w9q+s7p99FptaCUJ8u13b7WKs1Y/q60H7bt97Q1Ozff9j7
fkNm0/1e8Xu++uV7p/OD5qR9xwWkoryuF1JusXKM9R6tMy9fZqitd6DeespB
z9TrLaKjXmq+nzXySvnmzz/d1dYQZj4U8aY8ONczZjQ0rq4+plMmp2etyHXr
dpmP3hsQMa9Dcwea40l0POo7EBaH+snoPKBYNNep+he+z1HR0n72fbwB+Kd7
8TP+Gn29IJ2fb7uxmfns48E2F2/z5h+8b0Oq0VopzR8de23OXaOJaPffV7/5
3l15ST17f6TnSOV5ZOozZF5/j8f+Lm+8urG9B9S8oOaQ9Kytfam1fbq/TNQ+
e+i+NoEx3XlLC+/7EwByaSxT58ZOHWeaiuWH2/XDqmEZyzk33jq0n+F9/yA2
dWuPcR7XTZv2BL5H+b4aP4hnvq/Wwiv/dfnybXYsSHkm+l6pHoXu2VXH5sF7
29jxCuUuJPL7rPp+vo+Li55huGdJP00aTXB+3264qlFov/Tc/PB0za/XejFX
7rTW7yUzln37DttnMtexOPeMKnZM1/c+Q+Z7/eWeJ3z/VO9Mddt8xwakmkjr
9/JK64N07dX8uGrNaW5M+fS6Rvje1mSYP3+TnS/MpP5uefHD3kN27Va03xfl
gGqte+HTK9s1FspFV89U1dfUf9e9Q8G/fx6X/hTRuPj8WqZe7bHeapwhs+j3
cGy9+2jpN6EaEuqlkinnTj1zqSdJ2HZfcVHd0Oe2/NK8h3LLXZ+vNTGffDQo
5dd7haFfMwCd6/JbR0jjOsrR1X08z9DGlHy11wn7SP3Tv/2WfRONoPGZ46k+
lu592rWZbjZuDJ4vSUfR/B617Von0aLZJPscqbrmhw8n7n4oEs0Rue7TfO9P
AIhE513VQpg4YY2tg6D5sVIl+5hHire19cn+VbBKQseXlPO5ZQu5senq6Sc6
O6/Vx782lfJ91ZdC9w/63vfqMdfW/9DYhu6tlPOgMY5Yvvcaj03V+Vytw1F8
QXG//WZf7/HBTedi13fOtc7r+Pxwu34/Tce/lLMdtO26ViUzDtX5Dfv9DxlM
b2cknvJzXX3bW7ea6j0+IJXEul4oFso9VK8A3RvreWrQwMUZ1VNS+Rv33dXq
N/fx2VwXSOOws2att/0kVVNQOT3qEbFhw257D6ZaXXmphaHX7tx1wKxeveOX
HpVdu8y2vYFKfzDQPPFIBzvG6MpxzSuNu5b5ZLAz/x6IRHkJWi8R7fnxgXtb
21wiPX8nMqfBJ60ljTSnk8jatMqPCTsGybgWHk/zgUXOrmZrq95xc3M7HvTf
B9vZ8UZdU/Scl5exF+XC+ZwDApAa4l0vTeepEo91MrVq5Nh7sGzrl+Gaj0/l
9YqpxDXWHum+qHOnWTY31nf8+eX6Peq6r55HqdaP+sN3+wfGq/sR37EBQDwc
OfKjHevReqycUStMt64/jy2pPuNbb/Sx6940D65xJtUs0hoNzYmr/scl/65l
1yMF1Z8sWriGGTt2lfftQ+wuKFQ98Br48P1tT3htuuX7apxJY6qaL1fOdu54
aonHO5lbrmtizvtn1ROu+7rv9x23y8qV2533ksns54u8US1I13HTGKrrfZm0
fl/POUHbrzmzZMWgGuVhz2OqEeh7PyE7tG873fk91L/5jg9IJfFYv5dfuj/U
vaPuIydNXGPn+3zvl7xSrvJVxeoH3ldkUs5KOlCeyMwZ68yXLSbbZ3DNP+Tn
+6l8J+W0s74CeaV+j5G+X6pn9Hm5YSm73iERdN0p+cqJ4x65tCY8EZ+rMTv1
Ckvm9U1rv7R+QPM4DX+6xmmcUL3JFizYZNeMqV56tPGrTov6WirnR7kfYZ+r
/tK+jzMAv3R+Ua28RJ7jLr2gtr3XUk0B3Xtlai6iuHLqalbP8R5bOshPH3i9
V/kFygv3vR2xOv73qPk+rRlP1R4zFcoOCzwWWq/gOzYASCU6v2st09KlW61U
y89D3mj81nU/ovrTx75Wa84yMd9XdT6UJ7F48ZaUXycyoP8i5/HSuIvv+BBM
41Wu49an17zA9+ie2ZUfrt6Nvrcpr1x9nVWvLxmfr/Wyeh5xHYdiRWqnbT8b
pJ9j61wdS2Mw6ZivBSRavNfv5Zfmz7UuuXnTSWnxm1X+gPrLuLYnkWvNER31
smzcYLz5zx1fxlxXU89pVSuPzIg1gki8ls0nR/xOPfXfjnZO33esPmiMIOy8
qZo+8f5MrfF1fd7Jv8vfdUvrWHR+Uf661oHk5KxIaA6YnmVV58oVT/kyQ70f
YwCpQesDdU+t3DL1uEv0PbzWr37x+Td2vU9ectZSnWv8sGL54d5jSwfvv9Mv
398v3cNrrbRyIn1vT6y0FtzO9x1J7fm+alVGBh4D1cH1HRsAAInSt/d8533I
0CG/7Tuge2zXa9M5nyOduO5XhDV5qSuW46b8A9d79Kzre5vyQvXdXb0lyn02
JCkxqA6Va3+qTqLqRvveT8gO6hPmmqvTOLvv+IBUlIz1e/kZt1O9efUfzEtv
jmRSXZGwbejQfob3GPErjaOq95ZquMXSX0H1Pjp1nJmy6+ngn2oouO7Nc++N
lV/kO07fVOPTtY/ivX+0Tkr9mFyfd9pfykd9Drj4/Frmpee6mSYNJ9hauj57
DrjqdCQrpx9Aetnx/X7bT1v1o8LW48SLroXKI1H/7nSurSDnn1k1cBvVc9h3
bOlA+dDPlegSt+dD1YWhBmLi1K09xrn/U/WZHACA/Pq09CDn9W/r1r2/ea36
9Lhem8o9SjKJ1ki5xm19xwa3F54JnoPS86nrPWvWfO/8vakXu+9tygut+3Vt
i3pEJ/rztf4s7FlLNaR97yNkD9XEd30Xv/qS3EggjOa5VU9Nc1NaM6S6E+pp
pn6S6uvbvt0MU7vmaPs7e/n57nZ89rKidQJ7RiaCalGlYr005Yq5YlZN2mTl
BCtXVfmT6iulddsffzjQ1l55962v7fF67KH2NjdG6yYff7i9KVWyj6030bHD
TDNu7Crb7yHbchRU/0X76sJza+b5+6jjvmTJFu/bgNSybdtec9F57u+T5iDS
7VkjkdRvK2g/6ZwVz8/RM5HrmFx+YV3zTil3nSrN4Sl3XX8j1eqpPPpAu8CY
db73HRuA1Ld8+TZ736geWLqnT/S9/M3XNrG9WXanYe1W1/5Rbozv2NKJrqO6
nup58vabmofmv0aiPizK0c6255dkUF6ta7+rxprv+AAASIRbr2/qHDM4/rWa
Z3JdK7Xe2Pe2ZANXfrrGvH3HBjdXrd6H7mvjfI9q+Lp+b0MGL0la7PmlHiau
763m17T+IpGfr/t49Ux17Usdm4MHuddHcmjO2TUecNqfyyX89wBkK+V+qLfe
8GFLbZ159TdW7YNErPvTXGiNaqO8b3MurU9y1V/W/f7UKWsTHoNybf77YLu4
1NBW/smdt7QwH703wNagWLZsq/d9nKzjOGzoUnP/3a3ytL90bVGdOO51kOv1
l3uGfmfq1R7rPcZUorzAoP2ka0g8P+fWG4LHZUT5NVo3rDpVuTXezj2jiq0N
r1y3VF6HesfNzQO36YlHOniPDUD6UW636kzrPvC6KxrG3KMukkIFKpk6tUan
1byw9kfQtsQ7/zDbaP3A+HGr7fPdPbe3jKl2nt6nsSDf25JJlHfl2t/pmI8F
AEAku3YfcN6HvPHaifm7rloemptSfVDf25Pp9NziulepUmmE9/jgph6dQcdN
z6Cu92h9r+t4T570rfdtilbpDwY6tyMZ43hap+36fOWTzJu30fs+QnaI1Idd
a458xwhkI+UdzpyxznTuNMv2ANNaYtd67LxQX27f2ybKuXbF2OaraQn97O07
9tlaG4kYZz/Wef+samv3q2/Mxo17vO/zRFMOjqtmn8uVl9Qz06d95z12+Ffw
b8HPJaKagr7jSzVPP9E5cF+F5eXnlX6brmOi9dbH9rBPl772ojEi5eAFbdfb
b/b1Hh+A9Kd7TfUKr/LFCJs7rFy3eN5jqmdUutQ6u+maxlzbk0C1zL9sMTk0
DzOI5l9Ul5Be6fGhuieufc06KQBAJtIaL9e1T3WNj3+9amIGvfaqYvW9b0s2
0DOK63gNHLDIe3xwc41jhc2j9Pt6ofN4q9a8722KRljdYFEflER+vuqyh41Z
q4a7732E7KD6muqf6voual0RuUVAatGcme69dK14pHhb57U8jNZy+d6OsH6J
Y8YktjdM2HkvUXQ+1Xpw1WFRLx7f+z+RtM5PcxfR7hvlsarXdCqv5UfiqfZ3
0Pfjiovqsp4xQPF7WgfurxKPd4rbZ6hXiut3m+i8u0SaNHGNc7vatZnuPT64
LVq02d7D7OGcgDS0evUOW8NDedrqPRc2JhSNfxWsYvsh+96uSG68mnyOZNMY
jq7hqocX7fdJz5T164xNq9ovqUh9mFz7WDk3vuMDACDeyn46xHntU03q41/v
6lkQz7EMuGk+wXW8NG/tOz64ffBu/8B7eM0Vud6jNaau471hQ2r1RQ6i2r9h
zzSqN5joGN59y91n+prLGphDh45630/IfFqbqHUYYc/0+q76jhNAOM2Bz5mz
wTRpNMHmd0TTSzkZ17pIVHfEFV8i+yUqj81VnyxZlL/w7FNd7D2J7+OQSMqP
da3JDKL+EeoN7jtu+KEeHcd/J9STaeHCzd5jSzW6hyt8euXA35FqEMbjMzRf
/s//C+6JVfi0ymbfvsPe90OsVIPDdR5asIC686lItQ4euPfXHCaNWfTru8B7
XEB+HD581Myaud72Z1A9tyJn570On/rd+d6OSFRLJCh25Vf7ji3TaWz3k48G
5SmvQ3MsrM2MndYhu/Zt2Fg7AADpyjXud+G5NU94rXouu3qzVCg7zPu2ZIOH
728buP9VE9x3bAin3496VuYeswsKVbfrlcLe07TxROe9aaqvk5k4YY1zXFJ0
Lpk1a31CY1BOmuZxXDGon43v/YTMpzUXkWriFz2nhtm564D3WAHkzfc799ta
u8WKBOc75wrKkU6mRvXHO2Pbu+9QQj877F4g2ZRbo7F839+bRFG+UaeOM6Ou
M655YtVq9B03kk+/++ef7vqb55JE18xLV8OHueuZal4wHp/Rvp07h1/9bn3v
g1ip1rlrTfxF59W0OX++Y8RvqT5PUP8AzU9+++1O7/EB8aS+VbqPf/zh9ub0
v5SP6t4pFeruhdG5NShu+lslj86V+k7l5RlFtdBVU8Z37OmmS2f3mgXy1gEA
mWbb9n22HnHQde+N13qf8HrVW3RdJ1VHwPf2ZDqN0Z59cqXA/U99lPShHGH9
lqLpd1yzek7g8dbvNpXHvzQ3EKme5Reff5PwOEq+2sv5+Vqrm6z9od+u6udo
Dkk5JIMHLbZrpRvWG2dz4VS75Z1SfW19Bq2X/PCn/176/QE2t1/1QbWvalQb
ZRr89PrmTSeZtq2nma5dZpuv+8y3+3rs2FW257bWVKoGqM7tWn/i+3uAn9cB
PfpAeB185TaRWwSkN9V6CqrDlWtAf7/rrqpUGhEYl+qLJPqzw+pk6X5GuQca
e5arL61v7rq1ha19Irfd2Myun3Q9r8TilD+UNbVq5KT0fVR+6T4g7B7o+GOg
+81M3h9w27hxj+3hGM1zSba6765Wzt/P3Lnx6ZOnc53rM/Tc6HsfxMr1LJus
Z0HkjerA3Hvnl85j1qrlFO8xAomi9VLdu80JPeeL7vd9xxrGNQ7HGszk69Z1
tu3TE+0zinLg6UOW933s2p9r15KDCADILKqZ6Lruaa7w+Nf377fQ+fpIdQaQ
f2H5NOq75zs+xJ+euVz3+b5jc1FNEc2VhD2nqM+7ahcnMg7lxLtqcyi+Zcu2
JvTzZ0xfZ8cpNT4b7VqPeFPd7KKFa5gbrmpk66prHeZH7w2w81iqSzhmzEpy
1hPszdd7RzxO6tvgO04A+af65K7fucaafMam/MCguJRLkejP/mHviXUAmjSc
YK/D0fY8U50jvV45jI0bjLe5ClcVq5+vPA/lTfr+ziSarvOXX1g3qv2hY5TO
PR2ARNCYiOs3o7pM8ciDUr636zPuuLm5930QK9XmOOfUL5zbtmTJFu8x4le6
HkfKQdeaAt9xAsmgtRaueXjVr/Edn4vuuV2/X9Xq8x1fNtK1UGNwkcZIj6Xn
HD37+I49HfToNse5H7XWzXd8AADEU1Df3FxaS3786+vWHuN8/bZte71vT6Zr
33a6c/+nes0/xMa11ldrVX3HdjzVZlVPzkjPJurxlIxeMZqnccWgOfZEfa7m
8/5zh3tdUyrS90n7RHU+fH+PMkntmqMj7vuynw7xHieA+FAen+u3rpxon7G9
9UafwLgu+XetpMWwefMPtq51PPM51e9m1Mjltv7Inbe0cPaFdFGdK9/fm0TT
2H40uYWiHNStW3mmA2TmjHWh/aKaNZkYl88Jq6WTzjVQ1SfGtV2qv+Q7PvxK
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
js+36dO+s7mnYdewe+/80hw6xPhxJnr/nX7O464ae673HX+d1jxqOl2n1Tuy
bu0xUfWul8uK1jGrVu2I2+d36zrb+VnKv/O9f2LRof2M0H3Yotkk7zFmO/1u
Xfmdx6pSaYT3WGPx3tvuOpmqv5MK+bVIbRojCbuv7/d1atdGdtXjo/ZqelB+
rKtuWq5U6OOZSsJqMJLPAQDIFGG1PV1568882Tnw9eoH4Ht7Mt3WrXudx0vP
rL7jQ2Kop61qJAQd95rVc355XVCfWNXGiGX9mHK9tVZTzwjRjm8e69Q/lTNV
vhhh18L62GclXzlxX+Rq1XKK92OaalTX0bW/smHNdizWrdtlXn6+e55+F8q/
Yh1F3rjOa/GcSwHi4dEH3GtclSuQKnMHWpcXFKPmcn3HlkjqpeK6l5L2bad7
jzEVqNZXpPpdjB9nJvUOUc+/oGMetm4gns8fyaR8a61fUT/DaO/j7rm9pdm8
Ob71MG+4yp0TPGjgYu/7Ka9UJzJsDuqOm5vbZ1vfcWaz9et325phkb7vlSoM
9x5rrLTOLKzmlPqy5uXvJbL+KVLTg/cG50PIjVc3Tpn7ehdXPTqN58frM/S7
GDt2lVmwYJMdq+bcHl+qu6v7qbDztNbb+o4zVYTlc6jOtO/4AACIh6f+2zHw
Wqc8ZNc87EXnBdcDffj+tt63J9OF1Q/r1WOu9/iQGFo/4zruueub9Dzp6oES
bf6Cxie1Rkw9dGPJ4cil+gM++xOqXvLpfykfGJu2i3GY39LYVIE/lnUez86d
ZnmPMZWoXo3yqCKtlzjW5RfWNaNHr/QeezpyndfIYUQqibQWeWyK1PbWvcIp
fwg+36frGtxoqB9hkbOD81hEY97k2v1K9Rsj1elgfX1mctWw0byo6z35ff5I
Js016X7spee62dzzvDzffPLRoLifJxSL6/OUQ5Pq84XH0zPrFRfVdW6TxpiW
LNniPc5spvnXsP4+uSpX/MZ7rPkV1gNP1/1o6k/u+F71h776zViC5gx9bxsS
q0vnWaG/j5ycFd5jjMQ1VvFp6UH5/ts/1+X66oS/rWeM88+saq9ft1zXxNbC
UT2Q229qbnP57rylhe2JLKoP9J87vrR/R3MJ6h9S4rFOtj+wrtGvvtjDrtFS
35gP3u1vypcZamtpKf9a/UjmzNmQFT0A+/db6Hx2E+Wqp3qtmGTRfnDtJ/I5
AACZQM8vrjlb5SIHvUfjoa7rY8Xy6Zu/ny4+/Ok+1rX/6UGbuVTD3XXclX+h
12zb5q7d4hpzV89c9cPWs5HWGORlTDOInsdUF9D3/mpQb5wzxmP70+DnGhN6
5nbtL4330RvkV+qX4MppdI1bK/eDfRg7132Kcra0tjbZ8SxatNme58gLQ66V
K7ebM/8R3K9KUqmPifId83qvkO70vHNsL4igcVDV7vAdZ6qZOmVtaN6i8kAn
TVzjPU7EV5OGE5zHXM8NQe9xvb52zdHet0eUEzFzxjqbqxLNPPbxip5Twz4v
JSI25cC7Prdjh5ne911eqK+k5uTC9mWzJhO9x5nNlD8UzZqNhj89S/uONR72
7jsUmssZzRyoek0FPYOsXZva9YcQO61xCqtTplwD3zFGEjZu36TRhHz//aC6
XL7oWKkXoHIuNVaTiePibVtPC90HyqtVrp7vOH0jnwMAkOlmzVzvvNbVqRU8
/jJ0yJJ8PQ8hf1w18/S/+44NiaPcc9fvTrnpes38+Zucr8ntYf3D3kN2zqJ6
1VHm/rtbRazdF61HirdNmbkQrbsrVqR2YJyas/FZNyTVKMdA6yXCjq3WA/iO
MxXo96XfTF5+F+pTQ0+Q/NOaHNc+1txMsuJQ7tOx65DOOqniL+dWJM+hQ6lV
Q0G17LT2zPUd1fdENb99x5lL66Jdsea19ni6KPfZkNBztcZ/fceYqgb0XxTa
o6Zo4Rp27bLvOBE/YXMGyh0Peo+rzoV6mfjaDq0d1tjEO6X62nyMWJ5vtB72
4w8Hml27DyQkRvVyd/2+1BfLV8/KWH303oDQ/fn4w+3Trt5IJlG9xUg1aU75
fZmM6z0Wdk5T/6Sw9y5dutX5G23daqr3bUNiuGpYS6ECleLecysRpk39zrkN
urfL79931eVKFXo2Uy2PTMq7Ui/rsG1WTRSN9/qO0yfyOQAAma5R/fHOa92U
yWsD36NazK73fPfdLu/blMnU59S171V/znd8SBzVaXcd+4kT1tjXjPhmmfM1
zz/d1T7ThNXpyyut2Xz7zb62Jrfv/XOssP2gvBPf8aUK5b3oexF2jFXf0nec
vqmXfOkPBubpt6P6HeTBxI/mn11jqZor1zFKdAw6r5x7RpUTPl85cd9+mznj
RKlMtSM0v6X9ftM1je36q2Qc+0jC6qaJ5hF8x3gs3TO4Yk2VvMx46tpldujx
ueGqRtRPiqBhSM0zefn57t5jRPxojtJ1rF25O7oWB70+mTmXyt8YNnSprTlo
n3l+785DisajD7RL+DNOWP5DrRo53r8LedG86aSI98aufCAklnJoIs0D5t7T
ZuL6LPVIcq31kNmzNzjfG1aDoF2bzMp7wc/atwvvn5gux129uF3bMHdu/q9t
+enNnEy6F3iuRBezYsV278ckHt58vXfo9uqc5TtGn8jnAABkOq0dDrrOqT+u
qzesa32y6hiuWfO9mTB+tZ172U0d8rjTmgrXvQk9PDOb5oZdxz63rp6eLZPx
TKS5D43Zpep6zBKPd3LGPnjQYu/xpYrS74evobvuioZZn9/fvduc0F40x1Pt
XY2XuuqRI3ZPP9HZud/r1R6bsM9Vnwb1Dw9bn96q5RTv+yfTqS6wa4zuthub
2VzjyZO+jaoPejzpHBF2TtB9dqqtRQ67n1iwYJP3+OJJuSthdci0tlBrb33H
mQ5UWzzsu676jb5jRHyE9VtR74Kg9xQ+LbguvWrjJCJG5fLpnN+y+WQ7d3HN
ZQ1Cr9N5obGOZOS26R7blQejXn3plPswaODi0PwZ3R+rLqzvOLORapq9+mKP
iN97zc1q/YjveBNFOcGubX/rjT6B71G/W/UVC3qP7i0ysadDtlMOX1ifOfX0
SLX7ehc9H7u2Ix41pyLls6caXYe0T9Ll+LloniZSzdhsnhvQtrv2i2qi+Y4P
AID80LOd8jaCrnNajxL0Hq1f031Q0Hsu+teJvWjVS/zqS+ubh+5rY/NINd7e
5qtptj+E+keop1+6308lU1DvTtH4lfqh+44PiaP+ya77UvUA0Gsqlh+esOef
S/5dy1QoOyx0/UoqUA0bVx0F9ctO9lxfqlLt6LDjfc6pX2TMGoZYaPxO1628
/EaeebKzfZ/v2DPV9GnumrHKuUnE+vpNm/b8pr+KS6rVX8hEuXU5ItGcou6V
lGeR6LmwSGO+/ypYxX6HfO+744WtO0ylvjD5pWtYUE2dY/XumZn9ZRJB8/jX
Xt7AuS+19p5cxsygHilBx1j31673qP580HtizedQDTnNlc6Yvs6OzTduMN7W
otS9Way9U8Jo2559qovNEUnWfg7Lw1ePGN/fg2jp/izsWig9from+44zG+3Z
c9A8eG/k5xn1zcq0fM7jaa2ZK39K39+g+W3VIXXts/fe/tr7NiG+VOPpsqJ1
nMdcY+fpND7ygSPfQtfrePx93Re+8Ex4rddUpOfEdOtldrytW/fasU3XNur5
R3MtvuP0Qb1wXfuFfA4AQLobP2618zqnurpB7wnr+RAr5bar/qFynVWvV+M+
TRtPtD28ta5uxYptCetZm040ruUal1ZNWd/xIbHC1srl1lAI6/OZV8oRuuW6
JqZ61VFm1qz1aZN3FbYOId3qFieCjmOk3tZaX6feEr5j9bV/vmwx2ZnrGOT6
KxtlZI+CVBSWW6Fc0Xh+lo5pNLVZtL6f9XmJdeTIjzGtu9a57I6bm5tqVUaa
SRPXOOvOxWL7jn2htbsVb6qeR121To69n0h3ynG+4qK6od+Psp8mpm5AJlM9
OFdev9SoNsp7jMg/132inkNd73HVwbnm0vp2vkf1XTSH8vrLPW0vP9XU0H9X
LuxjD7X/6fre2p6vtQ5E19549ocMo/kQrTfx0TNW2+uKa/789Jhb19xIpLw5
1TjzHWc2Uk7rrTc0jfgbuPHqxnY9hO94kyFsPcPxzxGqy+86D+l/X7WKHP5M
orHWJx7pEPpb+erL9KrH+OSjwWODqrUbz8/Rc7DG7ZV7qZpZqlWq2h26xitP
Utd51c8t8VgnO16p/Zzr8Yfb27WkyjtTzYm7b2tpbr+pubn52ia2VqzuCa68
pJ7Ns1Eup9aLxuPanwk9SaZMXuusHyTZ2guRfA4AQCb74vNvnNc51xp813qd
ZNBzk8YLLr+wrq2trXu/UiX7mEoVhptmTX7N/1i5cntGrg+bOWMd4yRZTMc4
6Nif+qdyv7zmgkLV8/Ub0/v1bKM1VOmaz63nPdf5I5PWHcdC4xSqJxvpe6Be
Or5j9UHfeY0nRPt7KXx6Zdtng5ovyTNyxHLn8bj0gtpxORb6ndSsnhNaNzyX
1jeNGrnc+37JBmHzXtFS7o3GDnXPqL6Ascai/JIH7m0d+lkay/S9z1yUpxl4
nfzpO+87tnjYv/+wHQ8OOz4613Pujk1Y3qxyIVOxJg3y5vmng9fbqqdJ0Ou1
pjmez/yJpmv3G6/1Njk5K+w138c+1lyxK767bm3h/TsQDT1XqX5j2L5WLk+6
rAnIJMpPcj0TH38tzKYeyYsXb3HuC+W+HPta5Zm5XqucNN/bgvhSXl/Yb0XP
D+l2LtParKBt0Xfbd2z5oTrjqk+s+l2au69be4x57aWe5qpi9fN0L6D5A9/b
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
BuaqYvXtnIP6Zum/69/1/gfubW2/TxoTUM041YPXM7jysPQbT/U+Vnnx3weD
6+ad+qdyCVtDm4ycG+UTjM7Je4005I/ygyLlp+uZZ+KENd5jTRXKAc7r91vz
wcof9h074kPrDsOOt8am07mn9cgRy53bNnnSt97jSzZXrsNLz3XzHlu8KO/S
dcyVa5ktNTo0z+TaD+RzAADSlcbXXNc3Vy9N5Xu6ckBcYzv5ofrWCxdutnXT
VTe1aeOJdlxH62hff7mneeyh9vaZSrUHNPaRyLGJNl9N83q8bP6NY65edU98
f5+QHK7fn/KhNM7p+v6qvqDv2JNBuWBB268532wbe1GN47B+FLlq1xztPVZf
3nv769B9c+3lDXjeS3F1ao12Hr9Ia22WLt1qe7tH+o3ovNul8yzv24rYaU2y
1hTr/lb5O4nIGVbeSDrVOCrzSXA+h/KzE/3Zep5Qr3LlHMbj761fv9vW/ws7
Ptpe3/s8U+XkrAj9XfiOD7G59YbgdaxaXxD0eld+bMlXennfllRz8OAR5zOd
+nwl4jNVWyyRYyXHUk2ryy+sa3NWNF/asvlkO56jc7XvfZ9p9HwbTY059b+Z
O3ej93hTTV7qual+DXVnMofWa4Qdb62jUt1p33HmR1h952zrh7Vy5Xbnvij7
6RDv8cXT/Xe7+6Fp7MR3fMmgGryufaAxIN/xAQAQi7D1GapZGvQe5fO73uN7
vlhj6Ln5H6NGLrf3rpqnfPetr82jD7SzubiqLxnLmITW+2mdp8/tC8u/yeb5
2GyiPq+u70DDeuPsWJnr36dOWes9/kTTM6lr+3Ue8B1fMmm87t9nVYt4blOO
nO9YfdK6UNe+0Zzvnj0HvceIcKqv4VqTr3HXFSu2B75vxDfLItZmEeVEad7Z
93YivvbtO2y+Gb7MfPLRIDvnFMu94bG0jj3dareULzM0cFsKFaiU0M8dNHCx
rQGiz9JaYs33jx69MuacSx1Lre0POz7Plehic3p87/NMpWcwV/6octF1jHzH
iLxTTuv/z959x0tVXX/c/+NJTJ4kT5Jf7BoLxthb7L1LVDR2xd5bbDFGBaRX
UUCK9N6lo4B0pAhKB0U6CAhIlSId/O0n35MX+V0uZ5+ZuXdm1pmZzx9vX4ne
e2edfWbOnLP32muFndMnH+150M+uWLHZ+/lT71XrY4mbsWOX+OdUPsjMnMrg
QXNL/V2XDqrXorUm1Yjq3m1G0LMp13rlxMW27bsj6yPtd/Yp73rvhwud6rgl
+95Vb1LrePPd8uWbXJVK/6nbrPnlTN0/qDZLVG8i5dvNnJn7uTsN6o/1HmOh
3Zup97JvLNSbwzq+dIqqPaReiLlccyZZHw/8xjsGc+euNY8PAIBUaU7TV6Nc
83G+31PfcN93Yi7c72q+UX1J1OdF/UW1llnp7SHB84LmFbS2p568RY9L+/20
n8Q6dvXT8I29clis40PmLV3qz1dQ/pLqBIb9N+1D1j4w6/gzrX3byd7x0Rym
dXzZojli1VKMmo/SOrf6YFvHai2qB4PGUPsK1T+hV89ZwfeG9hUWwvNvrvHV
GRDVYCn+81or0Wcg0bytaoD9sGmH+fEh81SHR3mRN17TImG98uLOObV+Tu7f
q/rOsNDj0X1wpl5TeZe++XPtHVZ/BeVk79yZ/D3L4w+H3/vsl4u5NrlIueXc
g+WXM04K7/Go3mPFf1Z5Wr7zr9rf1scSN7q39I1XpnJIFy3KXn2OVOlZVTVX
Nd+hviGffbbYrV+fe9+r2aR9TNddGd4TqSj1OFq1irooPro/KHNUjYTjqHrA
5Pln1rx5aw96Nlcd4lTuCZOhfqu654w63316zTYfj3Tw5TBkOnc7bqKeP5S7
k4+fbfWv872/NbdlHV+mqU+f7/h9+5cBAIgz9crzfbdF1Rq7+YZWob+j2sz5
tO9NdRA056G8zTis3WnPyv69jMVF5d8gv6jGhu9zq33GZ/353dD/9tfrW5nH
ng2+fBbV/N2Sh89oYVRXMFEfAfWm6tfnK/NY48D3mYmitV5djy86t2Hwnfjg
fV2D+Wft2apRdbh7v/5nrsWHE4P9Xn17z3ZDP53vxo1dEvR6UG1H7WFVjgB7
EdNH83K+nmv6PCiPUz+nvLYXnu2T1HmuVnlYXt3XILX3k9aTlNuR6H2ieedc
rdlavcrw8HnN31XJ2Gs2bjg+qc+f5lY1D1mrxshgLdi3rqfrbdTfUa7N2rXp
6emCaFG9HNRvwTo+pM53P6kej8V/tm7tUd7zb13jMo5uuTG8FrrWGDPZt+u1
lwekfN9rSftq7r2jo6tTaxT7aYtQr7LLLmiccPz0nEJecmKqB5FoLLXX2zrO
fKdaamFjr/nO2jVHpiXXLZmabsp3th6LdFFP9LBjVP0t69iyRd+pd9za3nu+
w/Z+5APtSY36brCOL9Oi8ozZDwsAyEWah/F9t00YvzT0dzZv2Rmsi4b9jq+P
LtIjqiar6otYx4fsiKoZF3W/rjkK69izwbePsOx1Lc1jy4YO7aYkrDmgvhTa
+2wda1xYz2tr3fT0E+sGcyp6n953Zyf3zBO9gj7YWsfUmnKP7jOC3iDTp68M
ckHSvUcpX0TlaegaqPoJGuNE50R92QphzwoS0/sg6r2iHCLdn1nHWVK+/eH6
DGTqNdV3oaTXS9WLV2+Whu+NDe55+vSeHVlLRXsPtdfTepwLyYXnNAw9F9of
bh0bUqO9/77PVlivvsce6h76s8pPsD6WuFFuqS9XRvWGMvnaylNVD4PDDgmf
09FnVfu5lSOvnJM/evrZWVENj7atv3SbNu80P49WlKOsPsKJxkqfSZ4ZkqM8
gaixZK4zO84/M3H/Q733df+q5+JUc9/084lquil/LJ/y+a+4qEnocaoGqXVs
2aJ9Nr7zreeIXM3LT8bF54X3zZN8Pm6J6levPm/W8QEAkCr1FQn7XtOeY1//
avUn8X0f6rna+pjymdb2fGOv3njW8SE72rT6wvs+UP9h339TzQbr2DNN+6l9
x689yJaxaW+wepu0ajHJjR69KCNzkFF1zote39UzxPpcxYn2rCUzdxQ3xx9a
LYhbtXe0vqm9z+oVoXogquOjvbCZ3N8ZR5qT8K3tqn/EmX8Kz/cqSv1kp075
zvxYYG/8uKWRfbWlW9fp5nGWRs3q4fkcOu5MvabyK3y54emktUpyF7NP/XJC
z8fPK7ht23ebx4fkzZixyvv50pxA8Z/3rRmpzo71scRNVJ1UPStkIwb1yS1/
b5cD8sBVz2jRog3Bf1et0nJl2yS81p5/ZoPg93z5IZm8Dx7QP/+fb4vTM6Xq
AyYaH+UxF9pzQGlEzbWJ6vZbx1gILr8wcc2Z4s9tyuf/qMfMpOpAvfdu9HyJ
clK1h9F6HNLJ14P3H68MNI8tG3QvE/U8p/ePdYyZpHUa37HnUx2aMJ8Omec9
9kz1tQMAIFO05uH7Xnv+Gf/9jPYM+35v6dKN5seVr/Qsrn6dvmeYfMofRzTf
XlrNxdWuMdL7+dSefuvYM21Av6+9x6/cbKu4VO9Ic45F49Gas+oxvPL3/sF6
oHo7lfTv6/qgtfxE8x1nnlzPLViQ3zn4JaXPh85HNuehs0F7P5W7+eyTvQrm
3Kv3TUnH65rLm9FfHIGw/t3Fqfa7dZylVctz35DJfA5RzSHlWGXy+qdeWi+9
0C/Yh676RsuXb2JtKwt69pjpPSfKNbSOD8lTLrjvXE6benDe47GeOg6vF8ia
USo+iKhTNGvW6qzGontgfW4HD5r731oO6lGZTD0z1ZDb/3fUQ3DJko1B7SSt
H6l+qPJFdH+dqA9kae5zC+EZdz/loCfqsaK8GtVrtI41l+gzlygfSc/s1nEW
gnfrji7VNUH5GPrOUc5h8T59WtuNqumm+/7SzMnE0foN/jpb+h6yji/TNv6w
I8g3jDrnqt9pHWcmKT9J9WDDjl+1jfP52Ug9j+NyrwUAQGmpTrHve83XF1J1
QYuvSe5XSL33LGj+03e+CiWvGv/x4nN9Q98H6i2sPg1h/61Q6hxXqzzM+zkp
/jyfLcq1inqGLOrkY2sFa9FNGo0PPvO65ib6+3v27HNPPdYz4d/WNXrlStap
o2gOW3si/3JG7tXqSIbmKzTPbj3Omab6MyUZnycf7el27NhjHj/saX+fcgGi
3i/PPd3bPM508OVzqI9Mpl9bc6x1a48K+k1l6zqo9ebrrmzuXn6xX3C9n/j5
t8G6pfV5yCeqX+wbf60ZW8eH5Ol+1Hcui99Xr1nzo/dnm34wwfxY4ka9G8LG
SvuofXVSs0U1BK+/qnnC62nzZhOT/pt6HtI9qNZTG9QfG/RyUc+EqLXVZLVv
O9n8fGaDnlNUky9qLJTfMuiTueax5hKtZd5wdYuE7zP1b6N3Tebt3r3P27sr
Vbq+qG5UxbeGuPbtJrvjPHPZkq813SZ/6X8u1l4o6/gySd+ld9zaPvI90rVL
btdZTJaeW31joGch6/gyZfiwBd7jVo0y6/gAAEiF5jLDvtPUL9tXCzeq14pq
BlgfUz6r8OZg79hrD4x1fMieO8uFP5NoX7nyNsL+m/I8rOPOhrtu6xB6/Gef
8q5ZTN9++0OJ5yA0J6e9cZUrDg3y7FRft+jf1rXad8xF3XhNi2DdzPr85BL1
41XeY/l7unhrI+Ui1RK2HttsUL/3ZMdEc32qvWsdM+JBa/tXXhzeM2A/9Q7Q
fLN1rOlQu2Z4Pof6oWQrBq3zqY7VG699nNXcjqLXgPNOfy/oW/V+/c+Cub+t
5HiU2Pbte7xjrfG1jg/J8/XOUW2d4j8btfeAPgUHU33NsLH62y3tTOPS88I1
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
qf+f1sxUG0LXjbis60bR85LGyjeWf72ulXdNWDlqJcmf0bik0tslDjQGqpFm
fb4SUX0R5a7r+Ua9aTM1HppfUW5x507Tgn1W1sedDN9z42svDyjV39UzpPKE
9v+9ay5rZl7TTvu7VHsj6hxqLs76nFhRDVPfuo7mJ63jy9R7wvdeUB106/gA
AEhEebN6zvN9n6l+XdjvqWa/73f++erH5seVz1Tr0Df2ep62jg/ZpXUK3/tB
c21h/141Ka3jzoY3XvvYOw8R5/1b6smhdcLaNUcG82ylXXvy0bO8aoRo3k05
etbHDaSTaoQqdy2Vz4TWL6zjLgntrUvntUF787RnT3P3yv9RHpD2LCr/TLWd
cmFevjTUlztRX6Me3WeYx5kp6vnkO+64nHutE0XtIb30/A+8PcB1DFqL0H49
5Xkol1Jzzkf9+p2En40TDq8WrBFYH38uUs552JiG1XVAPE2fvtL72RjQf84B
P6vPmW/NiJosB9JY+XoFqPdDNmPR85G++6Oug1r7sa5zWOiSzeeICz17KzdJ
fQCVw9e82cRgb4H6ZViP5X7KTfHFr/sD7QVRDovvZ7p3K9l9YYP6Y83PT6q0
Z8b6fKVqwYL17lTPnrh00XU87tfGqH7Euicu6d9VXoDymor/TX3mrWpBTpq4
LOE82sMPdCv4WpW+fFLlt1nHlgn67vG9Hz6f8K15fAAAJBLVE1W12sPWPLXP
1zeHqn3lcdn3nq9ef2Wg95x99tli8/iQXeqTmuqzptbvrePOBu0nCjt+rfNY
x5YK1dyZMWOVa9l8knvqsZ7BOmsm5iDUd0s5MMOGzqdGb5oo30p7G7T3TXvF
tX9N/Y3V21i5eQsWrAvyd9L5mqrLrTqnelYt1DoL33yzxp1ynH+PXRStE1vH
n6oPGozL6PxkcVrL0by83tfa96b3dJ9es4P3tPKEly/fFMwXqjaC3uOaT8uV
9+P0aSu9/QT20/5T6zgzKWptIQ65kLpmnnGSP4dJa8gleRbRd62uHR/1mBnU
61bd6TJH1vjv39VrUoe3ZDS2vtpjdWuPMo8PyRk4YI73c6drZ9GfVZ6w72dL
s2aUj6LGqtG/v9+zGYvuU6O+/7Qur5xH6zErdOqHo/zCbN77ZYLyJLTeqz5v
+n61WleN2h9T9L4val+VeliU9PVV3yhTz/eZ0L7tZPPPQKq0bp+NsVEtiDj3
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
7d/Ws3VUb3ZrJx1dw/X6aFZB1VVLVtH3cVH6frCOLd2Um+Z7j+RjfxkAQH7S
upPWPpWn6KsjrXzuqHsj1W2zPo58F9WHuNLbQ8zjQ/b9uG13ys8x+bxGWVRU
H8hc66Wgtc9EPVQ055RMTeZ9/77ga01btRPVk1drYKm8fzq2p899srSnKZ29
b0oqF/scp0LzZtofHTUGynsLy1VVHVff79zzt47mx5ZNmrPWvWDPHjOD/Xnq
H60c33TXcI7b+zEqR0C0RqE9edZxZlPUPb/VHKjWqLQvzxeXPsvW44Zwqumi
fNCw8+br7xlnUXmA+b7u7dvn/PfnD9y/GVWjrGa1EebHESd79uzz5lP+6/Xs
9VKNel/rv2ldVPu69fyg55J+fb5yw4ctCPZFq8aBvidXrNgc7O9RzX7l/mkv
io5Pzx7W44zs0L2k8l/V11nvjf59v3LNm00M6r88+WhPd+0VHya8Z9/vofsz
W1O0ZfNJ3tfW81vUfIHyoqNqAuoZ0PpcFDo9y0S9v559slfaXku5nHrP50JP
Rl+du3Tdj+l6r7zws/78blqfH9OJurMH0/U5bKzUi9Q6tnRbsGCd972Ri/v+
AADw8e1FEvVg0bO6dYz5Tr0bfedAPeCs40P2RdWKC6N9M759JvlGdUV946Ba
jNbxJatVC/9c035XXdK0xPWRVDdcz7Pqw3vOqdH1KYV6y6lRroH2/mseXPMn
iWpIpJvqmo8etch8HDJFPVYSjanqV6kWWdjvq7dc1O+rVrH1MVpTzq/mKZUL
qGuF1vo1L6+6+9o7majHTVFx67ut+fZE35mF2MtO+w19Y6K9dxYxlb+nizcm
5R3RZyW+tObrO3daT7OOL1UnHlHdezzKg7OOL1OUl+M77jq1Rh3ws+r/4PtZ
5QFYH0ucaA3QN1bZrGWl9a1M3o8qZ0X3wsxZQOu9X3/9fXD9V85G2DVV919F
a+qlm/KKo3KYVNMk0d+oWX2E9/eVR15Idd3iRs++UXsqVI+oUHooFqVnOl8d
nYpvpXd/oD7nyonS/YFq1qS7fk9pUXf2QOrBFDZO2ez7li2aC/a9L3p/RC4e
ACB/+PYvap9OLq2N5irtc/HtbdMaoXV8sKE9L6k8t5S9rqV5zNmivjK+cciV
GosfNvXXvN9PtRGVk5Gu19QeO+XvhfUS1lwvc1Olp/M1b97aoKfxRz1mBj0v
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
dL+lnHXN9+heWs9RxXNks0WvvWxZbtUo0Jy1b1ypEVe4tAchlfd++XsKa0/c
ow92Dx0H7c2wji2MaldErTOK6kvm2r4SzZ2GzRko7886NuQOrduqbkLU5+P0
E+sG18WSvkaiWgAfsF8jpykPTvu0fOdX96iqI2QdZxxoTcs3TrNmZWcNQnPz
6gvpi8OizzdSo7r1vvOnvnLW8SE1jz8cvg6rfISiP6c1M99515qn9XHEjW99
WTVTrWMLo/sx5UvoPKs+v2qgDhs6P8jV7tZ1elBnUJ/vZk0+D9bUtNdVe1N0
D5WJ/dD6TtJebeVr3HxDq1LnnFx/VXPWfdNIudj6vn7+mT7BPGCi8e/YfkrG
YonqtafrWGmfsSu8GZ7zFua0E+pkpW9qodD1Jmq827T6wjzGOPD1ata+TevY
kqE9nIlqR6n/nXWcuchX2zhX3hup8n0fVa8y3Dw2AADCPPZQ+Dpnocil+/lJ
E5d5j+OBuzubxwc7gz6Zm9L7/r13x5jHnE2+fA7t77eOrTjlNiSaf1Qv8lzL
5RDl9IcdD2s5SJb21Dz9+EeRnw/tsZw7t/R1A7SP0/caei+n2scF8fHWG4Mi
30Nah7KOMS5Gj17kHacpk1dkJYYRwxd4Y7j1ptbmY4RoWuP1nT/th99C77Wc
o7XyZD6PUflgel9YH0ecrN+w3TtWHzb93Dy+ONM1pGj9v3TSNSqbtajygert
Kid2yOB5wdq6auVec3mzhPvoi99nf//91ozEpxqYUa89etSiUr+G8lB96+Vh
yEtNj4UL10f2u1FuqXWMcXHbzeHXzJuubWkeWyL6vlQdzqjPlHISrOPMVb58
t3zt7665o7DjVS0669gAAAizYsXmhP3n81m7NpPNz0Gy1NfGdxyqh20dH+zU
qeXvDRBm1MiF5jFnk6+e6+UXNjaPrag9e/YFz0lR5+7u2zvkVI+Vonz7DlXv
0zo25Abtk4j6fKiuQrrWmPV59NXEEl1XrMcDqVP9o6heVtk4r+odOKD/nKBm
keYjtRdUtb3Vd9B6fIqb+Pm33rHK1nrsK3/vz/1MjlIOntbxfOevZvUR5jEi
db6+IMWvn61bfuE99yXth5avtP7tGyt6E0bz9dVMF/VusD7GOFPfAvVc1lyV
+tX4atcnS2tryiXNRKybNu90px5f2/vaTz7aM22vpZyOSm8PSeqY+/SabX4e
c53G+6/Xh+cayolHVHerVpGLv58+q2HjZN3fKxE9Kyl3NOrzpJ7EcXymyhW+
9SHVZrOOLRNOL1M39Hhffam/eWwAAPhs377HNW820Z17WnSOa75R3v/q1ZnJ
+083zf3/8X+qhh6HeubQN7ywqV5DKu/9DRu3m8ecTeqDHDYOxetCW1NNyKjz
pmdX7XmyjrOkzvrzu6HHpf7Z1rEh/lQzIerzoX1/2sefztf8dMi8yNdM9+sh
s3S/G5XDfMZJ9dwPm3Zk5LVVz0U5xPq+9vXTeu3lAeZjVNz0aSvN3/++eTb1
YNH8vfUYwU+9D3zvn+P+ULXg7kfzhe+ZtPheRl8P9iN+WYnPbjFjxiz2flY+
n/CteXxxpZyxqP346TJjxirzY800PWNq3/vy5ZuCmiT6/lfepnIrhg9b4AYP
mhvUtmjb+ktXrfKwoPfnycfWSus4q59iJufntD7ne231bshETRDlnV54TkPv
6yoXnb7Jpdfiw4mR761ePWeZxxgnvpoE/3z1Y/PYovzr9U8iz/PVlzYN5s6t
48xVynnz7XvQdd86vkzw7d959sle5rEBAJCI5lXU+1Q1Pcvf08U7f5oPlJef
S3MjXbv417GoA1bY9u77KWHvyKK0F9g65mx7/ZWBoWNx+ol1zWPbb+zYJZF7
xi/5S6Pg+SqbMW3esjPoby3pqAmiPtRhx6aajtbjj3j78ovl3jVw0WenR/cZ
GXnt++/q7H3dU46rzXpkDnm37ujI95Cuw+l8Pe23bvje2KDuUtT1fb/DDqno
Nv6QmXySklLvIl+8Hw/MfH1wrSn5Xl/7Xq3HB35r1/4Y2T+ubu1R5jEidcqL
851TXe+K/qyvr6vy6qyPI2769fnKO64LFqwzjy/OfP0c06lRg3Hmx1lSk79c
4d74xyfu4Qe6uTvLtXdlr2sZ9BzVGpaehZVbV9qaGqWlnJymH0zIaJ7X1q27
Inu+ZLL/p2oFKC9dvSyKjrVy4+i1Unqq9xR1HdB73zrGONH70fdcEud7M+Xk
RF1HtH6RK/s14yqqz+ZHPWaax5cJV17chOsGACCvqB/pV199H+zB0zNI44bj
g/lT7adW/0E9C+o5MGqdxZru7VXrVzUgtZ9g2tTvcq7+mq9PsXz99ffm8cGO
eu2k8nnQ3Kp1zNmmXHLf3JF1bKJcib+cEV67WlSDZ9myTRmNQfNnWjfr3m2G
+8crA4NeNEXnm3Sdnzrlu1K9Rvl7u4Qe32UXxKvvDeJFc3RRtZElk/PsS5Zs
jNz7mctz/IVEdcx0LfWdx4pvlT43QD0MlVekns0lzYmePz9e63bffvuDN9ae
WZjXU4657/XVO6e0f1/fv9pv3LTxBDdp4jLz8c4nD93f1XvuTjuhDvsnc1TU
NaFL52kH/KzWLsN+rlzZtubHETdRtWzWrPnRPL44i6q5UJzyJnUvoJwizWMp
p1x7cCu8OTh4/vH9nvJBrY+zJDR/l0w+qRXF9uB9Xd3ixRsyPhaqO+KLQ3OF
2iOTjXOyf7/E0E/nZ6wmXKF5+vGPvOdWdSiUX2odY5yoHoxvvNq0+sI8vjAL
F66PzNlRnZuZM/O/jlKmvV//M+8Ya5+CdXyZoBzHsONVn2vr2AAAyLRt23cH
6y7KL9Acq2oyal5b94TKt3/v3TGuTq1Rrma1Ea56leEB9U3Wv6tfb0ywp0c/
p1p5yrvo2H6K69RxaqBDuynB39G8rnJKGtQfG9xriP63/l3L5pOCnx3Q7+ug
NqT2FK5fn/u1C9WT1PvseVkz8/hgR89i2lOTyrxJ8b1zhaBJo/He8dB1yzo+
rSNFnTP1fEjn6+mYVUNX8+6q76O+0L7a2UWpF8GePSXv7eSbb1WNA+tzgHhS
HW3VNoh6X6r+Tqbj0D2K7/XprZobovqGKKcs1RpEynfWnlfdr6qnVzp6Fqpu
eWmusZkQNefbvu3kjL++r76W6pKVdu1Faylnn3JgHzA+z+mRqD9WpuopIfOU
2+s7r/pMFf1Z1QQM+7lnnqCGdXHqfesbV3Kfou3atdc98UiP/46XcjZU11Br
vJonUv2D2bNXB/NCuq/0/R3VZ/CdA9VKtT7OVCmP9cQjqpf63iQT1H9Ec4Ja
o83WeOjch/X+VM2OWbNWm58vlIzqF0XlLNFn5WDKHfeNl2pFWcdXnK5l6qMS
dU3p3zd+ceeie+8I7+OtucJs5bxlm/I6w45Ze2qtYwMAALnJV1tA4po/jexQ
LYVU50/Uw9U67myLWlfIxn6gKKqLoTwJX3zqEVqSv6u5Tc2Rqd+xcuTeeO3j
4FnlzJPrlWqf1pTJK0p8rJq3C/ubmkezfo8gnr6YtDzy/ag6YdmYW9Aau/In
w2LQer71OCGxAf39tawefbC769NrdnB9U50i5SVP/PzbIJeuc6dpwXqQapWr
3oDeB76e06VxxC8rZaV/Sap27PD3VlAudaZfv14df48c5V6o90Oqf3PGjFWR
fZT0vWk97rlMeehROaK33Uxthlw2bOh877lVDcyiP+urbUWvpINF7YnNZA+K
fKI6JvoOL0mPSPU6U3657xzkYs+bqD1B2aR986p/8dIL/YL9WpbP3mPGLA7i
2R+bnomZT8tttWuO9L73VPultH9fuQ/KX37qsZ5B7rZq+1R9Z1haetFaUT06
35ip34Z1fMVpH2jUNUbz5dYx5gO9p4/5bfh9Wz73R/bVEGbvLAAAKAn1hfHV
mT/q1+9Qo7HAlSSfoxDrTY4e5e8DmY567aWhupC+2NTjZNPmnf/9WT1j6fxp
TlHr3IM+mRvMi6n20f6+yNdf1TyoY56p2rqlqWMZVYdEPY2t3yeIH+2p9L1n
Lji7wQGfj0xbtGiD+9MxB/brUO2QXJ7PKySqB2e9phFGe1SrVBqa1T2qqfL1
m9eYZvq1tT4cNX7Kh1TOh3JvtEakXMbif0M1RvR9qbxGzcMnOieVKw41H/Nc
pfpfqnfjG1vNE+taah0nSi7q2WPp0o3//TnV7PT9nOrmWR9H3NSqEb4mqVw/
69gKgfqR+t6vN1zdwjy+klBdF80XZet+RnVRtP6l71rlwiov9vvvt0bWRLGg
a5Nq/ipXl77Fua9c2Tah70f1A1ePnVT+lnLCtPdJ743y93Q56LmvqMcf7mF+
7CWlWlq+41LOs3V8RakmmK4tvnhvv7ld3taNyLaoeZcP8ri/rK9f00XnNjSP
DQAA5B7NP/vuqXTfYR0fbGltP2wPpG/uRrXcrWO2oN5Lvs9Rzx4zTWP7fMK3
CefHdD41J5Gt+TgfrdGUZo+g5vZ8f3vlyi3m7xPEz+rVW4O1jOLvlxMOr2ay
V1LxaM3luad7B3VvVLvAeoyQnBpVo/d2ZcthP68Q1G/Veqb2zlqPSzJ89UhK
Wj8qVcpTTGWMFa/6PJx/5vuuzJGp11LJ5znLTNL9gWrYRI2trpvWcaJ0ovqC
FM2xVP8C388pJ8T6OOLGV49TtQSsY8t3youPum5pPsY6xpLKVC6r1lfVr+yB
uzsHOZXaO0FuPrJNuUJ6Jgx7j157xYfB/pdvvlnjVqzYHOyDE805KEdAfUXU
h/jvz/d1Za9rWaLae8uWpZYvEhcf9ZjpPaYlSzaax7ef+qyod5YvVs1tKgfH
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
to11mjVJC9nO0PqWtpNERsFrGnJNEaccOpxjmyM+agRjIgkh9qDWh2kOkdJ0
iAVQtwQ6V9LrYCuK3pasenZfLK5/gVgSk43Tpm4U78NEZ8H87TruM9R4eqVU
T5WTw5gOEy8+183xs/nlZ+7EUttpgiAXp+aPE9WA/st0TN78edu0DtPRY6fE
24oQQgghhBASGmjwmdb71FENFnaxN27rMxLv+fzT4cb+3LLlsLh9Tij7Rl9L
+0s8ErkuAupCV/lipI7XCHXu0aXTAvE2iHUQJ3bdv8Kr8x0rvF66l3j7xgOo
YR6qrVnnPDa58rKalv3ZOGm6uG0kOpLqTzM+ry8801XcPkJI8Bk98mfjPLJ+
/QFx+4LO9u1HVbcuC9Wbr/Q25mT4AWoQIl8fcXzQX5NuF4C9npWtV/2tJrWj
AkLWoRz1cqkeIcfXay/1UmfOsPaKFQ/f19bxcwotDzeuadJeDgXq8z3zRCdd
TxN76Gef7Kzr7yAGDP9+t9wA1Sc1Q+t/SLcrIYQQQgghiUpqryXGNf3GjQfF
7SPnQU1TU18x9ib2uP2mJpZ9+dC9bcRtc0rlj63zP6DhH+5vHTt+Suu7hnPe
2aPbIvE2iAegw+r2uXG+f9dRBa9tqMc5xsO9d7RUxe9upWtGgfuLhg++79QG
1ORZvXqfeNvGC/BH2LU34gJmztwsbidxDvwlpv6MFY0oYg1yw03aVgDrSWkb
SWwD3fbp0zapKZM3qEkT16vx49apsWPWqtGj1mifMTTohg9dpYYNWamGDl6p
hgxaoQb/zqCBy3VeMP6NP8Nn8B3sY2bN2qyWL9+j9u3L1rGm0vdIlF5nm+YR
+Hql7YslMC9PGL9OfVN1jLqnSAtX192mtTh8s21azdax8tL3fzHY71rZ/dRj
HcVtI+dB/I+T+kHvvzOQ87YFhW9o7PiZRe1TN6554xX1PZ1bbr2+ka7FJd22
hBBCCCGEJCKoZ2DyzTDOPliMGLbKuK9atWqvuH3EOZs2ZRn7snaNSeL2OaXW
TxMt7wHxAU5/A2c/iCtDTkg4Zwm4BmqySLdBPPD1V6MctTlqM0B7BRrSGKdd
Oy/Q/hto8iL+b//+X7SP2IvzPNTZRh0fp+dMy5buFm/XeKN9mzm27Y76NtCR
kraTOAM+U1NfYk6Wto9EDuZmU9++8XJvcftI7IK8XOT5e+krAtANe+yB9np9
gnUG96QyQKvJdE7w6++LPWn7YhnEWED/JKnBNFWhbH8dt3zNP0JrEzoBGpAH
D54Qv0cTx7NP63gTK9urf8MafkGkVXJ6yHFXv84UcTuDBPbD0Jtx+tyiFoob
10XMmNfvaMQMx4qeLCGEEEIIIfEEzg+s1ujFbk8Wt41cSEq7ucY9FeqkS9tH
nGOni4N8R2n7nNK21WzjfWRnnw75/XXrDqiST3cJ+wzhthsbx1Q7BR3U0K70
/uA/2xcaKcjpw5lq3z5LVcaSXWLaqjgLQ37o9f+t52hsQBt2167g5SHGC/Vq
T7Ftf/j56OPxF8QHfvDuIHXfnS21rjNqdeP/UR+7Y8o8nfuO+KasrBOXfM/U
j4gflb4vEhmYM+20jBYuoDYHiRyTLpvXFMrfSLVMnsW4Dp/58rMRlv2BnHNp
2+IRrJ8Qq75s2W6VNiNTpaVlaj2lxYt2av2acWPXqoEDlque3RfrXP5Yneft
6v1Cx8fr669Z84e+0NQpG7XGEJg86Q+tIYA/nztnq1q5cq/2WR8+cpLaE7/T
u+cSYxwO14+XgpiqcN5z0O1x47rIrahYYaDn7+W3XksVb2NCCCGEEEISjUeK
t7Ncn6NmorRt5EJMWirwvUrbRsIDeVNWfYkcDujxStvnFJy5mfb4dnW1od3a
ovnMsPPQSjzaQfXvt0ydOnVO/N7jEehrbNhwMDD+EuQuvlLKmSYHzheRF3b2
bDBsj1dwnv1RxcG2fQEdD2k7EwX4fVDXyOkcirioR+9vp8qX6acqVhhk/Ny0
qRvF741ERnr6FmO/Pv9UF3H7gg7muF49FuvYtJee76aaNp6htm8/Km5XUMh/
ubv12cIF+ctBrB0Rr5jWYNBqk7Yt0Sn1bFfLvkHe/LlffxO3zw7Emkayf4yW
aPSFrv57LV07stybfbVuDWoMJuKeo09qhm1MB94R2EtK2xkEEJcVzhiDvqSb
10ddNGhcefXevvKvNRLyGSCEEEIIIUQKnFnm+3cdy/V59Wpjxe0jF/LZJ9Yx
AHfd2lzcNhIe0NS16stYqxmM3CXTHh+5TVbfQZ4TtB/COStATV7kpknfL/GP
Af2XOa7/e/tNTfS5qrTNicLJk2fVkw+nGPsD64rNmw+J25kIJNWf5skZ7dOP
d1LffT1Wde44X+ewbtt2hLorMcLHHwwx9iu0/aXtCzLwgVrF28IXEvR8d79w
+l72krsLN9fxp9JtkQggX9yqD955u7+4bYkM8u8RX2DVN++WGyBuXyhMui9Y
P3oZi+K2vhDmQ/jL4TeXblM/sdOMBY8/2F5rP0rbKQ3WXOGMp5uuqu+JHdBM
RQ5O5Y+G6ZikUBor4eBEj5UQQgghhBDiDsjrNK3NkTchbR+5kLdf72PZV9As
kLaNOCfbpmbwD9+NF7cvHHbsOGqcQ7p0WnDJ56ERfMP/nNXNAB++N0ht3Mgc
n0QCNSFMdcBMPoWsQ6w35Tfw79v59d58pbe4jYnAp5WGuuqbsANaYA/d20aV
f6ufruXSvetCHbeHXNpY0pWKZ47/vr4wxWmjThnzKO351qbmPPQMpe0LAt/Y
tJGfIG5Jui3iHcTwmWIGavwwQdy+RGbG9E3GZwPvZmn7QoH8BSvbEUvq5XU9
0ym4rKb6sfp4lZNzVrxt/aJaldG2bVK31mRxG6Vp13pOWOPoun/V8cUuxOVn
ZmapJYt36twc1MhJbjZTx7O+9lIvreWG2o2op4J6rKbnBvsC1iEihBBCCCHE
P+xql6J2qLR95EJKPt3Fsq9YGye2mD9vm/G5GzRwubh94YAcKuzlre4lr8YP
8ijD8dHjHCFjyS7x+yP+MnHCeq0162SMIC6ob5+l4jYnMsOGrLTtI64jvAf6
GV74JiIB8T0PFGutXi7VQ/taEfPRttVsHccH/ZzjzOHzHNQjM/VPg7pTxe0L
h1Wr9qrZ6Vt8y/1EjaFQY3zWLOpAQRegYoWB4vMNtNsQUyzdHvEMdLZM7d+t
S/BjBuIZzOemvgl6rQutD/sfa//wV5+P9PTaXusLQZciUbSDUJvzhWesa/7o
OfqymrreiLSdTkDsGmzt0H6e1o5BrTXEL0MLCjq4D97TRsc3YHx26jBfLc3Y
5UhHJtz4R7zXpNviYhDzYbL3uRKdxe0jhBBCCCEkkUjtnWFcnzMnPnggN9Cq
r3CuKm0bcU7P7ouNz10s6rWaxiXOPfD3iFEpeG1DR+cYt+RLijqm5dy531ST
RjNU0duS1c3XJan77mypz5uQX1K7xiTt/5wwfp1ua+SnSLcfUTq3v+qXoxyf
d0H7YefOY+J2E6XriJv6Cb79oNdwj3VOnToXVv0qSRCDxXof3oK5MdbX9YcO
51zgI/Jj3GDdUPzuViHHMHJXpdsnKOzdm62WL9+jVq7cq1av3qfWrNmv1q07
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
2JZu14JD3dar/mbdd15qvmCtYhoziG0w1ZO1i+dolZzumn2ff2qOqUTNrXB/
b9euY6purclGTTgAPRCv2tsUi4h5U2qcE0IIIYQQ4ibYRyFmw7TeTmk3V9xG
Ep/8WH28cdxhLyhtXxCw8xd89/VYcftI4oF3gmlMIr+5T2qGmjd3m1qzZr8+
b0XeD3LroR29YsUetWTxTjVn9lZdjwU6HoMGLtcauPDrII8HGsU4W0JOImrv
2NXzvRic050586t4GxF77GJIO6bEnl+ZeAfqYD96fzvb5752jUnidsYCiDEw
+RTuL9pa+wylbQwXxJujHpud38AE2qLS+4P1+ymSa9vVtj93jrnZoUibkWnr
F4VPBvGj0nYmErt3H9frOLvnplkT1j8MGjpG9l/WMbKF8jfS5zzhrKXzglx3
xFRK3NeUyRvM51Nt/T+fQnz5vXe0NNqE+jjUZgqP+fO2GdtzzGj3tR5N+pK3
5EvyTBuw5o8TjfeIvzN9zy6eo17tKa7YdvjISWN8Pf4c7wQnv4P1I97pqKli
917PBTXzvBpTpmcUup7S450QQgghhBA3+KLyCONaG/k5pphxQqLFVC8V2srS
tgUF7LNNeQbYZ+/YIVPTmCQu0N+I5EzYDxDPcfYs4zmCDjQ4TH3IXGySS3b2
afXME51sn/mST3dhDFcY2D17EyesF7cvUpAPDQ2n0iV7qKv/btZwwjsCYwY1
3aKNG/7+23GW1yhwdQPx9gg6yFcueK1ZVwCaO17WbSOXAv0HO181wPzBemjB
A/U5TX2Wm5eD+h/79/+iVq3aq3U+Bg9aoWMiEEONWhCobVKkQNML6qDeflMT
7aOVuq+cnLPGPfBTj3X03Z6G9abaPh+jRqwWHwuxBrTBTO2JOcnt6yU1mGa8
HvIM3L4e4mgR52N1PaxVdu40r0Ps4jmgXeOGfXZ7eid5Q1lZJ1S71nNCvjsu
BvpCXo2p0iW7W14TsTzS450QQgghhJBoGT9une1ae0B/b2tJksTl0OGcC86M
8oIYI2n7gsQ3VccYn1Ev9SoJscIuX04anElLtw+xZ/PmQ8a5//EH24vbR4IB
Yjngd7d73osUbKr9U9K2xhLwN5naE/48afvcAHHoy5bu1jpAqEsPfwXyfJdm
7HK1fiRyPa3asfjdrcTbIMgg/urJh1Nsn203teRJaPC82Gl1gvvubKn1kqRt
Jdb9Z+q3cDUO8Hyi5g50i4IQH13uzb7Ge/Oz/ht0Ckw6BqBaldHibRWLvFtu
gGV7otaWF9ezqxkKbQk3rwXNivJl+hmv99knw22/b3dO65Z+8icfDrX8fezT
MA9Yfef06XO6ZjL6zq4GqgnUb4Rep1djqvJHwyyve8fNzcTHOyGEEEIIIdGQ
mZmlc8jsznVjUXuZxAbYB5rG3sABy8XtCxLwf9rp5MK/Lm0jSRyQi2PKl5Pk
tZd60dcQA1T9cpT5fFJAP5sEj+PZp/Ua1O55v+F/9XSesbStsQb8c4iDMbUr
6mVJ2xgrmOKNkBsqbVuQCZXj/lHFweI2JhJDBq0IuaaDbxXnBtK2EmsQs2Hq
u2XLdovbFw1DB6803pufMdyoB2myA7FO1LMNH6xHTLXS3ni5tyfXhL7QnYWa
WV4TMQxunkHZ1WTDtULVejPFjALUNXXDxhKPdLD8/VLPdv3zM4jfQMxYpw7z
dQxHJPXtcnnzld66HquX46pBXes1BvTZqC9FCCGEEEJila1bDxv3MrnrXZ6T
Ey/51kZzwk57MlEx5RoA5NTt2ydT25gkJqm9lkRci9tNHr6vrWrSaIbnZ0PE
HRCbZqqFAH9S1qEccRuJLIjJevpx+xoryAdMSwutAY8aHIh3nDRxvdb7kL63
oIC8Tru2Xbhgh7iNsYBpH4V8V2nbggreAXb5vNDtOHnyrK4NcfTYKfXLCfpI
vQJaNXZ7sVxQKwDaNtL2EjOoNWXqv1jXsMIcYKpXAZ+4k7WAG9jFmM6ZvVW8
nWIR9J2pTbG38+q6rVukG6975WU1o9YnRj4crmHSIgSh4hbx/rOrHefWcw09
Mavfv79oa/X2633Ug/e00efC0e7XUQtv7hx/npOunc3zIerfSI97QgghhBBC
wgVr6UL5G9muuZs1SRO3k8Q3DxRrbTn2kOMibVsQ2bPnuMp/eV3bM3D6q4if
4Pwy3Hq50QKt45dL9dD+SPiFpNuAhMf775hzzap8MVLcPiIL4nmeeMi+DgPO
2u304xHb2KvHYp0DmPcsHPnlbuUzxjo5OWdVkQJmjY5b8iWplSsZ0w1/94YN
B9XkSRu0fwD16j+tNFS99Vqq9u2ZfDXIXcVaFv6Qh+5tox57oL1eoz3zRCf1
+afD1caNB8XvTYpK7w+2fb6xzoUWe+7/o43hB9q27Yi47fEE6lQ8UrxdyDUX
/Ojz520Tt5fYU7/OFMv+i5d89O+/HWccowWvbRhS58ANsIawm7ewdnnn7f66
RireFdDzgE8f+xW8P6AzwpjlC/nhu/HGNl200Lu4UsT62vUnQD9ClyKS3y7/
lrnGCoC+3K5d5twlxLm89Hw34/fd1KUJVdcwGrBex75vyeKdvo4ru7qCfswV
hBBCCCGEuAXynerVnhIypxr6esiLkraXxDd33drccvxVrzZW3LaggnrioZ5d
5HNI20kSB2jljhi2StfQgFYGzm6iOvv5/f2Ecy7kPT/1WEf1XvkB+r3Vv98y
nR8aydkaCQZpM8x5eBg3mZmMz0lkDh85qR5/sH3I+QE+kYu/C98k3o92PnYA
LSvOIX9gp2EPEJPgVy5lEEB84Mjhq3UtkDKvpqq7Czf3TIMK7zjEiUjfswQF
r2kYUZshNubcOe5NowWxXI2TptvmfecCf6fffjgSGZU/ttZwvOPmZuK2uQHi
NO1yGpCntGLFHk9tMJ1bhDv3+6UnEnSwf7z9piaW7YSYUq/PInv3XBKyv7AP
DSeWEFqRxe+y1rvIy6CB1jVdcIbz6os9Q37fzXyG9m3muL7GQb/iPbN793GR
sZWevsVoG+O6CSGEEEJILADNP/jbcDYZav2Nmtqs20D84BuDxi/zwMzg7CNU
7jJ86nY5H4R4SW4+M85SJoxfp0aP/FmNHrVGjR2zVv8/ah/gLBPnKajpvX79
AbV9+1GVlXWCtafjmOPZp23PwpGzLm0jkR0fODe3e7fBtz5k0Ar9eZyvI8YL
Piw7nQkr6J88j11tdoAaSJi3pe30ik2bslStnyZqn6fb/oxQfPZJYs55Jv+d
E2b/vq6Qtj9WQRwHanI4bX9or+H5kLabOOONl3tb9iNql0nb5hZ2NTIA6jjh
bGHLlsOeXB/vCjfmfsSeMK5U6fhJUxt9/dUoX2z44N1BIfsL66DmTdN0bIJV
jAn+DHtYxII6iZND/oPJnq8+Hxny+4gXcbMN8G64p0iLqMc1YqlfL91L7/el
Yy9xvmCyc8b0TeJjnxBCCCGEEBOoNzpsyEpV4pEOjtbhBa5uoFator4y8Ycj
R0+q50p0vmAfCG1SabuCTmZmlrrpqvq2zzL8WxlLWOuaEBIMUKPA7qyUMWiJ
C+K4Xnima8g1KrSnUW88Wt8717nnQY021Ea3ay9o53TuOF/cVjeBHvonHw61
1XLxGmjJSLeDBNCRi7TNJk1cL25/rIG6SfBDoyaF03ZGfjj0kqRtJ85BPSer
viz3Zl9x29wCfnPMm078yqhthfgPxIy7df0DB34J6zmyg3t0+3eBX7F7iGVw
MqZyQczQrdc30jE5uYSjS4k6gGfO/Gq0B2exoX6jbq3JrrcD4h/y1jkLh+J3
t9LxLlu3ehNHFQl475nsnT6N8RyEEEIIISQ44OwFOdHQzUOeBvYcTtfi0DWE
lr30PZDEAjV958zeqnW/3dSOjHdQtyBUDghymb/7eqx4jgQhJLHpk5phO1fh
HFDaRiJHqDrjboL4ZmjWSd9zkMDay0nOPvyCbvrGpIA+S9Hbkn0bcyaqVRkt
3hYSIM8gkva6/r/14jLGYN26A3ofhBijaH8LeRzLl+9RA/ov0zngTnQ5L943
JDWYxpqrMYhpTos37bO9e7O1lmw44xoxoO+/M1A1ajhd+3mjuT5y+6/9Z+2o
5/9ErbeVi51+ArQi/FynIa7Vj3Xoj9XHh5xbUePK7jcwpx88eMKTdoBuppO1
IGLwS5fsrlo0n6lrHUqPJSvwTjXZn0h1BAkhhBBCiDw4x4IuPfaAWHOj9iLO
XcqX6RdVTU/UKw9STDUhJDTQnXdS2x31S6VtJYQkJosW7rA9+0Z9KLtcNRLf
LFyww/Mz9FxeLtVDrJZ30EFMhxPfL/JQUbNB2t5I6dRhviM9dK8pfENjtXNn
4moS9ei2SOc4O20v5A1Dw13abjdB/MZrL/X68x6Rg/Fe+QG6vhFyxu2+izht
+EO7dVmo4zaQ544xFc2YhM+b9WxiF5Mf+Ifvxovb5jY4Bwtn/sgLtDtQqy2a
62PuxnMXSivTxIvPdRNvQ2nefr2PsX3atprtuz2IH0F8gpNzlXBB/ANi7JzY
gefV6jfyX15X6yxlHcrxtB1QB2jM6DWq+jfjdO2Ukk930efMuHbfPkv1eyfo
ezZo8OFs29QfrCNGCCGEEEL8ADHG9xdt7fr+AntaxIqzhichscmoEatD6vDA
RyNtJyEk8UDesV2uGfyq0eZKktimXes5rq9tc8G5POq4pLSby5hlByDWJVTt
ldx2jUWdjjo1J0c9pjBnIQ/+6cc7GeNC8PdfVB6hPvtkuK4zVen9wapihYGq
Qtn+mvp1pugcc+n2kAZ7T2jzQTsebfXxB0PUl5+N0H6kerWnqORmM3Wdn+FD
V3mWjyxJlS9GGsfZVX+rqff9iPf48L1BejyBd97ur554KCViXXwTaHc39EGI
HPn+XceybxvUnSpumxcgBvGBYpGdjSHGOCsr+jkFfm3EQHVMmae+qTpG+78R
o3zbjY21ntDFsQF4rt8tN8CVa8cys2ZtNvYN4hZQj1fStkhjhawodnuyWrFi
j+Prnzx5Vq8Zcr+Pei7QMIxHbSovmDlzs3EuBKhnA21gaTsJIYQQQkh8s23b
EdfPbcAjxdup+fO2id8fISQ6cJZklyOEnD1pGwkhiQXiNHAOabcOQW04aTuJ
LE0azXB1bYv1MuqCpPbO0LXupe8v1jh0OEc9+2TnkO0MP7u0reGAfGynYwix
7tA8RE4qYi/69V2qNRER75LrBzh79lftm7P6/k/fTxC/XxJ8Cl7T0PW9fbg8
+XCKHtvSbUGiB/OWVR/Hcz27EzlnVM0fJxrnYjumT9vki43Q0oHeDuKlgq5r
4AeI47OLw4EOhLSN+/f/omMqTM+UExDLgzi5o8cii5Pbty9brV27X681pNsj
VkCbhdp3fvX5SHE7CSGEEEJI/IP8JDfPbooUaKp69VjM2riExBHQnjXl1X79
1Shx+wghiQP04pGbaLcWKftGX1/rY5NggriLaNa0ODOHT7J2jUm6rv2pU9Sb
ixb4nj6qONi23aG7LW2nU3DGH2o+gh469BIQ5/7LiTMhf3PjxoPG3+rZfbH4
PZPgc0s+s3aV1yBmC+9p6TYg7oAzHVNft26RLm6f12RmHtIaP3a1/S5m9ep9
4nYnIlirmfoE7+kgaZf8/PM+HZMRav2QF+g/4NwFawRp+xMNaN/Y9Q3ivnBe
Jm0nIYQQQgiJf5Ab5sbZzTNPdNLnr6ytQkh8Aj9Wo4bTL6i/ghq91FAmhPgB
fApJDaaFzGkrfneriHPWSHwBDWlolDtdy+L99lyJzrpGw8QJ60V1ueMd1Hsv
eO2lGgLwQ8eS9nf1amNtxxT0CjMzw6unPm7sWuPvQTNN+p5J8EG9Uz9jOKDj
V/XLUSpjyS7xeyfuc+Vl1hoVTRvPELfNL7DfHTRwuSr/Vj8do2d6Ft5+vY+4
rYnIlMkbbPcHLZNnidtoBXRVlizeqXp0W6SS6k/TtdsQlwKwFsXZCzTAECPE
Wh4ypPZaYvv+w7hDXSRpOwkhhBBCSGKQnr4lonObG6+or+vuYu2Kmi3S90EI
8QfohMLPtTSDZ7aEEPexOq/ctClLPf9Ul5BrE2iEcU1C8gKdFpzjW/lf7ri5
mapQtr9q22q2rguA2uLS9iYSiJeB3zm3Hjm0UMKpBS9NdvZp21rqlT8epvVI
wv3dVsnpxt/EGkz6vknwwVwGHZxoNP3tgH//8Qfbq+rfjFPTpm5kPkecg3Mf
q3EAn7O0bRKgFgviBxrUnarefKW3urtwc72e+P7bcdTxEmD9+gO2tWHvvaMl
5yhiBPkCBw+e0LU8ccbVrctCHVfzyYdDVYlHO9i+C+8v2lotmL9d/B4IIYQQ
Qkhi0bDe1JD+kTKvpuo968jhq3WeGXXMCSGEEOIGyE+DXljBaxpqzVpoKmzd
elj7pJo0muFI5/q2GxvrM13peyHBBL53nNWuWrVX66c7qXtB/AE13GNR62vy
pA3G+Qia6JHulT7+YIjlb2J+lL5nElts2XJYNW+apnWrIonbwLsX/qxPKw3V
WgxDB6/UMVeRxCmR2KVIwaaW4wOaLNK2kcRm+/aj6s5CzWy1E+bO2SpuJwkW
iP2vWGGgKnxDY11bMZL3483XJTHGlhBCCCGEiIF6f9A+xjkNdH6h24E/Q/6B
tG2EEEIIiU927Diqnn680yXnZDiftTujzUvR25K1j176XgghiQPyN01zUjTz
0YP3tLH8zVLPdhW/ZxK7QOcqtXeGqvHDBPVe+QHqhWe6qofubaPuKdJC569D
bwP5G9WqjFadO87XNQAQayltN5EH48RqToI/VNo2krjAJ4/1v93+oOaPE8Xt
JMEC2nCmGLVwGDVitfi9EEIIIYQQQgghhBDiB/AXFcrfKKrztJJPd9E6udL3
QghJLJ4r0dlyToJvPNLfhFY/allY/S5qW0jfMyEk8UDsj9Wc9OqLPcVtI4nJ
2rX7Q/rkESvOmDRyMV07L4g6luOn7yeI3wchhBBCCCGEEEIIIX6wevU+df1/
60V1nvbd12N5VksI8Z3Tp88Z60B9UXlExL+LWham+Q7aCtL3TQhJPMqX6Wc5
Jz3xUIq4bSTxmDVrsypwdQPb/QHqRe/efVzcVhI8UEM8mr0n1ni//vZ/xe+D
EEIIIYQQQgghhBA/KF2ye8RnabfkS1JjRq8RvwdCSGKCeiqm+alvn6UR/y5q
X5p+N2PJLvH7JoQkHlW+GGk5J0FfTdo2kjj89vs/2reZo676m7WGVS6I9UDM
uLS9JJhMGL8uor0n5rsO7eeJ208IIYQQQgghhBBCiJ+YagqE4pMPh7K+CiFE
lDVr9hvnqCmTN0T8u9AcsvrNK/9aQ+XknBW/b0JI4tGsSZpxvjt5kvMS8Z6f
f96n6yuG2iPceEV9tTSDsY/EDOKCKlYYaDuOoL92f9HWWpuoaeMZWhPm3K+/
idtOCCGEEEIIIYQQQojfXPGXGmHFcTxSvJ1KT98ibjchhKxff8A4V02eFHk8
x4P3tLH8zYfvayt+z4SQxKR/P7Nu0IYNB8XtI/EL4rd/+n5CSE0OUPCahozl
II5ATMe4sWtV3VqTVeOk6apbl4Vq1IjVasH87WrXrmOsp0IIIYQQQgghhBBC
yP/D5Le8mAeKtVaDBi7n2RohJDAcPnLSOGe1Sk6P6Dd37z5u/M1qVUaL3zMh
JDGZO2ercW6aNHG9uH0k/sg6lKPq1Z6i8l9e19FeoUiBplo3S9puQgghhBBC
CCGEEEIIiScmTlivawhY1ha4rKYq+0ZfNXXKRp1DJW0rIYRcTOEbGlvOX++W
GxDR76X2zjD6qkYOXy1+v4SQxAT56qa5qWPKPHH7SHzRtfMCdf1/6znW73vs
gfZq585j4nYTQgghhBBCCCGEEEJIPLJwwQ718QdDVOmS3VWJRzqot15L1Zq3
+/f/Im4bIYTY8XrpXpa+pbtubR7R72H+s4xv+2sNdehwjvj9EkISE8TV5vt3
HWoHEc8ZPWpNWLUYK380TJ3IOSNuNyGEEEIIIYQQQgghhBBCCAkWqLtu8jEh
nz2c39qz57jWJbL6rWef7Cx+r4SQxObxB9tbzk9PPdZR3DYSP5R51Tqu8WIK
5W+kRgxbJW4vIYQQQgghhBBCCCGEEEIICSbjx60z+pqGDl4Z1m+1aD7T+Fvt
28wRv1dCSGLz+afDLeenq/9eS506dU7cPhIfvPhcN9s4jiv+UkNV/XKUOnzk
pLithBBCCCGEEEIIIYQQQgghJLhkHcox+pzgb3L6O7/+9n9V0duSLX/nqr/V
VPv2ZYvfKyEksenRbZFxvhs1YrW4fSQ+aNNqtnGclX2jr1q5cq+4jYQQQggh
hBBCCCGEEEIIISQ2ePi+tpZ+p3uKtHD8G2lpmUb/Vfky/cTvkRBCVq3aa5yn
fvp+grh9JD44ffqcKv9WvwvG1+ule6kli3eK20YIIYQQQgghhBBCCCGEEEJi
i+rfjDP6ODduPOjoN/5/9u4yTo4q/fv/g//+YF+7vNYgQAIEwmLBIbjLkg0E
Z/HFIWggECQe4kLc3d2VeIi7ezJxd8/E9/z3W3sPTCZ1qrtnuvp0z3wevH97
36Sn6tSp6uqqc65zXW+/0d26jeHDljs/RgBQHqHChWr63qfq153gvH3IXebM
3uTVLVuyZLvztgAAAAAAAAAAACA1DR2yzBqL0bjBpIh/v3Hjfq+mit/fF76i
pjl56rTzYwQAad1y+ln3qUIXVzHbtx9y3jYAAAAAAAAAAAAAyOzQ4eMm/3kV
fOMxVIvl9H+C/75iuRHWeJCqP452fnwAkFmLZlPNzdfWMQX+VMG88HQHs2zZ
DudtAgAAAAAAAAAAAAA/r77YOVv1UjZt2m8u+1sl37+74JyyZsOGfc6PDQAA
AAAAAAAAAAAAIBX177vIGs9xb5FG5uTJs2umKG/Hs0+2s/7d+2/3dH5cAAAA
AAAAAAAAAAAAqer48VPmustrWGMzmjWZctbfVK86xvp5WbBgq/PjAgAAAAAA
AAAAAAAASGVNGk22xmZc+tdKZuPG/b9+tm/vhYGxHG+/0d358QAAAAAAAAAA
AAAAAKS6o0dPmpuuqW2N0Xjqidbe56ZMXmfyn1fB+rmC51c2W7YccH48AAAA
AAAAAAAAAAAAucHgQUsD826oJku+c8sGfqZb17nOjwMAAAAAAAAAAAAAACA3
efXFzoHxGkFKfzXYefsBAAAAAAAAAAAAAABym82bD5grLvwx5liO555qb06e
PO28/QAAAAAAAAAAAAAAALnRqJErzQXnBNdVyezu2xqYffuPOm83AAAAAAAA
AAAAAABAbta50xxzwf+ViRjL8c/HWpnt2w85by8AAAAAAAAAAAAAAEBeMHrU
SnP9lbV84zgKXVzFNGsyxZw8RY0VAAAAAAAAAAAAAACARDp85Ljp02uBadJo
smncYJKpU2u86dZ1rjl48JjztgEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAKSSTZv2m7atZ5hPS/Qzzz7Zzjz2YHPz6APNTfGi
bcybr3Yz330z1LRqMc1MnbLOpKefcN5eAAAAAAAAAAAAAACA3Cotbbd5/+2e
Jt+5Zc3f/r8fonLxH8ubfz3X0fTsMZ/YDgAAAAAAAAAAAAAAgDg5cPCYKfPd
MHPh78tFHcfh56pLqpnaNceZ3XuOOD8mAAAAAAAAAAAAAACAVHTixCnTpfMc
c93lNXIUx5FVwfMrmwb1Jprjx085P0YAAAAAAAAAAAAAAIBUsGTJdvPZx/3M
FRf+GNc4jqzuvKW+mTVzo/PjBQAAAAAAAAAAAAAASFZbtx40H77b25z/uzKh
xnFkdsE5ZU3lCiPNyZOnnR8/AAAAAAAAAAAAAABAMhkyeKkpdFGVmGIxLvpD
OfNMsXbm/bd7mtdf7mqKF21j7ri5vinw54oxx3UUe7yV2bHjkPN+AAAAAAAA
AAAAAAAASAY/1fklppwcyqlR+qvBZufOw77bO3X6P17NliYNJ5uH72sa9XZv
vLq293eu+wMAAAAAAAAAAAAAAMAVxV2UKjkopjwajz3Y3CxYsDWm/Uybut7L
4xHN9gueX9mMG5fmvG8AAAAAAAAAAAAAAABcUI6NaOM47rm9oenVY745/Z/s
72/kiBXmtut/irivC39fzvT8775c9w8AAAAAAAAAAAAAAEAide82L2JcRf7z
Kphvvx5iFi6MLR9HkPT0E942I+1b9V+aNp7ivJ8AAAAAAAAAAAAAAAASYc2a
PeaSv1QMjKco+mhLs3btntDaMGjgkohtkKqVRzvvLwAAAAAAAAAAAAAAgDCp
Xkqxx1sFxlB89nE/c+LEqdDbsmjRNlO4UM2IMR0lPxtgTp467bzvAAAAAAAA
AAAAAAAAwtC+7czA2IkKZUcktD1bthww99/ZOGJMx8vPdzKHDh933n8AAAAA
AAAAAAAAAADxtHnzAVPw/MrWmIkXn+lgTp3+T8Lbtf/AUVO8aJuIMR0P3NXY
bNiwz3k/Zti954j5+MO+5sr8Vc31V9Yy1auOMSdPkkcEAAAAAAAAAAAAAABE
7723elpjJQpdXMVs337IWduOHj1p3nila8SYjqsuqWbGjUtz3pfp6SfMw/c2
Pat9330z1HnbAAAAAAAAAAAAAABAajj93/+T/7wK1jiJnj3mO2/jyVOnzRef
9o8Y03HB/5UxlSuMNCdOnHLWVuXl8GvbRX8oZ44cOeG8LwEAAAAAAAAAAAAA
QGq45C8VfWMQnnuqvfO2ZVa18uiIMR2i/BgLF25NePuqVRkT2K6tWw8670MA
AAAAAAAAAAAAAJAaSn424KzYg0v/WsmsX7/Peduy6tRxtsl3btnIuTrOKWu+
+XJwQmrFHDh4zJT4oE9ge267/icvF4rr/gMAAAAAAAAAAAAAAKnh0OHj5q3X
u/8ae1C4UE0zYcIa5+2yGT9+tSl0UZWocnUU+FMFU/qrwWbVql1xb8ep0/8x
/fsuMtdfWStiHZhx49Kc9xsAAAAAAAAAAAAAAEg9ymWxYsVOc/LUaedtiWTN
mj3mgbsaRxXTIef/rowpXrSN6dhhttm583CO9r1x437TtPEUU+SmelHtu16d
Cc77CwAAAAAAAAAAAAAAIBHS00+Y0qWGRB3TkTm2Q7EgX5ccZDq0m2UmTVxr
Nm8+YI4fP3XG9k+ePG22bDlgZkzf4MWB6PN33lI/pn19/kl/5/0EAAAAAAAA
AAAAAACQaKNGrjTXXV4j5rgO3/osf65oCp5f2ftfxX3kZFsff9g3JXKdAAAA
AAAAAAAAAAAAhGHf/qNe/owLzikbl7iOnMh3blnToN5E530CAAAAAAAAAAAA
AACQDBYv3mZef7lrjnNrZNeDdzcx8+Ztcd4PAAAAAAAAAAAAAAAAyWbp0u3m
s4/7mfznVUhIHMdN19Q27dvOpL4KAAAAAAAAAAAAAABABHv2pptWLaaZoo+2
jHvOjov+UM68/HwnM3jQUuI4AAAAAAAAAAAAAAAAsmHHjkOmV4/55uuSg7y6
KPnOLRtT/IY+f8/tDc2Xnw8w/fosNPv2H3V+TAAAAAAAAAAAAAAAALnJiROn
TFraLjNyxArTsf0s06DeRFO5wkhTqfxIU7XyaFOn1njTod0sM2zoMrNkyXZz
/Pgp520GAAAA4mX3niNm2bIdZv78Lf99Lt5tjh496bxNAAAAAAAAyUhzhZMn
rTUHDx5z3hYAAAAAAJA7aLxBeeqqVRlj3nq9u7nvjkamwJ8qnJWP7oJzyppH
H2huJkxY47zNAAAAAAAAyWDvvnRTvGibX8dPCp5f2Qzsv9h5uwAAAAAAQOpS
fcCni7WNqcZgRlxH1y5znbcfAAAAAADAtY/e633W2MnFfyxvNmzY57xtAAAA
AAAgNX3yUd+YYzkyx3T88stq58cAAAAAAADgyrFjJ03+887OcSptW89w3j4A
AAAAAJCaLvtbpWzHc0iRG+uZ0/9xfxwAAAAAAAAuTJ+2wTpu0r7tTOftAwAg
Vagu/ORJa83Bg8ectwUAACAZFLqoSo7iOWTO7E3OjwMAAAAAAMCFhvUmWsdM
5s/f4rx9AAAkuz17003xom1+/f0seH5lM7D/YuftAgAAcO2bLwfnOJ6jXp0J
zo8DAAAAAADAhVdf7Ow7XnLpXyuZk6dOO28fAADJ7qP3ep/1O3rxH8ubDRv2
OW8bAACAS4ePHDfvvNnDnP+7Mr8+JxW+oqZ59sl2pvRXg03TxlNM/76LzIQJ
a8zfC1T1HZ+4/87Gzo8DAAAAAAAg0VSD1pb79Lmn2jtvHwAAyU6/pQX+XNH3
t7RdG+qWAQAAyLZtB73adEF16d54pas1R8fPw5c7P4a86sSJU2bTpv1e3ZuR
I1aYnj3mm9Ytp5sG9SaaalXGmO++GerFN7/0bEfz+EMtzJ231Dc3XVPb3HBV
LVPkxnrmiUdamhLv9/Fid+bN2+I9P7s+JgAAAAAAUsGiRdusYyW1a45z3j4A
SBanTv/Hy1l0/Pgpc/ToSXPo8HGz/8BRs2v3EbN160Gzfv0+s2rVLrN48TZv
jHLmjI1m8qS1Zvz41WbSxLWB49ZIbQf+e25tv6XNmkxx3j4knuaq9P139b3f
seOQef/tnuaHb4d59yXX/QEAQLR69Zhvfa5Sjg7iAMKzcOFW06/PQtO4wSQv
PkOxNY/c38xcW7D6GblV4uGuWxt4+3J9zAAAAAAAJLvmTada3681/+i6fQBS
15696Wbu3M1m6JBlpm3rGd66rS8/H2DefqO7eeHpDuafj7XyxgcfuKuxuef2
ht4ariI31TO3Xf+TubVwXc8t19Xx3HztmTL+ezT0ea0Nu/Hq/60Pu/7KWl5+
5+sur2Guuay6ueqSaubK/FXNFRf+aAqeX9lc8peKJv95FcxFfyhnLjinbNzG
Li/7WyUzoN8i5+cF8ae1irbz3qXzHOftQ+Ls3Zduihdt8+v51z1lYP/FCW2D
Yst0z8tow4W/L2c6tJvlvG8AAIiGYqcLF6ppfbYa8fMK523MbXbvOeK9m8Uz
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
hv0Hjkb1N2+/0d33nfSiP5QzR4+edH5M0dK45LSp602DehO9NRKqFaNcmFqD
77ptYdC5Ub4N5VAp+mhLbxwr2nmcvr0XOm8/4JLinxS74ff9aNt6hvP2AUh9
N11T2/ceo9iLeO6nWpUxMcVynP+7Ml5NINf9A+Qmet+44Jyygd+9WwvXdd7O
DKpNYWvny893ct4+wM+/nuvoe83ecXN9521D7HbtPmIuz+efm0PmzdvivI0Z
LvtbcD27sWNWOW8jAAAAACA1NKo/yRujz3invLZg9ajWCehzfu+kWmPm+pii
obiVGtXGejnt/Y5DtU23bDngvJ3xsH37IS+fitb85j+vQkzzN5l99cVA58cC
uDRyxArr96NDu1nO2wcgtR06fPyMZ7LMKpUfGbf99OoxP+ZngHtub+i8f4Dc
pk+vBRG/e8891d55OzMo5t3WTtVqdN0+wE+Rm+r5XrPKTem6bYjdF5/2t96H
nnqitfP2ZRaUz0jranbuPOy8jQAAAACA5LdixU5zwf+dPW/w8L1NA2trpKXt
tr6X/lhxVMT9nvrvxtev3+fFjSS6xrKOq2P7WebK/FUjjp8+cFfjlM3Bevz4
KdOvz0IvhsPvHGdH1cqjnR8X4JLmU23fj5UrdzpvH4DUNnPGRus9pkf3eXHZ
h3J0KZdarM8ApZIofzmQW3zwTq+UiqdWvLtfGwtfUdN52wA/Gnew/eaV+W6Y
8/YhNoobs8W9yqSJa523MbPSXw32baeOoVmTKc7bBwAAAABIDYprsL0L9+wx
3/p3XTrPsf5dUG115cSoXGHkWesUbriqluneLT7zFEHWrdtrihdtG9P8xfRp
G5yfp1ionorGBgoXqhmXGI4MBc+vbNas2ZPj9mntseaSmjSa7K2tUf5b5XR5
6J4m5pli7cx7b/X0csYoZsh1XwJZPV3M//5x/ZW1nLcNQOpr33am9Xd44cKt
Od7+/PlbIub+tlEeAdf9A+QmihkvdJF/nsDM9Fzsuq2ifH+2Nn72cT/n7QP8
bNiwz3rdtm453Xn7EL1jx05aY8rkhac7OG9jVkeOnDDvvNnj1xgUjYPpfqn4
XddtAwAAAACkjoEDlljfh1WrWetZ/P7u0xL9fP9GeSAUs+H3N9OmrvfmPIPG
Kz//pL91nznVudMcc+lfY5/DUH0F1+cpGso70q3r3LjHceicPv5QixzVoV28
eJupVWOceezB5hFrhGem3CKzZ21y3rdABtu8y1uvd3feNgCp75sv/ddx5ju3
rJd3KyfbVg6hqy6pFvybH/AbvXlz7qhBByQLrSOP5nl48KClztsqgwba3xuV
E9B1+wA/48evtl63QetQkHyUBzbo+WXJku3O22izbdtBs3TpdnPiRM6e5QAA
AAAAeVN6+glz3eU1rO/Fw4ct9/2722/4yffzqk/i9/mhQ5aZi/9YPqoxy3jW
h5d9+496c63ZiWW45C8VzZ696c7PUySaoyn6aMscx26oBo3yZVSvOsYM7L/Y
LFq0zVtTkp027d5zxDRpODlwDU208STt2sx03sfAli0HrNfpT3V+cd4+AKnP
9lt+b5FGOdqu8mupHkLQ7+2zT7Yz99ze0PffbrmujvO+AXKb70sPjepZOFnm
KCuUHWFtY6LrZwLRatNquvW6Xb2afJCpQmuDgmJOf/iW2jkAAAAAgNwtqHbK
22+cveY8KNfut18POevzv/yy2lz4++jrtGsNarxqbcyds9ncfG2dbMcSJPu4
gHJyKGYi2liZrLROV/k/27aeYZYv3xGXNq1fv8+UKjnIFPhThRzFcWSN6WD9
FFxTnSDbNWqLfQOAaCk/meJI/e4xH77bO9vbVa051bUL+p1VHId+v/V76/fv
ysvmun+A3ETP8NHk1FOO/uzGVsebrebcTdfUdt42wMYWN6XxiZMnTztvHyLb
uy898Dnmxqtrm4MHjzlvJwAAAAAAYVLtZq279Hs3Vo31rDkhg3Lt9u+76IzP
rlq1y1yer3LM8/fxqMHcvdu8bMc5ZBz7pk37nZ8fG8XVPFOsXcxxERqLbdp4
ilcDRWPJ8WrPjh2HvDiOWGJ3YqFaPaqZ67rfkXd1bD/Len2mpe1y3j4AqW3Z
sh3We4xiN7OzzbVr93jzHEG/r5ojUS0VxaXZPtO1y1zn/QPkJlprHs3zr76/
rtuagZpzSEWq3+l33d55S33nbUN03ny1W+B9cty4NOdtBAAAAAAgEerWHm99
P54ze9MZny33w3DrZ1WPIONzmnt/8O4m2Zq7VxxGTuqcqPZBTmIHlMszmdfb
z5+/JWLe9MyUp71506leDEi826J4oJbNp5mC58cetxOrn4cn7zlB7le5wkj/
+8X/lTHHj1MLGUDO9Owx3/r7N3nS2pi3p1pskdb/K0+XPqfPl/lumPVzyvHh
un+A3OTrkoOievZ94ekOztsqinG3tZGac0hmtt9BxQi4bhsia9ZkSuA98qsv
BjpvIwAAAAAAiTJ71ibrO3KLZlPP+OwTj7T0/VzWXLtVKo0KfPe++7YGXj0X
279365q9taC2Oddoqd7LgH6LsrXvRJg6ZZ2XOySaY7n/zsZmxM8rQmuL6nk/
fF/TbPe1jkN//8YrXb1c8s891T4wn0urFtOc9z/yrnf/3cP3ukymtbMAUlf5
Mj/73mNUb+FAjHnEFfepWI2g32CttV+4cOuvf6NnBr/PKX+H674BchPFvNty
XWSlWhGu2ytjx6yytjHMdw0gJ/YfOGq9bqv+ONp5+xBs5oyNgbk/77i5vjl8
5LjzdgIAAAAAkCiqqZL/vAq+78kfvdc7qs+9/3bPXz+nnOFB794P3NXY7N5z
xKxevdv6mezUiq9WZUyOYzlUT8b1+bCZO2dzVLEcmsNRbvRTp/8TSju03Qb1
JsZcW+WSv1T0YjfatZnp1eLxq/eyfv0+4jmQlB5/qIXvdfnUE62dtw1A6tM6
fL97zK2F68a0nV9+WR3xWUE5tTLnX9u587AXN+L32U8+6uu8b4DcZOAAe+3K
rNq3nem8vaL4flsbyd+DZDVj+gbrddun1wLn7YPdrl2HvXqrtvOnfK6ZY1IB
AAAAAHlXevoJr7bx4sXbnLclEWx5N+66tcGvn9F6T9s7deY8HrY6tXJtwepn
1GUp+qj/fmOtadu29YwcxXIoNmHI4KXOz4ON8hxfc1n1iMfx3ls9za7dR0Jr
x8GDx8xLz3aMul81P/TiMx28nCf6TkXa/g/f2vO9Dx6UvOcHuZ/uXX7XZYkP
+jhvG1KX8hyplsbBGPMvIPex5YR//eWuUW9DNVsixVoqlmPWzI1n/J3mtWyf
1zZd9w2Qm7zyQueon6OzU2spDLb6MIrzDyt+HMipju1nWb9bixbljTGeVKR6
rs8+2S7w3ti65XTn7QQAAAAAuDd82HJzZf6qv74vKtZBaxddtytM330z1Pdd
WTkr9E6tz3RoZx8TUT5MfWbcuLTAd2/9e+b92vKLe/s9eTqqto8fv9pccE7Z
bMdyXPSHct45d30ObJQXxZYbIIPW4vbuGe46o23bDpoH724SVZ9e8H9lvHnu
FSt2Rr19rRXW39muh+3bDzk/F8ibjh49aV27rrxArtuH1HPo8HHzdLG2Z8yx
jxyRuJz1+l1RnqQJE9Z4sYz9+y4yQ4csM9OnbTBbtx503j95TWBO+MqRc8Ir
31U0OcquuPDHM/JyZFAODtvfJMv1oBoVqvmgeeVbrqvjxf0qV1jGMyoQia6h
pUu3e/fazp3mmGZNppgmjSabls2nmV495nvvExs37vfNHxcv+j7pmTbadxSt
UXfdb1K8aBvf9t13RyPnbQNsgsY3dD9w3T74i1Q/9503ezhvIwAAAADAvbVr
93j5G7O+N6pOhOu2hUlrHGzvzBrb1GdKWdZmaUwkI/fCow80t27n0xL9ztpv
UF4NxQ9EaveGDftMoYujq0Htp8CfKpgxo1c57/8gmssJOoabrqltli/fEWob
NP5c5MZ6UfWpcsar5k4s29c1VuQm+/bfer278/OAvCstbZf12tSckOv2IfWU
eL/PWdeSnj30mxbWPvfuS/d+c597qr332xd0H9fvqp57enSfZ44ciZxbCTmj
mFjbuYiUE165XZTDI9Jvs2qx2XKT23KD3HN7Q+d9I4onViyKXxvffLUb83Lw
dfz4KTNq5EpTutQQc/+djaOOo1BM/7v/7mHGjU2Le5uq/hj8TJ/Z3wtUdd6H
GWzvWsoL6LptgE3xom19r9vM+UeRXBRjHHRf1HgEOe0AAAAAAFKh7Ajfd0fl
r87N48Ujfl5hfW/OyL3x2IP+sRoZa7OU48K2Da099stxElRDOlKtG+X3/edj
raIeF/Vr05TJ65z3fRDVuAkaf779hp9CXzur+i133Fw/Yn8WvqKmdz5j2bbi
gJo0nGwuz1fZul3lXskrdY+QnBTzZbs+f/lltfP2IbUon4AtnkLxFvHen8a9
9WxT4M8Vs/Vbed3lNUz3bvOc91tuprgwW/8H1YdPS9tt7r6tQcRzeOPVtb18
LH7bWLlyp/Xvyn4/3Gm/KDeS5osjHd8Xn/Z3fg6RPHRNa12+LQYoFopTz1qf
KLsUUxf0vJvVU0+0dt6XopqPtjbWrT3eefsAG1sckuK1XLctt9C7vJ4xNSah
2rCxuPrSal6sqWLodK4uz/ejNR+i5DunrBe/WvqrwabcD8O9PB5a91KrxjhT
v+4EL+dS+7YzvVhkjUkonm/qlHVeXqY9e9Od9xUAAAAAIH5U3+PagtWzNaae
6hYs2Go9bsVpKHbikr/4zwV9/GFfbxtBuTls432qC53dedLGDSZle3xWYweK
lXDd70GU7/kfD9vrrGjcY926vaG2QXMpkWq9iGqr7Nt/NOrtKjZK+a01Txhp
29+XHur8XCBva9dmpvX6VE4n1+1DatE1Y7ue4h3PMW/eFi+HU07nNOXVFzt7
8X2u+y83UtyEX5+rBpl+h/3+pm/vhV6ttUjn7d4ijcyWLQes+27Typ6fTXMh
rvpENYFefKZD1Neny7YiOejeqvgfW+2+7NL2FB+SkYswu2w1Jm1UW8h1n8qw
ocusbfx5ePLWq0TeFhSH9FOdX5y3L7d47aUucb3fhkm5yD58t7fp12chOT4A
AAAAIMUF5ZfI7WNWWuNpO27NGShuwPbvqj09ccIa678rduLwkeO++1VdDtvf
Dei3KLC9fnVxohG0TjWZqJZ30HEop0rYbfCrCZCZ8tZ06Rx9vYlDh49785U3
XFUrqnOltT62awfIqlvXud7839PF2pqP3uttqlcd432P5s7dnKNxu0rl/es4
K3eM4gBdHzdSS1C+l3jm9x83Li3bOTmCxsIVh+m6D3Mb1Snz62/lFc/6Wf0m
Kh9FNOfr2Sfbmf0HgmMt//1aN+vvu36zXfVJme+GxXRtUpct79LvcO2a47L9
XhAt1WjQ80R22qj3jov+UC6m/bVqMc1530q1KmOsbQyKFQNcCso9moh36Lwg
aBwn2SkedmD/xc77EAAAAACQPaoVH/TepzkY120My8aN9jUsmiMdPWql9d/1
b/96rqP131VPw7bfbdsOWv+uY/tZ1r/THEV23t3vvKW+t17HdX9HovwVijux
HceXnw8IvQ3KVxqpP1UH/EDAPLnm0GdM3+DFcGh+XTVuoj1Xl/61klmyZLvz
c4HUoJy7ka4p1QR6plg7U7rUENO86VTTv+8ib/5c16hyFClH+/r1+7zaUJnX
4b7zZg/f7SnvQVCbduw4ZGbP2uTNf7MODBmUm8h2jer6i8c+VKPKllMrp5QL
W7nKFVfpui9zC92b/Ppaz6WZPzd92gYvzjGa8/TVFwMjxpsp95otH/39dzb2
ntFc9Ifyp8WaY0HHobxmrs8lEks1B594pGUo9zo/ui4/eKdXzDn+nnuqfcz7
Gj8+Oeq52fLkqF6C67YBNnVqjbd+t1JhLCAVKG44UffeMCgGUGNgrvsRAAAA
ABC7SOtYp01dn5B2aH5cOS80Fq85x0Ssj9T6KttxK/+C2mH7d61xsdU6VT3U
oPwKWjdq267mvPz+ZtDAJdl6Z3/k/mYpkyte9V9tx6Hx06AYinhYvnyHKfCn
ClH1a/7zKpj33+7p5TpXjZzOneZ4dW3vub1hYA3cIKp5nqjvG1Lf7j1HTL5z
y8Z9nE8xRbqOdT36/fvdtzYw3bvN8+KValYfa0qVHGRefr6T9zdZf08Uy8Q6
MIjuj7ZxZc2v53T7mtN++L6mCRkHT5b146lM9y9bH2tdvD6jZyXFoUXzm6q8
GtHW7dGcdKTtqS7aN18O9tbhJqpPihdtk61rkhijvGXRom3WWKhEUFxbNO8V
fXotyNb2XcVTZaV3Ob/2qQaX67YhPBobUP7NHt3nefVJ9DugvI2fluhnyv0w
3LRuOd3LV3PyVHLmqXvzVf/cU7qeXbctt9i163DMeYeSjdavuO5HAAAAAEDs
ItUhX7hwa+ht0Lhg1rWXd9/WwOzbH5wvO6c2bNhnPW6N42gewe/fNJf/8Yd9
rX+regdB+1Wsiu1vFUOS9fOap1KOjVjf1VV/IVXWxyv+RTVqbMeieIkw96/5
xH883MLZuMorL3Q2mzeTvxnR03iy6/HAaGj+W/faeByzctdMmkjej1SkHDF+
18e9RRrFZftBOcYzaK24YiaVO0Z1ANau3ePNjSoPmXJqPXxv9PEgimOKRxxK
XqU4SFvfqsZ7h3azzNWX2p8JMtPnpkxeF/W+FTsc7XlWLEmJD/p48zdh9odq
G9raoNwINaqNtf77sKHLnJ9PJIZyX9liLf3cfG0dL06+a5e5ZuaMjWb16t3e
u5Xy4em5W3PXU6es8+q26LPRblfxTkHxx3v2pgc+09sUuqiK8z6WoHqbyn/g
un3IOf1+z52z2XTsMNt8+/UQ89QTrb3rL9prVd9D5bHr3XNBUj2T2r7Hev5x
3bbcJCjnXCro1HG28z4EAAAAAMROcxJB73uJWPdXqbx/zQCNX4e537S0Xdbj
Vk0CWz0VjffY1mUo1kN1C4L2q3kB237btTl7vcSQwUtjfk/X+rGjR086v76i
FTS/onX/Ya+DUp0bF+Mpmj8cOyb31jRCeLR2XbESrscEo+F3X4uF5oYyr11X
3g/l80nW9ZE4m3Is+V0bb7/RPS7bf+v17tbrTzU0NG8TzXaUe0Y5aqK5rhXz
6bpfU1Wj+pOs/XrzNdHPKxcv2tarPRHLvhU/Ges9LNL8dU4oZve+OxpZ9132
++Fennzbv+uadX0+ET7lkItmvlnvIcqHFGttlOPHT3nx6NHm/dLzh+KQ/Lal
GCjb312er7I194Xm1F33syivmK39qrfpun3IGdWa0LqReD3jKrejngdc58PU
s7KtjRXLjXDe77mN4ut+rDjKO/exeOS+ZoHXk54HlGfl+eLtvbpainu+5bo6
Xuyq7p+qK6j7b6z12TJoLZdqY7ruPwAAAABA7LQ+69kn/dfNSqzj5NlhyzGt
HP5h7nfBgq3W4x4+bHm2cmJ8+fmAiPvVOJLt77t1nXvW55VnI5Y2qMZ1pPrx
yeTEiVOmcCF77uiw157qO3BtQf+5RnntpS4xrYeMhsZqBg9aSt175EjDehPj
el2GRWvtc3KcH77b23e7D97dxLtXuz4PCBYUwxivuE3F+Pht/6Zrapu9+9Jj
2taKFTu9OMJorm3l8nLdv6lINRtyck/RPIbqPcWaI0U5fi44J3t1qlTTRbGf
8e4LxQ/b9vn3AlW92D09i9s+4/fciNxF14Dm8yJdo3r+z+l7m/J4RLMvUeyI
5jQz//3QIcsC/0bx27bvoPIkuO5r0Rytrf1h5+pB+ILi53JCcUqqw+nquMaN
S7O2TXmvXPc7jJkxfUNgHIbGxGKJVdd4j/K+6r60fv0+7/l13rwtXi7DAf0W
mao/jvZimjO2r/GWCRPWWLe3dCl5EAEAAAAg2anGh+29UmOIYe9fc3J++37h
6Q6h7nf6tA3W41YucK1/iGUcR3m5lcM90n6D8oJkHW/Ru3k0teMzaN4z1das
9+290Ho8jz7QPPT9B+VMVZzH7j1HvPrJ8RjrK/poS2/dH3EciBfVmdD3XteW
1pCHMUadE7qPbtuWs/klrX0M2sfnn/R3fh5gN3KEvRbKwAFLcrz9oLnu7NYI
V36ryhVGRsyBozgSamXFLpYcHFkVuameNyeSnf2+/nLXHN/TND8Sz74Iim1p
23qG9xnNmds+Q72V3M8W05hBeTviGduoOOcfvh3mxTBF+j5cf2Ut7zlZf6ff
esUg2T77+EMtvBpXtn8PI14qO1561j8/4w1X1XLeNuSM3tPDfObVO7ur67hB
QIx3IvKtItiRIyfOqi+cmeKBwlpHpXuzYj1sY0R+eRDj8XwOAAAAAIi/oPd/
5d8Ne/8aH/Pbt/KGhLnfoDmm8ePstd1t3nila1T7jZQXJPNnNRcV7f5VxzfV
YjnkHw+3iLo/wnBr4brW/WeMZWgMRv0b6zWhuUAdX5VKo8zChVud9zVyP62p
Um2Jnj3me/OOqmehXANaRxvmGLYfxZdovWBOjyma+heTJ6113vfwpxz+tvO2
bt3eHG9/y5YD1u2rtn1Otq2xdeW9Drr2cks80eLF27x1m6rToDxi+t2Lx3aV
H0XzCIo9+6nOL4E54YJoTWu5H4ab9PTstUv3xXjd2+KZu1451P32oRxxGc90
ygNja0usdTWQWlTfI+havPnaOmb16nDmanUfKF/m54gxlf9+rZsXp/zcU+2t
n1FsiPLjBNUymTplnfP+lsJX+OcMVL4+121DziiuIexnX8V0uIizs9Wd09w8
6wjcU/6hoOtGuY1cte2j986OGdQYxoYN+5z3GwAAAADgTPXqTLC+W4YdH6A1
sLa8u5pnD3PfnTrOth736NGrYh6/mTN7U1T7VQ122zaUFyTzZ/3er/2oNo3q
lri+lmIVFNtyx831Qx9/CprfUc3arJ/Xui6t2dZ6xKyf11yT5s1LfjbAm3tZ
tmxHStW9Qe6m75Ly8WpeddbMjd69RvOrmltR7IdixxTbp9rOd98aXV1xjVlr
PZlyV7/yQmdT+qvBXi511RJS/FK8rn/VsYrUFtWecd3H8Geb49M8djy2r98+
23OEYunisY+y3w+3XnsX/aFcStci17rMYo+38j02xYFpblO/bf98rJV58ZkO
XnyL8gXot+67b4Z6MRbqH8W1aL5TMYzKoXHVJdVMvnOzV9skq8cebO7lEM/J
ceo5ybZ95RFS/ObPw5ebCmVHeOc0UpsaN5iU475fs2aPdfvVqoz59XPqZ9s9
mLzouZfubUVurGe9RvTdVMxF2O3QHPi9RYJrVAR9v6RWjXHeturWHm/9TDLU
MlGuEVv74p2bB248fF/TqH97lKfxgbsae2MSscRFq05noq/nG6+u7duW4kXb
Ou/zvE51rILyrZYqOchp+wr82T8nbTyecwAAAAAA8RWUnyPs+eig+XTNjx87
djK0fdeoNta676AatH40XxXtfseOsceKaJ4182eVmzjSvjVOo7gY19dRLLRG
T+vpP/u4n/W42rSaHno7NL5s27/mpG1/pzgn5XvX+ivVmVWcR6qdA8Cmdk37
92Llyl3e/NGu3UcSFkOm3O+R6iT06jHfeb/hbHqGsOVXee1f8VvrrFwGfvu4
5bo6cYlLPXX6P14sg+36a9JwsvO+zq4P3ukV0/NOIun89em1IMexnbpnBc2l
6Nxm/rzi3hTDEtQ2xRDlNC+QYups29ezRcbnbHnMlLvd9fWD8ATl6NPa6ZzG
OMVCcQ6K08rO91i1EzPeJz/5qK/vZ1QzxnV/S1DM/YB+i5y3DzmnvFsP3fNb
rVfdy++6tYF5762e3hoX3Zf1G5A1R5WeA+bO3ex9RvfkSPVQK5UfmbBjUkyp
rR3xzCeF2Onep7h32/nR77jec1y20fac/nzx6Me3AAAAAACJodh72ztmmPEU
ojn7oLEQ1VkOa9+2etRaixMpv3FWWeMwgihOwLYdxTlkfE61bmw5fzNozeqh
w27HAGKhvOuKP4nUn5f9rVJCjkvjFH77V84Bcmsgr1KOjmScb1EuEb97osZC
s1uDAeHSb6PtPh/PnCrKFWHbT5fOc+Kyj7S0XV6cqd8+NDfkuq+zQ3ESkWop
uKC5ta5d5sbtd7hhQNyy1K874ay/0TOI8o0E/Z1ydeUkP0bnTnOs295/4Kj3
GT0Lau7e7zOKxXF9DSEcmju+7fqfrNeHi3XTmuNWLptYvsv6vPJ7ZGzDlgtI
MR+u+1yCvpNLl2533j7ETjGdiuHI+nuycuVO75xmd6xj+fIdXk1D2/Vyeb7K
CZunV31SWzsyaofCjaBxNj1Tan2I6zba4pWVk4b1KgAAAACQXFo0m2p9zzwQ
ch7noHEQ6d5tXmj7vvs2/5oCTz3ROnDNZFZvvNI1pv0G1UFfu3bPr58r8UGf
wP1qPbLWy7m+fmIR6ZgyqL5CItrz9wJVmSMBstAaRb/vhdbmum6bxsZV00Xz
55pLLfF+H2+c3nW74C8ot34scZCRjBxh/81WHFK8ahL867mO1v0oT5Pr/s6O
WOdnw3L+737w6jaNGb0q7rXWninWLnDfyoXu93eaB/y0hD2PmPxYMfs1fVo2
n2bdbsbcY1BMlJ7fXV8/CIfys9jOu95fwq6HaRMpNiqrrO9x111eI6mfu1VT
0a99mndlXjO16DvStvUML0Zf51C/dYrR0zUZr/EN/VYFrVPo1nVuQo5VteVs
bUhETSb427nzsCl4fmXruSnz3TDnbRTlmLO1MWstYAAAAACAW506zra+w23e
fCC0/SpXv+rLBo0Dqh5zGPvet/+oNU/qt18PMRMnrIlqnFI11jOvO4tGUE6S
jFq7Wisaad+a83B97cQq2nmjRKxVUa4Q2/6bN2WOBHnXs0/6z30WfbSl87Yh
tTz5j9a+15JyMMUzB5LmbYrcaK8FoPifeOR86t1zgXUfiagRFoag3CaJpPmo
MI5Pa6+DcpCobnxQ7SjN1wXVhtP61ezOl+lZw7bdjHXdQZ+ZM3uT8+sH4Sj7
/XDreR800N16e82DR/ssr9oqmf9W9Sts717Vqoxx3udiW2dw0zW1nbcN0dPv
/ROPtLRem3oGiVf9HOXpsO0nUfUqbDElip9yfS7ysu++GWq9Nm64qlbS5FhV
PlxbO6v+ONp5+wAAAAAAvwmq/7Fw4VYn+82g9VDKcR7vfQ8busy6T+XP0Drb
aMYqszP+2CBgbZvmHTROG6kmr2h+wfW1EyuNn0U6LuWXTkRbgs7x0CHLnPcV
4MoDdzX2/V689q8uztuG1KG5uwt/X87/Wnop/tdS/76LAn9bni7WNsfrq1Vb
wxYb0K7NTOd9nh2aT3jz1W5RPfOEaeqUdaEcX1B+i4zrItI2VM/JltNNlHss
O21r3dIe35uRf033Xb9/VxxJUBwKUtsj9zfzPe+an3WVmyODrV5lZg/e3eSs
OmjLltnnvROVxyASxf75tU85fly3DdH74dthEa9RrclYv35fXPaneGfbfTrs
+p3avi3G6t+vdXN+LvKqTZv2e9eY7frTWJTrNmZQ3OpVl1Tzbafy1rpuHwAA
AADgNxpDt71rjh61MrT96v0wmjH+r74YGPd9a5u2/anmiepWX32p/3tthvvv
bOzVNY913zWqjfXdnmJXZs/aFHUte82TaWzU9fUTi88/6R/xuBK1Rk+xSi6u
eyDZqY6J3/ciFWPI4M7kSfZ6AZrHDmOfWgsb9Pvy0rMdvTiTnOzj65KDztqu
cjyket0ftX/a1PXeHEPnTnO8ugoVy40wX3za37z1enevbzVnpXgv1V7S2lLV
LFOeNSlcqKb3b/rc+2/3NKW/Guyt61R+ib69F3rPmtqO7Xkm69xvvATVNInl
mUN5w2zbUAxuduKf1c+2bWouSDk6dG35/bty37i+ZhAOxWvY5gF1/3Hdvo/e
C47n0H1h3bq9Z/3dz8OXW/8mrHiuWNlqIyiPkeu2ITq7dh8xF/+xfFTv0vF6
FmnWZIp1H0uWbA/1eOfO3Wzdt+po5HT7+m3WMQwZvNQ0qj/JG8cYP54aHJF8
8+Vg63l54ekOztuXlWJ//NqqZxCNi7luHwAAAADgfxS/YHvf7Nhhdij7nDLZ
HkOSlda2rFixM2771jvptQWr++7r1sJ1f/1c+TI/W9ukuYuVK7PXpqqVR/tu
U/EcGgONtl8y+kZzFa7X6sVyrdnWa2dQzs9EtEVjzbY2DBzgLpc14Jpt/lD3
RNdtQ+poGJCLavHicO7zqhFX6OIqgb8xjz7QPEexF5pjz5yTX+vlx41Nc97f
qUDPWLZzEtY+P/6wb+D1EEv8pq0Wg/zruY4xt025wGzbW7Bgq5cvzvbvdWuP
d34+EQ7dx2zn3XUeC8V4BX2fFIdii81o0cxeO2jLlvDqe0Zrz157HUblVnTd
PkRH8YPRvkfHK6/W3Dn2mIrhw5aHerxBNbliqV+qWkozZ2w0HdvP8uIxlbtK
8d22nKGlkiC2LFnt3HnYG6Px6zf1Z6LGOmLRtLE9Jmn16thqCwMAAAAAwqMc
E4ol8Ht/U+xBvPennI6PPdg86rEWue+ORnFb+6o1Jbb9fF966K+f0/qeG6+u
fdZnVDMkJ+vItF41lmOPxh031/diENS3rq+nSPzWNme4+do6CWuH8u7nO7ds
wq57IBXo98D2/axXZ4Lz9iF1vPFKV9/rSL+hYa71U2zFBef439szKAYjp+vB
t207aJYu3R56LvXcQv1lOx/KjR/Wfu+5vaF1v5pX2bsvPeptaU4jKCZVtV1i
aZtystm2NXLECvPPx1pZ/z3sNd9wR7E8tvM+dswqZ+2KFMuh71OvHvOtf1/u
h+G+f6d5z2R4fwmak1c9r+xsU/mgli/fYSZMWGMG9Ftk2red6cU6Ki9Q5Qoj
PXovrFl9rKldc5z5qc4vpnGDSaZVi2nemorePRd4eRF03qdP2+DFQm7YsM+b
e3fdX8nqy88HRPXurBol8RpbCPp9U1xemMdry3ul71VQHlHVWlNMoeIylHMr
O+MPysPm+nwnozq1xlv77L23ejpvn5+g8TE9j7huHwAAAADgN35xCxJG3dW2
rWdka8xAuStGjcx5HYx33uwR9biExuG0zufbr4d46zJVpyWnuUJs9VaC2PL/
ZqV61Zpz1Tu55hU0r6V1QRoL1HF0aDfLGyesXnWMN3+iMS+NHe7YcShh15rW
HdpqypQuNSSh1/29RRr5tuOay6rnOCc/kIq2bz9kvb/Eax0j8gZbHqxnirUL
fd+dOs6O+HupmA/9HhOPkRiKObWdi4H9F4eyT/2O2+KV5c5b6se8TT0P2rb3
2ktdYtqW5hJt2wrK1a56f67PJ8IzZ7Y9zmfcuMTnAlL8XTRz5JFyWHxaop/v
3910TW3nfS6Kt7Adm2I9bH+n+H+9cymWpVaNcabEB328WCzbb2C8KCZd+9D9
4MVnOnj9q3j0Nq2me+99arPiDJIhViZRFOtii9XPHIsX77xaqo9lO09h59Sx
1Yf1q8ml2in9+iw0r7zQ2VrTKRbEeZ9Nz5SFr6jp21+KeVMcsOs2+tm40X4N
K7eS6/YBAAAAAH6jcSC/9zfVQ4/nftLSdplL/1rJ+r4YKU+6lHi/T7bjD/R3
tnEeHWsi6oMG5UX1c9v1P3l5iB9/qEVoY4IaC0pkLk2tR/Nrh9aeJfK6D6qp
o/VyiWwLkAxUR8r2ndAYsOv2ITWsWWOv45aoe6vWN0fz+6c4SK2Hd91nuZ1i
SG3nIF5rpLMKWm8vmv+MdZt6jrTVpJL587dEvS3Ns2qNuN92bM+qomvb9flE
eFat2mU994muB3jw4DHz8vOdIt5Hy34/POK2tEbA728fuCs54pOCaoQpZkPf
12XLdpiePeZ77w/PPtnOXJk/tjqZLiiO4Zbr6pinnmhtPnqvt7eu4tixk877
OwyVyvu/X4pi8fRbo3N44oQ9b0V2qH6Gbb+DBob3nQ16Zs+ca1L5yEp+NiDq
9SHR6tJ5jvNznmxG/LzC2l+Ko3HdPhuNgV38x/K+7S7zXXg51AAAAAAAsdM7
v+3dU7VU47EPjaEoNsG2H+VE0ByQbU1DZhqPqF93glfHPpY2fP5Jf+s2f6w4
KiF9rXwZ0Y6TXHVJNZOW9r84C9V11phnWON97/67R8KuN60Pev3l33Lxa6yx
SaPJCb/ug+Z6tKb35+Hh1jwGko3WmNq+E2NGu8vzjtQSFEuRyLzN3bvNC6yP
kUFz5xXKjoj5mQLRe/i+pr59r3nGMM9/0HlX7YPsbFfXSrzmax66p0lMz2rK
b7Zv/1Hn5xPhUQyF1nH7nX/lf0hUOxRXcvdtDSJek1982j+qHBAvPdvR9++L
Pd7KeZ+LcjD6vg+cU9Z7f9Q7WVjvYImmNQK5MabDNs6g54CM9+kwKN7Z1teq
qxXWfpV307bfju1neXU/gsZeckK5XQ9S9+csQWNNv/yy2nn7gtx+g/+1kqw1
YgAAAAAgr1L+Xtu75xOPtMxxPnLllrz52jqB4wI9/1/N5blzN5vL/mbP4ZGZ
8koo14PqpASNSykvyKsvdrZuR3M5ypWaiL4OymeZ2eX5Kp+1zlP1kt981X99
W05pvCfR153WSGmOOJH1XrLSOLKtT7RuVvPbrtoGJJpqtNu+D/GK7UPup+cG
v2tI82L7DyR2Llrj5/o9jeZ38Pora5k+vRbkqfz0iaA4GZ17vz7/+MO+oe23
WpUxged74cLs5WVRXar85/nXjZNYnht0/LE8q332cew5RZB6bi1c1/f8K/4n
EfvX/HQ072LKcRNtbsPnnmrvu41E1OCKhvJthPF+layUp8N1n8ebLb/A1yUH
hbpf5S+w9XOYzzwfvts74deN1tQo18769fucn+9kZLt3F7mxnvO2RWJ7dlcs
nuu2AQAAAAB+o3gNW/3VnIyDaE5E6x+DclOLcvlm/rsZ0zfEnMNWcwVFbqpn
3nilq6lSaZRp1mSK6dF9nlfHONL63E8+Cm8+wY/qKge1R3NPqp9t+3vl+FDd
93iOzzxdrK3z69CFSRPXWtdBisazBw9a6rydQCIM7L/Y+l1YvnyH8/Yh+QXF
LLqat1uxYqe569bI68wzaO3ytKnrnfdlbqGYGltfaw1xWPsNipXQc2lOYpWD
6sdoXjja7bRrMzOmZzXl9Xd9PhE+vZfYroEpk9eFtl+ttw/ad2Zffj4gpjqV
tvwceidy3d8Sad1BbqM8Aq77PN5scXbKUxHmfu+/0z9/ZthrJVQrNoxrQ+tc
7rm9oXnnzR5eDteuXeZ6z0Qu11+kAtXxUX5Pvz4t90PkmlSuPfpAc9+2J3Od
GAAAAADIq+rWHh/4bv/BO71iWmOimIyij7aMOGag+ip+4wPr1u01D9/rn587
njT2o30lsq+1puWma2r7tkd1Z6Kpv37y1GnTrevcuORRVSyMcrS4vgZdUR3s
SH1UutQQr36267YCYdKYre07kOj7JFKT4iht11CYc/eRKEeE6sfH8tuoNair
V4eXoz2vqF7VnicjzDgxxana9vvkP1rnaNvK0REUqzxq5MqotqP7arTX47+e
6+j8XCIxgmIr9W6kecN471PvAdHGNGSnRqXmhv22dd8djZz394QJa6w5hMJw
0R/KefHil/61kvceqn0HxZaHQe/9rvs93mzXr2p8hrXPtWv3WPs4zPUiejaJ
17Wg3BHffTPU9O+7yMupevx4/O8vecHOnYetfawxG9fti8RWXyuRNXkBAAAA
ANE5dPi4ue7yGoHv+8qZUa/OBLNmzR7fbaxcudM0bzrVPPagf3x/VqpnMXfO
ZmubNF5Zu+Y4b9wrrPEsrY100d+KDVDN6YxjU1yL8ors2Zse03YU19G390Jv
7UShi6tEdcwaN7ziwh+92rfPF2+f9PVcw6Y+1LrxSP2mPC+aT+nUcbbZsCF+
eWZVKyinNY2AeGjdcrr1+g+z9jhyj0EDl/heP5qz2r3HfUzcyBErvLoq0T4j
6L7/femhxPPlgK2umZ4pw6xto5xttvOqOM6cbl/1/mzbv+GqWlE/z0XzzKw1
v+TmyDv0XBj0TK8Yez27xmNfmoMs8X6fqO+HegbOzn5Um8Vvm6pP4KqfVWMu
2nfWaF11STXzj4dbmI/e621qVBtruneb5+UCVI1JxYEFzZUr38nRoyfNvv1H
vc8qVkDz67NnbfLe1YYMXurF3TZtPMV7Z1SMouqJPnxfU+8d3pYbIKtrC1b3
zrvr6zze9I5mO96w9qm8C7Z+1vt5WPvt3GlOjq5T5d9oWG+iWbVql/Pzllts
3XrQ2t+qYeW6fZHY8tipro/rtgEAAAAAzjZs6LKoxwE0Vl28aBvzwtMdvHGk
aOvTZ9CaJK2HiqZdaWm7zIvPdIjreJsoX7brPj9w8Jh3fPHa3rZtB738Hhr7
W7BgqzcOqDFEreNRHpQjR044P+ZktHdfurm3SKOYrh/NRSkORHN9HdrN8sZr
NfaqPDaaoxJtV2Nl06dt8L5fmi+vUHaEefuN7l5eU437aluq+azcx1pD7rov
kHdpbNd2vWtuwXX7kPx0D/OLl1Buftdty6Df3VIlB8W0Hlo14xXPmp7Ob2is
14Ot5p3yn4S5b8UM285nn14Lcrx9xScFPfsqB3809009P0S6/pLp+4PEUDx7
0DWhWpWa98/u9hUz36LZVC++O5p7oObEp05Zl+396Z7rt13FISS6b/Xdff/t
ntl+f8yo8fnW6929Wh6KY1y4cKtXr8blNaMYH80pa62EYj9aNp/mvXNoff0T
j7T05vBVh1R5Il1f32FQ/IztnKnuWrz3p7625WnSe92BkK4HXWeRarf60Tun
xj6iyQOK2On939b3b77azRsTcN3GILZxkPfe6um8bQAAAAAAf1rvk93xrWgp
L4TGvWJtm9ZRac1TTvd/9aXVTJfOc5z3NZKLxuVuvyHn9WsyZCd3stZcuu4H
5F1BdRG0Xth1+5AaVEMjow635vKViyoZ4yAUZ/fAXf51720Uq9K7Z85jAfIK
1R2x9aXiG8Par+a7gs5jvOb2fqrzS+B+lHsgUk2ZmTM2Bm5DeRqSIbcNEkvx
17dcF1z/RPejAf0WxZTnRt+Ntq1nRF1bRYoXbZvjmM6y3/vnMVCsXCL7deKE
NV5sSqzP51rHULHcCO/7yvNQcho/frX1/Gl8I977UzyPbX9h5TRQLE4s6w/0
DKZYguHDlodSpwlnCsr/pvhPxUboWlTskWoeNag30dSvO8H7f9eqMc7UrD7W
q1vo4pnZ9jxMvRUAAAAASG7KNxDrOFe0VBckp+PSmoPR/FBGboNYxjS0LiXZ
10fAHeUwyc6ap3hRDEhO1lsCOaG5Cr/rUnXeXbcNqUf3MuWOd92OIFrPrPwI
ivOM5V6t34nsxKXmNaVLDbH2YRjrpTOoPpRtv6pzF68aZ6qdECkmSPno2red
6dVSyPr3vXrMt67vzlDgTxW8eoauzyUSb9rU9V4uiEj3o9uu/8lUrTzam8/e
suWAd10qxkNxB8rbp5x9HdvPMu+82SPi9ZZZvnPLevOMftdurDRP6bcP1QgJ
s+5SZorF0zHF8kyuPB5TJq9LWBuRfZoD1/3W71wWuqhKXPNl6J4edO3Mmxf/
HBiKJYr2WUVxgIob0Pff9XnJS4Lq78Tijpvre2MSiWz73bf511tR7SjX/QoA
AAAACNasyZSYxrwi0Voo1fyNZxs1vqiaIsq1ofdn1c3VWsjM7dY8pGoj/1hx
lDe+77pfkfw0z6P8yfnPqxC36z8WmzcfcN4HyJt0j/a7JjV37bptQJi0Zl1z
H5o7j/ZerXnW8mV+TsrcI8nCll9Aa93D3O/kSWut5+2+OxrFdV+KS9GzZqTr
pciN9bw125993M+bV49ljbXqJLiu5QA32rUJnjcOy5231DdzZm+K23E0bTzF
uq+w6lJkpvwE0cTGZKY4GdfnH7Ep8X4f6/ks/dXguOyjW9e5gdfSG690jftx
9e290KvhEuma/XuBql7+HeqruqF3+Fhi5oKU/CxxddYUA2h7jvn26yHO+xUA
AAAAEJnWlhR9tGWO3kWvzF/Vyx+pGuqJbLtyisZr/SXypnXr9np1ppXXJZHj
566PG3mXcincf+eZa80VHzdhwhrnbQMSYdOm/d59P5Z6WZqXX72aeNGsFOdg
67NSJQeFum/VoLDtO4y1puPGpUU115YTLz7TgXz5eZTy8SfqOVT5a1R7Ld41
RRR7b9un7rth9t+iRdvMJX+JfY71hac7OD/3iI3q6QSd08YNJmV727t2HzGf
lugXuH3FhOr9MZ7HpDUG0TyTKMaENQHuKZ4mHvdi5ehIVJu1jsvWjpbNpznv
UwAAAABA9JS/V2tNop3X1ueeKdbO9OwxnxrDSHk7dx42zZtONU880tLLCx3W
GLrqB82du9n58SJvU40M5TMqXrSNV+dZedpdtwlINOX+eu6p9lHfv6+48Ecz
Y/oG5+1OJpo3s/WX1sqHue/WLadb992ofvbn84KMHbMqW3PGsdDac+o+5E3K
CRB23rjni7cPrbbPoIFLrPtdtmxHaP2m91DFSmenP775Mj75HJBYT/6jdeB5
1W/73DnRv29t3XrQi3FSzZZI10yLZlPjdhzKQ6r6stFer48+0Nx53+N/FB+R
0xjPYo8nJjfixo37TcHzK1vbsXx5ePdnAAAAAEB49h846o3BN6g30Vuf8uqL
nc3Lz3fy6pzo/9/wv/9daxQPHU5sLg4gUTTXPW5smrdWUnPdqjUba/4OfV45
6IsXbet9b1RTvE+vBd73y/XxAQB+o/u96nNEc2+/PF9ls2bNHudtThaKCfPr
J81xhJ2zrV4dez4DndOw9qu8dtdfWSvUOfevvhhITEcepZw3/3i4RdyvKeUY
GvHzilDbPmvmRuv+w8wpoGfsoGNXTU7bv6lGjOtzjtjNn78lqto6D93TxLs+
fvlltXcNavxi7750k5a2y4wetdL7HdH6lGjr9Lz+cte43Zu1nVhiOaRS+ZHO
+x6/0fPgW693jynfW2aDBy0NvY2Kd3vqCXv8k35vXPcjAAAAAABAvKiuj8b+
xoxeZXp0n+flJVW8h+KetEZYNY8V56R5ni1bDnjrrVy3GUhVS5duN5MmrjUH
Dx5z3hYkD91bFW8XxrZPnjpt2red6dWPizT+/uXniat3nsx27zlinQNT3ZCw
92+bw1Vd+7BjjnftOuzFOWdn/ualZzuaIYOXRowT1XXGs0TepHle5T+8tXDd
HMdxqKamrrdExAfpPuqXJ0Pz5WHtU+vOVf/Cdvz6nup5wvbvw4Yuc36+kT3V
qozJ8fcjFsr5kZ5+Im7t/+HbYTG3IcxYRWSf8ltUrTzau9dpPYdif1XXKuv5
Uw5Q/fe7bm3grfMIu11HjpyIWFf55+Hh5lIDAAAAAAAAkLvs2Zt+xnp/5QYe
OGCJ83bBrSVLtntj3xnXheY4P3y3t2nScLIXY7dhw764zXvrGlRuhKCxb61z
d90nyaBL5znWPlKcY9j713prv32/9q8uCesDxXIWubFeVPNwyunRrs3MX69V
zddH+hsdS9h5TpC8dK0oZ+LHH/Y1111eI6rrTPVaNH9Xq8Y4Jzn0tV49cz6M
F57u4NU0DGt/H73X29oXN11T2+zafcR07TLX+pkw68AgXIofCjr/8aS8HEeP
xq++bKsW02Jug+IAND/vut8RPcXRaU2IrlUX+9fvQNA1pfhS130EAAAAAAAA
ILX4jcurboPm6123DW4oH8c1l1WPOM+h6+SOm+t7a7FLlxri5dBXHmvl/09L
2+3NJ2peXGtrDxw8ZnbsOOTNOyqn0sgRK0zb1jNMme+GeXOPfy8QnKPj5mvr
OO+XZKC1yrY+2rRpf0LaUKrkoLNiJhJdD0dz7oot0fVT7PFWXryPchSohs/T
xdqast8P9/L6a04n698qx1eka/vhe5t6uWlcn2+4t3XrQTN+/GovlqpJo8nm
pzq/eP/bscNs7xpbuXKns3nDrLZvP+TlsQlzH4sXbwusczB1yjrvc1o37/fv
+tt45ltA4un+W/KzAaHFceQ7t6x3n45nfhtdt365GyJRvLPr/kZqsdXEE+UQ
SdSzGgAAAAAAAIDcQ3US/MYcNV/lum1wQ/kPwpqnya5/PtbKeb+4tndfupc3
3K9/tDY/kW2ZOGGNqVNrvDenvf9AOPV4wlSh7IiI15ximpSnwXVbgWTyzps9
rN8Z5XDK+Ny7//b/XOFCNZ0fA+Kjc6c5Xk63eP7WKx5PsRfxbOeJE6fMg3c3
yVZ76tYe77yfkVrefLWb77WkWDbyHwIAAAAAAADIjkv/Wsl33PHVFzs7bxvc
CKrp4YryV7vuF9dUo8DWP82bTnXevlTzw7fDorr2ni/e3syds9l5ewHXlGNJ
uRP8vifK17Rx42/rzpXjxu9z5DvIXZQPRvFxyjuQ3d/3C84p682BT5u6PpQ2
1qszIXD/V1z4o/XfZs/a5LyPkVqUOyxrDiNd4506znbeNgAAAAAAAACp6dkn
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
     
     "], {{0, 645.}, {1082., 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->144],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{324.6650000000001, Automatic},
   ImageSizeRaw->{1082., 645.},
   PlotRange->{{0, 1082.}, {0, 645.}}]],ExpressionUUID->
  "84a7b3f0-3b47-4ee8-88d9-d55e1f425ca5"]
}], "Text",
 CellChangeTimes->{{3.819801314042693*^9, 3.81980132730337*^9}, {
  3.819801635533452*^9, 
  3.819801635834463*^9}},ExpressionUUID->"2d48572f-bb0d-4185-8116-\
29d6ca4f8a3b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"F2NIG", "[", 
   RowBox[{
   "x_", ",", "y_", ",", "\[Alpha]_", ",", "\[Beta]_", ",", "\[Mu]1_", ",", 
    "\[Mu]2_", ",", "\[Delta]_", ",", "\[Delta]1_", ",", "\[Delta]2_"}], 
   "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"FNIG", "[", 
      RowBox[{
       RowBox[{"x", "-", "z"}], ",", "\[Alpha]", ",", "\[Beta]", ",", 
       "\[Mu]1", ",", "\[Delta]1"}], "]"}], " ", 
     RowBox[{"FNIG", "[", 
      RowBox[{
       RowBox[{"y", "-", "z"}], ",", "\[Alpha]", ",", "\[Beta]", ",", 
       "\[Mu]2", ",", "\[Delta]2"}], "]"}], " ", 
     RowBox[{"fNIG", "[", 
      RowBox[{
      "z", ",", "\[Alpha]", ",", "\[Beta]", ",", "0", ",", "\[Delta]"}], 
      "]"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"z", ",", 
      RowBox[{"-", "\[Infinity]"}], ",", " ", "\[Infinity]"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.819519289105919*^9, 3.8195193269159927`*^9}, {
  3.819519413125264*^9, 3.819519484217794*^9}, {3.81951988838881*^9, 
  3.819519892439076*^9}, {3.8195201195848618`*^9, 3.819520125477846*^9}},
 CellLabel->
  "In[917]:=",ExpressionUUID->"bcead3ac-cf07-4477-b874-e1af485c9e95"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Timing", "[", 
    RowBox[{"FNIG", "[", 
     RowBox[{"0.5", ",", "5", ",", "0.1", ",", "0", ",", "0.5"}], "]"}], 
    "]"}], ",", " ", 
   RowBox[{"Timing", "[", 
    RowBox[{"NIGCDF", "[", 
     RowBox[{"0.5", ",", " ", "5", ",", " ", "0.1"}], "]"}], "]"}]}], 
  "}"}]], "Input",
 CellChangeTimes->{{3.819519521873019*^9, 3.819519554275556*^9}, {
  3.819801389582623*^9, 3.819801399410677*^9}},
 CellLabel->
  "In[918]:=",ExpressionUUID->"79703646-941e-40d3-980f-480eb2d23465"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.024197`", "0.9424722460628505`"},
     {"0.008394`", "0.6943530329440131`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.8195195299708776`*^9, 3.819519554567686*^9}, 
   3.819520378461564*^9, 3.819545926848455*^9, 3.819625715635846*^9, 
   3.8198014001374273`*^9, 3.8198287620164967`*^9, 3.819828974659349*^9, 
   3.819866946325355*^9, 3.8198690810071173`*^9, 3.820343005030353*^9, 
   3.820389652057481*^9, 3.8204265768973513`*^9},
 CellLabel->
  "Out[918]=",ExpressionUUID->"2eb808c5-2dee-402a-a617-91a1465f066c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Timing", "[", 
    RowBox[{"fNIG", "[", 
     RowBox[{"0.5", ",", "5", ",", "0.1", ",", "0", ",", "0.5"}], "]"}], 
    "]"}], ",", " ", 
   RowBox[{"Timing", "[", 
    RowBox[{"NIGPDF", "[", 
     RowBox[{"0.5", ",", " ", "5", ",", " ", "0.1"}], "]"}], "]"}]}], 
  "}"}]], "Input",
 CellChangeTimes->{{3.819519557653575*^9, 3.819519563565036*^9}, {
  3.8198014033259583`*^9, 3.819801411898727*^9}},
 CellLabel->
  "In[919]:=",ExpressionUUID->"1c36d035-f6b7-4b5b-9906-2788bee5061b"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.00095`", "0.30737405161683723`"},
     {"0.000414`", "0.3537381575904628`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.819519563861136*^9, 3.819520379178439*^9, 
  3.819545927537818*^9, 3.819625716338119*^9, 3.819801412565942*^9, 
  3.819828762688017*^9, 3.819828974665023*^9, 3.819866946352541*^9, 
  3.8198690810132236`*^9, 3.8203430050580482`*^9, 3.8203896520650063`*^9, 
  3.820426576903948*^9},
 CellLabel->
  "Out[919]=",ExpressionUUID->"14bc58f2-3bed-415f-9563-2fe63b7014b1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Timing", "[", 
    RowBox[{"InvFNIG", "[", 
     RowBox[{"0.9", ",", " ", "5", ",", " ", "0.1", ",", "0", ",", "0.5"}], 
     "]"}], "]"}], ",", " ", 
   RowBox[{"Timing", "[", 
    RowBox[{"NIGInv", "[", 
     RowBox[{"0.9", ",", " ", "5", ",", " ", "0.1"}], "]"}], "]"}]}], 
  "}"}]], "Input",
 CellChangeTimes->{{3.819802451985673*^9, 3.81980250628703*^9}},
 CellLabel->
  "In[920]:=",ExpressionUUID->"506a04fc-b1cb-41a8-8955-1b88c96919a3"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.015436`", "0.3943560765145342`"},
     {"0.016024`", "1.2743464270128944`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.81980250661161*^9, 3.819828763471694*^9, 
  3.819828974700519*^9, 3.8198669463995647`*^9, 3.819869081081916*^9, 
  3.820343005099895*^9, 3.820389652100812*^9, 3.820426576941147*^9},
 CellLabel->
  "Out[920]=",ExpressionUUID->"f0ed7ff6-7e8a-4440-9c4d-5cba6554c1fc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"F2NIG", "[", 
   RowBox[{
   "0.5", ",", "0.1", ",", "5", ",", "0", ",", "0", ",", "0", ",", "1", ",", 
    "0.5", ",", "0.5"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.819519490833831*^9, 3.819519512959189*^9}, {
  3.8195195716908407`*^9, 3.819519572683342*^9}},
 CellLabel->
  "In[921]:=",ExpressionUUID->"376d4641-16c9-4a31-a850-d340b0452657"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"5.526386`", ",", "0.5476368326224619`"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.819519519093206*^9, 3.819519578438615*^9, 
  3.8195203874723883`*^9, 3.819545933739172*^9, 3.819625722822296*^9, 
  3.819801427469782*^9, 3.8198287697235107`*^9, 3.819828980308569*^9, 
  3.8198669522943077`*^9, 3.8198690868162603`*^9, 3.8203430110708*^9, 
  3.820389657750573*^9, 3.820426582492278*^9},
 CellLabel->
  "Out[921]=",ExpressionUUID->"2d80417a-4718-4a97-929e-1d3ab7f7c315"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Copula dependence measures", "Section",
 CellChangeTimes->{{3.819517859078437*^9, 
  3.819517862099461*^9}},ExpressionUUID->"19db1d25-33b0-4e27-a82f-\
682bcdbc3435"],

Cell[TextData[{
 "NIG factor copula\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
vk/QXnXsMKymXIVN1z8lzXUoevwAAAAAAK1d3hrssO9elydLliwrfJxA5Y4+
4obMa/rPf7gpfc2eP7g08zXPPz+n8H2A9ipqKJTMJfrkicnrr7/zsdfHb/C3
vp5dW+GmGyYWvk/QHkV9hFpyFULXTsMLHz8AAAAAQGsXMY68udZYsxn1F4oe
J1C5l16am9ZQKHVNr/6Zk5IXX3wrzUfIuu5/sMvFhe8DtFfRhyWuw1LXXuQQ
lXrP+eeMybxet9zkjGTpMmu4od5mzJiXbLxW98xrb+3/6ZSs9unSv7XR70Xe
HwAAAABAvljDmTcPu/mGpyUzZ84vfJxAdf51wtDM6/rYPw9OX9Ot8/DM1/Tt
81Dh+wDt1Q0Dn8i89i44//6PvX769LnJOl/slPme6OtS9D5Be7Ps/f8ke/2o
T25O79+PvSXzz/beo2/h+wAAAAAA0NodedjAzHnWWPv5yMMvFz5GoDpvz3s3
WfdLnUvXmv9Uh2TatDfTftqbbXBqydes+bmTkzffWlT4fkB7ddghAzJ/e6P2
yYqvff+Df+yzZ7/M12+/zXlqK0AD9Dz9ntxchX//4/bk97/L7qd24yA9WgAA
AAAA8oy5b1ruPGzvc8cWPkagerE+O+u6jhyleM3tQ5/JfM3vfjOg8H2A9mrJ
kmWZ+UQ7bnf+x14fv8V5v9Ujhk8ufJ+gvXlo3PTMnkoheqVF/bHI7yv1519Z
u3uyePHSwvcDAAAAAKC1ihq3O2x7XuY87E9+2Cd9TdHjBKoTa7G//Y2zMq/t
xx+fkb7ugJ9flfmaUaOmFr4f0F7dPXJK5rV3ao+7P/LaiJlGraOs1//6gP6F
7w+0N1GjaKtNe2Zed+uv0iV54YU3k97nZecSdewwrPD9AAAAAABozQYOmJA5
xxprxaZOnVP4GIHq5cVCow93vGb69LnJqp88seRrIkYTOQ9F7we0V1FDPusa
nTBhxoevmzFjXmbPlrDBal2SV1+dV/j+QHtzxKHX59Y0iT4P8Tu5zZa9Sv75
Kp840XM0AAAAAECOqJuQNccaTuk+svAxArU57JABmdf2kMFPpa/p1nl45mvO
6nlv4fsA7dl2W59d8trbfKPTPnzNgoVLkl23vyA3Znpt//GF7wu0N3Fd5V13
fzzqxvR1o0e/kPmaffbsV/h+AAAAAAC0ZkNufjJzjvXrG5+eLFr0XuFjBKo3
e87CZI3Plq4dv/mGpyVLl76f9tP+6jo9Sr5mtU93SGbNml/4fkB79fLLb2f+
/v7ljzenr4nrdP99r8yNmR7+2+sL3xdob55/fk6y7pc6Z1530WvpnQVL0tf+
7jfZuYGDb5pU+L4AAAAAALRmu+6QvWbzmqsfK3x8QG0uu3Rc5rXdo9v/1k0Z
dP0Tma/57a+vK3wfoD278opHc2OcUf+oXC36qM8wf/7iwvcF2pPIE9ptp4sy
r7vVP3NSMn78q+lrX3vtnfS/S73ua+v2SN57b1nh+wMAAAAA0Fo9/NDLmXOx
W2/WM52vLXqM0F7E9TR9+ty0pkFLfN6Pvn9JyWs7emlPm/Zm+pof7HJx5j3g
vtEvFH7MoD079ODrSl57q37yxLQ+StSaz8tVWH+VLsnkyW8Uvh/Q3nTvMiL3
2jvv7DEfvvaM00Zlvq5rp+GF7wsAAAAAQGv2+98Nypxjvbzvw4WPD9qLqFWy
0Rrd0msr6kv3Pm9sQz/vpZfmZl7be+9xWfqacQ9Oz3zNd791TuHHDNqz9z/4
x8ZrdS95/e3yvd7JkYcNzI2XrvqpDsndI6cUvh/Q3jz4wEtpzlDWtbfvXpen
12+8NmonbLbBqZl5Ry+++Fbh+wMAAAAA0FrNffvdZK3Pdyw5xxoxlHffbZk1
4NDejRo1Na1pUKree6M+s/e5YzNjLVGDPl5z4C+uznxN9JIo+rhBezZp0qzs
XIScWOmH1/HljxS+D9DezJu/ONlq056Z1108H8+cOf/D1+f1VIrf2KL3BwAA
AACgNbvu2scz51i7dLyr8PFBexBrL7fZolfJ6+yAn1/VsM/N6vOw2qc7JG++
tSiZOHFm5vW/4epdk3cWLCn82EF71ueScWVzErL06jm68PFDe3TU4dl1x8Lt
Q5/5yOt33eGCzNeOHKH+CQAAAABAniMOvT5zjvWFF94sfHzQHkQfiKzr7Kd7
9m3IZ86aNb9kPYew3z5XpK85+MD+mePSbxsar1y/hyxnnDaq8LFDe3TDwOxa
CeG4Y4Z85PV5PZW22bLXhz0jAAAAAAD4uJhD/eo6PUrOscZasaLHB821YOGS
5KorH026dx2R3HrL08myD076Isaxw7bnZcYzTj+1MXHH6PeQ9ZlxTB55+OXM
P1/7Cx2T119/p/DvD9q7b25+ZtW5Cqd0H1n4uKE9mj59brLBal2y8w+26JU+
V6z4nry83759Hip8nwAAAAAAWrMpU2ZnzrGedsrdhY8PmiPi7U17MPzyZ1cm
S5e+36LjuG/0C7mxx/HjX23I5x60/zUlP2/VT56YHpu9ftQnc0z/PH5o4d8f
tHdDbn6yqjyFqJdywfn3Fz5uaI+WLns/2fMHl2Zef9FHafxjH/29jt/S1T9z
UsnXb7RGt2ThwvcK3y8AAAAAgNbsxkETM+dl7x/7YuHjg+b427G3lDy3ozdD
S47j0IOvy7zOdtzu/IZ85nvvLUvW/VLnkp/5w10vTobd+VxubYUZM+YV/v1B
e/Xkk7OSX+13dVW5CrHm+/ahzxQ+dmivzjzjntxrsFfP0R97T/x/Wa/v2GFY
4fsEAAAAANDaRU3pkuuvP9XhY/Vuoa3ZfpvSPRj+dPRNLTaGOW8uTNb4bOm1
lyF6NjTic8eOmZb5mdF/IuvYhM4n31X4dwftTfymDr5pUvKLn15RVZ5COPAX
VycvvTS38H2A9urRR15J6ydkXYNRj6hpP6n47y03OSOzFsq0aW8Wvl8AAAAA
AK3dH4+6seQ869ab9Sx8bC1pyZJl6Xryl19+O/13Vr+A+PPJk99IawYXPWbK
2+k755c8vw8+sH+LjeGyS8dlxj++snb3ZNGixtSKPrXH3Zmfe/xfb838s6hf
/dbcRYV/d9CWxHV89VWPJV07DU96dBuZnH3m6KT3eWOTc3vdl66x3mfPfsma
nzu56jyFuIdFLZSi9w/as/nzFyff3PzMzOtww9W7ps9/Td9398gpme+J3lNF
71dRogdG1LHq3nVEMmTwUx/L8wAAAAAAWFHMp5aaZ/3x7pcWPrZGeXveu2nP
8H//4/Z0vdxmG5yaroNbcf+jF/Eu3+udnPTvO5KJE2cms2cvSONNy/98vS93
To9dxKQeGjc9rb1f9H61Fu9/8I8pU2Yng65/IuneZUTy5z/clBxx6PWpo4+4
IV273/+a8WkP6Eb3df7R9y8peX7H+uaWOh7ReyErnhH1TRr1uXvvcVnJz4xa
D5uuf0rmmM47e0zh5xC0JbPnLEy22/rsqnMR8my1ac/k1lueTu+nRe8ftHe/
/92g3OvxphsmlnzfYYcMyHzPHbc/W/h+FSHuh9/55jkfORb77nV5w3IzAQAA
AIC2L+L1K8u6sKlTZyd/+P2NubX5S4lchs03PC33NWv/T6f0mF168YPJs8++
Xvi+trTI54i1dL856NpkozW7VXxsV/3kicm2W52d5jJcefkjaS5JPce15w8u
Lfm5MXfeEsfltlufzj1n4rg14nOjPsjaX+hYdYz06xufnrz77tLCzydoS/55
/NC65io0OpcJijZv/uI0Z/HGQROTiy98IDmr571pfmPkiMa/Bw6YkMyaNb9F
xtLnkuwaSCGeG0u9L36/s54n45lxZa3DlXU/jHpuRY8NAAAAAGidstZ+R6/s
osdWTzH3HfHheseUsnxt3R7JMX+6OXn88RmF73ujvPnWojTHIOpOrPqp7J7P
1Vj3S53T+gtRm7keY/zet88t+TkH7X9Nw4/POwuWJN/46umZ+9rhX3c07LMn
TJhR0/GPuhdFn1fQ1uy6/QV1/w0Zetszhe8X1NPDD72cdOl4V7LDtud9rKZV
KfGaqPU1evQLDRvTuAenp/W0ssYQPSKynkei30vW+6IPQtHHuyhZ98P4PqP2
QtHjo3145ZW3kyefnJXZvw8AAACAtuWne/YtOa/YUuvPW0LenHJL+PUB/ZNp
094s/DjUQ/Qgjl7qBx/YP3eOv7kiRvDEEzObNdYlS5Zlrn38x99va/ixinWi
eftYqhd2vVzR75Gqj/lO3zlfj2mowf77lu6r1BwvvvhW4fsFzfXGGwvSHkPb
bNGr5mthtU93SIYMfqruY4v6DdEPLO9zH33klcz3N+15sGJcvr0889XigJ9f
lXlMo1dY0eNrTSLvN66Rt+YuUtuqAtFDrm+fh5Jdd/j/c2LiGr733ucLHxsA
AAAAzROx9FJzirt8r3fhY6uHK694tOH5CJVY78ud0zXvRR+PWkWfhsj72Hqz
ni12zNb5Yqdk5IgpNY954sSZmdu+7NJxDT1ekWuRV3Ni5+829vr6+7G3VH28
x46ZVvh51hxRezuuscv7PpzWrogaMdEPJHKvog71RRc8kLzwwsobQ6JxIlYS
vW2qud6++61zkq02LX0/jd+L9/9T/H4VJdazR1+lOW9ai71c3N9mzJiXjB//
anLXsOeSAdc9nt7TonbUM8+83urOl/g9Ofy311fdfytL5ABErmS9xrdo0XvJ
bjtdlPuZkWeR9f6oy5D1vp/9pF/hx79IUQ+jVP2MiCuv7GvhJ09+Iz2vfvHT
K5KvrN39Y8do47W6Jz26jUwWL5a70FTU5thu67MzfzMj76PoMQIAAABQuxP+
dlvJuZ+YMyt6bM11zz3P161PQT1EzYC2Fn+Z+/a7aS/p9VfpUsgxi5yFWtcZ
x3rMrO1GrKFRxyzm4yPfJ2+/unYa3tDvLWpoV3Ocf/ebAYWfa7Wen9cPmJAc
evB1yYardy27n7Fe9oLz7y983LQ/EUv9/o4XpvfKpjHatT7fMb3///bX1yUX
X/hAGrOK90Rd/FLn6R67XVL4/rS0iM/Futkdtzv/w1hnHMd/nTA0mVen/kBN
zZ69IP1Nnjp1TquMo8ba/uifEH27ysX9IxYcvZRef/2dQsf82KOvlM0DqFX8
rtVjjFFHKGpE5X1W/HleDsifjr4p8703DppY+LlTtOgVtuLz99pf6JiMGD65
8HG1tKiZMPyuyWlNr299/ayKz/XIDb5lSP1rirRl/zx+aO4x088MAAAAoG07
/5wxmXM/Rc97N0fU2t9ozW65c1vRzyBqiv7+d4PS/IxK5xHX/VLnZL99rkjX
81Q7377Pnv3SdZJFH59yYoxRg6DcMawkPhzroeI4R2wu5mvj/6tmG7FGvpY+
BT1Pvydzm41ch3X6qaPK7tOY+xpby6DUur0sEV+NdbtFn3OVirhm5KIctP81
Na/djborRe8H7Vvcs+Jcfe+9ZSX/PP7/rJ46fzv2lsLH35IefOCl5NvfyI7l
bfG1M+paRz5qr//moGs/8hmbb3haq4inxjlz9VWPpTV4arm3rf0/nZJTe9zd
4rXl4/Oirk21dUaqEfVI6jHWE467Nfdztt3q7Nwcmaj/EbmUpd4bz0zWxv+v
557731oCF/a+P5k+fW7h42kpr7zydlrn6Vf7XZ3madR6vkfeVmu4J7UWu25/
Qe7xuupKz3UAAAAAbVms+8ma+4maw0WPrxYRJ/rJD/vkzmtFrHPFfIxq+o8v
X/saMf2ozRzzsZGHEGtoK3l/1Cso+hjlefzxGWXnBfPmV3+wy8XJaafcndZI
X7Bwyce2v2TJsmTSpFlpHetYDxr5COViHJde/GDV+3HQL68pua1Yh9+oYxdx
t3L5GJHvkhXDrIeIs1TznbWVNWmxBvrEf97e7ByaEDG9l15aeeIntD5PPjkr
8/yMOgNFj6+lRL2TSuognX3m6Lp8XsRNt9miV+n7whc6FhZXjRh3n0vGJZtv
dFqz72/hO988J+0T0RJjf+21dz7ST75Ror9Ec8d65hnZeYwh8lAjzp63jYiL
Zr0/6oEUfU2tLKK+0lNPvZY+a95846S0pkP0SIk87HN73Zf0PndsmisR99N4
3hx199T0mli48L26jiPqcDzy8MtJt87DM2vm1Cr6RhR9nFuLA35+VfYz3Qf3
7pkz5xc+RgAAAABqF+uqs+Z//v2P2wsfXy0itp03/xc1uZvWOIjeEaX67TYV
cZWsPI6Iw0esP9bX5/VPiNh81Hku+jg1Fcckxl5t/YM4blGnOWIttc4XRow9
L94RMf5q+kLEvmR9B5Fb0ojjFzUbYo1uueMVeRSN/B5jPr7S7+7XB/Qv/LzL
E3GAiDHEPHUl12c1Yi1w0fvHymvQ9U9knpsP3P9i4eNrlLg3x/rjqDHzx6Nu
rPh6jXrqzf3s6P+QV8ch9D5vbIsej8hdu6LfI8nXNz69rve3EHlZja4p/+qr
88oe06Y2WqNb+t1HnZzI+ezRbWTZdejx3DRx4sxmjTXq6pT7jOjrUm47e+/R
N3MbkYdU9DXWHsUz4u1Dn0lOPvHOD47/Zek5VOt1Ec8Scb1F/YPlubXV5jBE
XvR9o19Ia3VU8txXq3j2bY29aoow+oPjXSq3Oc6FO+94tvDxAQAAANB83/hq
6XnyetXebUmzZs3PzRWIGsuLFpWel4x56oiZb7Bal3Qb8e9Yix+9IqI39O47
X5TccXtlc2IRj8lbBx79qIs+ViuKvJW9fpRfk6KpOG+i50K91qPOnrMwd963
mvhyrHXL2k6Mud7HL2JOlR6/yOto5HcZc++VjCPO6YjfFX3ulRIxzYjnfu/b
5zYsDhB5S0XvJyuvqC2TdW7GuuF6fEbE1N5ZsCS9t8Y9PmqKhLhnh+X/nSVy
xKZNezN5/vk5aX2T6Mnw7LOvp3Hjxx59Jc2rGDVqahpHvHHQxHTd+SUXPZj0
6jk6XWscsbyjDh+U5hvtttNFaYywkloKpTS3R0b0K4jaSOU+p151HCoxcsSU
qnra1yJis7HmvBHjj/zESscfccZf/uzK5NZbnv6wvtDQ255J+0VV8v7m5s8O
vmlS2TpOce6W2048Y2Zt5/s7Xthi587K4uGHXk6OPGxgsubnTm7odRL10eI+
dW3/8Zm9QOK5ZPT/5Shsst4pDR3PihrdP6wtiXzx+C2Jv5f9dM++yTVXP5b+
xhU9LgAAAADq4y9/vDlznuz+sS8WPr5q5PUljtyDatboN1fEcPLmIGPes+jj
FWL9+lfX6VHx3GmsLbzt1qc/VqOiHvL6k0SPikq3E/GyrO08NG56/c+7v91W
8fGLeF8jv8+bbphYdgwRb7mvlZx/K4p6ChFXiv7hzY09RG5SXnzymD/dXPj+
svKK2G2p8zLywPLeF7GZsWOmpbXPY21wxPEPPrB/el+Oe2T0Oth0/VOSdb7Y
qe41SYpUybr3PL//3aCKPufqqx6r23cc66Ij12POmws/8v9HPkrkcbTk8bu8
78N1PX8jpltJ7fuI657a4+4P8xrjHh95nxHbr3TsB/7i6mb1UIpzZ/XPnJT7
GbFuv5Jt5dXviryQyAGMflfLexTE+XTZpePSP7v4wgfS98d3Ebk9ERu/fsCE
NDcvfreH3Pxkms8Ra8UjlyWeEcc9OD2tQRF1k+L5NfqYzf/g2EcuUtH3sEaJ
cySOQ+QIF3GvieeHuD6jv1f0NIvn3agHUo9eVMtFPZGo7xD9SeIciPyurNfG
uVH0dwIAAAAALeHukVMy58kO2r+xtevrKWICa3w2e0461n+29Jjy4thHH3FD
occr5oTPOG1U2TWHy0U8rCX6WGTVCI/4W6Xb2G+fK0puoxG1dSMeUekcdawv
bvTxK1fzOsT3XuS5V0qcWz/Y5eKa5/8jP+GU7iPT+M7y2FbEcrNeH7GjoveZ
lVdWLZlY49v0tRMmzEi6dx2R7PK93jXXJ2jLmtsLIu53lX5W9Iaq5TMirhm/
BX//4J7zs5/0S7b42hkf5ovEb2zEP6O20+TJb1RdUyHOlT8dfVNamyfWFz/x
xMy0/1B8ZuS//fkPN5XdRpw3kedSj3M3YuX771s632a56CsVOQDz/2+tevzu
3jDwiWT7bcrnOKwo6pA0Jzcyvs9ya/Nj/X48DzV9b3xu1CaJ2iJxDUb+7ne2
PidzO6v/v/k5EfUW/T4iHyRylCL/Y9+9Lk8OO2RA+rsX94v4jYtjHrmJcd5l
1Q1oTeL3u5I8mJZSbX+0PJGLdtwxQ9Jc5qb9J/L+rhD5KrVco3HO9rvs4TSP
O56Jf/T9S9JeGvGMHTlD0cOu6O8bAAAAAFYUc7JRGz5rrqzW+fuWEHPMMR8b
c/k//XF2T+FYn1fE+CKesPVmPUuOKXpONKJGQSVi3jrWdlUyxxrnRqwTbKmx
5eXPVLLGMs6JqKVR6v2xprmeY434T16OTFMxV93IYxdz1L856NrcMfx878tb
1drMN99alBz758E1rQWPvuln9bw3eeGFN6s6j0LEoIred1ZOb81dlHledul4
V/qaWJcf+TdxjrdEXK41ijh/xLybc7+KngOV3lvi82rpxRFr6iupCRP33qzf
plIitt//mvEVxRUjJh05Ennbi3hpPWqnR72EvM+JXlpRxz9eG58XcfMtN8kf
W1PRkz6+u+aMM/qVREw/73P2/MGlafz4gvPvT47/663pM0L0IYq19O2pPsly
8dy543bnpzVZOnYYluY3xnGK3+Ei74nxLNy10/B2dcwjR+jHu1+a9ph58slZ
ub8HWedpXAeV5thGH7or+j2SPgNWcp+Jc/xfJwxNc3KK/O4BAAAAYEUR88ua
04p55rfn1aefdr1FnkK5ObmY/2x0Df48UbM7a2xPPfVazduNXIioKRzr6KJ2
bqUxnVdfnVfxGsdYt9nS332spc2a+63k/RGHztqfqL1br3HGORVzydXMX0fd
50Ydt8jlyKpNsVys0411uUVcB6VE74evrVt5L5IQ+SFHH3lDbq+aqJkdNfGz
thG5OkXvOyuvqDOedW5ectGDyR9+f2O7ittVK/IGfvHTK5LHH5/RrOM8ders
ZL0vd674c3+468U1fU5eH6paRLx8yOCnSq75zxMx5+jpnrftqFfQnGMaeWB5
NZki7hrn95Qps5MO/7qjqvyM5Q765TXJzJnzmzXOyJco992vthLWKsmz+Uan
pTXVzul1X3rtVXv+1SqeXQ//7fWF7389xPke9TriWa/SHJBzPzjeWduLWhl5
7501a37S+9yxVfVXaSrynJ577o0W+a4BAAAAoJxY3xNr4rLms359QP9WtSY7
PPLwyxXNxUWN3CLH+dC46Zlju+bq2nplRzx2my17fWRbsS6w3DqsiN/EGsty
xyzW4EUsuaWP1bRpb2bWK/jON8+paBsx7qz9GnX31LqMM45jVj33PI3qpxHn
w14/6lP281tLrZRYzxd1q6s5dlHnI+q6l8u3iHWa++zZL3M7kfdibp4i5fVs
KVe7vj2K3IyoVx61JSJOX4/1vpHPF3H/asbR8/Ta8tmiT0c9jkPU9Y9e9c15
1opaDFFPKusz1vp8xzTGWcu243uJ/gN5+xA5c9E7qpb932rTnmnuZXO/++gp
UE2eCqVFrnLE0pv2Lqi3vJzerHFFf5WI08f9IupDxG/6a6+9k9bzWLx4afos
HNdCjD3O2+ihcvqpo6ruxVKJuCaiD8yoUVMrqgHW9HrNq2/39NOlc5ojJ+i3
v76ubv2BYh9K1akCAAAAgCJEPdy8+ay//PHmVpWz8Pec3vQrKrpPffSszuqB
G+syq91ezMNGDeNS28vLf4h5z0rWskfspah5yyMOzV5j99e/DK5oG1FDPWsb
9YiDRU2MvLX7eV5++e26H7PIgYh1kZV8fuRZFHkthHvvfT53fr6piGFdefkj
FfdajhrXedvr3mVE4ceAlVv0OKh3zKy1ibyLr67TI+1n8d1vnZP72m6dh9f1
+Ma68GrzoUL0e6/l8yLXojnHKnIIovZPvfrJR4w2L4cifiNr2W707WnEuRLn
yYW970/jzM3d98hJLNcDgup8fePT034jjbgXRg+DOP8rHcuu21+QDLn5ydy/
i8yfvzjNE47eCNHjI96T9QzenHM2/g4Sx6U5fy+6+qrHMj9j7z0u+/j5PWpq
5vN/c8U9ozX9HQ8AAACAlVesC4q+tnnzWbGmqdJeqo0e68Zrda9oDi7mNose
707fKX1co591tdvKW4sWOSWl3jN58hvp/Gq5YxXxiHffbX7MoBZRFyGrzvTq
nzmp4hyKrJyHyDFo7hjHjplWtr51jDXrz6J+RL2OV8wrn3f2mNzPa+qxRxtT
36HS8ca5m1dLvGk84LJLx1W1XvHa/uNztxnXYb1iglCrA35+VV3iS7G2NnLQ
oo5ArGmPWu7xGx1xtE4nDUvrkUQcuN9lD6e5bNcPmJAM/MD1KxhYxg0Dn0hu
HDQxufnGSelvaax/v/OOZ9O+AGPum5bWOZo0aVbahydq+Ef/oKbPCLGuOWsf
ok5QtWuSy4n9rvZYRg5VrfXvI4ZYa/+O+F2qNU8iz/jxr2Z+ZtRYqjYuGf0d
6rWWe8V9733e2LQWRj32Oc7PrPpMNE/kH42uY85CXGvD7nwu7UVQy3iiX8zs
2QvS8zzuU107DU/7PEXthZY4Hj/7Sb9mH4O4T0Y+V9Zn3HH7sx++NvIiGpWn
sKJG5aUAAAAAQLVi7Xi5etSxljDWLxU5zoifVDr/dt21jxd+XLPWesb8YzXb
efXVebnfT/euH187HrWfy83hRsw7apQXdXz6XDIuN479j7/fVvG29tjtkpLb
+MkP+zRrjDEnXi4WEvGXiy54IPPPn3329bocr6jTEGvvqp2Lvn3oM4V8v3Pf
fjftV1LJGGMdZPQ9n1flPWbkiCm5ayhjza0+ELQGUfe/llhS9GyK3uixJjfi
x21hLWys9c/LLYx67vX8vLjH1ZI7ELl6zfnciC1GD/nY10o/P/JMGlFzZ7mI
32Z9drVxyahvVMs5W8o3Nz8zzaGpZ25k5LZVmgtXb9/71rnJ734zIK2bEr//
kTdx/9gX09/7yOGJfmvRpyBEPk/UeYreBfE8N3363OTFF99Knn9+TnpNP/PM
62n+z/jHXk37WkSOwPC7Jie3DHkqfQaJWkORgxS9SzqffFeam/T73w1Ke4D8
ePdL075ZkcNU79ySEOd25Ag097uK/J5yudFtQdRwaM5xyMuv3G7rs9Ocjief
nJXmNTdnnPHcGvem+HtIuePe3PsgAAAAANTT5X0fLjv/FXNpMadaxPgi/rHb
ThdVPFeXVXOgJWWNN3I/qtlO1LLP2s/o1xxz3yu+PtYtluutvf4qXeq6bq5S
sc49ckl2/m7++KKeQTV9HLJqj0c8oZZxRkzln8cPLXuebbRGt/SaiHXHWa+p
xzraOGbxndUybx1rWVv6e44eFHlrCFcUdZtjfr7az4j+1eVqgJ995ug0vtD0
GoGWFGtqq6mJErGm+A0bMXxym6wN0rfPQ5n7Fr+L9fysuP/G72At98Z65XJF
blYl+Qq77nBBMufN5vcnypP3W/S3Y2+peDtRl6dcXaFK/GCXi9NY/tJl9avR
Fdv69z9ub/bYQvyGbL/NeWmeR/QRiLogkUsZNUZ22Pa8ku9Z54udWuV1GbHu
OL8iZyJ6MEUtlfgNjO894t9bb9azppyGyJNozpgiF7Ee31WjxDnw6wP6pzlh
M2bMy+2BEvH/Wo9F1JSJvJ2sbUd/vjgHa/mO4j0/+v4laT2rBx946WPnZzxj
RY2VUu/9ytrdW0UNPQAAAABYLq/nwHIRR4n5z3rXcs4Tcetq15VHPYIiY5RP
P/1a5tj+XkXMII7zJuudUnI7ER+5a9hzH3l9zA3/5qBrc49N1Nx/4omZLXo8
3nhjQXJur/uSzTc8raLv75KLHqxq+1lxhVryFSLeE+sVy41xozW7JY8//r+5
CBE7z3pd9JOo9bhFnYyYR2/OXPyfjr6pRb/rWB8aeRyV3EvO6nlvTfPkcbzX
/VJ1McpYox7nYUseCwixlrrS8zTWS8e666LH3ByRg5S1f7HOul6fE+vYv75x
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
w5XUol8u8htiLvTcXveleQGxxr3SYxLzmREPidrWMZ++y/d6V/SZMddazbHP
63EwfvyrH74u+jLnfW7MvUat/ofGTU/H/fzzc9J62vHvWNsWceSoH33LkKfS
eemYj411WIf/9vpk7z0uS/MJ1l+lPn13VxQxoziGlfZKKCfW1WX1ZGiOb25+
5sd6b5QS60y32rTyPg61WPsLHdPck6x8m8j9yXpvJftQi3Ixu2226JWu3axl
23FunHDcrXU/jpHbUvS9lZXH0UfekHs+Rk2CosdYL1n1BiIeWus24956xmmj
yuY0xv3xvv+7z8XvXdbrIvesufsZ9YryxhLPKbX2vamH6EPUqN+havIuaxHx
6EpzZeM7j3pg9fz8J56Ymfl5Z585urDvtFHi2SBrfyMH8o03qq8REn3BsrYZ
fQmK3udSIv8h8iOyxh21NaqtcfD3Y2+p6RqLv1fUs8dK1LbJyv2Jv+MVfewB
AAAAoFIRA9jpO6XX67WkiH0+80zpPqvR+7s5ve1j3WHE0KMud/S9jXyBWBcb
8dKoKx1r2qO+cy3rvGPc1faw/s43S6/xiroVy+PVUfM6rx51axPzpfvtc0Va
H7feNS7CsDufqypvJU8c14hNVBNzijyaRh27mEePHJO8z8/rpb7Xj/o05Hjn
jTmup1piHSHiAnGu1Hq8ok501j0rzpFae49AtfLyiKLv0muv1Wf9bNHy1lRH
PaVqtxd5Clde8WiaM1bueo9ctehzsPy93buOyHxt1Hpqzn7Gb1e556Gon1Pk
d7HzdyvLo8wSeYpZfxZ5ho0Yc+ROZtXnyBpj5GDWexx9+zyU+ZlR46PI77Xe
oo5F1DfL2t8//P7GmrYb50jWNluiPke1nn329cxn7uWqra2Q11ciS/wd5ryz
x+TW8qrFTTdMzPzMq658tPDjDwAAAADViDn6qG+8z579mjUPXquoh1BubVPU
k414fhHjyxJx02rnZ6PWf9b2/nT0TR++Lo5J0ftXiW9/46y0B0LTHgaNEGsj
s+reVvp9Rd2NWnsFR0/meh67iPmPGD65os+OvuUbr9U9c1s3DppY12OdF7OL
GEgtdYyj50isf661F03UXr7s0nFpD+u8uFPUFCnqXsrKJS923Jy6A61N3u/W
bbc+XfF2Yp3zhb3vT/MDK7nmI7cs+letuI3ddroo87XNjQXeesvTZccU9YqK
+h5i/2rJ3YyaEFF/Pn5DI78y63WRi1Gv3gth+vS5yRGHXl/VWKNe1YKFSxpy
/CJGX+ozo9ZA/MYWeY3VW3zfWcc48vqmTasttyBi4FnbjbptRe/3iqKuWLna
XPFcUe35lpenVsruO1/UsL5AeTV+4vor+jsAAAAAgFpNnTo7jSk2uv59iL7X
sY670rHFXOhf/zK4rv3ua/XzvS+vqtfEcnkx71gnFa8ZOSK/HnXRoudG1Dl/
+KGXW/z8jFhK1DqI4x8xhnJjjdh45IEMv2tyXfpTRJy80r7bWWKdadRNrjYu
FHXTs7YZvd9rOR9LyVs7GHP/0Wukku1EHtRjj76SdOs8PHdNbzkRT4jjHnkK
y7c9YcKMzNf/7dhbWvy8ZOWUF3eP+3jR46uXuW+/m7mfldRXiD4DUdeomv5D
kZ/Y9F4TccXVPl26d8RhhzS/7sH3d7wwd0xRq6nIuHb0i6r2t7pXz9Hp97fi
dvLy/qLfRNS0as7vZdz3I15eTU2kyCesNH+vVtFDq9Rnx/Eo8vqqt+i7kXes
o0ZJrdseOGBC5najd1fR+x4ij7iSGk5xL4mec9VuPy93dEVRYydqedWrN1pT
sd2ssURNiaK/h6YWLnwvzXeJ8y9yw+qZGwUAAABA+xb1eM/pdV+y9x6XpfNu
tcYbVxTxiogrRD2HWueqYo1gc+rJN8em65+SDLq+9prJe+/Rt+R2o3939KGN
OtnNie02QuSHRM/diDtHnYvWMscY60RjrjlyQLp3GZF07DAs/Xfv88am8ZZa
1w+Wc+Xlj1SVsxDHL9Zhn9rj7jQfqNbPjboQefPkUR+lHvPiUbM46zMuvfjB
zPfF2umo+x01EGLNX3ProaxYT6HpZ0UuRMTiSr3vq+v0aFh8AFYU8eus+3mj
1ogXJeveE3UNIq9g9pyF6T0q/h3xwlGjpqaxul23r74mTsTaXnrp42uDR49+
IfM9l/d9uFn7F78l5cZ16MHXFXb84xjHPbGS4xd5ZWf1vDczt6L/NePLbiNy
/U4/dVTy4otv5Y4rau3EfT/6BEQeY6W1M1b8fYzeXNX21apWxEqzfrf/3o5y
3CJXJK+mQDxfVtMLq6nxj2XnzBzzp5sL3ffoURX51pXkycR5d83Vj9V0HlVy
Xsd97+mnK8vtrFX0ycn6/HgeLvpcbPrdbLNlr4+MMXqh1bs/BgAAAADtX8Re
7h45JY0HR65AuZrukZcQMdqY3+/aaXg6LxjzqPWcm4o11jHPHGvLq42HVCti
NT26jUxjsrWON+brIo5VavuRExKvyatz31IiDvyzn/RL5zuj9vXs2QsKP/9a
m5iH/tcJQ9P516YxkK+t2yM9fl063pXm5cx5c2HdPrfc+VGP2gJRrz1r+3v9
qE+awxRrdiMucNThg5I9drskM3egFltuckaaE7JkybLccUaMK2sbca8q+hyh
fYvcsqzzL/K7ih5fvR18YP8W+f35yx9vTt5ZUDrXI+/eFH3qm7N/cS8rN7Zq
el/UU+SObrRmZc85h/zq2uSVV/L7M8VzWNPYYZ5vff2stE9DxKMP/+31yQE/
vyqtj1Wu1n450Xcoch1a4hjG82fWOK684tHCr696mDJldvKVtbNzGuP5s7nH
O86dvHMxejC05D5H7uKY+6YlRx9xQ8X1PKI21/UDJtT8mZG3nLXt6NcSuUIt
EYfP6wXxwP0vFn4+ruj4v5Z+XqslZwQAAAAAmoqYQvRkjRrFseYq+tNH3eeW
7mEb84IxX3lK95HpGvP1vty5LnGTbbbolfz5DzelMftSa7yrldf3N9atx7qt
iHVnvSbWnEafjubUuthgtS7pfkVPgsglifWQsQY25m6jv0Nr6z/cFsS5Ebko
sa64XIy9uaK2RdTrzvuOY164OTUwIiZXj+unWhHjjXW/EQeuZJxR6yNrW0Wu
g2blENd81vl3wt9uK3x89Tbq7qkNvf4j/h2fkTeGrJhXxM0jblnrvkU9lnK9
KiInq9J7Uz29+uq8ZPMN8/NDQzw7DBn8VMXbjb4/WfmTjRbx7qiL1JJ1cK7t
n11TInIZir6+mivqkZSrv9GcPhArijzhvM+JHlyNzHON55txD05PTvzn7WVz
p5uKa6m5sfzIpyy17cjjidoyLfF9x/GN3IhS44jaVq2lDtpyO2x7Xsmxxt+x
ih4bAAAAADRKxC2ef35OMuzO59LeALEOO+YRIx4a8f5YfxY1rCP+EGsMf7jr
xWmPiqgDEfHSh8ZN/1i/53r41X5Xl5yvi7q0M2bMy107+s3Nz/wwZyL2L2Lj
zzzzerpW7t57n0/7H0TP4qjJHP8eetszaewn5nSjjvTMmfMbHkunZcQayqw6
9Msd9Mtraq6vHfPg1fS7aFbcao1uaQyylnhRXAdRi6HUdmP9ZF7vCmiuRx/J
Xq/dXteMHnnYwLrfA+I3OHosVRJfi9/xUtuIXIfm7Ff0PCg3znN73VfIMc96
blhR5GfVUscnnnda6l4fIr4adXka8XxVTqeThmU+f2XV82gr4vlx68165h77
qOFVr/yQqVPnpL+xeZ8XzyhRKyWeQ+uR7xvP9HFf/f3vBqU9n2o5/+L+Ua88
ishj/vnelye77XRRctK/70jzf1ryO+95+j2Z+xnjKfqcbCorX+EPv7+x8LEB
AAAAwMok5muzaif/YJeL0z/PW0M55OYnC98HWo+BAyaUnZuPehyR01LL9qPm
d6NjV3Hex9rh5hyH888Zk/sZsR9qhtAIV1/1WOZ5N3JE++xHEjHxSvsSlBN9
ZCLmV8064LhnlNpW9KiKP49aS7XUWYjaRnl1i6JuUxF91t99d2nZuHA8NzQn
Hhy5jnk9BOoh6jhEXPLll/P7VDTSrw8o3c9ki6+dUfh11RyzZs0v29sj8l3r
Xe8g6plV+v2v/YWOaS+piKPHffOee55Pn02ib8lrr72T5ltMm/ZmMmnSrGT0
6BfS/KXoOxU9SH7ywz5pfnFzzr91v9Q56XfZw4V/V/USdV6ihkLW/kadu6LH
2FTkrpQaq7xSAAAAAGhZUQMha24x+jFc3vfhzD///o4XFj5+Wp/uXUaUnaeP
9ay9zx1bdawt4ne//fV1DYtfRb38etT7SPN8ytSDjhrZEQMp+vuifYnYW9Y5
1x7qy2eJ37JacxYibhlx6+ghVctnRw5Wqe1GjaTIKYhaAdEP6uQT76z6nnfI
r64tue2dv9s7eXtey9cDCNFnq9wxraYHRJbIi4h+VdtvU3oNdK0iDyJq9rdU
jfw83/1W6XMn1sgXPbZaTZ8+N+3vlfcdRC2CqIdQ78+OPKOsHJDWImpnRE2Y
yIco+ruqp8hfztrnX/z0isLHV0rkKjXNyd5954uSRYveK3xsAAAAALAy6dEt
ey3ahAkzkm99/azMP79r2HOFj5/W6Z/HD61o3j7qpd9XQ8x+wHWPJ5uuf0rd
4gfRI77etUKuu/bxiuIWsb5v8uTWt+6QtimvTv/UqbMLH18jRZ2FqOuft8Z3
uchtiNynqAlTa4+a5WItfKX3mg7/qq4metwbIp9ixW3susMFyeuvv1PYcb7z
jmdz9zFq49f7M8fcNy2tS5NXbyJL5IvEs8xxxwxJ7h45pZCaFKVEzY2m3+1y
0S+s6PHVIvpCfeOrp+d+Hxus1iV9vmzUGCJf8DcHlc7zKVL83kdPrMj3Kfp7
aoQjDs2ufzVi+OTCx5cl+tj16jk6+etfBid9+zyU5kkVPSYAAAAAWNnE2s9S
c4ux/jDyEbLmHnf5Xu/Cx07rdmqPuyuex48e1tFPuprtL1i4JOlzybh0/n/L
Tc5I4z4RD6g2hhBr6aLmcyOOwdFH3lBxHGPfvS5PLrt0XPL006/VVDseQuQA
ZZ1nUeO86PG1lMjNiL4OV17+SFonKNbpRz33iFe/+OJbdb3GstbIl7LOFzsl
S5dVFy+P7y3GHffI1pDbFLX+f7pn38x7eXPzP/JETYlhdz6XdOs8PDng51cl
u25/QVp/IfrQR82ng/a/Js2Xu+iCB9KeElHfvzXFH2Ms8dsV/zt6IWSdJ1F/
qOixViNqKpx5xj3J19btUfb8f2jc9IaPJ+os9Dz9nrJ9S1rCJuudkta9aUQ9
idZkzx9cWnL/o9aGZxoAAAAAIEvM50b/3FLziwcf2D+NBWTNv95846TCx0/r
FzUGqokXRL/riHlUE5OL+M/wuyYnRx0+KO0zUelnRe/yqC/SyLW20c/5sEMG
VB3fiHyhWEscPbXbe4yD+oq+A1nn1fI4KfWV91vZVOQmtZda4+edPSZZ83Mn
/+/99JMnJv86YWirqV3Q2sybvzitO7HapzukxytyRYfe9kzmeTL4prbzjDXu
welpHkK5cz9yCmupp9Qczz77evo8W0suY3NsvFb35Jg/3ZzmGFWbn9RWZT3r
xHEoemwAAAAAQOsV67iz5lr/duwtmfO7Uft6ZZl/pfkeuP/Fj/UHrsRWm/ZM
6wtH/sK1/cenOQmjRk1Nbh/6THJFv0fSuuqxlreaHIXlttv67OSxR19psWMQ
dSBqGedysT4zatfHmuHHH5/h+qOkdxYsyT2PrHFtjK6dhld8Lf9490sLH289
vTV3UfLwQy8X2p+iLYj7d9NzYXmuRymRA1D0mCu143bnV5SrcM89zxc2xuhT
ETUONt+o+meRSkS+TtT6iH400btkZczbiVyUOA4rHpfIz2mv/S8AAAAAgPro
f834zLnXvX7UJ/PPYk1l0WOnbYm+8oce/PF4TUuLWg8RWyyiPnjUJd/5u73r
sh9RF+VX+12dPPpIy+Vc0PrNnDk/97wpenzt1RNPzKzouo28o+eeK76fAy3r
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
3vdu4b9XCitPQTkaaR3nhP2ZWlP8yvOd8nz/X+pNcD4+ru0/cNQ8dE+z08b8
268GmV27M53HBrhgq1lQo9pY57Fl++LT/oHXNn2nuI5RdO2//YYGIV/vVcNC
3xmu4wbyq/gDLXyP82eeaO88NgAAAAAAgqxdu8dcek4V6zMc5TEofyAesezZ
e8Q8eHezkJ4tbd9+yPnY5da00eTAmB99qKW31sd1nAAArFq1y1z0j+B5/Co/
j3IeZziUNzh92nqvHvI1l9YMK0chW4nirbyxieTzy5bxr8Oc856qdcvpzsfJ
Ne0nW17qtZfVMhkZkY0/kMxsveQqlhvhPDYZMnhp4PXt04/7Oo9RNVvyyqnI
Sb87ly+npgJSx9WX+N/7JML5CQAAAACAjfoxP/Kgfw5+NtWJjlc8P5YdGvLz
pdmzNjofv5xmzdwY2MtV8yZbtx50HicAAKo9bluDl+3Dd3t588quY83L4czj
ZtTIFd7afM11R5KjIHrG363rvIi3uV+fRYHvr1pVnTvFJ/8z0XVsPztwrJRv
4jpGIN5s84zffT3YeWzKE/9X4erWc/aWovXNwYPHnMY4edJac8NVdUO63it3
THkgx4+fdD62QLTofsh2zNeqMc55fAAAAAAA2KinZ9CznK8+HxDXeB6+/9eQ
5xUSae2dns+pR4UtVvVNTfbe3wCA1NGqxfQ8v2efL9nB62/gOtbcNL+k71Tl
Uz79RDtzwV9D601uU+SCal5/ePVljzSmjIzd1rXR2bkKyoVwPXaJQPdMQfOe
8uVn/Z3HCcSb5vz9zodE6CX36gud7de3P5X38rZdxaY+DuqZoetsKNf8666o
YyZMWO18TIFoW7hwq/W4T9beXgAAAACA1LdgwZbAegCPFWsZ9zUnr71ofxaW
0wtPd3Q+fjl98+XAwHjbtp7hPEYgHjZs2GeqVx3jzTV1Spvj1eV1HROA0+3d
d8QUKVQtpO9bnceu4920ab8ZPGipqVxxlHnq8Tam8N9+zld+Qrail9c2jRtM
MvsPHM1XfJorUw+JoM9K6+h+HEOVmXnCqwOha/mggUui3tNduSF57ZvyPw53
Pg5AvNl64pV6uYvTuPQ9EHS+uly3rZy6t1/vHvJ1X7kf+g50va+BWOjVY4H1
2J8ze5Pz+AAAAAAAyE11oB+6x/+ZmFxxYXWzefOBuMelOp6qRWCLq9BZFc1H
7/XO1xrIWMSsmqK2mFVP23WMQDxoTc+l51Q57fi/6B+VzOef9Eu4/i1AQfZz
+ZEhz+18Vrpf3OJSj6olS7abPr0Wmio/jzIvP5dmrrq4RlRyE3JSPmaP7vOj
lpPZrPGUwM+rWmm0830eql27Dpvbb2xwWvwvPtPR2zfReH/dv+keM6991KL5
NOdjAcTbs0+29z0flA/lKqb16/cF1o5RX0GXdXh691wY1vVfufpXXlTD3HFT
Q/P4w61MqZe6mC8+7e9dp39tNtXr6zN1yjqzevVuc/RolvNjAgiHepzYjn3X
/VoAAAAAAPCj9f5Bz3KGD1vuLLZxY1d5PbX1PLvYfc292gVpHWab+fO3eHkW
rscup2PHss54rp/Tbdf/klC5FUAsPfdUh8Drip4Lp6dnOI8TKMjUgzyc+gSx
qMuvOXHlMGkdoPpSvfdWD3PfHU0C8xXzq2iR2qZShZFm+fIdUd2WjRv3m8J/
r2T93JIl2iXcvUsQW72oaNXZaNYkOLcjW/q45PmuOHLkhOnS+T/1KAYOWJJU
+xuJ5f23e1p/T7iI59Tv/6OeO7bzVNc+1/359B0Vq+8NUe8a5firxkXZMkNM
k4aTzYB+i83cOZvMjh2HnB8zQE4lS7T1PY5vvrae89gAAAAAAMhtz94jXq/m
eM5NpKr6dcdbx1G9XPUsy3WMQLyEWl9eeQ0rVux0Hi9QEFWrPDqsuZobr6pr
yv0wzMtzHDF8uZc7uGbNHrNlywFvrka5Bzt3HjZbtx70/n3x4m1m4sQ13nyO
/qZOrXRvDvyV5zuZe29vYi7+p32dbrRpDW2ZrwaZSb/HE+2eBtneeLVr4Ocr
P8T1Pg/Vvv1HrbkX0aizoXoWyhsJZd/t3pPpfDxCoTjvuqXRGd9x0apHgYLl
p++H+Z4PqlXlIp72bWcFnqeJ0O/u1RdC6yUYK9o399/Z1Lz7Zg8v/071GZYu
3c41AHGnXDnbPdY7b3R3Hh8AAAAAALlp3sH2zOW6K+rQbz5EmpsJWlOpPtuu
YwTiKajHTG4X/LWCad1yuvOYgYJE68BDzStKVjdcVddbAzthwuqYr3MfP351
YCxaa+96n4ej5a/TrNuiPJf8vr9qNISyD1Wn3fVYhOq7rwf7bkOHdrOcx4bk
o7X7tvNC+UTxjEW1Y4L6QDxfsoNXf8H1mKnvnuvvHT+qF6QcPfUxbNxgklcz
Zu++I87HC6lr0aKt1uNRfatcxwcAAAAAQE4bNuzz5gltv2UHDUyuZ+suac2m
bRxvKVrfmxdyHSMQT0OHLDPn/KFcWM9zv/39PIrVumcAp+vcaa7zOZxo03ya
ajdorj2edVt03dKaWltcb5Xq5nx/h0PzjsoTsG3PkiXb8z1eQf2zclI9Dtfj
EYpduzOteaulP+zjPD4knz69FlrPi99+2xbXWF54uqM1lsvOq2I2bdrvfLxE
tezUQ9D1d1EodI+s6+xXnw8wfXsvop8EoqpNK3u/z+nT1juPDwAAAACAnPR8
xPY7Vv1JXceXLNav3xfYZ3vsmFXOYwRc0LH/WLGWYT2/VZ3xRFijB6S6Yvc1
dz5fk1/XX1nHq7v9a7OpXm+KWNdQsOnWdZ41Rs1hJ8pcXqhUj8K2PU882jrf
7z940NKQ97Hm8VyPR162bTsY+F33c/mRzmNE8tGcou2YGjliRdzi6NrFfn2T
Lp3nOh+rnNR3p+w3g71+M+HmzbqkWO+7o4lX+3D0qJUmM5Ncd0ROeZJ+x1mh
syqao0eznMcHAAAAAEC2zZsPWGsr6HnJggVbnMeYLDS/anv2VOqlLs7jA1xT
7171YS5yQWi156tWyn+tcQB28+Zttp5/d95sX1fvkno7vPZiZ1OrxjgzYvhy
b47Y9TjK8eMnvdhscdevO955jOF6+/Xu1u2JRv5AieKtQp6/S/Q1x+npGeaq
i2tYt+HcP5U3GRm7nceJ5KM8J9txFa8eWjr/gu7dXnymo/NxCpKVdcrs3Hn4
93Nwl5k3d7PXt0f1A1VfSDXxq1cZ4/Vxef/tnua5pzqYB+5qaopeXjswDz1e
9Dv9mSfae/0jFi+Obz0NJDcd95efX9X3uIpGziEAAAAAANFUsdwI6/MRPbNx
HV+y0DzsuX/0X7ujf1++fIfzGIFEcfDgMdOw/kRTpFDeeQtaf+s6XiBVqca+
7dz7ubz9/iAerr2slilZop3XH6Z921neGuP9B+Lbqz0crVpMt27LdVfUSbp+
UFu3HjTn/bm87/ZoXl75Gfl5/zmzN4V8LKjHhuvxsNHa5x/LDs1z/bb61buO
FclJfVNs8+YVfhoelxhUv8Z2bKv/zsaNyVU7JlSq87V7T6bX+2bc2FVeDYk6
tdLNl5/193pj3HVLI3PRP/z7v8TK8yU7mAO/30e7HhskvimT11qPI+V8uo4P
AAAAAIBsmjO89Jwq1jn2lSvj1/M52b38XJr1ecCH7/ZyHh+QiPbsPRK4flfU
f3jXrsPOYwVSkWpO+513ujfolDbHel7edHU961x2KDS3q3Nb89CvPN/JW9fa
pOFkM3DAErNo0Vbv/sT12ITj2LEsby2ubXvVJ8J1jOGqWzvduj1ai5zf9//g
nZ4hHy/KrXU9Hn4mTlxjbr3ulzzj1/mUbL1AkFhsx9mbr3WL+WcPH7Y88PhW
Ppnr8XFNOQ3qRaSaDarXUOarQV6+3TWX1oxJzsLXXwxwvs1IfOV/HG49hmbP
2ug8PgAAAAAAsgWtBXznje7O40sWqgFsG0fN56j2qOsYgUSltWua+wp6LvvV
5zyXBWJB60P9zrmyZYaYGtXGWs/JQ4ePm6yTp7yeUnrmrb4MfXotNBefXdn3
9aqvPXnSWrNs2Q6vrrhqFLve9mhq12amdazuvrWRtz7adYzh0L5VTQi/7VE+
64YN+/L1/jpuwsl30bpm12OSk+rKl/6gT0ixqw8EdYKQX7qG+h1f6lsQy89V
7pjtWiBPPd7Gu49zPT6JbO++I2ba1HVeXody81SH37ZeIFTK93O9XUhsOi9t
PaquvKhG0t2XAAAAAABSl37D3n5jA+tzEPX2dB1jMtBvfT0rtI2j1te4jhHJ
5bfftplf6k3w1hqvXbvHeTzxErQGSPM9q1aR9wNEW/q4jDPq2GseRfPRylv0
Ox9VR8DvvZSLYDuH69UZ73xbY0Vz+zde7T8nIEMGJ99cddB66tde7Jzv96/y
86iQ5+UKnVUxoXpp9O+7OKReRnLZeVXMmNErnceM5Gfr3aNeBLH8XOWu2Y7v
C//nZ3KyI6Tf4RkZu03vngtN2W8Gm3tuaxxWvoJ68rjeBiQ25cjYjh/1M3Ed
HwAAAAAA2VTD1vYbVus+XMeXLPScyTaOF/+zsreO1HWMSB4d28/21q7mnKcZ
NXKF87jiQXN+jz/cyno+UWMBiA3VRnj4/l+99Zrqi61+DPp31QXwOxefeaK9
7/s0bzrVev6OH7/a+XbGiuavbdutfhfJuPY4qMdVfr+TMjNPmCIXhDbfL1pX
7no8RDVFPv24b8hxK5d19erdzuNGalCPAduxtmXLgZh85qyZG0+7J82tQb2J
zscllWzbdtD06rHAfFa6X2BNCyn3wzDn8SKxKSfBdvyMHZNYNYsAAAAAAAVb
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
o+Ytg9af5nT1JTVNt67zmONBwtEcvO24HT1qZdjvp75Ql51XxfqemuN3vc3x
cOxYllf7bMmS7WbypLVevkPnTnNNsyZTTI1qY3PlOrTz5oBVg+ry86vGpMaW
3nfTpv3OxyWnMaNXWuONVY6Zjep9qH5Cqn0XR0Lf0UHHUn77OQEAAAAAEAt6
JmX7Lav+5q7jSwZah+M3fiWKt3KyP7UWP2ccqlGtNUaJWLcV/1G/rr3vud/6
5YJI55Pf+Dz6UEvnseVF9WmVOzRi+HJvvVm1yqO9vtKqja/49Xz10nPscwOp
rF6d8c73D4Jpnsa2/wb0O/P5//tv++fwqS+CzgXX2xMLjxVrad1mV3mL+fVW
qW6+26R5uPzU01aNjUiuFdGcX1HP7i8/6x/S52p71Ssi0foOAdnWrLH3pdP9
RrjvV/qDPtb30xr1AwePOd/mRJd18pTXL2bZsh1myuS1ZtDAJd7af+W2Va44
ypT5apBXp0b3gcp10L3gA3c19epO6Z5Qvy2Vj6vcrn8Vrm5eejbN/PZbYuYu
F7vX3jdk2tR1cYtD99i2ONQbpaDkmm3efMDLbbGNhdZZuI4RAAAAAAA/GRm7
rb9n+/Whr2Fetm07aB2/ShVGxjUWPROz1eyWF5/p6D2jdz1mOJ3Wb111cQ3r
flNtddcxuqbnvrZe5+oh7jq+aNFcrtbyqZ6G5ubUW7blr9O8+QbNrem5tmqR
6zl2qGuCE53W5rkedwQLqpegPgi5X2/rHf3vR1o735ZYUJ6gbS2tzlnX8UVC
30u2a66uQZG+r/q/qE6B7XhSfoffv6sfvWKKxrYphpefSwvp+qT1wTOm0/sB
iU95BH7H8OMPh5c7PWnimsBzgp73yE3HhO14iWdvSd1j2OJQ3r7rcYoHrU1Q
/ottHFQ3JT/5hgAAAAAAxNKqVbusv2kHD1rqPL5EN2zosoQYP63fDKqBma1T
2hznY5aoMjNPmC6d53r9bFXHP171KLRPbPvr2SfbOx+XRLBw4VbrGGmtruv4
XNl/4KiXc6bezFpXpvrtqlNcvcoY893Xg701VMpT0rq9229s4OXFJFKew9uv
d3c+hsjbpx/3tc4tK5co52s3btxv3d/xzuGLl6C6y6od7jq+SATV+K5TK/Je
Ycq/sr3vQ/c0s/ZFer5kh6htm2rb5HVtUg+fqpVGn5EjofW5ynfYu++Il1um
de3KFZ0/f4uZPm29l2c2csQKM7D/b95xkdZhtpfvo++pBvUmemOnOvK6RisP
Tf+3Vo1xpmH9iebXZlO9a/jQIcu8a7rqvlMXC6F6980evsfyeX8uH3I9BOU0
K0fHdl488wT3pDiTcm1tPX50Tdfvq1jHoOuu7bhVjq/6X7oep3gIqtcnbVvP
cB4jAAAAAAA2GRn2fAX16XQdX6JTLXPb+Kn2QrziUF/nUOYHPyvdz/mYJaJd
uzO9Gqy550fiUY/intsaW/fXuLGrnI9NImgc0Bueta/hO3o0y1sTrlwHzbNp
PaVyr7T+TPWKNW/2S70JgXU/InX7DQ28WtN9etGjJlnYrlHFH2hxxmt7BfRR
1zHmeltiQTW9/bY3v30TXFK+k20/Kn8skvfUdSeoBpTm7W3/TTXUo7Fdqqce
ynVKc2y3FK1vihapba68qIbXr+eCv1aI+vUwL8oJ0nlWtswQLwdi955M58cG
ElP7trPy/XtOeTO299Dx71dPB5DyP9p/hyoHPJafrbzJoN9S0fr+SHS6l1eu
nW0cVHehoPTEAAAAAAAkJ81Z2X7Xdus6z3l8ie7j93v7jp3qssYrBq1nPf8v
oT1Hj6SPbUHww3dDfcdLz39j+bnp6RnWfXXfHU2cj0uisPWG15yS1nW5ji9V
vfJ8p3zNtWmeT89HNdeW1nGOlx/hepsQnn37j1p7HXz71aAzXv/V5wN8X6v3
UF6Y6+2JBfUW99tm1QtwHVukbry6ru82aZ1qpO8Z1FfkwbubmTatZlj/u+oN
RGO7fi4/Ml/XNNfO/WM58/orXVP2XELkVq+29/dTP6m8/n7dur1e3xXbe6gW
iOttROIKygVTra9YfnbQd0uRC6qFXF8kmelZgO65beOgnLv16/c5jxMAAAAA
gCCa67P9ttU6G9fxJbonH2vjO3YlS7SNWwyVK44K6Tk3zyrsit3b3HfMbr62
XkzXgAf10CZf6D/0DN02X1rqpS7O40tlqm2u+bFQri+F/17JlCjeyvz0/TDT
v+9ir1a66/iRf8OHLbfu8+7d5p/x+tuu9+9LpLWPrrclFlas2Gkdn2TNDwza
Jr8clVCoh0JQbQX1zyr9YR/f/6Z13bn7MkTKVjM/2cTzHhPJw3b91Txm7t49
ual3lO14u+maet457Hr7kNjuuKmh7/Gj35+xyi3esGGfueTsytZjt2mjyc7H
JdbUb8P2Ozab6qe5jhMAAAAAgFAUvby272/bTz7q6zy2RGd7Nqi6C/H4fK0Z
0doRvxg0x6v1neop+txTHSKu4VwQBK0jnzZ1XUw+Uz2vbfPwV19SM2rzM8mu
dk17jXD1B3cdX6pTT2DVIy9SqJrXy+Gpx9t4a+Uqlhvh9aJXjf9Vq3bR2yFF
lfthmPX8W7t2z2mvVY6K7bVlvxnsfFtiIa3DbOs2K9/HdXyRaN3SvlZV14NI
3rNZ4ynW91QtIdWozt2TKZtf35FIjRm90nmuQbSon1usjoHDmcdN505zTfWq
Y7xcEq7vySHoeq1a8ba/6xnQxyc/5z0KFtXgsB1DsegJoRwIW/01ueGqul4f
ItfjEkv67swrD49ekAAAAACAZKJ1Wn6/b2+/sYHz2BKd5vD8xk5rjOPx+Vq/
aXs+8d5bPZyPT7IYPco+h9E4Rn1PbWtJpU6tdOdjkgiysk55/cP9xkh9vQtC
jVfAJc0l2+YBcr+2X59F9rmK/r8535ZYsF3Hz/tzeW/O13V8kXjj1a6+26Q6
B5Fsk67Typu0HRuDBi7x3tdWy0X9ZKK5fZq7cZlnEC0LFmyJyf7fufOwd/+f
87NeejbN+z52fWwi2JTJa63Hy9dfDPD9G/UFtP2WkTdf6+Z8u5Ac5s/fYj2O
lDcf7c/74tP+gddI1fpyPSaxFvQcQHQPp/oLruMEAAAAACBUmlu3/c6lpncw
zUn4jVvN6mNj/tnbth0M7DUbq7oAqerif/rXE9X6wmh/lvpy2I4dzcNrvsD1
eCQCrceyHd9vv97deXxAKtu9J9NaA8ZvvZ7mlW3nq+bEXG9PLKhOut/2RrMm
QLzZam6ptkok71ej2ljrcfHAXU299aGzZm60vqZL57lR3T6tyXXVF0I5Gef/
pYL3Pa/7N/3fc//kfy8QRPvoxInY1Fcv89WguOyH3KZPW2/ef7unKVminalU
YaTZu++I83Mh2agOhupz+e0/1WLzq9tV6uUu1uNMdfY3bz7gfLuQPFSHy+9Y
0r1ENGvC1K87PvAaqf4mrsci1jq2t9d3yj7n16zZ4zxOAAAAAADCoXWPtt+6
+i3sOr5EpV6wtnFrWH9izD+/csVR1s//9yOto/pZmzbt9+ainnysjfn8k35e
/XfX4x9thc6q6DuWmmuJ9md98+VA674rE2F/8FT0xKOtreM0dswq5/EBqWz4
sOXW80/1w3O//uH7f/V9barWatI8nm18Kvw03Hl8kdiyxb5NqvUd7vsp57Xw
3ytZ33PE8OXe69q1mWl9Tax6Wa1bt9d07TLPVK002nz5WX+vJtVbpbp5uXDq
efPpx3297+rvvx3i9b/R9terM97rh96m1QyvX4J6gqtfgmo0qd6+8i4U74oV
O728ROXp7D9w1KtJrntGWyz6b6pDsXHjfq9ugurvq9+OYsg9/3f5+VXN5Elr
YzImmu++8qIavvtBa5ljddypxkbuvA2tCz5IDaWw/Vh2qPVcyt3DPq/5Th3n
rrcHyaVJw8nW40n9SqLxGW1bzwg8bnWN1O9W12MRS8rnttUkEl1Px43ldxIA
AAAAIPns2p1pXd9Vongr5/ElMtsa+do1x8X0c/Vs21ZfWWtYZs/aGLXPWrx4
m1cHOudnXHpOFbNy5U7n4x9NtnXEdWtHtzeD5ki0vtL2fIm1MP8xceIa63M4
zd9oTa7rGP1ovode30gFQTlxGzbsO+21WrOe+3sim+ZcXW9LLGiO1TY+Q4cs
cx5fJIJyVIYNDX+bPvmor/X9ct5fqla932v0Xaljy/W4uKa5N9U2H9BvcUzr
DsyZvcm6v1R3PBafqfwOW62wFs2nOR/7ZDN3jn0fFru3+X9fp9r9qu9he63y
nrmXQbj0TMGW/33ZeVXy3SepWZMpgbkK+i0XyXdVMhk/frX1fotrJwAAAAAg
Faj+qu0377y5m53Hl6hsPV/VYyOWnxv0TPmdN6JbJ1/v5/c5modwPf7RcuTI
Cet4ai1lND9L9Slsn/XRe72dj0WiUC2PZHoOpzkk7T89p1Ue01UX1zB33tzQ
PP5wK/PK8528/1b2m8HeGt1mjaeYTmlzvHW5WpOrnCCta/ar1Qy4YjsHixap
fcZrtSbcdr5q7bzrbYkF9QqybXOy9vRpUG+idZt0jQrnvVRrwJYHKDl7Vj36
UEvf1zx4dzPnY1KQBNVY13dVtD9v9erd5ppL/fsXpNp9ZjzdfWsj65gq70W1
P4LGXfkj0azdj4Kl9Ad9rMdWh3azInpP9b9RrZugOXqJ9XoB1/S9autfmO1b
6vQBAAAAAJKcauLafvc+80R75/ElqluK1vcds9If9onp5/5Sb0JIcwD5lZV1
yvpc5LFiLZ2Pf7SoT7ttPFV3NFqfoxrRtlomquu5fPkO52ORCFTD1LY/tD7r
QALWiH6+ZIc8n6OGQv2idV1RnsMbr3b1+oPUqZVu0jrM9mqna03k9u2HWPeI
mNK131bH/903e5zx+u7d5luPaeXXud6eWHj5uTTf7fXL50gWtnkmXXfDOn5O
njIP3dPMekyUeqnLaa+35X6mam2ORPXcU/7fY/pe0nxhND9Ltaauv7JO4Pfh
ay92dj4mySiov4pyKW++tl7guLduOd35NiB5BeXUK5cm3PdTD8JHHmyR5/1z
quc3aVxV3zBoDHRfEtR7CAAAAACAZKD15bbnxeLXqxr2ft2vvhDbZ6y2eRLN
KUTzOcXUKeusx8Trr3R1Pv7Rotrmtu3s1nVe1D5HczS2z6G2wn/o+L339ibW
cdKaZtcx5qY1oqHmI0SLajjccFVdr6b6+2/3NJUqjPRya9T3fOnS7fT9Rr6o
5oft2GvedOoZr7f1jtD6+vzWf05UtrnWZJ5jtdU50L+H8z46RmzHj3o85Fy7
rePD9tqG9Sc6H5OCxPY7INr3tEuWbPfyevL6nitZoq3zMUlG+k139SX2+glB
dP1K1H5bSB6238cyZvTKkN5Dx3G9OuMD+5Zk0+/iaOdUJRL1edFv/KAxUJ5z
ZuYJ57ECAAAAABANWsNr+w1c5IJqZ/SrhjEvPtMxKs/2w3XdFf7zJLnXLOZX
lZ/t/curVopNL2MXVq7cad3OgQOWROUzJkxYbf0M1Vyg9u5/qNeDbZz0rC6W
vbsjNW/e5ojmBWLtyotqeM8vteZMz3yVdzZ92nrvWr7/wNGIajToWWjnTnO9
vJFBA5dQ5yFFBdVc0jGU+/VvvtbN97U3XVPP+bbEwqHDx629DqpVTt7vRq29
9tumcGpGqdb8Rf/wr80hFcuNOO316jNhe22fXgudj0lBsXXrQet+0PdHtD5n
9KiVXr2GUL7DUqmOV7x1bD877HuGW6/7xezbf9R57Eh+ut+0HWe6L9i1O9P6
t+qNpppiedVfyfbC0x293AbX2xwroeQqKM87EX8fAQAAAAAQKa3HveLC6tbf
wvff2dSb43IdZyLRmnjbM79Yfab2gW0f1aoR3b6dQevchw9b7nz8o2XZsh3W
7RwyeGm+319rfoL6CX/z5UDnY5AINI8e1Jc1UdfaHj2aZf5V2H7tTFSab9W8
kfpY65qla7z6/2husnqVMV69BvW61lq49PQML3cndw8cPSdW7wDX+wDR9cN3
Q32PGfWt8auXUOze5r6vV+3iPXtT7xm6+rLYzqtkrUelOSLbNoVT1+bZJ9tb
36fo5bXPqP2i/Abb6/v1WeR8XAoK9RKL5X2Q1uw3ajDJu4aE+h2lNdquxyVZ
KZcwlBr62ZSXrtxd13EjNRw/ftK7t7Qdb3fe3NDLfczOedV9xcSJa8yPZYd6
ubahHrfvvNHd++5yvb2xMnPGhjx7QKi/y7ZtB53HCgAAAABAtHVKmxP4m/iJ
R1t76wpdx5kofvp+mO84ac41Vp8ZNE/St3f0nu2rpnzQsbBr12Hn4x8tgfUV
+v+W7/evX3e89f21DpXnTP+Zywia51LvA+UFuI7TRnP6QWuKU5m+N1yPP6Lr
ycfaWOcY/F4fVNtdOS+utyfalLtj2955czc7jy8SQX2RtNY1lPfo0G5W4LXC
7/s0I8PeTycVj51EpXo5tv2g/g35eW/VblBuW7jfLQ/d08z5uCQz9aq6/Pyq
eY6z1m7PnrXRebxILU0bTc7z2Ct0VsWQjtHclG9bs/rYlK7xNWXy2sAcbtFv
I+X8uY4VAAAAAIBY0JzhU4/7z1NkU31Wag7+R5OG9mcxQbUu80N1DWyfOWf2
pqh9ji0XQ669rJbzsY+mtWv3WLc1v/WolfdxwV8rWN8/mnWWk1mrFtMDrzua
S3EdY16Ud6JeCTWqjTVlvhpk3nurh3m+ZAdT/IEW5vYbGng1GM77c/mwn8sm
us8/6ed87BFdtvmDD97p6fv6oP7SqbhGvnnTqfbv/iTN5QvKhRwxPO96SsuX
7zCF/27P2bL1qwr6/u3dk34Q8aIaCrb9oHrkkbyn1lirx1NetcxtHrirqfNx
SXaqmxE056na/IsWbXUeJ1KP6h7ccVPDqN9zqhZkKtX48zNq5ApT+G/2+ypR
v4x16/Y6jxUAAAAAgFjSGrugvhCiuTfqhgavR1MNx1h8puZDbZ+5adP+qHyG
etSrNqztczQH63rso2nzZnv/bPVxj/R91QfCViddVIM/leuYhkrPyrXGyjZO
r77Q2XmM0aS6tzrmfvttm5k8aa13HdH65V/qTfDyhD58t5fXl+Ge2xrneS1O
BFUrjXY+poge5d3Y9nWDev49WYKOj1Rct1v+x+G+26r5BdexRWrSxDXWfag5
z6C/VY8H1d6w/b3qWeua5/e3Gzfut/5dj+7zo7qNuvZqW8aPX52nCRP+T/a/
pY/LMOPGrvLq6Wg+SXkcw4Yu8+b6dR1X3Q3VkBjQb7FXG0K5Oqp7pbwL9Qnp
3m2+d0+hmjSqRdGm1Qzza7OpXu6r6jBpvbCup6L3i+fa4aB8lXD7QagWUsf2
s7258Px8tzx4N/UVokG/194q1e20fEnd4+s6Rv45Ymnx4m2BeWzhUv+H7dsP
Od+uWNL3Q165zdddUcfL9XMdKwAAAAAA8TB1yrrA+UNR7fNQawSnqmXLdljH
R73fY/GZerZt+0zlGUTjM/QMPWjfa07V9dhHk9bD2rZVcwqRvu/P5UcGjqPm
O1xvu2v7Dxw1t13/S+A8V7TycJKV1qhqTk/zvoMHLTWtW043lSuOMh+919ur
23/j1XWd1W245OzK1KJNMZp/te1v/Te/vwm6X9izN/Xmw0p/0Md3W28pWt95
bJHSXLxtHwatr8/KOmVeeb5T4HUiqGfMkSMnrDWI0tMzorZ9yiWIdJ2/Ky89
m+aNbzz2/44dh6xxdOk8N6T30Ly4vptUSyjUbSx2X3Pz8P2/+v431SZyfV6k
kn37j3p5ScpNiddxBSjHK6gGUyiUv6v3cb0tsZR18pQ1FzIn9YAgVwEAAAAA
UNAMHbLMnPunvOfANF9WUGuJ6nmfrV6j1jLF4jMbNZhk3Rd61pHf99fcgWpM
Bu3z9m0jn8NPRFobattW1TKO5D2Dam/I+2/711UvSNR/ptTLXQLHqVvXyOtb
FCQ695XToLXDWsdbu+Y48/H7vc0jD7aIWY0G9RZfuLBgXvtTmXo+2fb5qlW7
fP/Gto5aawBdb08saB7Zb3t1vrmOLVITA+or2Gpk6Bpe+kP/3I1sLz+Xludn
f/vVoDP+7u5bG0VtTlU5VUF9mRJZfmo8hUO1HGz3s+oBpjhyrsXX6zVnptoL
FX4a7s0nhrttyvvRPaetD13JEu2cnxcA8m/WzI0R1VvRfaZq1sSz1owLqmv1
9BPt8hyPm6+tR44wAAAAAKDAUj3bUNbtnvOHcubdN3t49c1dxxxvep7qNyZa
XxaLz2vWZIp1P0SjvkK1yqPz3N+qhex63KNJPRls29q00eSw309rUYPqn159
SU2za3em8+12rW7t9MDj7I1XuzqPMVUcOnzcLF263atfrp4yOq5r1Rjn1QAp
W2aI+fTjvub1V7p6861Fi9Q25/6xnHW/3HVLI6/uCOszU9P5f/Gf19UxoVof
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
x32dxwcAAIDE1qvHgsD81+7d5juPEQAAAAAAAACQeA5nHjdXXlTjjOfKJUu0
NceOZTmPDwAAAImtds1x1lyF997q4Tw+AAAAAAAAAEDimjF9g7n2slr/fa58
/51Nzfr11OwFAABA3oYMXuqbq3D9lXXMvv1HnccHAAAAAAAAAEhsqqUwc8YG
s2DBFnPy1P86jwcAAADJIevkKfPcUx1Oy1Uo/LefvXtL17EBAAAAAAAAAAAA
AIDUdfz4SdOuzUzzwTs9zU/fDzMrV+50HhMAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAACQyI4fP2nmztlkZs3caE6cOOk8HgAAAAAAAAAAAAAAkLoOZx43VX4e
ZS49p4o5+//95Ln+yjpm0sQ1Ztu2g2bP3iPea7KyTjmPFQAAAAAAAAAAAAAA
JL9jx7JM8Qda/DdPIS/n/KGcKXRWRXPJ2ZVNkULVzNWX1DRFi9Q2N11Tz9x+
QwNzz22NzYN3N/Pes0TxVqZkiXbmhac7mlIvdTHvvtnDlP6wj/nmy4Hmp++H
mWqVR5v6dcebX5tNNR3bzza9ey40w4YuMxMmrPbqPKxYsdNs3XrQHDp83Pk4
AQAAAAAAAAAAAACA6OnWdV7IuQounfun8uaKC6ub267/xTzyYAvz4jMdzYfv
9jJlywwxtWqMM61aTDd9ei006ekZZuHCrWb9+n1m774jXj5Gfsbn6NEsM2f2
JtOm1QxTveoYM2jgEnPy1P86328AAAAAAAAAAAAAACSzCj8Nd56LEK98B9WF
KPy3n73aEMp9uOGquua+O5qYJx9rY15+Ls2880Z38/7bPc3rr3Q1JUu09XIj
9He53+uNV7vSGwMAAAAAAAAAAAAAgHxI6zjHeS5BMuqUNsf5vgMAAAAAAAAA
AAAAIFkdOXLC3HNbY+fz/8nms9L9nO87AAAAAAAAAAAAAACS2b79R03FciPM
ZedVcZ4HkCyqVR7tfL8BAAAAAAAAAAAAAJAKsk6eMmvW7DFTJq81QwYvNb16
LPD6HrRtPcM0bzrVNKw/0dSplW6qVxljKlUYacr9MMyULTPEfPPlQPP5J/1M
6Q/6mPff7mnefK2bee3FzubFZzqap59oZ/79SGtT7L7mXh2HW6/7xRS9vLYp
ckE1U+isis7zDiJRpFA1s379Puf7CwAAAAAAAAAAAAAARObkqf81hw4fNzt2
HPJyJRYv3mZmTN9gxoxeaQb0W2zSOs4xzZpMMTWqjfVyIz56r7d56dk088iD
Lcxt1//i5Q6c+8dycclTUH7Fc091MEuXbnc+bgAAAAAAAAAAAAAAwC3lPOze
k2lWrtxppk9bb4YNXWa6d5tvWrecbpo0nGzq1x1vatUYZ6pXHWOqVhrt1Yb4
sexQryaEakE8+2R78+hDLc39dzb1akAUu7e5KVmirXn79e6mwk/DvRoT8+dv
MSdOnHS+rQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAANlO/f4/mzbtN7v3ZDqPBQAAAAAAAAAAAAAApL5JE9eYm66p
Z87+fz95LvhrBXP9/2fvLsPkqrK2j38ZZuaamWtgBg+eBwsOwUKA4BPcAoQE
dwsWJO5O3EPc3d3dvePpuCcdTzqe2S/3mbchcvap6u6q2iX/D78HnqGrah2t
U3uvvda1Nc2jDzYzb7zS0Xz1eV9TucJI06zJVNOrxwIzfvwqs3TpdrNr9yHn
sQMAAAAAAAAAAAAAgMSzefM+c/m/Kvyeq5Bdl/y9rJfr8NSjLcy7xbuZMj8P
NU0bTzH9+y02c2ZvNNu2HfBqN7jeTiC7Dh8+blas2GFGjlhh2rWZZapWHm1K
fNHPFC3SyRR+vKUpkL+hufX6Wua6y6uaK8+vaC47r7y59B/lPPr3qy6saK6/
opr3N/pbXSOvvdTBfPpRb1Ou9HDTvOlUM6D/YrNw4Razf/8R59sLAAAAAAAA
AAAAALHUotm0HOcqZCenIf+tdc2rL7Q3P34/2PvMEcOXezUa9jFPC8eOHz9p
0tK2mi6d53r5Ni8929arL3L+n0pF/do4Vb6ra3jXSJVKo8yQwUu9XB/X+wYA
AAAAAAAAAAAAoqVhvUkxnZP1o7Xot99Y2zz2ULPf159r3rhu7QmmfbvZZtjQ
ZWb+/M1m565M5/sLiS8z85gZNXKFKVtqmHmiUHOvHoLra8Dmjnx1zBef9jE9
uy/g/AcAAAAAAAAAAACQVBYv3mYuOCe268hz44p/VzD33lHfvPB0G/Px+z1N
6Z+Gmnp1Jpj2bWd5PSjGjk03kyau8f6pNerdu8336jnUrD7WVKk4yqu/f/zE
Sef7HbG1d99h06njHC8fRvU+XJ/HOXHBn0ubZ5/61bT5dSa5CwAAAAAAAAAA
AACSguY/L/5bGefzsbHyyvPtvB4Arvc7ok91OVSvI88/47eGQk7oev3kw15m
wYItzvcxAAAAAAAAAAAAAOTGtm0HTP++i0yTRlNM+TLDvbnQl59rZx68t5G5
8arq5sK/lHY+RxtJHdrPdr7PET3Ll+8wRYt0cn6exULRVzuZpUu3O9/nAAAA
AAAAAAAAABANJ3/7P7t2H/LmgSdOWG1691zo5TaULTXMfPhuD/PMk63MHfnq
JEyt/S8+7eN8nyLyjh07YapVGW0u+mvk64Wob8oNV1YzBe9p5PUjefvNrt55
VPLbQaZc6eGmUvmRXs8RqVhuhHdtlPxmoPc37xTr6uX/FHqgibn1+loRr2ei
fCLlGR0+fNz5MQAAAAAAAAAAAAAAF5TXsGPHQTN37iYzcMAS06zJVPPzD0O8
NeD33lE/bvIZNLfsel8hsjZt2mcee6hZrnMS7rr5F1Ps9c6mcoWRplPHOWbS
xDVm/fo9Xi5EpGLNuk5mzdxgenSbb6pWHu1dI/murpGr+O++rZ6ZM3uj82MB
AAAAAAAAAAAAAPHmxMn/mo0b95rJk9aY7t3mmwZ1J5pSPw4xH7/f07zyfDtT
qMD/1p9fdl75qOUqXPHvCmbduj3O9wUiZ8GCLV7tg+yeCzflrWk+eq+nadl8
mpkxfb05mHnU+bZs2bLfDOi/2MvzeeDuhjmqtVD/t+tKORGutwUAAAAAAAAA
AAAAEpFq22/YsNdbg96vT5o3B6v6+lr7/vjDzc3tN9YOO6/h/D+VMlddWNG8
+Exbb27b9bYh95Rb0LHDHPPV5/3MZeeGn9/y5CMtTOMGk82KFTucb0M4VDei
dasZ5vnCbbz6D+Fup66TeMi/iGe79xwyY0avNI3qTzLflRhg3nilo3d+qBbM
zdfWNHkvrWLy/LOcueDPpb08kEv/Uc6751x9USVz/RXVzC3X1TL5b61rHry3
kfnPYy1NkRfbm/ff7m6++aq/1xOkf7/FXo6W6+0EAAAAAAAAAAAAEB3Ka9Ca
9KVLt5uZMzaYaVPXeTkOaWlbzZo1u8yu3YeYM0wy6qWgeeJw5+41x/xTycEm
PX2n89hzQ3VBVI8kT5j5GY8UbGp27sp0Hne8OH78pBk/fpW3Dwvkb+jlMUWr
jkuWl55tG9FeIgAAAAAAAAAAAAAAd77/emDYdTW01l35Da5jjqRt2w542xXO
fHvBexqZvfsOO4/ZpTmzN5ofvhtkrr2satTzE/y0bzvL+T4AAAAAAAAAAAAA
AOSe5uBDzRFfeX5FM2TwUuexRtOUyWvNHfnqhNwXRYt0ch5rrB05ctzLE7j/
rgZOchRO9elHvZ3vDwAAAAAAAAAAAABA7hUq0CRwfvium38xK1bscB5nLOzf
f8SbDw+5xr/dbOexxsLxEydNuzazTL5rajjPU8hSsdwI5/slkWVmHjOrVu30
8nN69VhgGtabZKpUGmUG9F9Mrx8AAAAAAAAAAAAAMfV84TbWueHrLq9qMnZm
Oo8x1lq3mmEu/Etp635RL4RDh445jzOapk9bbx64u6Hz/IRTXfHvCmbNml3O
941rR4+e8PqypKdnmLlzNpnx41eZQQOXmK5d5pkWzaaZWjXGmlI/DvFyb15/
uaN5/OHmXu2Qy/9VIXD/vvxcO3P8+Enn2wcAAAAAAAAAAAAgNbz1Rhfr/OWP
3w92Hp8rkyauCZzfTdYaC1p///3XA835fyqV47wC7TflOrzyfDvzwTvdTYkv
+pmfSg42lcqPNDWrjzXVq44xVSqOMhXKjjClfxpqSn4z0Hz1eV/z8fs9TfHf
zscXn2lrHnuombn7tnrmxquqm2suqez9b/Pnb3a+f3JCOQD79h8xW7fu92ob
pKVtNTOmrzdjx6abwYOWmp7dF3j9Npo2nmJq1xxnypcZbr4rMcB8+G4P89pL
HcxTj7Yw991Z3+S7uobJ889yUc0J6dA+Oc9rAAAAAAAAAAAAAPHn3eLdrHOX
XTrPdR6fS506zrHuG/XRcB1fpC1cuMXkv7Vutue4lVPw5Wd9vXl31T84+V/3
25ITBw4eNZs27TPLlm03s2Zu8PIJBg5YYrp3m2/a/DrTNG4w2cu3UJ5FyW8H
mS8+7WPef7u7KfpqJ/PC023Mk4+0MA/e28jkv6Wu10Pjmosrm4v/VsZ5XYrs
0Da5Pg4AAAAAAAAAAAAAUsM7xbpa5y4nTljtPD7XtLbdtn8WL97mPL5IUS+B
S/8R/tr9/8tTxau/oToB8ZyfcPjwcS//YPSolV5NjGpVRnv1HooW6eTlFyg/
Q9sS1P8jlVSuMNL5MQMAAAAAAAAAAACQGoq93tk6d5menuE8PtcG9F9s3T9a
Y+86vtxSroHqBYQ7n13wnkZeHYWjR084j91m955D5ofvBnl1Di44J+d9LVLN
Ff+uYNat2+P8+AEAAAAAAAAAAABIDc8/3cY6f7ln72Hn8bl2/MRJc+dNv/ju
n0cKNnUeX24cO3bCfPhuj7Dmsm+5rpbp3XNhXNdSkEOHjnk5Fa7n/hPJ5f+q
YF58pq1ZsGCL8+MHAAAAAAAAAAAAIHXcdXNd6zzm3n3kK4jqKPjtnxeebuM8
tpw6cuS4ef3ljiHnsi/4c2lTvsxwk5l5zHnM4ejUcY7z+X/Xzv9TKXPl+RXN
bTfUNoUKNDEvP9fOfPReT1PqxyGmXp0JpnOnuWbM6JVmyZJt5CQBAAAAAAAA
AAAAcELr6y/8S2nrvOeOHQedx+ia5nUvO6+87/5RzwHX8eWEejm88UroXAXN
d8+Yvt55vNlRtfJo5/kCuaXz7YYrq3n9LFTDQ7UP3inW1ZT4op+XO1K39gTT
5teZXr2LkSNWmGlT15lFi7Z6vRzUC+PEyf86Pw4AAAAAAAAAAAAAEGTjxr2B
86b6765jdEV9BZSPoLXqtv3Ttcs853Fml+ay3y3eLeSc+SvPtzO7dh9yHm92
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
owaTvDr1mpfQ++zYcdCrhX/sGHkH0WDrFSuTJ1Fb4VSqq+B6rD8WtBbL9b5G
7BS8p5HveaD6IK5jS2XKu9N616BrNZVqLCiPQ3Odoe5fqhWSqr2dkHo0/+j6
mSESlNN8/10NzNtvdvX6Eun+l5a2NeVysqJFv6cu/Yf9+0S/61zHKE8+0sI3
PtX+ch1bMtHvuw/f7RFYb+1MOn90baoun+v4AQAAAAAAsmjcyG8s48oLKnrr
N0K9/tsSA6zjIfRpiJ1pU9dZj8MjBZs6jy/elCs93PmYfiyoTonrfY3Yuf3G
2r7nQSTzFTS+3bHDHO/cUt6PapW43u5EMGP6ei8HMOh6HTsm3Xmc0aRzRz11
wrl3/eexlmbnrkznMQOxNHZsulcnR31S1B9KdaDUH0q9oVTnTDk8+a6p4eX7
aK2062eM7FD9CNVLUR5Dzepjvb45a9fudr7PE81Xn/e17mPVwdu//4jzGEXn
rF+MqtnnOrZkpNw+9Ze75O9lw74mb7muVtI/dwAAAAAAgMTxwN3+a/LDrddp
q0WpMVXX25ZKtI7eNh7VPQ7qwsabpo2nOB+7jzbNZ1DzNbVcf0U133Ph+68j
s3Zf55Pu7ae+t+bSjh+n/nc4Fi7cEpizoLmDAwePOo8zGlauzPDWXIdz71K9
atZiA8FO/vZ/VLNM92XdW8aPX2X69k7z6p6pX4B6qxV/o4u3zv22G2pnax4z
lnRPfPap1qb0T0O959WlS7fTU8JixYodgX1D4mnu+dmnfvWNkf500aUcoDdf
y16/O+VIUfsQAAAAAAC4Zps7Ud2EUK9VTVLb2Md3YbwekXHo0DFz+b8q+B6H
vJdWYd7Hh3qZ3HhVdefj9NGQ59zy3vo1zV+43s/JQPNBqjUzauQK07nTXNOk
0RSvbrdq6VavOsY0qDvRtGszywwbuswsW7bd65XjKlZbjf2ypYbl+r3Vl/ym
vDV9379D+9nOj1OiGD1qZeC66J9/GOI8xkgbOWKFuerC0P0fLjinlKn/2/Xk
Ol4gWWXszPR6Mwwftty0+XWmqVhuhFdLXvVMVLchXmo2qH/O4w8393Lt+vdb
TP7C/2eriSeqW+E6vlM9V7i1b5zKTXEdWypQ36UbrvTPYfXzzJOtzJ69h53H
HU/0+7pTxz/qiXEfim8jhi/38mL1PXbvHfXNkMFLnccEAAAAAAifaobaxi1+
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
kz63+BtdTLHXO5t3i3czn3zYy6sPrXWzWpenGt2NG0w2rVpM93IaNZfav+8i
by5q7Jh0M2XyWjNn9kazaNFWrw6v6HtLNcCV56jeOfqu0hyCnjG0LvHeO+qH
nMcKx/l/KuX119A9wvVxDaLnp44d5nh5IlpLnwj9oRF/MnZmeteVamErn+Hr
L/uZ5wu3MbdeX8v6HemK7i2u91c8mj9/s3Wfdek813l82VWrxljLvfl/c4dB
54jmqPX94XobUp2+u23HaOiQZTGJ4Yp/RycfSz0tlMfw3lvdTI1qY7x7p7b3
8OHjuY7ZVstS4qHum57V9IwUtH/UA8J1nDnx2ksdfLfn9htrO48NAAAAAHC6
iuVGWH+Xaq1B0Gv1m97vdQ/e28j5dqWqo0dPWOtlfPlZX+fxJSv1Q7VdR+rR
4Tq+VNK1yzzrsVCfCNfxxdKnH/n3vT6VaupOpB5OXNq//4j1uFWtPNp5fLGk
NXCbNu3zcizr1p5gir7ayashnpM5CdVXj8T8QzQolyL/rXVPi1c5G9Fa94nU
dOTIcbNyZYYZPWqllx+kmuTvFOsWlTnAUDT3uG7dHuf7JB717rnQut+Ui+I6
vuxq0mhKjs6R66+oZtLStjqPH8akp2dYj9OggUtiEsMzT7aK6T1K+V2qlafn
Dt0ru3eb7+WDZSfmmTM2WN9fvdjUp8LVMVVdDNvYQZZvSwxwfu7l1C3X1fLd
Jh1P17EBAAAAAE736IPNrGNDQa/T+j/VUUi237TJQH3N/Y6L5kBcx5as+vSy
jylPnbLWeXypROui/I6D1g1t23bAeXyxovqyV11YKXD88bLzyrNeMY7p3mE7
dprHch2fa6o7MHfuJi9/QX0zQq0NPJXu2a7j96N1ln7xduo4x3lsSG6aa7Rd
L1UqjvLq8KvumuqBFy3Sydx/V4Nc9Z1QnsKLz7Q1CxbQp8VG9zbb/tu777Dz
+LIrqI+gjeqBqPeJ69jxP0uXbrceq1jVV1AeeE7vO5Fy5fkVs93/QrWpbO9X
s/pYJ8dT+Sehcj8//6RPwvZN0O++oO811/EBAAAAAP6wZ+9ha03YD9/tEfja
6dPWW3//Ma7uVslv7T3r169nDVs0qHa5bZ/v3nPIeXyp5NrLqvoeh0cKNnUe
W6xojfbdt9ULHH/UPNO0qeucxwq7RvUnWY+f5gxcxxdv9P2muvLh1IpuWG+S
83j9FLynkW+8n33c23lsSG5B9dY2btxrfZ3mzVWPbeL/7+fSres8077tLC+3
oUWzaV5vmM6d5nq9TZQfl56+k55xYfrhO//nefVGcB1bTqi+fnbmhO+5vZ5X
V8d13PjDjOn23/8TYlSra9/+I966iljmJ/jJe2kVc+jQsbDjVu8rW17lHfnq
xPxY7tp9yNx18y+B2/j2m13N8ROJW9+pXx/7PUe9ylzHBwAAAAD4w5DBS62/
4bQGJui1GoO0vVa9Hl1vWyoLWiPXrAm9CaJB+T1++ztUnRJEltbg2c599YJ3
HV8sKD/GNud5KuWcuY4VwWw9d5VrotoCruOLVzt3ZXrr5lQ/xHb+x2sPFOVV
+cX7yvPtov7ZBw4e9ealE3UdJXJH55jfuXfztTWdx5aqbM+Wykd0HVtOqJ9P
uHPBhQo0yXbNfUSf8o5sxyyWtVLUz0b1R9TrUNfJO8W6mjdf6+zdx1RvSX2f
9BvMVgsyUrJbQ0+1aWzvpZ4Rsdp/x46dMM8+1Tpw2/Tf1TvI9TmXGyW/8a9Z
JapD5zo+AAAAAMAfbOt2ZM2aXYGv/erzvr6vu/Qf5eiz7JjWutn6UD72UDPn
8SUj21r2wo+3dB5bKgnq9Tx2TLrz+KJNa1afKNQ8rDHWzMzw14Qh9g4fPm7y
nOs/3/7Ss22dx5cIVGfkx+8Hm4v/dvr34Scf9nIem83rL3e0zt1F6zM1b/Fd
iQG/PzfcdkPtuM3nQPSo7r7fuVfs9c7OY0tVRV5s73tM9D3vOracmDVrQ1jP
J08/0cpbQ+86XpytQd2J1uOm71zX8Z1JuZ3btx8w8+dv9nraKG9ffZeeK9w6
IjUa0tKyt0ZDPTNs7/VTycEx2y/6zg/aLvX7ScSeM2dS3orf9t150y/OYwMA
AAAAnE51Nv1+w2msOtRrbWsAozmmjvDZ1smJ6va6ji/Z3HCl/5jXR+/1dB7b
qTRHrdopqjWgNVLJtka7coWRvsdB9VfV/8Z1fNF09OgJbx473DHWoPrecG/Y
UPuYdr06E5zHl0jWrdtjatUY680F6L7nOp4gyqXwO+bRrBXtd99UbQrWHqYO
fX/Y6pSrx4rr+FKV5u39jkks6q1Ems6xV1/wz784lf4mOzX2EVsfv9/T97gl
ao8S1WOaPGmN179GeQyqKRBuHoPqOGS3HpHyA6+5pLLv+92UNza1bNq1mRW4
XdddXtV7bnJ9bHJr27YD1m38+st+zuMDAAAAAPxB49C233Alvgj+Daff5rZ1
n1982sf5tsGYTh3nWI+v1pu6ji/Z2OorqB+069iyaEzugbsbnhbfW0W7JFU9
FK0DzWkOViLTPdlWN9pm7pxNzuOG3QfvdLceO/VAdh0fouNby5rHG6+qHpXP
U87a/+Wp4vuZTRtPcb4/EBurV++y3m9C9YdD9Dz6YDPfY6K6965jyw7lH4ST
q/Bu8W7efK7reGGn52m/Y5ds9eTUW23G9PXe/a/Mz0O9WieqQaO8rgvOKeXV
QtLvqpy8t8ZZbNfAvHmbo7pds2ZusNZgFNXJjGVfimjq2mWedTv79k5zHh8A
AAAA4A9dOs/N8W+49ev3WF/bpBHj2/FAdVRtOSVaN7lr9yHnMSYT1Ss4cz9r
TGvO7I3OY8uidUN+54NyW1zHFimFHmjiu40aZ3QdWzRpLDU7uQqiuriu44Y/
jYFf8veyvsctXmvYqs+46j5881V/07b1TLNhA/U7ckL7z++457umRlQ+T+ea
7R5B/mnqGDdulfU8GDs2+XspxauH72/se0zefrOr89jCdeDgUW/Neqhnkntv
r2eOn4h8/qz6ZGnOuWrl0aZHt/lm69b93v+uXC3VHNu0aZ9ZsWKHWb58h1m5
MsPLB9R6+3590kybX2eaRvUnmRrVxpiypYZ5fRT1T73f2rW7ne/bWNP+sR2/
8mWGO48vFtSrK7f1P0aPWmndj7Vrjota7HpOUw2HoOtQffVc7+NIeb5wG99t
VL5JTnNNAAAAAADRoTr1fr/hNMeq37NBr9XYpe137qiRK5xvG/7Htk5TypVO
jXGlWDly5Lh5761up61P0Tin67hOpXlOv3Phy8/6Oo8tUm6+1n8c7qvPk2cb
z6Q10NnNVZCWzac5jx3+6gf0h9aci+v4zqTchHxX1zgr1ryXVvHqmWstYeMG
k70cmUWLttKXPIByBPyOu9Z1RuPzNFdnO9c0x+h6fyA2guqDp6fvdB5fqrL1
3nvjlY7OYwuH7vWqmR/OM8kbr0Z+m3bsOGjy31L37PnKP5fO0XPTme/RuOFk
5/s4lurWnmDdHyNHROf3v/Jd1LNItUaeebKV9zyv3g2qE5CofUPUG+WKf1fw
3Y//eSw6dSqUnxOqZ1yViqOc75tI0flh285o7WMAAAAAQPj021i/Q++6+RfP
5f/y/52stTyh3qt1qxnW34CqKet6W/E/Wi9k60estbvJ0Jsy3uj8nzJ5rVdH
1HUsp9L6Mtu5oLViruOLFFtP2FI/DnEeWzT077fYelyzXPhX/3F5+sLEJ31X
ay297/zIOaXick3n55/4z7EHufqiSl5/mtde6uDl1mkeRGtfp05ZazZu3OuN
rbveLhc+/ai37/6KVl2NtLSt1mOkZ0XX+wOxobXRtjlZ6vO7Y1sfnAi19/Uc
bOtn4ee+O+tHPAZbXbFIUq6P630dK/fc7t/7TmMKytuO9OfpOUA5j9bn27+U
Ng/e28jLu1YOg/oYqGaG6/0UDvV0sT3nbdmyP+KfpxohQeexcqCS5blL2/HY
Q/Z7j8axXMcIAAAAAKnOVk/hTBXKjgj5Xlqbbxs3OH488rU8kXOaC7Ida/WJ
dR0fYmP2rI3W80D9PV3HFymaA/XbxmTKycgyfdp6r45H0P1c6/Q1B+D33155
vp3zbcDZ2rebbT2e6pfsOj4/BfI3jPgckPor35GvjnmucGvz2ce9vboSmhca
Pmy5WbBgi8nIOGhO/tf9tkfaJx/08t0fWiMcjc8bOmSZ9Riop5Tr/YHYeKto
F99zQL3qXceWyj54p7vvcdG90XVsQVRr3dbLwkbPM5GeLy14T6OIfzedSXP1
+j5yvc+jbcKE1dZ98E6x6PQnGTvGXs/RRvP9d99Wz4upetUxpk+vhd4zg/K2
Xe/DU6lvlm0bVI8qkp81ZvRKb7/YPk/PF8lU96phvUnWbb3qwopJta0AAAAA
kIi0VjHc3/kajwj1fqfWvT/V7Tcyrhlv5sy2z1NLtOp3Ir507DDHeg7Mn7/Z
eXyRcv0V1Xy3UT2HXccWSaqdYqslceY229ZwqX6/6+3A6bQ+8ZbraiXc/Vrr
8qI9J+Tn4r+V8eZTVdtXzyVlfh5qBvRfnNBrBG25pZp/icbn/VJ7fOA+3s+4
fkp46D7/ueUXnm7jPLZUVrHcCN/jovzweK17obl71c7JyT090nXfXn6uXUy+
i+bO2eR8v0ebLadJ+vZOi8pnBvWpyS7VIrspb03z4jNtvfpi7dvO8n4ju+op
sW3bAWtfEuWARupzdE0F/V7I889yXp8u1+dXpOg3rZ4NbdtbqfxI5zECAAAA
QKoLWlt9qsvOK+/Vog71frbajPrfXW8rzvb2m12tx1zzu9GoO4n4orE5v+Ov
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
C97TyBsbdB1juIL6W2QJpw6teuTaau5rTkprJF1vayoq9aP/PGGyjisjNPXp
tp0PeoaLxGfomS/ceRjVone9TxBdttr8ykN2GZe+q9VrYOHCLd4c8sABS7zv
O30vqpeV5gg1Z1ry20Fenq1q83/2cW9TpeIoL0fvYOZR5/s2Umz5Rco7VV2a
WMezfv2ewNxQ0e/NsWP813ErD8a2/j3vpVW8mv8u9rPOMT0TBW2X6v1oLt/1
ORFN2v+PFGxq3QeaE0/k+vrK2Zs7d5NXj0Hfh7oH3n9Xg8D8DJtI1HNSHoXf
e2t9waZN4T2fq6dnqDxE3R9d7/tI0joZ9bWzba/GqdTTxHWcAAAAAAA71QDM
+j2rWpfMh6SmKpVGhRyDKfpq4tbPx/+sWLHDenzVY8B1fNGgPJugtXFNG09x
HmM4mje11+jO8kvt8WG/3/dfD7S+z4/fD3a+vammR7f5gcdWOWOMs6Ye1Y+w
nRM6Z3L7/qrLnp3eGpqTdL1PED2quaU5b79j/9KzbWMSw4GDR71e9Mo7ePO1
zl6dfc0J2+IKl3L01HcgGWpE6Lvetp1vvBLbnkGrV+8yt1xXK3DfqzZQqL4O
35UYYH29aujEeh93aD/bq5UftF2ap1++fIfz8yHafvhuUOB+UF6d6xijZfee
Q14OkHJtVJehYb1JXn8q1ap79YX23v3p1utrefWc9P9Hop6Tzj3bvlZuVqjX
q/ZSUH6JFH68pbM8oGj5NuAecvm/KsRNvxIAAAAAQGj79x9hLiTFab46aGxD
cxoat3EdJ3JOc/O24+u673E01axur7Gg9VPxvDZOcysaGw01F6O5ney877Jl
263zlFpPSN+B2Jk+bX3gGk6t12OcNTWpfrXtvFBf7ty8t+piaww/O3O+mjOm
11fyKlSgifXYq3ZatD9/27YDgetjI+Hd4t0SvsdZRsZB3/p4v8/v91sckzhU
b165JEH7O8+55c348cG5CjJ1ylrrezz+cPbq4OdWOHXnbryqekrkKqjmQNB+
iHV+TCrQ9W3rUaHeI0H3L9VVUA5F0DFT3xb9nevtjKR+fdICt7lR/UnOYwQA
AAAAANlj61ucRWMormNEzqkWpt9xvfhvZZKqVvKZNL9287X+fTDk0QebmWPH
4nOdkdZShRo3f//t7jnKN7PVnJVY1lPR8enYYY5X52VA/8UplTun+Q7VNgo6
voMHLXUeJ9yx1XTWnENO14qPGb3SXHm+f0+YUGbN3OB8nyA6rrnYfi+KRf01
5UTk5JzMrp7dE389uPKVbNunHLd16/ZEPQY9JwTtZ+WDTpq4Jqz30r0sKFdF
fQdjsV+rVx0T8vzRevp4znONlAkTVpuL/lrGuh/+L08VL8fIdZzJ6LWXOlj3
e3dLbSXV0AuV76XnzfT0DOfbF0mqfxGUe6leRslWSwIAAAAAgFRRu+Y433XX
TxSK7fomRNbOXZnW9TovPhObOs8uaR48aAyvQtkRzmP0E5RnIUVebJ/jXIu0
tK3WGgtaRx2LHBblQN19W73TPvvl59p5vcpd7/to09rUfFfXCDy+qq3hOk64
9c1X/SM2h6frSt/xoeqcP1+4jfW/tWox3fk+QXQ8+9Sv1uOu3iTR/vwC+Rvm
KP8gu5Khv9n27Qe8fADbNj72UPTzMINynjR/OGXy2my9X4tm06zvp+eEaM85
Vio/MuS5c9+d9c2mTfucH/9oW7x4m9dDJWhfJHNdNteGDllm3e/6XbBv/5HT
/l49OYJ634lqsqiel+tti6StW/d7+UO2bdZvGdVucR0nAAAAAADIuSGDl562
5lfrO9Wj1nVcyLkunedax3M0Ruw6vlgIWguoefuZM+Jv3XDQmiHN6x8+fDxX
7//Rez2t+yMW+QrqY+H3+erf63rfR9PGjXsDx1jlhafbJHzdcuSechJs50i+
a2p451I476P+2w/d1zjkfJzmOdUjTHV3/P77Jx/0cr5PEB3qI+B3zG/KWzMm
9yLlTuYmDyFct1xXy/m+joSG9SYFbqdqpkXz81Xjxe9zNW+ak3lRPXPkvbSK
dXtUbypa26L6TqHOG+Vt79qd/H3x1A8sVC6lcjtcx5nMdL+9/cba1v2v3LIt
W/absWPTA/MLsyhfXTkQrrcrkvbuO2wevLdR4HZXqTjKeZwAAAAAACD3Dhw8
6s1vaF1CKqx1TnYfvNPdOi+9YUN4812JTnVrVb/WNq71bYkBzmM805uvdfaN
tWiRTubIkdzlKojWJql29Jnvr1q0sdg+23raLz7t43zfR8v69XvMHfnqBI6x
ai3pnr2HnccK97RGOmjeQmstBw5Y4ttHZfeeQ6Zrl3le//dw5nFVS1r3BL1W
eQt+f6Payq73CaLnzByyPOeWN+PGrYrJZ48etdJa8yec+Tjl9113eVWvx3tQ
bwv9d9f7ORJ0zT/zZKvA/dK29cyofb5qrZz5ecp1njN7Y47fs3GDydZtUW2D
aGxHqLwPeenZtkndNy2LakeEej5RXS9yKaOvU8c5OboX+t0b+/ZOc749kaRr
8T+PtQzcbt0bOU8BAAAAAADiz/VXVPMdzyn0QBPnscXSsKHLrGNb8bhuWLkk
p65h1FxOmZ+HRnQMbuKE1eaGK/84P556tIVXazoW22fLH/kuDnNHIkE9IELV
VdCx0PpG17EifoQzb3HjVdXNG690NB+/39P757131PdqIYc7p6GciFNrNfz4
/WDr36q/kOt9guhRLfgmjaaYls2nmc2bY1v7XmuAH32wmffdoHNYNReUv1a1
8mjTutUMLzdn8qQ1ZtGird73o3JyzuwTsHDhlsB1+smUD6f55aBt1T2gccPJ
5uR/o/P5qs+l/I88/yzn1XxauTIjV++nPEzbfLn+90jHr3ncUDkybxXtctY5
pjyypUu3ezVJevdcGLNnpmjS9aSctaB9oRzTM3sRIDr0nB+qfkAoui71u8f1
tkSS1lM8+1TrwO1WTSDlqLuOFQAAAAAAAKdbsWKHdUwnFWu6/vCdfw8C9X91
HZufQ4eOmf59F3lzNZpHisZnaCx+9qyN3vh7rLZLa0Nt86nVq45xvt8jTftW
9fuDxli1JjgtbavzWBFfVOOoUIEmuZq3CPJIwaa/11XIovuh7e8HD1rqfJ8A
fjR3HNRHSWZMT64e7uoZE2rOXbWacts/KlZUZ8NvGyLd30LPU5rPDdpvxd/o
YhYs2OI9g9WqMda8/3Z3b87+or+e3i9HdUhGjVzhfN/lVHp6htcnJWhfqEdE
uP2HEBnz528OeY7aKPc1N7VO4lFGxkHveSVou3X/1zXrOlYAAAAAAACcrV2b
WdZxnTGjVzqPL9Y0N1/01U6n7Qf1gojW+kP407ij7bzUul7X8UWSenkH1ScX
9fxOtrFlRI7WLV91YcWI5yp8/kkfLyfqzM9bt26P9TXqGeB6fwCnUi/3d4p1
DXm+629cxxoNFcqOCLntpX6M7Hx/NDWoO9GrY58V+wtPt/HWVUfyM2w9b3JK
86S7dh9yvu+yS/k7Qb3SRH3DopUvi2D9+qRlq1ZS1vVyZg5iolNOTaheJcoj
SsXftQAAAAAAAInig3e6+47raCw40uO/iUT1BLSGeMkSxmBdUD1v25ijxmdd
xxcpWosean3cZeeVN1OnrHUeK+LbzBkbQua9hEv1krUuO+jzVOfd9lryuxAP
1D+gUf1JXr5XqHNevZXUP8J1zNGg2vFn5mGeSX3BXMeZHVrLP2TwUjN3zqaI
v/fYsekRzVXIkmi19/UMfOk/Qj+f6LvHdaypTM/EOg6hzj89H/zacnrSfT9P
mLA65LOPcjr69FroPFYAAAAAAAD4U839ay+r6ju28/jDzZ3Hh9Q1Yvhy67jj
tKnrnMcXCU0bTwm5Lk7zbKq/4DpWJIZVq3aGrIccaj6jYb1JvjUVzqS6M7b3
Ub5XJLYnM/OY6dhhjqlSaZQZ0H+x953leh8j/qlOUvu2s0LWsM+i2uhan+s6
7mhSv4ciL7a37gOtoXcdY7zo329xVPIVJk5Y7XzbwqEeQ2V+Hhpye9TnYvKk
Nc7jhTGrV+/y+pP49X7RfVD9ShKxvkcobX6deVqtFT/aJ506znEeKwAAAAAA
AOy0Zts2vlOp/Ejn8SF1NWsy1XpubtiQ2D2SNZf21ed9Q84FqMZypOZ9kTo0
19S61Qxz+43+9Q/81h0+Uai5lxeg/IBwP0d1lW3vGYna8ppbKXhPo9Pet9jr
nb3tc72PEZ927so09epMMDdeVT3sOeRbr69l0tN3Oo89Fo4dO2G+s+QZKf/I
dXzxQrUbIp2rcN+d9RPi3qWctycfaRFye5RLSd2n+KPnY+XbKF+rR7f5ZsGC
LUlXT0F0LdnuZac93/y5tOnSea7zeAEAAAAAABCsxBf9rGM8kyayZgruvPdW
N9/zUrWJE3mNteZBwumLrfk29cRwHS8Sl+YoVKe7ds1x5s3XOpuH729sCuRv
6J1/qg3/8w9DTM/uC0xGxsEcvb/ybpRT43f+5rumRq6v05LfDvJ97w7tZzvf
t4gv6gmgHLBQvXXO9OxTrXN8/ieyzp3mnlY//pXn25n9+484jyuePPpg6O/p
cGht93OFW5utW/c736YsikVz2f37Lvr9uKt3Sv26E8O6hlSXbd68zc63A6lJ
uYy6pkKdp6r/kWg9WAAAAAAAAFJR0FyTxiITYR0YkpPmWW19Sv7zWEvn8eWU
elyo5naoMdb8t9Q1a9fudh4vEMqXn9nrhCxevC1X7/3QfY1931c1FlxvN9zL
2JlpWjSbZh68t1HIe6pf3luj+pMSOvctt/buO+zlpS5fvsN5LPFo5IgV5uK/
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
AAAAAAAAAAAAEtPJ3/7PZeeVDytP4fw/lTKfftTb7Nhx0HncAAAAAAAAAAAA
AAAgcR0/fjKsPhCPPdTMzJyxwXm8AAAAAAAAAAAAAAAgORR5sb01T6FA/oam
f99FXh0G13ECAAAAAAAAAAAAAIDksWHDXnPP7fV+z1FQvYU3X+tsRo9aSZ4C
AAAAAAAAAAAAAACImmPHTpixY9JNvz5pZsuW/c7jAQAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAID/x959hllR
Zf0C/3BnnLkz80wSEyqKoyKgomJOGBkUAxgxZ4yIiomcQ5NzhiYjOWcampxz
amhyhibn5Luv/z2XeZumVp1UdVadc/4ffu997khX7doVTtXea69FRERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERBQER46cMuvW5Zjp0zaaoYOXm25d5pmWzaabenUmmao/
jzXffzvSfFthuFWp4ghT+ccxpk7NiaZV8+kmvfsCM2zICjNlynqzevUec/DQ
SfXjISIiIiIiIiIiIiIiIiIiomDYvv2wyZicbTq0m20qfTPSvFqmh7nvzubm
2n/WMP/8Pz956vrLa5kSD7Yxn348yLRuOcNkZGSbvXuPqfcBERERERERERER
ERERERER+Qc5DsaNzTK1a0wwz5fqagpeWdvzmIRo3Fmkifni08Fm8MBlZv+B
E+r9RERERERERERERERERERERNH79bf/s3DBNlO39iTz+MPtTL7f/6wemxDK
ZX+obMqU7mb69F5kjh0/rd6HREREREREREREREREREREFJ7587aaHyuNMoWv
b6AefxCLa/5Rw1SqOMKsXbtXvU+JiIiIiIiIiIiIiIiIiIjoYnv2HDUtm003
d9/eTD3OwGuX/u5n83a5PiY7O0e9n4mIiIiIiIiIiIiIiIiIiMiYZct2mg/e
6W8u/2OVuMUPYF/XXVbT3HRNXZvDAW6+tp65/vJa5oo/+deOK/9c1TRqkGHO
nv1Vvd+JiIiIiIiIiIiIiIiIiIhSUU7OMfPJBwNs7gEv4wHuu7O5ea1sT1uH
oXnTaaZ/vyVmypT1ZtWq3Wb37qPm5MmzIdt24sQZs2vXEZOVtddMy9xg+vZZ
bOMMvvxsiPn3Ex1NwStqx9TOko93MNu3H1Y/B0RERERERERERERERERERKlk
/rytplCBejHN+Rcu2MDWWGjWONOMG5tlNm7cb879+j9xO4atWw+Z4cNWmp++
H23uv6tFxO2/5br6ZsmSHerngoiIiIiIiIiIiIiIiIiIKBUsX77LXPvPGhHP
76NWw/tv9zM9eyw0mzYdUD+OvBC/0K7NLPPYQ23DPqYCl9Y08+ZuVW87ERER
ERERERERERERERFRMjt46KQpdkta2PP5Ba+sbSp+NczWczh79lf19odr5crd
tt1X/aVayGO87rKaZunSneptJiIiIiIiIiIiIiIiIiIiSlao3xBq/j7fJZXN
Ky+mm2FDVphTp86qtzkWO3ceMeU/GhhWbYtdu46ot5eIiIiIiIiIiIiIiIiI
iCjZ9Oq50HXOHjUiGtbPMHv2HFVvq9cmjF9rbriqjuvxv1qmh3o7iYiIiIiI
iIiIiIiIiIiIksnmzQdNgUtrinP1xW9tatav36feTj9lZ+8zt93cyDVmYeSI
VertJCIiIiIiIiIiIiIiIiIiSgZHj502JR5oI87RX/OPGnYuX7ud8bBly0Fz
e6E0sS8ef7idehuJiIiIiIiIiIiIiIiIiIgS3ZEjp8xTJdq75hTokb5AvZ3x
tHXrIVOoQD2xPxDToN1GIiIiIiIiIiIiIiIiIiKiRPXrb//ntbI9XWMVXn4h
Xb2dGnr1XCj2ybChK9XbR0REREREREREREREREREFGTHj58xPXssNHVqTTTD
h6005379n//+t+5d57vGKhS8srbZseOw+jFoQI2MfJdUduyX5k2nqbePiIiI
iIiIiIiIiIiIiIgoqHL2HTcP39vqgrn2N1/rbc6e/dUcPnLK/Ct/HTFW4bI/
VDaTJ61TPwZNdxVt4tg3NaqOV28bERERERERERERERERERFRUFX6ZqTjfHuP
9AWmUYMMMVbh8j9WMYMHLlNvv7b772rh2D8/fDdKvW2RWr9+n+naeZ6pXWOC
rWeRO88GERERERERERERERERERGRlx65r7XjfPt7b/Uzt97USIxXSO++QL3t
2pCbQqoHUa/OJPX2hYL8GcOGrDBffznUFLsl7aJjePmFdHP23K/q7SQiIiIi
IiIiIiIiIiIiouTzXKkujvPtbrEKLz7bTb3dQYA8BFIf9e+3RL19Tk6cOGMG
9F9qXi3Tw+bIkNp/Xu9ei9TbTEREREREREREREREREREyefnH0Y7zlNf+vuf
xTnsSRPXqbdb2+hRq8XcCogDOHDwhHobczt0+KSpX3eyKXhF7ZAxCrlV+GKo
etuJiIiIiIiIiIiIiIiIiCj5dOsyL6L564JX1k75GgEjR6wyV/xJzk3w6ceD
1Nt43unT50zb1jMjjlNIpLoWRERERERERERERERERESUeIYPWxnR/HW5l3up
t1nLr7/9n7SGU0w+l9wTiGPIzt6n3laYMmW9KX5r06jiFOD6y2uZbdsOqR8H
EREREREREREREREREREln149F0Y0h/31l6lZH2DLloPm+VJdQ/YP4hm023rq
1FnzY6VRUccpXPaHyqbsc93NihW71I+FiIiIiIiIiIiIiIiIiIiSE/L9RzKX
XfnHMeptjqczZ86ZVs2nm2v+USNk37zwTFdz9qxurYzt2w+bxx9uF3GMwj3F
mpkfvhtlRo9abQ4fOaXe70RERERERERERERERERElNw+/XiQ4/y1VPPgp+9H
q7c5HlD7Ycig5eauok3Cmu9/6J5W5uChk6ptXr16jylyQ8OwYxQevLulad1i
htm4cb96fxMRERERERERERERERERUWp5+YV0x7nsK/5vFcf//dsKw9Xb7Cfk
U+jXd7G5/64WYc/7l3qyo9l/4IRqu+fM3mKuv7xWWO0tXbKLmTVzk3pfExER
ERERERERERERERFR6nrsobaOc9r5/1rd8X//vPxg9Tb7YcuWg6ZBvcmm8PUN
IqqjUOmbkeb06XOqbZ8/b6u59p+h61UUv7WpGTtmjXpfExEREREREVFoR4+d
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
oJLW4QLWvcazLciB4TQPiXE3jh8TeQc5ep3ueYz7a7ctlJMnz4rj0JW+ia4W
hBT/EArmvTBPEKT6Oa+W6eH5O4rf+vRe5DpeG828ZLQQH5febb7tKz/XfxJR
aB3bzxafDZgPjnR77dvOEreHOC/UFNA+ZgpPRka2mI8+t1rV/fndGztmjZ0n
RXwA4hPWrIl/jHc4kD8KtboWLdxucxH+yyU+UINfeZ++/lLOr478WZs2HfBk
P3gn/en70TY2BO8r77zR14wbm2XzcGife78h/5UUD1Op4oi4tcOtxiXikePV
DoxVoAZFrPcErqNo88+lGrfaToAcNsi5gFhF7baGA8/qm66pKx5PkRsaxvWb
iIiIiIgSA9Y0SO+QA39ZGtU2pdzcWKehfbxBh3f2QgXqiecEY5PabQwy5GuU
apFg7DYe83Bow7tv9nX93mQ9DyLvSLmMUWdBu22hYD5Jek707rUoqm0i/3Ks
44sPFG9p57hnz9qsNi6G56Tb+PyGDcGt24x1zVLbe/ZYGJc2IE98sVsunP9C
Po1EGeckSjaI2ZaeC5H+XmEe4Jp/1BC3F228G8XXrl1HbM26cH6Xr/1njbjl
pU8UmO9y6qsvyg+265HxHjF08HIbK4T86sjZgN9B5LzDPGqs70p5+ZX3af+B
E6ZwwQbifnFsXuyn/IcDHbePGiCYK21YP8NMn7YxaeMXcF04HT/e6eLVBuT/
l57tLz7bLS5twDp/qV6skxuvrmsqfjXM5mKYP2+rfU4hh0qi1J0LCtSXCae/
b72pkWnbeqatHaHd5lCmZW4w+S6R88MENfaciIiIiPS4reVHHuZIt4e1fNI7
Keppax9v0DVvOk08H3cVbWLXlWi3Mejc6k/iv/m1X8SaYLwonJyJrCdM5A3k
yZXuM6wR1G5fKEMGLRfbv3DBtqi22cLldyQaWBuDZ+fMGZvilhsG+3nikXZi
m+K51i0aGK+V2o46337vH+92mF9w2n+0cTBEFDupBl+k9X+k2hKAuGcv8vaT
f06fPmffUcKdM7/t5kY2Bk273UEjrd0NN14H98ny5bvMqJGrTeuWM+y7zvOl
uppbrqsf1fuSn3NviL2Q1v8/eHfLmLeP/I1S/a28MNaDuX3kMcOa/359F5tJ
E9fZ91bEZaHWR07OMVvjBNd6pG3BPDfak52dY+bO2WJzaaR3X2CapmXab22/
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
sA5Su43J7JMP5G+zcKE24s3X1rPzc6VLdrHnDPOUyK+D943BA5fZmBPE4zL+
OXbSc7TEA23U20aU21Ml2of9HMH1O2XK+pj3OXLEKnEf+KaKVw6SMqW7ie2o
W3uS+rlJdatW7Tb5/1pNPEdpDaf4un/kjJLWpuAZr90/RERERBQf+D6R6hFU
+GJoxNuT1r9irEb7WIMG82KYK3PqL9aCiJ/16/eFPW6AvJmcz/QX1ldgHbLb
OpBQMD7cpdNcrnFLYgsXbDOVvhlp5wNinVfI7Zp/1LC/V1V+GmNruU7L3GC2
bDloa81rHzPFB9b33Hh1XdfrBHUd7r+rhXmtbE97HSK3FPIlLVmyw7PnDuLi
3PL/IDcw9qfdXxSb3r0Wiee4b5/F6u2j+GvdUs5VB7zv/dW963xP3yvCgTki
1HVHjC7qYDWsn2FjGpijPzzS2gvOcVHQfPhu/5DPA7z7DR283LM4ghefleME
sJ94Hbtb3ATeqw8cZOyWNrc6ZQUurWlrc/q5f6ke1vWX12JtHyIiIqIUsXnz
QfGdtG3rmRFta9OmA+K26tScqH6sQTNr5iaxv2rXmKDevlQxfdpGc9klzvmY
c2Pcv78QN/L9tyPtfHE0Y71Yy4YxINxX2sdC8YM8HB+++4vvcwn5fntGIBcm
6oogH0PlH8fY+WnWk0hOyFkwaeI6O7Y6edI6M3PGJpunBbEr8cqv893X7jmD
27Vhvd9kkJNzzOZScDrHyMGl3T6K//WAenxu9z7qkGu3M5khL7ZX9adihXYg
z452nwSdlBcJsR/abSPKDe+SV/3l4jXs+I5987Xe9t3Ty3lZjM9J7xi3F0qL
+zqMfz/RUXzeIeel9vlJdYjPf/Bu57od0CRtqq/7d4uXYO5ZIiIiotQwccJa
8Z0Q30uRbGvgL0vFbY0bm6V+rEFTs9p4sb9QV127fakAawrccm0DvvGxVl+7
rckK8SKosYFawNGM5WIOGfkJd+8+qn4spENaNxTtNRUJrANhzhXy2tSp612v
uzde7a3eRvIOcj47neebrqmr3jaKr1BxSoA1+NrtTHbjx2XZ+UO/3yHCgdwB
2v0RZHgHyyfEnXO9BAXRokXbTblXepn77mxua8UMGrDMt3XrjRpkiM8W5AaL
97Ej/ldqD955Tp48q35+Uh1qFYnjLtc38DXnoNv10bPHQvW+ISIiIiL/IYeC
9E6IdYSRbAs5kaVt7dt/XP1Yg+aR+5xzV/4rfx2u2Y0DXPvSeoPcHrqnlXpb
kw3WjWBt+mMPtY16/PbZpzuZYUNWME8/iTUhsE4JdV+/qTBcrL3jBeRz1+4D
Sh6o31r81qbi9Vb0xobMmZtkkFNLOt8bNuxXbx/FR1bWXnHeNbfL/lDZ7D/A
Z4DfNm7cbypVHGG/y/x6fwhXKn1HI78F4kXwnYB3ONT/wr2xffthWzMub4zo
zp1HxH5jLhJKdXff3szx3kBNsZx9Os+V50p1Ee/Zbl3mxbUtiI/o03uRfQ/D
2iuOK/wH4iKlczRq5Grf9oscdlKsIH6PtfuFiIiIiPyHeRyn90HU0Yw0F93D
97Zy3Ba+k7SPM2jwfcj8vzoQC/LzD6PDHiPEuHAqjRP6CWMA/fstca3J7gbP
pQpfDDUrVjA3Lv0H7k3peqlfd/J//93p0+fM6FGrTfkPB5qCV3gbu/D1l0PV
+4GSB8ZqpWsNc5mseZN83HKdoYa9dvsoPrDeNtzfHbxLabc3VeC7YdmynaZH
+gLz0/ejzesv9bT5sv2Mg8z7HRKvOkTaZs/aHFZ8COazUO/+xqvr2jXZ0r97
/KG25oN3+puvPh9i63hhrXn7trNM3z6L7Zwbchkhp+GihdvNkiU77PcFco6v
W5dj8+gfP54a/U7JaeXK3eK9gdp2Wu3KmJwttuvOIk3ilrcOsb9Yl5J7/6hX
wRwPv52jDPkcvfV6H1/3La3pKl2ys3q/EBEREZH/Spd0jm9G7EEk28F6Byn3
9pefDVE/zqDBmhHpGwAx3trtS1b4/nz3zb4RjxVijFK77YkMcQrp3ReYYrek
RTVWe+tNjUzLZtO5npAugrFt6bpB/g2nv8H1iL+rW3uSHZfCGqNY5hLq1Zmk
3g+UHBBXgxo30rWG9V/abSTv7dlzVDzndWoxn3kqmDN7S0S/O5pzTfS/Tp06
a/MRYr4bOQEwD9665Qz7rEYsI/I8lXqyo43dR3xDOHnd8sJcu/ZxxgN+/265
rn5M72NeQ4xgkRsa2rpjP3w3yowYvoo5EClhuNWCwFiUZtukdU4wZNDyuLQB
tdWc9o9nuPa504Z1a1Kut6v+Us3mwfFr31i75bRf5JfT7hciIiIi8h9qkDm9
D6KWXiTbwRiN9M3RqydrjeXltr4f+S6125eMsA4bc5PRjFeVfa67evsTFdYo
oT5ntGOF+f9W3bxapocd8327XB/7bMJ37BefDrZ5AatVHmca1Jts2rSaaesa
jhyxytY+XLt2r2+1QCk4EEskXTurVu0OaxuIY8Ka9VbNp9t4pruKNgkrJzdc
d1lNs23bIfV+oOTQr+9i8VrDdYm5Me02kj+kebr3347sfZwSE2pcRfJudPXf
q/N5kICwbjgn55hZvXqPmZa5wdatx9wY8jbgHbfEg23+m18AOcW+rTA8Zdb6
Lpi/zdNYA78gVihe67+JYlHigTbi74d2zhbUXpDusUfvb+37/pFnRdo/nsXa
5y4ItOJdpBpp+DZnvBgRERFRcjt2/LT4Dhrpeq6qP48Vt7V+/T71Yw2axx5q
69hXyIGn3bZkhGvQrR74ecgt6vS/s1Zw9JBfRXNcEeO9mOdDLpnyHw20a+oR
QzVj+kazYwdjgxJd9SrjnMc0fv9zTHM5WOeHWJsJ49fa/PwYO8H1g5qreE4j
B/FLz3e3uVa1+4CSh/RuAFK+EEoOUr6zp0q0V28b+WvKlPXifX/5/5Xz/+D3
SbvtgPkDxIdu3XrIZGXtNcuX77I5BzinGz28v6Ra/6EWg+b3QiSQR0O7v4jc
7Np1RMznEoT5eOS6u72QnHcR9Qj82vfixTtcc+tV+makev8EAX7PpT7ysxZi
uzZyLAnGr7X7hYiIiIj8g/Ek6V0Qa/wi2ZZUZwx5jbWPM2gwBoW6m0799dkn
g9Tbl2yQYzecWqhYL9O86TTxvzNPSHReeTFdfVzRzTX/qGHXs5X/cKBp1jjT
jBubZcfZtfuNwiPl8kTtEe22EUXCba4G9XWRm1W7jeQf/AY5nXvE22m3jfyF
egHSvY9aANJ/+6bCcN/ahLnyTZsOmMzMDaZ3r0V2nWXFr4aZci/3sjE0qG9Q
qEA9+w4lzYkhZzRi/JD76syZc+r9TMGG3zi8j2t/F4TDz3uPyAtu+bqCUnu0
c8c5Yhv9ym15+MgpG3cu7ffKP1e18/TafRMUUl9hHZBf+0zvNl88Pzn7jqv3
CRERERH5BzUYpXfBuXO2hL0d1N2Vxqow/qp9nEGzaNF2sd+7d52v3r5kMqD/
UvvdGWrcCXlYsT4M89TSv8G8u/bxJCLE4GiPK0YDuTaefqyDXVd/4CBzawTV
A8VbxnWci8gvlX8cIz6PMN+n3T7y14+VRjme+5uuqaveNvIP6ldJ9/31l9ey
eQtQs9npv6OmnxdxTFiviGcMamwhbxDmJ5BXzMt3KsxtRPJtSakJNRGlXDNB
gjp02n1F5AY54ZyuXYzZ7d17TL19gJoUyFcn3Wfh1vWLBGpsud3biKHQ7pcg
kd5NAbVW/dinW6wNc2MSERERJbfWLWaI74KIQQh3O/37LRG3E2mehlSQ3l2u
t45YBu32JQOM3yLvf6jxJnyzt2k184K/ffzhdo7/FjkxMG6sfWyJBrn0tccV
Y4W1zViPod2XdLH8f6vueM4w76LdNqJwYS3zzdfWc7yWETt1/LhunWHyX7XK
4xzPP+astdtG/nHLQdW40RT7b5Cb2q/vBsxbFb8tdL00LyD/tp85vmOF5zDz
2AQD1tBirhI58iZOWGuGDl5uY2pQc75pWqb9xkMtyu+/HWkK5KvpeL0htx7y
Ndx7R3NT5IaGpsClNcX1FZHAbzXnzCjobr2pkeP1i5yo2m3LDbl7pHsN+YW8
3Jfbun0IQp2MoEEtOqm/pk/b6Ms+3cZK/YqRICIiIqJgwHyO03vg1X+vHtF2
3OKUUTtP+ziDRlpDibVMsdRbp//AvM67b/YNOd6EPLXDhq686O9bNpsu/g3j
byKH70rMt8VjLNxPrVvOUO9LuhB+X6TzlTcOiSjIJk1cJ17LX37m7XgtBRPm
3pzOf8Eraqu3jfyB+Vjpvkecyvk4yYzJ2eK/q1dnUkxt+LbC8Li+SyEnxNFj
wao/jZgN1LnAdxhysj16f2u7NrlF02lm7Jg1Zv36fTaWQbud5AzjFk7XGtYF
5/23yKWHnGmbNx+0dTERDzF16nozedI6M2H8WjNm9BqbfxLxEViPUafmRPPW
631szANy3bz8QrpZs2aP+jETuUE8jfQMRmykdvtyQ2xS/r9WE8dqvMr/j5pr
2J7UL7cXSuO6FAfZ2Tlin2FNih/7RFyatE/GbxMRERElt9fK9nR8D7zvzuZh
bwPvjNI4QdDit4MCuVad+gu1YLXbluiQR7TEA6Frn2LNzby5Wx23sXHjfvHv
MJ6pfYyJCPH3qAvx7NOdzBOPtLOefLR9WPBvH3uorT2vD9/byjx4d0t7r2Bc
AWucUDs53+9jXy8VitdrPCh2GGeWzteokavV20cULre6OX6tX6JgkdbQI1ey
dtvIH3ivkO57rB8//+9Onz4nxn3ivSiWNiB/lN/vT3m1bR2ceELEISA+IVSb
kRvinmLN7HcA7tUmaVPtWt3hw1aazMwNZunSnXYO/NDhk8zREEeI6ZHOGeJN
tNtHpMGt5uvoUcH7Pqr41TCxvc0aZ8a8fcTIueURQg7NBfO3qfdDEJ09+6s4
zlK/rj91cdIaTnHcH9rB31ciIiKi5CbV/X61TI+wt+FWCyLWNT/J6q6iTRz7
641Xe6u3LZHNn7fVFCrgnE87N8x1b9iw33Vb0tgl1l2xLkDw4Nv1yG/nZdu2
Q3a91JQp682A/ktNq+bTzU/fj7b5NhD7cMt19aPOBcv1+sGDcyydL6yj0W4f
UTiQVwl5qp2uY9St59hcavjovV8crwG8M2q3jby3/8AJ9zWlORfWF3/vLTmX
Hd59om1H2eecY6j99O8nOqr3/3nTMjd4fnzI04DvEdQieP2lnubTjwfZugU1
q42338aAeBSs3a9dY4KpVX2C/W81qo431auMs+ufAf874iGQE0C7n4Jq3Tp5
7S/GKLTbR6QBzxjpvkA+Ge325YWcJVJ78R4ca36bD97p7/rMZg5Fd8gt49Rv
iN3zY39S/C7WG2n3BRERERH567rLnMfHsQY63G08/VgHzhdFAGNOWKPj1F/I
BazdvkTVq+dCsV9ze75UV5sHNNT2UBtV2sbAX5aqHy9F7+TJs3ZcBDlfEc+A
XOt4jiH3snTOsX7xCONUAgfrG6VzxrgiShQjR8jr4IKWt5f8U7pkZ8droNST
wZnbJe+0ayPnO8Za07z//heX+PAuneZG3Q7Uogk3jvOGq+rYHFdlSnez8z/f
VBhun1GoP478zX16L7Lz6+PGZtk80XcWcY7PDlIMjtvzNyhQgwBrXLX7KoiQ
f0jqN8Qua7ePSANqmDjdE4jb126b5MVnu4n3Mn5Xot1u545zXJ+vWKfFuGB3
0lqrz8sP9mV/Ul3XSHIAExEREVHiQV40t3d35LQMtQ2sZ5f+HuNZ2scYRDt3
yvXWO3WYo96+RHPmzDlTqeKIsMb7MP6Lfx/OdrOz94nbefM15sFIVlijiPq1
LZtNt7WLMUaM9W/hxLhQ/H395VDHe5T13imRfPLBAPH3ZsmSHerto/godkua
4zXw/tv91NtG3kPNPOm+R0xl3n+/b/9xk++Syo7//pUX02NqC+I3UXcL8QjI
vYd8b1V+GmPneSZOWGvWrt1rTpyIvGa0FIODHGba/X8e1hq71TQPit69Fqn3
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
tze7YPuI0UiWsd4P3+0fl5gFN+jPeMa6kD+aNc50Pc81qo5XbyORZPw4OX5r
7Jg1nu3ntbI9xf3EWoMKuYfc6tXb38cPmb9V4pZvC+vVGVuX3DDviTxhuc87
4n/C+Vu8E179d+c5mi8/GxKX9ocTq3BX0Sas3UW+Qa0h6drDd1sk29q795gp
flvTiL4nrruspo2P/ui9X+x6b9Yio6AofH0Dx2v2nTf6qrctEqgFKd1/A/ov
FWtGnIfYdu1jSFRuz1fUgfNjn1IMNMZOjx47rd4nRERERETJShoPeeKRdupt
I2eY35Zyd6PGtFfjsZW+Gem4D6z30e4DL6DWLNYOIjdwuVd62bF69J/XMQmh
JEt/prLGjeR82PBtheHqbSSSNG86Tbx2sfbai30gV4/0fC3xYJuYtx+qXjAw
J7czxCLgHEj9hngs7TaS/xB3gHeiTh3mRFzH4dUyPRyvHeSU8rvdqI9+602N
XO/9G6+uazZs2K/ex5S8kO9Auv6mTl0f0bbwzujF9wVizvH7jvp02v1DqatM
6W6O1yee29pti8SgAcuivhe/+HSwevsT2QfvyGtMkAfUj30ixtFpfw/e3VK9
P4iIiIiIkplUtxZ1ng/HWEua/IP8F9J3W9M0b+YWHr63leP2Py+fvN/cmLdB
zscxo9fYfnz/7X42psetFmWskrk/UwXWsrmd4yGDlqu3kUjy6ceDHK9brNf0
ah9uNXhinQ9HLATmI0M9a72ul5QsunSaK/ZZgUtrmoOHTqq3kYINc7XIdZ03
RgC1y/3cL+ZhCxVwX9OK5xjXmpPfJk1cJ16DCxdEFv+DPAlef2tgjftXnw+x
OZNQ11C7vyh1IMecdF3u3HlEvX3hOnnyrLn+8loR33slH+/Aey4Gy5btFMdh
rvlHDV/GKxEHKZ1PrOfR7hMiIiIiomSW3m2++D4+Ynhk+SspfpA7WzpvyBPg
xT6kuHIva04kikOHT5opU9bbGIa3Xu9j7ijcWKylEinUptU+PorNsCErxPOL
/KCsLUxB9lSJ9o7XLv53r/bxjct6UeSij2XboeKFgPlbnWHNOcZ7pX6Lx/p4
Sg6IByr7XHcb44l6Wxjv93N/mAMueGVt1/v+2n/WMPPmblXvG0p+bu+Ba9bs
iWhbuI+8jlfIDbFEvXr6syaZKK9hQ1eK12J698TKMVip4oiI7jXUKUJ9F+12
JzLUe5D6t3qVcb7s0+27ItL6PkREREREFBmsJZfex997q596+0gm5VfE/KgX
25fy62J9jvaxB8GJE2fMihW77DhMk7SptmbsPcWaRZSLAWtXN28+qH4sFJsD
B0/YNZzJMBZHqUfKTYC8C15sH7V3pPrFseYDPnb8dFi5Fe69o7l6PwcN1vs9
9lBbsc+K3NCQMR4USNOnbbSxCG73POJw5sze4vj3iCFEboahg5fb+hfTMjeo
HxMltr59FovX4tatkdVVmjxpna953c5D/DnqwGj3HSU31KmUYvxfeTFdvX2R
WLx4R9j3F+LpsL5Eu82JbPBAuQYHaszt2eNPDicpjvvKP1dl/lkiIiIiojjA
HKvTO/nlf6xidu1KnDx9qSYjI9vxvGFdmxfbv+W6+o7bR11V7WMPsiO/fcfO
mrnJjoGjr54v1dXcdnMjk/9v1W2+ZHxfF7yitnnx2W5m6dKd6u0lb2B8Gc/M
3PfKC890tTVGtNtGJEHclTQW2KhBhif7QC52aR+x5lVFrFg448ZexV4kE7ec
F4BYPO02EuU1ccJak/+v1VyvXcSCIt8DYrIzJmfbmic//zDavFqmh7mzSBNb
8y7v36A+Nn+vKVpu8QrR1NRBXTrEk1399+q+xix8/eVQ9b6j5PfvJzo6Xn9X
/KlKws3/hlOvBfF0C+ZHVgeGLoS8FDddI8cj//DdKF/2m50t14J4/aWe6v1C
RERERJQKkO9Xei+vW3uSevtI9v23Iy84X6jhsGPHYU+2LeXZ/en70erHTRRE
mJet8MVQ8+ZrvU3b1jNZr5QCb9u2Q+Lvf88e3uSLRh0daR+YS4x2u/sPyHlN
8urccY56XwdJx/azXfsL87rabSTKC7EKWN8Y6n4/Hx8a6dxt187z1I+RElN2
do5jTgQvavQhjgZzujt3HjHr1uWYRYu2m6lT19uYMtR1RNwe4qNLl+xsr/1I
r/v+/Zao9x8lt9Yt5Pz6A39Zqt6+SHRo5/7+hHg5KbcPhQfPPCmPKODdH3k7
/Ng36nRK+0VcmnbfEBERERGlgk2bDoh5J5FPFeMj2m0k2fx5W02bVjPNoAHL
7FpZr7YrrV+rWW28+jETUepAzv8e6Qts/NyI4au4BtZDWVl7xXG54cO8WV+P
HDPS+0UsMT2VfxwT9nwM5ne0+zooUHtXys0MN1xVh7m1KHAQD4j8VJHOxUbi
nTf6qh8nJa60hlMuuJ6wxnrunPjOW545c84MG7LCrgMO935BTaVEW+NOiWXD
Brn+KGK8tdsXCeRRLFzQucYZ/vdly5g7MVbIh+T2zELMrR/7xTdJoQL1HPeJ
cbFDhyPPlUNERERERNF5rWxP8Zvgrdf7qLeP4uvsuV/F6wHjcdrtI6LUgHyg
xW9resEz6OUX0llz2SPLl+8Sn/Xjx2XFvH2cJ2m9J947ot0u8rUij3A4czFY
j405HO2+DoJpmRtc57AQu+rFeSfyWumSXXyNVQDkR9I+TkpsiCFvWD/DxpF7
le8uWidPnjVTpqw31auMM/fe0dz12m/WOFO97yi5SXUU8C7n11p5v6Ce44N3
t7zg3en9t/uZnJxj6m1LdHnjvvJ6qkR73+LWe/daJO63/IcD1fuGiIiIiCiV
zJ612fXbAGs1tNtI8YOcGtK1wLzaRBQvyHHs9Bzq1dObWgWpbuXK3eKzfuyY
NTFv3y0eAvmBo93uKy+mhz0HibFN7X4OAqzzRU4Lt76qV4c1wCh4sPbb71gF
zJktWsg8LJS82redJV7/qCeo3T5Kbm7z0C2aTlNvX6R+/e3/zJq5yUyauE49
NilZ4B3U7Xca8c+IV/Zj34iBuO9OOa5r+rSN6v1DRERERJRqkDtSekcveEVt
s3nzQfU2UnwsmL9NvBZGjVyt3j4iSg0PFG/p+Bz68rMh6m1LBm45egf0j72m
cM8eC8XtR1vfFzVBIpmHRF5Z7X7WtnjxDlvv162f3i7Xx46/a7eVKC/k33ar
YRKre4o1s+vQtY+TyE94vpcu2Vm8D1gHiPyEcSSp/ijqULEmSepCXk8pPj23
X/ot8a0NA39ZKu4XuUG0+4iIiIiIKBVt3Ljf1maT3tWR947fkqkBdcul64B1
wIkoXorc0NDxOfTV54xX8MKBgyfEZ33b1jNj3v7334503Ha+Syqb48fPRNXe
W66rH9Fc5OCBy9T7WRPyZ11/eS3XPkIOihMnIj8fRPHyxqu9Y4pJuPyPVWxt
IcRmV/lpjOmRvsDeG/v2J1YecqJYjBm9RrxHkINHu32U3FDPzc93Tko8x46f
dl0zdV7lH8f41gbUrit+a1Nx3/36LlbvJyIiIiKiVNWy2XTXbwWsyzh0+KR6
O8lfHdrNFq+B3buPqrePiFIDcvs4PYd++p5r5r2A9ZZX/rmqYx9Xqzwu5u1L
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
VG+iio1JUiOHr1GLF+1Qu3Ydp1ZDiDv/1/9Zu3a/at9unqr6XE9V9KqGbs/5
jf9spCrc2U7//WcfjVCNG0xXEydsVOf+Opjt8QAAAAAAAAAAAAAAQk/P7kv9
mqvgiRuubKjuvb2teun5XrpOQ1STmapPr2Vq6pTNKiVlnzp48CTr3EEmeSR9
ey9XH9Yeqm4tEe23c13rlQHkpwAAAAAAAAAAAAAICNmLffr0WetxwDdDhyQH
PV/BE7KnX3IaXqzcQ3303jD1x69Tde+JsaPXqWVLd6ndu7NYBy+gQ4dOqo7t
k9STD3cJ6LkcmLDK+lgBAAAAAAAAAAAARI7k1XvVe28PUTf9u6lek6z0eLzu
a79hwwG1dethtX37UbV37wm9V/7I0Rx1IvuMysk5q/Lyzqn8c6wzh4rjWbnq
jptbWs9P8LVOwz23ttU9CD79cLhq8NtUFddpoe49MX/+Nt3rQq49yamxPc+h
JPuvz2LzprNU8WsaB+U8ffvVWOtjBgAAAAAAAAAAABAZZs/a6lFPe0/Wm0tc
20SVur6Zuq1ktCpXto16oFx79diDnXT+g+ytr16lt3q9Rn/17huDdK166R/w
1ZdjVL1vx6tffpikfq8/RTVuMF33FIiOmq1at5yr2rVJVB1i5qvOsQtUt/jF
us59Qv+VakC/lfqfe/dcprp3XaL368vftWwxR7924oSNhbIPgeSYvFCph/X8
g0ApdnUjVe6WNvqaeuPVAaruF6NV00YzCuX5ls/u3WVaB3X+WzSbZX3cAAAA
AAAAAAAAAMLf2bPn1IP3dLC+Bh0osp5dWPsMnMrJ0z0CMjKOqrVr96sFSRlq
wviNql+fFapNq7k6P+SDd4eqKs/2VPffHaNzTWyfr4Kq9UrhON8yRsntCfb8
Si7Szp3HrY8fAAAAAAAAAAAAQPjLzc1XRa5oYH2dOZAGJqyyPs/h4tjx02rz
5kMqMTFdDR2SrOtV/Fxvonqn1iD15MNdVJmiUdbPZ2E/39Lz49Vq/XyaG+n3
In1f+vddoRYv2qHWrNmnkpP3qqVLdqqZM7bo3htd4xarJg1n6NonL7/YW+ey
3FoiWtWs3l/nvdgePwAAAAAAAAAAAIDI8egDnayvMQfSt1+NtT7HkSQ7+4zO
aZg1c6uu1SC9O2Rt+6Xne6l7b2+rrr/C7vn+pm7knu/MzFPqmcfiPZ6L4tc0
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
H6fU05B+DOXvaKdrLjx8X0f1yP0dVcXysarCne3UHTe3VKWub2bshREKSl7X
RFV5tqf69efJavCg1Wrduv0hs37mqg+5rP3Zjg8AhORA9u29XNX9YrT+HvD2
ni95k/J9Ia99sXIPnetY57NRuiZU29aJqlePpfq7NHFuulqzZp/O85PfLrbH
HUpkTkzz+/hDnUPmew0AAAAAAAAAAHe2bj2susYt1vvQb/xno4CtE997e1v1
Td2xatjQlLCsMeApmUfWnP+bFyM9GeT6knFPm5qqBg1cretv/PHrVPXJB8NV
1ed66uvCdn6DXPeVHo9XX9cZoz8LskYm1+j5P4M7ZzI/phh37Dhm/ZwCKNym
TN6s89Zs3aslD1Jy5eS744N3h6qf603U+Q3Sl0q+Y5JX71V7954I6To6/jJp
4ibjPFGPBwAAAAAAAAAQrk7l5Knp01J17YWKFWIDuu4gtR1kfVh6DUit6GCv
DQeCrJPc8I8GjuOV/Y624wtVsrYk6/Hz52/T606NG0xX774xSD10bweruQyy
B1jOW+03B6uGv0/T60P55wK3DtYqeo4xlpycyNpbLOOR+hbRzWeriRM2qnN/
3QAKcxxAqJP7X5ErnL/fQo18D99ZqpXOrZD7t+Q1dIiZr/Mlk5IyVHp6Ztjf
U7t3XWIcf2bmKevxAQAAAAAAAADgD3v2ZOla/8FYXyhdJErVqNpXr1WPGrFW
bd58KOz2SHaOXWAcn6wt2I4vHJ05k682bjyoxo1Zr1q2mKPef2eIeqBce2vr
Zm+8OiBg16WMzek97yrdStepkDmYMztNbdlyOKzX2mQtTerAXzzGWq8Ebl5D
PQ4gHDz/THfreQj+VrZ4C/X0o3G6d9XFOQ2SOyd9rCSH0/a8m8S0nec4pmJX
N7IeGwAAAAAAAAAA/lT2xhaOz8RvLd5CFb0qsHvf5bm7rE1Xe6GXXsut+/lo
9f0341T9Hyep5k1n6f2eobQfWvbiO41D5unwYfY7ekPW46U/gmnfe3b2Gd1n
Qnqo/1RvoqrybE9dKzwYa1xSEyQQY5beGE7vV+GOdo7/u/R/l97v8rmQmujS
7z05ea868dfc2D5/rkj9FqfxJAwIzLwa4/jrPhIKcXhDeqzI/nA513IdCvmc
9OuzQnWLX6xiY5J0Xk901OyQuz8ivN1dprX1/AIb5DfQU4/EqbdfH6i/aySn
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
X0swHkP6QtgeJwAAAAAAAOAvpn11zz/T3XpsoSIlxVwv2R9rBYWZ7Nk3za23
fX7DwbHjp41rBkkB7sdui9RMN53jsaPXBSUGU01lWRcv6LGlz7cnuQp3lmql
13qoqf1f33411uV8Sc/uwlR3Apcz5Ql+WHuo9diCSe4Zpv3aUqdFejr4430k
h0py2KQPg6yTSt6arbwEk2/qjvV4POPHrjceZ8L4jX49Rwn9zb1LfK1N5A+S
K/HBu0P9Nv9y37b9eQgXkutpmseXX+zt0TFmzzL37BMjhq+xPk4AAAAAAACg
oGSPtakuPM8k/4/sPzc9K1y0cLv1+MKZq1wQWTexHV8gyFrbpWOVnueRWt9c
cjRM53jokOSAv7/c52Q/ttP7V36iYPVRpBeM6dgX++KTkXoebJ+LUCJrsLXf
HOxy3qT+j+04YYfs+TddF21bJ1qPL9h+/dk550rfxwJY50nOQ2JiuuredYmu
VyDrrK5q3Qda86azPI794MGTxuO0aOb5cTzhal156ZKdVq4Z6UvwSrW+1ua/
sEtPP6LziUxzuXzZLo+O4/Sb8YI7bm6psk7kWh8rAAAAAAAAUBBSD970DKxr
3GLr8YUK6THvNEeS6xGpa8zBIs/xTdfgksU7rMcXCPJs+ZMPhv+v9nbV53qq
bduOWI8rUHJyzhrPcft28wL+/q7WkQrSc+TkqTy3fd+LXtVQ9em1zPo5CFVy
bTz3dHeXcyh7pG3HieCbOyfNeE1MmbzZenzBJr/XTL2TRGrqoaDGc/jwKf39
LXXvO8TM1zVs5HutRtW+6omKXXQ9Gbn/+XOtvHSRKN17x5s4pb+R07EkV8qf
8+Gq19OEcRuCem4kR2/I4GR1awnn+iS+KnV9M6/nv7Br1nimcT7l8+LJMaR3
iVz7gfgdAwAAAAAAAISCaVNTjc+/ZK3AdnyhQJ77lr3ReS+h9Na2HV+4k32b
pmtw9ao91uMLJFnvlvrbtuMIBtN+3Hrfjg/4e7/0fC+/3+fO/XVjeKfWIJdr
O9Jrgvuoe7IH2rSmKOTakb+xHSeCK76zua6RrN3bjs+G6OazjXPir54Q/iS/
nzKP5Oi1/KlTNqvePZfpHlrffzNOvff2EFXthV46t0E+/7IWfsOVf89vkPyM
ktc10b/BpLb+2rX7vY5B+lo4zdeTD3fx61illoHp3ASzt5XkPlav0tuj/APJ
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
57X0+ztaj82mPr2WBXX9SPZBSr1c6UPRv+8KtWjhdrV37wl17vyf1ucC/nXy
VJ6aMH6jim4+W71Ta5Cu5WFaC/L02vm53kSVnX3G55ikPrzp+OXvaFeoc5cC
SfYHm+Zd1iD5/Ie2t18faD33wFulrm+mdu70bt0Qoe2tmgmXnecb/9lITZ2y
2edjSn8gqQFT6fF4l9fTxAkbAzImV58tqfVAznFomjM7zXjepk1N9epY/fqs
MB5r7dr91scKAAAAAAAAeMpUS7TuF4HZDxaOpH680xx9WHuo9dhs69g+SZW9
sYXVtSWpwy/r2fJ8/qsvx6j27eapGdO3eFSPQf5G1qFlXVzWFFj7DF1Sszs9
PVP3bB42NEX3I2/w21T1xScj1Wsv99Nr1xUrxKoHyrXXHn+os3rztQRdjz41
9VCB3lvWfSqWjzVeg8OHpVifn0iVk3NW3VYy2jj3geoLD/+Q9Tfb+QeeKl0k
Sucnss4XeRYkZVxWi6Bs8RZq374TXh1H7keJc9NVoz+m6Tw1d9eUvIe/+k1c
bMniHcb3LHpVQ5WWlml9zuFMrjnTuZO+Jd4cS+5V/C4BAAAAAABAuJNe66bn
XLIObTu+UCD7vP31XDFSyVruoUMn9Vry0iU71bgx61WXjgt1j15ZL5Z67rKP
0cb60/13x6jabw5WTRvN0Pu0R41Yq8aPXa/69l6uPnh36GVx1XplgO4JbHtO
EVpmzdxqvMakzgp5LoEV12mhcf6ld4isIdqOEWaSU1Lulst7vEjNFLkHl7yu
ie5BVaZolF7fvf2mlurWEuYcFenrInkFb7w6QO+bl33mUofl3TcGqdpvDVbv
vzNEffTeMPX5xyPU13XG6J5CDX+fpvPSJM9pQL+VusdQUlKGWr/+gNq/Pzsg
a8oILZLrVqNqH51n8N7bQ9SWLYdd/r3kM8o10i1+sc7hlR5YkgvgzW8Qud4C
MZYaVfsa37P+T5OtzzVcu6t0K8dz9/KLvb06Tm5uftCvPQAAAAAAAMCfpC66
qx7xkydtsh5jKJC1DNMcjRi+xnp84ULqJqenH9F7bTvEzNc9dx+8p4OVHAZ3
pN6C7flCaJG1UNP1MmjgauvxRTrptWGqcyNiY8ivCwencvL0uZS+6u5q1Q8e
tNp4viXX0vZYEDk2bz6kc6JknV9+m7xQqYfLfBlPVXm2Z0D6BEmtCNN7St7P
4cOnrM8pXJPrzOn8lbi2icrLO+fVsSTPy+lYUn/K9jgBAAAAAAAAd6Seuqvn
rO72nRUW0tvYNEcrlu+2Hl+4k71ktvMTLvXtV2OtzwtCx4ED2ZfVEb9A9kiy
Lzs4XH1nyXrN0WOnrccI/2nWeKbjuS5yRYOArAGjcOrXZ4Wu8+Hv3xFSv0Hq
cwUi5mov9DK+r/Q/sj2ncK9n96XGc7h82S6vjnV3mdaOx6n/4yTr4wQAAAAA
AADckf2opmdlsjbn7f6eSNW96xLjPMk6pu34wpnU0C91fTPHuX32yW66hnfF
CrFBz1do0WyW9blB6Ijvssh4rbCvP3jkfvHMY/HGcxHVZKb1GOE/st7rdJ4r
3NnOemyIDNIHpNjV/u1VJXVgRgaw9tbiRTuM731byWh1IvuM9XmFe2vX7jee
x/jOizw+jvRCMuXbtGlF7goAAAAAAABCn9TkNz0rkzr9tuMLFVJP1WmOpGar
u3rWcG3TpoPGa/Divrv79p3Qz/9//H6CevrROK/7R3tD8id27jxufW4QOqQ2
uNO1Ivu89+zJsh5fYTJv3jbjZ/emfzelxkIEeeT+jo7n+Y1XB1iPDZFh0sRN
fvvtULF8rBrQb2XA6+2Y8nhEl44Lrc8pPCM90kz5utIrwtPjuOpZF8i8GQAA
AAAAAMBfXNVXeKtmgvX4QoWpx6w8m7YdW7gbNNDcn3zRwu3G10nvc+lXMn1a
qurdc5lq0nCG+uyjEerFyj1U2eItfFprkLXnV6v103vebM8LQsehQyf1teF0
zVSv0tt6fIXR6zX6s14X4WQtz7Tv/ff6U6zHh8iwZLG5VoEnypVto/Mo58/f
FpT8VcmlNO2ll98+geo/ES5O5eSp7DCqL1GzuvN32f13x3h8jNmzthqvT3rW
AQAAAAAAIBzI/nXTMy6pKWA7vlBR9bmejnNUo2pf67GFux++G+84t9KPRJ47
+3rc3buz1NjR61TjBtPVm68lqAfKtdfHvPR9il/TWL30fC/9WZDX2J4PhJ5x
Y9Yb75Oyl9Z2fIVR8uq9xnPy2IOdrMeHgtu+/ajxHPfptcx6fIgM0mOm8pNd
PcpNKPmvpjon8pcfJqmBCavU5s2Hgh6v9KoyxRfdfLb1+bTl8OFT6sPaQ/+X
yyE5bVKXy3Zcvp5PyZH0NPdk9Mi1xmti27Yj1scIAAAAAAAAuNM1bjHrcB64
764Yxzn68tNR1mMLd089Euc4t/K/+/u9ZL9uZuYpvT9R1sKkb3V+/nnrc4DQ
9lO9icb1BFkjsRWX9KyW+iSyRjVxwka97mZ7roLJtC9VbN162Hp8KBhXfT/m
zkmzHh8ih/wu+OKTkap0kShVpmiU7kMi+ahf1xmj2rebpyaM26DS0jKt32Pl
N8ydpVo5fiakFsnBgyetz6UNa9bsU/fe3vayOan0eHzI92xzlWvg6ffY8GEp
xmPs3Rv6ORsAAAAAAABA397Ljc+4Fi4w1+IvbEpc28RxjmTvvu3YwpmstzrV
PBBSd8F2fICoWCHW8Rqt/ERXazHJ+trD93X8Wzy1XhlQqPJvJozfaPz+6tl9
qfX4UDCyf910ftPT2TOMwmfWTHPd/08/HG49Phuk/lHJ65x/o4vk5L3WY3Ql
MTG9wLGPGmHOedi167j1MQIAAAAAAADuyB5Fp+dbpa5vprJO5FqPLxRIH1zT
c8C4TvRJL4ilS3Ya51bWqmzHB0j9BNM12uiPadbiqv/jpEL/ucnNzTeuU0ld
cNvxoWBaRc9xPLdS1+TMmXzr8QHBJjW9TN9HSUkZQY1F+nVdqO8zaeImK7Un
OrZP0vcD05yIRQtDO/da4itovoLU/zAdIyPjqPUxAgAAAAAAAO5IbVmpl3rp
8622rROtxxYqduw4ZnwOOHRIsvX4wlm3eHM/kg0bDliPD0ica977KGs0NmKS
+tZ33NzSMaZv6o61PmfBJD3Kneah/B3trMeGgvn2q7GO51bq4duODQg2yc+S
XGLT/S6YfQ8kj+/SukNvvpYQtPo+MtZff57sMk9B3FoiWtfxsn3uXJk6ZbMx
fk/7QUyZbD5Genqm9TECAAAAAAAAnsg8kqO++3qcKle2je7ZK2vIod7vNZhS
UvYZnwNOn5ZqPb5wZtorKHumJZfGdnxAfJdFxs+/5DLZiGn1qj3GmKKazLQ+
Z8EUHTXbOBfy3WY7PvjujVcHOJ5Xm31YAFumTU013utaNJsV1Fh+rjfRMY7B
g1YH5f1/Mrz/335H/qupriFn+7y50yl2gXEMnta5k/8WMecr0DsHAAAAAAAA
iATz5m0zPgeUfga24wtnD9/X0XFeqzzb03psgDCti9z8n2bW8rpMdfJFsGuC
2+aqDrbcu23HB989/Wic43l9941B1mMDgq3et+ON97p16/YHNZanHnH+bH71
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
8E3dsW6vR1mPXLiAvEX4z9OPxjlea+/UGmQ9NiG1E+4u09r4mbjp303dfm6a
NZ5pfRwFIflykqfkaoxSm23I4OTLXtu393Jj3bYLfvx+gvUxAgAAAAAAAAgt
p3LyVNkbWxifK7JWEZ5k3dS0Vtq8aWjUXUbhFt95kdd5CqWub6aGDrl8jcSW
lJR9ei/pH79OVdVe6KVKXNvE5xyMKs/2VDt3Hrc+JkQu+b7vFLvAo34ssuYo
tUFsx4zI8vbrAx2vt8cf6mw9tguim88uUC6d5DzYHoMv5Hdj00Yz3PYsknuD
U/2Int2Xup2fOp+NClr+IAAAAAAAAIDw0rLFHOOzxWceiw9KT3v4n6nON3vb
ECpkH6ona0CyPvLVl2PU/v3Z1mMWst7y3dcF72lxIQeja9xi7rMImKwTuapj
+yR1+02u90xfIOuVA/qFdz17hKbffpnieM0Vu7qRys3Ntx6fOHAgW/fl8fZe
/uWno8L2Pr5q5R715MNd3N8brmyoaxZd+vrOsQvcvlb6aOTnh+f8AAAAAAAA
AAi8I0dz1M3/aWZ8xsh+/PB0310xjufz+2/GWY8NuCApKUM9+1Q3x2tVruHG
Dabr/hG247yYrOUWNE9B+mFIXQapzW97PIhMO3Yc033iSxeJ8vi6lHXaqVM2
W48dkUn6UZmuPemlYzu+C7rFL/bqfl7/p8lhWTdAcjO+rjPGbQ8HUfyaxmrS
xE1/e73UkvAk7/CtmgkuezgBAAAAAAAAgGjdcq7LZ42Jc9Otxwjv3HNrW8dz
SX0FhKKtWw+raVNT1djR69SM6VvUtm1HrMdk8t7bQ3zOU5D14Po/TlK7dtH7
AYExZ3aaXh90V9fdSc3q/dW3X41VH9YeqmuILF2y0/p4EDk2bDhgvPbat5tn
Pb4LZB3+s49GuL+fX9ckLGuRnDmTr3vDuMpVvtitJaIvyyeR/AOpKeHJPSVU
amcAAAAAAAAACG3S17rcLc79A8TLL/a2HiO8Y+oH8VO9idZjA8JZ3c9He70O
/GLlHqpPr2XqeFau9fgRmaTW+kfvDfM5l8aJ7LsePXKt9bEhMkgNgjJFnet9
PP9Md+vxXezs/2/vbmOzKs84gH9xjizLviiwzSghwbf4wpwSjMvGPmzGBHSA
OEl0MucWt2n2wcQEkdih+JqiU+LLrFZABJ1gZFsmFKqFzReMUIYhwVZxw7Fi
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
AAAAgKHkfxhA87c=
     "], {{0, 444.}, {1046., 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->144],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{390.95874999999864`, Automatic},
   ImageSizeRaw->{1046., 444.},
   PlotRange->{{0, 1046.}, {0, 444.}}]], "Input",ExpressionUUID->
  "101c9057-9588-4d1d-8fe5-c853da4e3ff8"]
}], "Text",
 CellChangeTimes->{{3.819518185711096*^9, 3.819518188292141*^9}, {
   3.819519155177791*^9, 3.8195191987260857`*^9}, {3.819519251655056*^9, 
   3.819519273942664*^9}, 3.81951937499249*^9, {3.819520373870449*^9, 
   3.8195203754734983`*^9}, {3.819801625970118*^9, 3.819801626025324*^9}, 
   3.819801765046074*^9},ExpressionUUID->"93c9c2f1-06dd-40f0-8349-\
64b9eb3937c7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CNIG", "[", 
   RowBox[{
   "u_", ",", "v_", ",", "\[Alpha]_", ",", "\[Beta]_", ",", "\[Delta]_"}], 
   "]"}], ":=", 
  RowBox[{"F2NIG", "[", 
   RowBox[{
    RowBox[{"NIGInv", "[", 
     RowBox[{"u", ",", "\[Alpha]", ",", "\[Beta]"}], "]"}], ",", 
    RowBox[{"NIGInv", "[", 
     RowBox[{"v", ",", "\[Alpha]", ",", "\[Beta]"}], "]"}], ",", "\[Alpha]", 
    ",", "\[Beta]", ",", 
    RowBox[{"\[Mu]s", "[", 
     RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], ",", 
    RowBox[{"\[Mu]s", "[", 
     RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], ",", "\[Delta]", ",", 
    RowBox[{
     RowBox[{"\[Delta]s", "[", 
      RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], "-", "\[Delta]"}], ",", 
    RowBox[{
     RowBox[{"\[Delta]s", "[", 
      RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], "-", "\[Delta]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.819518189338543*^9, 3.819518220859734*^9}, {
  3.8195192861290417`*^9, 3.819519287127159*^9}, {3.8195197771142273`*^9, 
  3.819519778007903*^9}, {3.819519813861994*^9, 3.819519885822287*^9}, {
  3.8195201301879177`*^9, 3.8195201525517807`*^9}, {3.819520236266234*^9, 
  3.819520249415814*^9}, {3.819520383316399*^9, 3.8195203885049353`*^9}, {
  3.819520456056508*^9, 3.81952049414478*^9}, {3.8195211925109873`*^9, 
  3.8195212000199633`*^9}, {3.8195227496475782`*^9, 3.819522755003859*^9}, {
  3.819558072321418*^9, 3.8195580935184937`*^9}, {3.819558994717226*^9, 
  3.819558995577005*^9}},
 CellLabel->
  "In[922]:=",ExpressionUUID->"ff7f60a0-927d-40a7-b82b-218c0dd8d070"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"CNIG", "[", 
   RowBox[{"0.5", ",", "0.1", ",", "5", ",", "0", ",", "1"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.819519968504087*^9, 3.819519978687138*^9}, {
   3.8195204027793293`*^9, 3.819520405878986*^9}, 3.819520611099866*^9, {
   3.8195216293517303`*^9, 3.8195216315353823`*^9}},
 CellLabel->
  "In[923]:=",ExpressionUUID->"0089ddc9-947a-43c7-a53b-0e49114fa045"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"4.033006`", ",", "0.06387574880740948`"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.819519980733294*^9, {3.8195203910547447`*^9, 3.819520406351459*^9}, 
   3.819520535922637*^9, 3.819520617992988*^9, 3.8195216321833067`*^9, 
   3.819521732699299*^9, {3.819522766881645*^9, 3.819522771132745*^9}, 
   3.819545964368204*^9, 3.819558114627116*^9, 3.81962572697613*^9, 
   3.8196267915470343`*^9, 3.819801891481966*^9, 3.819828773803203*^9, 
   3.819828984354349*^9, 3.819866956347156*^9, 3.819869091021245*^9, 
   3.820343015524013*^9, 3.820389662224893*^9, 3.820426586581306*^9},
 CellLabel->
  "Out[923]=",ExpressionUUID->"7dc2098e-4ed3-4823-a25b-57cb8f2d873c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"CNIG", "[", 
   RowBox[{"0.5", ",", " ", "0.1", ",", " ", "5", ",", "4", ",", "1"}], "]"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.8198019249024763`*^9, 3.819801953551475*^9}, {
  3.819801986862886*^9, 3.819801989547885*^9}},
 CellLabel->
  "In[924]:=",ExpressionUUID->"64868908-9f7f-4eb8-b9ab-4642cde432d0"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"18.524564`", ",", "0.09856019003850902`"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.819801972153488*^9, 3.819802008561153*^9, 
  3.819828792362226*^9, 3.819829003325047*^9, 3.819866975277548*^9, 
  3.819869109471064*^9, 3.820343035609058*^9, 3.820389681963688*^9, 
  3.820426605159124*^9},
 CellLabel->
  "Out[924]=",ExpressionUUID->"157d59c3-0a07-455a-bbc7-794050682ac2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Spearman\[CloseCurlyQuote]s Rho",
 Cell[BoxData[
  RowBox[{"\[IndentingNewLine]", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzs3XfcFNXZx//8fk/yJK88eaUZG1aM3dg1drHFYO+999h7QekgTUWK9CZV
OkoR6UW6oICIKEVFBGkKSBXN/PxOfmuWmzlnZ2Zn9ty79+eP9/Mk4d6ZM7Mz
szPXXOe6Kt/56JX3/r+/+MUvnvzNT//nyjuePfuJJ+6odtUff/ov1zzy5P33
PXLP3Rc88tQ9993zxMl3/s9P/2Pt/+cXv6j6q1/84pc//ed/e54HAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAlIIVKzZ4/frM8ao9M8y77squ3vlnt/Gu
vaKr/9979njfW7x4rfMxAgAAAAAAAEBSVq3a6LVtPcWPhe7yy+e8P//Ps1an
ndjcGzXyU+fjBgAAAAAAAIC4Jk5Y4t1yQ09v119XyxkTDfL4w29627f/6Hw7
AAAAAAAAACCMbdt+8Hp0n+XngMaJiZZ1+829vB//7X67AAAAAAAAAMDku43b
vOZNJ3qH7d8gkbhotlYtJzvfPgAAAAAAAAAoa+vW7d5rLSZ5f61UN/G4aMaR
BzcihxQAAAAAAABAuaI+9Ipdxol5qibpqSc0866+rIt3XpXW3p6/q279+wnj
FzvfXgAAAAAAAABYsGCVd8F57SLHRP/yq+e8i6t28Lp3m+WtW79lh2UqD7Vj
++nGzz78wEDn2w0AAAAAAACg4lIv+UYNxni7//b5SHHRA/eq59WtNdJbunRd
znUcd8RLgcuovEcd74cf/+18HwAAAAAAAACoeD75ZJVX5dSWkeKiJx3b1Ov6
+kxvy5btodfzYr3RxuV9/vm3zvcDAAAAAAAAgIqlW9eZXqU/1AgdFz3njFbe
8LcXxOqpNG7cIuNy58xZ7nxfAAAAAAAAAKgYNm/+3rv/3v6R8kWHDpmf1zrn
zfvauPzZs4mPAgAAAAAAAEjf4sVrvdP/3jxUXPSAPet6nTvO8Lb/8GPe623e
dKJxPcuXb3C+XwAAAAAAAACUttGjPvUq714nVGz03jv7eqvXbEps3ZdU7Rjc
n+mn8bjeLwAAAAAAAABK22stJnl/+d9qOeOiB+1dL++59GUpP/Qvv3oucH1X
XtLZ+b4BAAAAAAAAUJo0N/7xh98MlTOqWOWqVRsTH0PL5pOM6+zQbprzfQQA
AAAAAACg9GzctM279oquOeOiyu18qfG4WH3pw6hySsvA9e7662re6tXJx2MB
AAAAAAAAVGwrV35njEtm+2ulut64cYtSG8fcuSuM677m8ted7ycAAAAAAAAA
peXLL9d5xx3xUs7YqOKnS5euS3Usl13Yybj+/n3nON9XAAAAAAAAAErHihUb
QsVGb7upl7d58/epjmXQgA+N699v11reli3bne8vAAAAAAAAAKXh23VbvNNO
bJ4zNlq7xojUao1mLFy4xqu8Rx3jGJ5+Yojz/QUAAAAAAACgNGzdut276Pz2
1rio+iF16TQj9bFozv7fDmpkHMf+u9WmLxMAAAAAAACAxNx1W29rbHTvP9X0
xoxemPo4FPc8/siXrWPp0G6a8/0FAAAAAAAAoDS0aTUlZ2x0+rSlqY9j9ZpN
Oef3X1y1Q+pz+wEAQPmheuejR33qv6dNu/Y5AAAAgIpn1qxl3u6/fd4Yj9S/
jRu3KPVxqC/UScc2tcZGjziwoff1198532cAAKRp+fIN3oIFq7zJkz7z5s37
2vl4XNm+/UevY/vp3sH71P/5XuDQ/V70Zs1c5nxsAAAAAIrPhg1bvY2btu3w
v63/6X875rAmxnjkLr98zuvXZ07qY1uyZK11HJmaox99VHGfEQEApW/s2EXe
0Yc23uk3sOq5bf05Fq7HV0hvD/vYO+GoVwLvCY46pLG3/YcfnY8RAAAAQHFQ
XuaVl3T2Y51y/dXdfn7Guu2mXtaY5KsvT0h9fHPmLPcO2be+dRyVfl/dmzL5
c+f7EgCAtHTqMN37y6+eM/4W3npjT+djLATNE7nswk7W+wIhhxQAAABAWGef
3mqnZ4pjD2/i3XHLG9bnjkI8hw0dMt+vbWobh+b3j3jnE+f7EQCAtHTrOjNn
PHC33zzvz/twPda0nVeldc59IW/0+sD5WAEAAACUf6otGuYZoyzNdV+3fktq
49KcuLq1R/r5rLZx7Pm76sRGAQAlbeSIT7y//G+1UL/P6k/kerxpmj9/Zeh7
lXZtpjofLwAAAIDyT/Pjo8ZGla+puGpaY1q0aI13wXntco5jrz/WKEhfKAAA
XPnwwxU551FUpJjgzPe+DL0vmr0y0fl4AQAAAJR/l17QMXJ89LUWk1IZy3cb
t3l1a4309vi/F3KOofIedbz3ZnzpfP8BAJAW1QI/8uBGkX6jmzQa63zcadq6
dXvOmuQZLZq963y8AAAAAMq31as3+rXKojx3XXdl18THsW3bD37PibDPO3pW
XLBglfP9V+oUr964aZvzcQBARaQ6M5dUjf4Os2P76c7HnrZ3Jy7xKu9eJ+e+
6NBumvOxAgAAACjfmjedGOmZ67DKDbw1azcltn7F3lq1nOwdfkDD0GNQTwb1
rXW970qZ9u9Vl3bxa7+qT/L1V3XzY+muxwUAFUntGiMix0Zl1MhPnY+9EFQD
/c1B87w2raYY9wX9mQAAAADYKC/lqEMah37eUqxs4oQliax71aqNXv26o/w5
8lGe+Z589C0/19T1vit1QX2BLzq/vfNxAUBFMfztBTn7E5osXLjG+fgLyVaP
VPvR9fgAAAAAlF99e8+O9Lz12MNv+p9bsWKDN2vmMm/Dhq2R1zl1yhfevXf1
DVVfNNsBe9b13nrzI+f7rCKYN+9r4/egvlmuxwcApU45/H+tVNd4La70hxre
2ae3Cvy3XX9dzfv++4r1HnHY0I+N+0qxU9fjy0X3VV06zfCeenywd9N1Pbxz
zmjlHXFgQ+/Eo1/xe2j+8OO/nY8RAAAAKFVnnNQidHzy0P1e9BYvXuv9655+
P+ez7Pm76t6Vl3T2GjUY440e9am3cuWOc96Vn6q+EmPGLPRerDfaO+nYprHy
YO65o89Oy0Z6+vedY/wuZs9e7nx8AFDqVOfb9ruo95t/Pyb4N/WU45s5H3+h
de44w7ivvvxynfPxBdG4VF+o6rltc+YJv/Dc287HCwAAAJQi5XFGiVE2bjjW
j5Hm+rtKv6/u7fXHGpF7PgU567TXvCmTP3e+ryoa9T02fSfffLvZ+fgAoJT1
6D7L+tuoHMMlS9Ya/z0z16MiqVdnVOC+UNyxvOXSKjf46su6RLof2v23z3ub
Nn3vfOxI1ueff+u9M3yBH99v+vIEr+GLY7xmr0z0uneb5ecWqE7G9u0/Oh8n
AABAKdMc97D35eqd+0qT8XnHO8M6+bhX/RzGH//tfj9VRPfd3S/we1GtWNdj
A4BSprkStp7sem+oGty23ooD+891vh2FprktQfvikH3rOx9bWUH1vcNYurR8
5sHCTt/b0CHz/Vzh558d5t156xveBee18w7cq16o7135BsoJ11yqFs3e9SaM
X+x9u26L8+0CAAAoBVu3bvdrl4W9J1ftricfG5x6XFT1toYMnk9c1LHzz24T
+P2ce2Zr52MDgFJ29+19jL+R+t3O9F0yxdiUZ6ie7q63o9D0Hjdof6hGq+ux
ZZs/f2Ws+6PDKjegBmkR0X12pw7TI9WxiuIvv3rOu/7qbhXyXAcAAEjSV1+t
D30PdtWlXfzPPP3EkFTu8TT37ZrLX/cmTljifL/gP0w5Dffe2df52ACgVKme
jO33sl2bqf7fLVu23livUvO2XW+HC8ce/lLg/rjlhp7Ox5ZNvS2j3iepn+WI
dz5xPnaEM2rkp97RhzZO5Z65rIurdnC+vQAAAMVs7pzlOXsBZMyYvtT/jN6D
J3lPp370mmf06aerne8P/Nf6DVuN35nqYrkeHwCUIs2bMPWjlwv/0e7nuRWt
X5ts/Lsund9zvi2FprxK5c0G7Y9qzwxzPr5sqo2gOf+m7+8v/1vN77ulfFjV
ulH/y0zOMMo3HYc1nh9ekLhotkWLOD4AAADiUPzr+CNfDnXPpd70mc8tXLg6
73s45SWq7tJbb37kPyO43hfYmfrTm76/Pm/Mdj4+AChFgwZ8aLz2Kn8wO0Zm
qoGi2Nrq1Rudb0uh2ebEtGk1xfn4ytJ8mewas/reLr2go9ex/XS/d5Pr8SE6
vbsw1W5P29y5K5xvPwAAQLHRu+3rruwa+p6rbO/4Iw9uFPh3e/+ppl83VHXj
69Ye6dWq/o73Yr3R3qsvT/Dv998cNM+Pr7refuQ2aOA84/GQySUGACRHv80n
Hv2K8dqr39XM36rXi2n+h2JsrrfFBVtdgmFDP3Y+viCqG6l7I70vXrN2k/Px
ID9NGo1NJNapuqJR/v6IAxvS3x4AACCG2jVGhL7nqnJKy50+/9Tj5h5NZWOp
KE6KaZu+44qYlwQAaVO/edN19+B96nvfbdz289/a+tZ36TTD+ba48EavD4z7
ZN68r52PD6Vt5crvvD1/Vz3UvfVef6zhHXfES17Vc9v686lUt2jkiE+8L79c
93Occ9Om7/0582PHLvLat53qPfHIW37OuD6bvay/VqrrffDBV863HwAAoNjY
nh+C9Ozx/k7LGDdukfHvVUvU9TYif489/Gbg97vPn2s6HxuAdOm5fPKkz7we
3Wd5rVpO9ho3HOu91Hic1/TlCV7b1lP83tuux1iKzjzZ3ONa8ZHsvz39780D
/27XX1fzVq+pmHmIDeqPNu6/7Nhyxvff/+Ct/WazPy9fsa3Nm793vg3FasmS
td7rXd7zHn5goN8rSMfnyce96p1XpbV347Xd/XtD/fuCBaucjzUtTS3vlUX7
RHnCq1bl945Zeebaj5rno+WpXpbrbQcAACg2U6d84dcvCxsbVZ3QrVu377Sc
7T/86PdVCvrMMYc1cb6dyN/lF3UK/H5PO7G587EBGYp5BMU9EJ1iRZrnq77n
u/0muMdNhuZ1v9JkvPMxlxLliJn2998OarRDrW5bfeirLu3ifFtcueeOPoH7
5KC963krVmzwBvSb673w3Nt+/QHl4wb9rfo76d9U50C5ffff299r8eq7fq1Q
6qXvaMuW7f47lHPOMPcTC6K+U+otpvcwrrchSRed3964zeoPxvEDAABQPnz2
2Td+vDPKPWx2rbOy9Mxg+txHHzGPrdhp3lfQd3vDNd2djmvx4rV+DOftYR97
GzcRF6todB3T8/hD9w/4uU6j6rRdf1U36j7EpLhRvTqjjPEiW4yUa31yFNcM
mzv6zJNDjH/bu9cHzrfFFVO/KlOd1qj2362298iDA733ZnzpfFtd0jVDdZpM
78nDOmz/Bv7vuevtSYrqUZmOm08+Kd28WQAAgGJz9unR3u9rjp7mnJmWN3TI
fONnNQ/T9fYiPs3dUg5N0Hf73NNDnYxJPWGVr6b+vpmxHLrfi9TcqgBUN7B6
teHGmH2GcnfSGsOGDVtLLk9V26MYR6Xfh6uXF6Rdm6nOt6MUaK6sKYan95rZ
8771nyvvUSfwb1X/pNRy8qKIGuPPx0Xnd/BzSl1vs43O8STfI367bouffxu2
xmZYqqup+w7X+ytf997Z17iNmrtV4/nhfmzZ9TgBAAAqsrlzV0S+X731xp7W
ZeoZzPRcfdZprznfZsS3bNl643GhOXGFHo9q6Zlyq44/8mU/dup6nyFZ6k+h
WslR520qvzjJcehZVseeYlellKc6Yfxi7/ADGuYd1+jbe7bzbSkFjxvqPYv6
tmT/beeOM4x/q7xq19vigmpDdGw/vWCx0bJxUtUucr0Pss2atcyvkaPrllx/
dbe8a9IOGTzfO2Tf9OLPii0We4zU1l8tQ7VLbrquh583S71bAACAwps29YvI
96qT3v0s53J1zx30Wd2P23JPUb7pWc90XChvuJBjmTL5c++wyg0KGhODO3o+
Vk+4ow5pHOsZW++CkhqL+ggfe/jOOau2PFXFaZRjpbytQsbtld8aNk+sZfNJ
O+Rhx6X4atScWvUR2UAvkR2sW79lp37UGcrTy47H6/zQOyHTdzJ92lLn21No
qtt6/N/M+6RQ9E7ZdZ8c9Tq/45Y3AnOR1TMpzjK1Tba8yCQpj9T18ZQPXf9z
zXPIpvP+lht6+r95X3/9nfPxAwAAVASqoa/+BGHv2U45vlmo5XbvNsu4jA7t
pjnfbsTTr88c4/c6Z87ygoxBsaVmr0z06zzkOl6Zr1YaVMsyah2QbEcc2NDP
O01iLJ9//q139KHmGK1i8rqujhr5qT/3X31cys55Vo0KxVdvu6mX17/vnFR6
cygn7MpLOv+c36o+0bYYTa3q78Tat9nxFsVW1d9m4cLVocep92WXXdjp52X5
ebgVtMd6WW1bTzHu97L5oOpVbfrbM09u4XxbCkmxedUCLUTcLizVRNa1o9D7
Qu8c1B/eVBcnQz3moyxX79Zt18Eg+s3W9fDOW9/wqd+b+tjnGlvGay0mOT+2
8qF3dPvtWivWNfaMk1r4NU+Un5DUbxkAAAB2Nm7cIr9GfJj7NM1TC7NM5bXo
mTxoGXoWdr3NiEdxSdOx8c23m1Nfv9Zx3ZVdQx2revZyvb+QHz0HNn15gl+f
LW5cQn1Ckprjqh5Q6hduW5/ig3v/qWakMSrO8M7wBYnuu3+c1Wan9VxStWPg
30aJjZ5w1Ct+z27loyknSp/XOwv956hzYPX3QX1LTON0ZevW7f7vpPJrn31q
qJ/Lpn2m/z5o4Dy/Rmga69X7SNP38OGH/82H1v5X/MT0txWpL9Osmcu8Yw5r
Evt6oc/efnMv/7qjegV619ul83te86YTvbq1RnpPPvqWH9s798zWkd4ti/Kq
ly5dV7B9oV6FueZYZKiWc5hl6pxt1GBMpDxzHZvaj6b3M6rJNGzox37s1LYc
xVGzj/tiNHv28tDfiYnu1++6rbc3aMCHzMMHAABIgeZ9quaR5oGZ7sn0zB9l
/uMF57ULXI5yCNZ+k34sDckz9Uau9Icaqa/7/fe/Cj23Ws9ja9aSg1bMxo9f
bI0Pmei9zOl/b+7HsJTvnNS8VuV+5YqN5kv9TZKos6dcbtM6yuaJvdx4fKix
3XBNd782aZLfserImtbnIteuLPWVfvShQaHi3eq3Xe2ZYYmNW33QTetSHCn7
b225o0nmTpd3w99eEPldivK4H3v4Tb8+5MqV0ecxf/zxSj9mHjYvUO8DFG9P
cz8oXq5Ybth9oOva9h9+/Pmzqh8yedJnXp83ZvvvAFTnVsurW3uk8b6uLOU8
6pqhOjhhx61rX65xKy6dZH0S1R4ZM3qh/87nqccHe/fd3c978F8D/Jxb5W/r
+036+1F+/L/u6WfsuxaFrk0P3Nffryvr+vwDAAAoNaed2Nx4H6b5alGWpblQ
pmX16D7L+baWV0n3lU2S6peZnjHTXG/X12eGfu5VD7BC5LIiHcuXb/Dzt6I+
I+p5U3EivetJY0xR55LGpVhNvuO1xR2z869s9TKy4znKyUt6n6qmgO19x/z5
ycclooytTs0RoWp4lKUeK889PTTvXvEPP2CeH/5GVj6oYkWnnmB+j9CqZeH7
5rmgY9TUF9L2W5HU+vUepkmjsTvV0giiOFxa+0Gx8Ltv7xNpP9xzRx//+qn3
SlH3oWm/Kk8y7jYoDmtbvt7l57OPdM4oX1XxW9XxzbU96pmk34Ckvyu989Wy
TXOtorrwH+38ugeuz0UAAIBSoPtZ271X1PfTyqMxLUv9m1xvbzblxSqHQM83
mjun3th/P6apd9KxTb1rr+jq53UNfuujVOviqQZ/ee+Hrf4zQd/nP89pm8r6
lGdjixOUpVhOGvExFIZ6nkepz6a53p06TI/cCygKxT3i5LHmQ3lL+YzZFl/I
zAFQ/FF537ZxKE6d1vzNdm2mGtd75MH/zWcrNNW6tcUbw1KMKG5fFcVW990l
+DzQ3Nrs72RAP3NfbPUUL9T8W12rVUv36SeGeI0bjvVzEAv1nekc1TET9TtS
TDDpsehapJzsXO/zRo/6NPF1K/8y6rulNNx8fQ+//nI+26LazKbl2/rg2Sh2
3Kvn+/69XdRtOnif+t4HH3yVyvH7xRff+jUL9HuWxP5XfHzVqvJ17wgAAFBs
ar5grkGnvII4y6xy6s615UQ5Cq7rJqmWoOppar5Y2DwhxS01v0tx1LD1usI6
r0rrxJ4D0mLqBay6DEmvS8/XUXry6BilbkNxUj5PjeeHh/6uFfdRX98k5qLb
aPl6P1Lo+IJiK/nUtDTVSdEccP27aoXa5gqI5mymtX917dd3aFq38sVdHIc6
psLkk4Wl/NiFC9dEHoctr1fxx8zfKYasvj+mv239Wvq5o4oHvtR4nHfgXjvW
4tR7jhnTlxbkezPVfclFc8fTGpPeJ9vqTGrORdLz7MPWyigU3f/NfO/LWNui
95ymmLfeIauvW9hl6TxRDdmw9XlMdIxHWW8cyu9vUH+0/643n/n3ur6SSwoA
ABCfLf+iTat4+Ux6bjItU70DCr2Net7XvKrLL+qUSO2n4454yZ+Hmc9cMlHO
kmkd6oft+tjIMM29U/21JNej2pNln7dtlA9S3nJtEZ7mm4b9rpVXVKg4eL06
o/K+Rqjfy7139fWvhV06zfDpmpEr9q9+83HHbcp/vLhqB//f9X7Htm7lH6UZ
e1bczrRu5VC5yB3VPPR8v+sgqu0Yta6l8u9My8uuj6BcONPfKTa3ZUu6dS4V
T1ZenWkMyk+OUn8yjoULV1vfb9p+59ULPM2xac6/rY/RK03GJ7Yu5YPHqQeR
No1J91xxtun1Lu8Zl6u86TDLUF+1k497NbHtiVpnKh+6bugc1/VYfQajjlX3
a0n1JgQAAKhIpk9barzHUj21uPPKbXG/JOrshaX8NPXwVTwzrecA5fGo522c
OlV6TjMtN+meKHGp35FpjOptkNR6WjR7N1JvXMWf0qgNhsLQORPme1acacjg
+QUbl867uO9QlDun/h66/pmWr2uS6nbY4gpxjmvFNU05kI//dM1V3RNbjqRi
qJm+9GnQstXH27R+9WQu9DGomHWY71XHg+IUOhbD9GzKUN2UsGNR7dO9/hhc
90A5v5m/U+6hrV9Yh3bTUttfmg+sd4xhtl3xU21TWmNR7UzTuhUXu/qyLsbz
qxB1vmvXGGEc3z5/rpnYPGjbfHTXFKfTPWbUbdK+MV2DX6w32vpZ5airR18a
2+Kivrmu68rH1ru1KPUBKu9ex1u2LN2cVwAAgFKjfhKm+6t8a4Wa5jTp2a4Q
26YcDtWCK9SzgGJ72mcjR3wSus+qrd90nJjQuvVb/Dwjza8q2686rrlzVxjH
qLpz+S5fuU62Z90gmi+sOgmuzx/Eo3MkVwxSz6Pqn1zIehxal+a/Rj33FXdU
/2Wdf2HXZTvm27edGnnsOt9Ny1PepqnHmn8+VW6Qao1l0bXCtH7VyEiyN3UY
mv+bK+9Ox6jqIJftTa85wIqj611frh4rQ4eEu44rd960DNX1zPyd3kmZ/k6/
rWnFJJW3FyU2LGnU2hS9PzB9d/odVo0K0/1Hkr2ZbPQ92OJZTz6Wf68mzeWP
8k7Rhb9WqhurJq2pRoGum6bPfPrp6lg1o9VbS/nr+qytDna3rm7qf2RTfadq
zwwLVa9b13zX4wUAACgmtrn1A/uHm8dk8uSj5nf4H3+cXo9iPZdUrzY8sd6g
ceheW3WvctUZW7p0nXEZ3bvNCrW9qnOnnLWguI5yWzu2n+73J4i7P98ZvsA4
xnzncKmmV9QYtvK4XPa4Rn6UG5SrhsKlF3TcKSZVCLa6ILaxxonVaz+Y+iTd
e2ffyMuznafK1bXFo/PtqRKGqceb5NuXOirN489Vh1WxxokTluRc1tixi/x8
QNNylG8ZZky23lqZ/jDK5VdemOnv0qjfqrxf1T6N8zuo8ymN70/xYtM6H/zX
AD8eZ/p3vRMu1HE2ZsxC4zh2/+3zeeX36V2M5lDE+V7i0PVD+07z1ps3nejd
ckNPa42FbHHmDJ1/dpvAZel/D/r7Ee98EqnH3xEHNvTrtuoeLHs5upabYs7q
4VmoYyfM9693crZ+YPrOPvkkfj1rAACAisSWu6h5fuqlm8/yh79tfl7XXOo0
tmnFig2xc0ZV1149WR66f4BfA9DW/yKsQ/d70e/XbJq3qv67ps+qLl6ubdWz
YJg4sGoexs0P69zRPAdV8y3jflfK79X+ibI/lb8Ut+8Dyofrr+pm/Y7VcyXt
/ktB1N/d1Ds8iM479XnLJ+/xsguD5yqfeXKLyMt61VKvQPmZpn9TnCPtfata
kab1q/dboXNHlQdm+26vvKSznyMadnnvv/+VMW6p4yRMb5eLzu8Q+Hm9D8rs
H/VdN41ZuYpJ129VD6YrLu4c+/cvrVikKcdbcS39JinX1TSmwW99VNBj7ZrL
XzeORb0x4y7XdiwkTfv73Yk7vyvQcan7SF0HFW80fX7/3WpHrt2hWGTQslSj
o+zfKl4b9n24rjd6j2AbT9Vz2xqvo4U8dsJQ/NOWM6sYqusxAgAAFINGDcYY
76luv7lX3stXfNX0bls5V0lvj3IKbXXZytLYFKtRvTY9vwctU3Xye3Sf5d10
XQ9jrlcYqn8aNM9Sz7Omzyi3wbStygm15SwF0fN3nLiTqVeNchPi1iscNHCe
seeTifJtlLvi+rxBfOrXYfuO1Tvd1dh0noc9FjW3N4mcR22v6XoRdVnq5RH1
uqRrYD7vOMKy1WJ8rUWyvcR1TVVOmPoDaU6/aguoZqFqvioPUrlstt8Jfbea
l6reWib33d3P39/6XVBe7EnHNrXWdlVub65xa45v0GfVs0n/bstFlLi9cEwU
Hz6vSuvYv3miuFXSx5Kt3ou+D/2NLd81qbqfYWk+tCl2p9h3nF72ilXm872E
pXiz5uKEqXGid72m/nAStSeW5sQELUf3AZm/0f2Hzscw26K5UqpFH+YeSNcI
0zIKeeyEpeudqfaFrlOuxwcAAFAMqpzS0ngvmdR8R1MvB93jJtkjQTkMylEI
c5989KGNvTatpkTKDxI9I6gmqOpfRckzy6a8pLJ96U3zXhW/LjsGza9Ujmvc
552WzaPHIpSjGrQsza2L810pdzhq/xs9X+Zb7wFuqcaD6k6YvuMqp7aMFStI
gvKgbNfDbDp29ZydxHpNNUi1n6IuK07dvWefKsxcY1O+n+KzuqbFXa7mJ+u7
UJ6icnEVvyiP9Rhz9XJX3xfTZzWXXL89th6DitEm+X3ptzlMbFS/ubb3dGNG
L0z8WFI83bS+t4f9J0Z8zhmtAv89znuHJChH2zRmvSuMurywPbLyoTknmboO
YekdtWl5mocSZVl6P2xaln4ndE6o/1mu7dC9g97xRvlt0fuPoGUp99TF8ZOL
6lWZ3t/ff6+7d44AAADFQs+VpvtJ3WflO7c+I8yzTL5Uf/Ogve31DEVzufOt
xZmh2k/KGYrz3KG8Se0XxWSUy2D6uyaNxu6wTvWcUGw3n2ce1U34+uvvIm2r
qQ9w1DnA2l7FY+KMO06/GpQvb/T6wHpc6jwuj2Mrq23rKYmt95/nBM/jPPfM
1pGWo5rLuXoNBV2HlB+f9r5VvzjTGG69Mfrc/kWL1vh9u2y5auWNrt22bVIc
yvRZ5cCqH4vp3/W9f/TR14l9X4ojaX5Hrm1SjE7zlE3/rny2NN53mOZd675F
69O5oPevQX+jXMO0j/cg6uFu2k+2fkMmplxBWy3KsNQXSbn0cWpe6D2AablR
85v1Lte0LL1TuaRq7mNU94Vx5pyY4uv/OCu49qkrOtZ1fbDlwwe9ZwcAAMCO
OnWYbryfSrIenZ4LTetJon+r5sqFmVP/yIMD/VpqSW2X5jzm+xyieU+qS2f6
9+yY4OzZy3P2tAlLuRRRttWUV6e4adhl6D7e1j/bRn1LXJ8vyJ+eLcMc64Wm
60LYOrhPPPJWYutV/pNpTnbUOZG2OccmhepTY+ul89ab4WpB6jt6vct7xp4t
5Zny8HJtn+ZrmD6vfHtbbcVa1ePXsAwS5jqt2NTjD79p7RWl/oxpHE+mWroX
V+3g/7vqU5vGpFrghTjmg5j6gSmGF2U5tpo86sNmqzVso7ioalGEmUtv8uhD
g4zLV2/5pK4buWpYi+5b1Kcr6jYod3q33wTH1+PEspOm9/vKy1ZtljBzpmbN
WuZ8zAAAAOWdrWdAUnNHM0zxS825zGe5ym8w9TfJ0P1jmNpvUShXx7Q+5Xfm
6otc9tnW9G+ZeqWKfYS5D1buiO6ZVQPA1n9EY4yyveqHELScsPO2lIusugJx
ntk0z831uYL8qSew6Ts+/siXE+8rE0WD+qNDHYuawxy33m4Q1YswrUs1kaMs
K0r+qyjnsGzf5rSYcmSVv5prnsLabzb770fC1k4pb1QnIUyPcts8C9WoNP2b
+pfnE88qy9bjKwp9t/n0Zrcx7Y/Muwu9azGNSz0BC3HMB9FxbBpX1B7jpj7t
yq1Vr7AoueTKldT1Q+8w89m+XPMDos7bqfH88NjHn2L8cc+LUSM/NS43n/d4
qhmrd1J6r6CeSXrv0aXze16fN2b770eUX6uepiPe+cQfg2KgY8cu8kaO+MTr
12eOH9tXfd0odeeZWw8AAJDbli3bjb1xdF+tWmhJrs+WU7BkydrYy1UNUdu9
oeKyUXMWwrD1ftCzhuK2qilmqrmX7axTXzP+m3JGtX8O2bd+zuUE1TW9/mpz
jsXnn4fvyWI6VtS3Iddn1bPB1As2lwv/0S7vZzaUD7ZzVc+Irsa1evVG/9k9
17F41CGNvdVr4tfJDGKbw6x6clGWFTWWEGdeexy2XKzrruxq/JzqjigeUKxx
UeV73nBNd2/58g2h9pN6R0Vdh+rgThi/OLHvSv2fwvYAz6VsbZik6LfVVLta
NRf0N6bakZpz7/L3RLEu0/5S/CvKskx51HpHqt92zQ+yxUiV96s4ne4xkti2
8T8dh6aaBhInTvfQ/cF1z3PJdz55zRfM76yjXpczFAst9DVI78FVB8rV8Q4A
AFAsbPfpikklvT7NoTStT/VA4yxTPZdtcQ3NFVPOWtLbopwE2zN79lzKMHNB
bTX0lN+Vq8apYpem+NLECeYet4PfCjevVbF00zI0l8/2Wd2bq45inHt75UXl
07cF5Ytpzq6O3yTrXkSlvua5jkXFRnPVj4xq8qTPjOs78ejovZlMNYJN9BtQ
iP2rnCjTGEx1XBcuXJ133/Sy1LNJOXemGI7igspj9v1tR+rpk5H935UbqrnM
+s1UvRXFm15pMt7P31fcPcp+uuu23pG3Kcn567rWHrZ/g0T2tfZJknnW2bRc
03qbN53o/43pNzNMnYM06ffQNHblsEdZlmrkmJal+St6x637B8VJ9S5E+0R5
3KpppPk0ScaJtTzTO1TRORfnPbXeL0Q57hQ3j5p3H8T0WxW3H6WuBbbYcRpU
s0Hzjlwe7wAAAMXC9n5cPUOTXp+eC0w9hXUPHGeZmmdk2gbFTdO6N1TfAtt9
qeb76+9sdVezXfzPDoH/e+U96ng3Xmt/PtA9sObSmcaq+3LTZzWfM8z2Kv/J
tAxbP1rljZp6HOSi7y/JfiNwzxTvytQMdEUxE9NxqHc3yqlLOudMPWRs70XU
lyTqMsPUYM444sCGfn5mIfbvww8MNI5Dva7L/r3mmkaZP5qRiW/qd0E1SxQn
0VxV9YZS3m9me03vrPR9uDwObbn+QZQbluR7BcXQ4lyry1IMOo05Gxm5am9q
n5hyYNOqhxqFqc5x1LqWyhE13VPJKcc38+bNS/c3VH0edX6b8nkzosZ+M6LO
O1Ht1CS2S+84gpYfd666cmuTOLfCuuC8drHqrgIAAFRUZ51mntOt3gZprNNU
g07PwlFzTaZN/cJ6f9ir5/up7btc+ZCZviqqc2b7O223+o2Ycl1yPXOoJqjy
rHKN1zS3NWyPJs0nM41B9RODPqNnVFsvnlwG9AteLorXGSe1CPyuH/zXAGdj
0lxd0/mhOFta61Weoe26oHcLUZan8y3K+VW7xoiC7F/Fskw95RTPzf5bxaAf
s+yXIJpLrF6CfXvPDl0TxpQjqe/E1XEoV1wcvj6zfhs0NyCpdasWTNxrdTbd
V9je1yXFNG9cv2m2/undu81y+h2LKeanuH3UZanWuO37UPxUfSkXLlyT6DYo
L/X5Z4d5lf6Quy6J3hfHrS2t/Oywx16YWj9h6X1+2XXrOhZ3PpL2fxLnVy66
l1QNWP2uuT7OAQAAioX6YZieL/bdpVZqfVJUE8p0X6e69VGWZZtLGjcfNYw5
c5bnvEdVHUD9rZ73Tbki6v2ruqL6Lmw5ICbKLQ1bB0t/G7SMZ54cEurzU6eY
Y9HKrSv796o/cNH5wTmxYei5y/U5guQppyWpuEBSVKPDdByaYv/5Un6+7fjP
1FCMQv2Jo5xjaeeVZei6bhqDajhn/k7xCOURhx2/4nCaN/ztuui19Uy1UeLm
uCUlV5/BbE89Pjix9eo3SLVoTOvSew1b/WvVsVRcW78ThdpXpt807RdbnWPl
Erv8juXeO/sGjk053VGXtWrVRu+vlcy9u7LpfaXyIqdPW+rXzImyHsXb1D9K
+fSK44etUXvyca/GOkd//p53D/6ey1JPqqRjghp344Zj/fcvmm/11Vf59RrT
GOPcD+Wi40a1iwvxXgIAAKAU2XIvde+b1nqVl2pab52a4fOZ9C7elFupfIY0
5xWFyW/Krqk36d3PdniW0/1+19dn7vDvUe+Hle+mz4Ud85EHB8+7DZu3p16q
prGU7QWsPOBrLn899r2+6vhF7XGL4vCve4J7psgHHxT22U7XEB1rtmNR/TSS
Xq9in7Z1Kic8Vz/3IJqTHvYci1PbNC71ajaNI5P/qLzPKqe0DDV2xRCVH5jP
mEyxNY21kMdgWWFrLaqGQJxjxOSlxuOM61JNSc2VV5w7O1alWorKr1ZdcRf9
jlQDNmi8t93Uy58DHfRve/6uern4bTHVNtL44ixP7yhNOfAmej+uGqWK2an+
st41qH+66lGodq5qCKlWgXKq9a4zbJxyh+P0p+9o2bL4MUX1dQuzHsV9o8Z7
XdB5ouu/9rvqmEb9zjIO2LOud9WlXbxmr0z077/IFQUAAMiP4neme698+37a
qP6b7u2C1nvmyS1CL6d+XXNfgihx1qj0HB9mPtnbwz7e4XPKjdJzpJTtJap7
3Kj3x+3bTo00btP8fT0bhfm8+uqaxpI9v1/36aotEOeeX5SjpHpmrs8PpEO1
JEzfveYyrv0m3PzofOgapF5mqpGY63hUnldS69W2KQ/Jtj7lZI0bF69nku2a
WFbd2iML9p2rh1HQGDRXVfMUVBcgTI1i/W5oDn0SY1IMOmgdcWsLJkV9c3Lt
B8Ulk3yXoONSc0ZM68uug6vfLsXQ9Dumz6mmoupja7543VojvQ0Ra0Lk46Lz
2weOV7WETXU8lHPs8vvNsOWPx60JrF6LqjUR97c3aao1rdzWfPaTctxzrUd9
8/Jdj0u6/q1YscGfS6T5QMpv1hwlneOaE6D4p/IK9J8XLVrjtI8hAABAqXro
/gHG+82g+dJJMs0xUj7oypXhYmPqjRu0DMUu0+x33qTR2FDPBmHnvdv2h0mc
moia4xa0rNtv7hXq8+rBZBpPdjzTliuWSz6xIRQHxVfUd8t0DCivccb0pams
W3EHxflN7wqCKBYV1D8oCuUM6fwx1eDMpjyuuOsx9VsOUqhcXdXqM41BueuK
j4bJNde8e/WIS2pcpj5hqv/g8vxQb5lc+yJO3y4bxTVN61Kem6nWjnIMy86x
Vpw7rZ71Zen4CbwH+H11Y59w9RFy+f1m2Ob/55PfqnnztjoJhaBaQaptnERO
ca6auHv/qWbB6oQAAACgdJlyLxSjzKdWVBi23u/6t1yfV4zFNLf+vrv7pTZu
5caY5mXu8Hzw0zOjelOHXa7yZsM+e2hOVpz4r+ZjBi3v3rvC5cc1b2rOcc3M
8wzzbG+TZt4vyg9bPCZzDVIf79GjPk2kDrL6HHXpNMN4DuSiXj5x3hkpNqhc
fFMvoLKUd53PPElTzlxZcWocxqU+IaZxKN9NdZpzHQvKdY2bU2diqv+oWtGu
zgv1u9F3Y9sfN1+fbL8wnRu2POqxY83vq9QbPegzimkVYn+1ahn99ybqvIu0
6JgOGp/mvOe7bM1xURw4bH3QJOm6ne/7pGz6vmzrK9SxBgAAgNJmeg475rAm
qa9bc4lM97thciNtfUh6//Q8nta4Tc80+e7DMPN8M+L2izH1b3jy0bdCfV55
bUGf1zOY/n3okJ1ziYL+1vRvqh9WHurCIX2qKWeqh1uWci71zkPvTRYsWBUq
XqreYMpBVY6W5v4qnyyJZ3/1kNI7AM1/LFvrTjlzqmeq80C1BaO88xDNu883
786Wl5vtiUfCnfNJePap4HxyxT179XzfOk7V5lNN1TTGZZsHkGRdz7A0b8JU
TzND9QV07iS5XuWimtZ36QUdjZ/TeWi6nueTAx2Fre+XSb51a5NiqjOr62JS
61AvJcVJw14X4lJM99Ybe6bSG0jfl2m9vE8FAABAEpTbaHq2ue7KrgUZg6kX
h+bH56qvNGrkp8Z7ZtVtSmO8ixev9XsnhHle0HzRsMtVrm7Y55ArL4nXN0t5
r6ZlKk4QZhnqjRr0+X3+XNN7b8aXOWuyKk/V9G+qmaa6Wq7PCxSO4pdxauVp
3qziSJoHrdin8gCVd6nn80uqdvSOPfwlf35nnOf8PSPEURXfU78S5YYqp9yU
zx6Gap3kmyervsph1zdyxCcF+551zQoag+LeyoU3jVHfoWpcpjUu27xd9S4s
5LmgOp6nnhCci1mWckyTXLepNqzYYom23xTFxAux3xQrVmwuyrm2voD1UW3j
1rzwoPGl0RtT26y6z7q30+913OtUNu139bZTDm/a9cLvuq33Tr8Bqq2QdE45
AAAAKibF+kz3vYXq39u4oTl/R/fyts+q7pnps6pxn/RYNedVsZewzw6KJYZd
9uzZy0MtU7lUygeJM/65c1cYlxs231Y5Z0GfV25erpoDTz8xxKtXx9w7Rvl2
rs8JFN6Idz4J1eusENQLWD26w+a1JkHndId20xLZlxPGLw61TuWSFbLPsy3+
ZqNe2mmOS7nIpnU/9vCbBds/q1dvDF0XQdRPPKl1Kw5sWo/6Ldk+q1xn0zuB
QuYnn3tmcB3ZIEnmZuajt6XmhO6L0ly35mgoz7Nj++n+ca6+9OqJaHu/o5iq
6r2rvrH6SqnWSCF7BCkOqlxzvWN95skhfv6+6+8QAAAApcM2Z0nzRwsxBvUv
Mo0hVx975T+ZPqu590mP9ZUm5l6zQbp1nRl62eoFHGaZijHGHf+AfnONyw2b
K/XAff1jxTlUL0/PN6baj4rXqF6a63MCbuj9QJR+SUn720GNduiJruvSQXvn
7qOUL+W/JlmnT/VVw56Phfpudd6b+uTYPPX44NTHpjiR8n+D1q95AhMnLEl9
DMr5VT+yKPtGvXeS6n9kq/2aK3dX/cJNn9X5o5zYQhxjuerXZrv+qm4FO/az
Kdf2kQcHevvvVtunGremMeodjYsxak7Rl1+u869/ep+qa9OyZev9WiUuxgMA
AAAUyjvDFxjvzxWvK9Q4zjrtNeM4lA9l+px6L5s+l1Q+VobmYUbtczBrZvgY
rfIxci1PMUQ9j8bdhvp1zbmbYZ9j77mjT+Q4h3oZ6/nKFgvX/GjX5wPcUp/j
BvVHh65fkYSjDmns95QP6rGsOqJ/PyadmK36gesam08fpiBh40Rp1mcuS3PB
o+6fKqe2TKTvdRjPPzvMOA4di+Mtv0H5GjduUew+46rHkMQYzj69VeDyVas6
Vy1o5RDaxqg64oWY/2y7lylLfeEKdexnu/qyLqHGl+u9MAAAAIDkqW+w6R59
+rSlBRuHLedJORbD314Q+DnlOphiKcoHU03PJManWILmwEZ5dlXdvCg5F3fe
+kbOZdaqnt/8cz2rmvZx2GXcfnOvSPtBPaoyMV311jH9nWrJuj4fUD6oR03D
F8f453CcuFEYitmrp3qu+I+uMXp3oXyvfNepHEqdg8p7TzoumqG80Fzj0LUs
qWtjGJMnfRZpP2l8epdSqPEpf9MWk1ftB8XfklynakGaapXs8DuS451cvvOw
dRya+pbpXViuzz/60KCc26CaNGn07Mmmed5hf6M1j6JQx1aGrZZRWa+1mFTw
8QEAAAAVnS3nQnXZCjUO9QlWT17TWNQDQPNvgz6ruXKmz/3znLbemrWbYo9r
9ZpNfo5OnFjIyce9GmldymOzLU+5oxpPPvvZ1Bf5sgs7hV5GmDhuhvqu6Lkw
81nVEgz6O/XnSWquKEqHYjdTp3zhVa823M8xj9qDJZviXxed396vkbFwYfS5
q5obq1p9OldM8aQgOq/VN0qx2ELEJMPUsFQeWyG/R1tdjyCFqn2dTfF425j0
vqvFq+/mvR7lUqqutq0nVfbvnua3m/I7M8L21gtimx/ftvUU62c/++ybSO8N
L67awevXZ05qecE6v8OMo5Cx9wz1oQsztv12rVXQdxcAAAAA/kPxtqC8GdXp
z7ePclS5nk+ffCy4Ft3bwz62fk59pfv3nRNpjp+e++rWHplXzpjqdIZd3+ef
f5tzeVF6PQVRDNqUixQlHvHwAwNDbb96Nc2b9/UOn9X3YPp79V1wfT6gfNMx
rFxE5ZsrZnrbTb383DTNR9U8eL2TUP9vxUnU61hzzRWXVB29JOPvyil9b8aX
Xs8e7/v1AHRu6vqkMTVqMMaPf6kuiPJgC72PwlyzCn2utWk1JfR1U7ma6lVU
6P2mPOIwvfcUH49bL3bs2EV+f5tQ++H31X/OWVWdllzvBl5qPC7WmNTrz7TM
XLVHo84lyNCcgjjvKHJp0ezdnOtWDneunPE06NplqnObLYkYPAAAAIB4unR+
b4e4meKl6idd6HEoP8vWM1o9S02fzZVfI4cf0NCfz9j7/4+XKHah+e/r1m/x
c2WHDJ7v1ak5wq97F/Y5z5bzGqXvsr4D23qUX7l8+Ya89q/qJZiWH6WPVMvm
k3LuF+XABPXHUg6w6TM6BrUfXJ8PQLHSNTTXubn3n2oWtOe05Hr3lS2f/nP5
Ut7eKcc3yzlGXatUx6DPG7O9JUvWWmsl6F2beh3aamyXpTia3gNkL6dVy8k5
P6ccxajbrN8+0/JM8VHFr+PGRjPOq9I68e9P+zrXehWfdnV8Kf/cNraq57Yt
+HtpAAAAADv66KOv/Xmnyl3QM4arcSh+tu8utQKfHd6w9BOZM2d5pDmvSahy
Sks/V8z07+odFXa777jFPmddOZv57tt2baYal2+qXRDE9jwt+v5MtWuVt5Or
J7j2heKkypkqVH8WoBTYcgEzkurpE0XYnlGKO7r8/RG9hzrhqGi95PX+Sj2W
9DnlL6sXvebPR61ZLerbZcqtvO/uftbP6v1e1O3V+0HT8pQrq1zpzN/q+q1r
s/o2JfEbmkZv+1xx6PvvDT+vI2mKo//rnuDv8NYbe3rffJv8/gAAAABQvJTb
WTaHU7mjufqZKP8zzvNoHFde0tnP1TI9r0atp6n+SKZ17fLL5xKpBau5yEmM
VR78V3BNVsUEgvJGs0XJJdOcUsUalKtVr84ov3adjo8tW7bH3g9AqQrTB0nv
HQo9LvWVC3O+6zx3vQ9FdWf+cVabgvyWZCg2rDhydjyyLMUnFUczLUPX1jjb
q2usaZnHHfGSHydV3NfWwyr790TvWVVfxbq9/1vN27gp+TzmXPMblMPp+via
NvUL/3s8+tDGfi2QMWMWOh8TAAAAgPJJsdDx4xf7dQZV5y/s51QXQPNH03qG
VbxOdd4ytUz1zBj0d8phCTvmXHMCr7i4c977U8/VmvMetPzzz24Ta5mKVar/
leq5KYar+ZZff5273qLmD+bKlw0TS1DfG9ULVKxWcQEdK5oPqhiR6rm6PoaB
Qnt34hLreaOcdxfjCjM3XEx55y7oHYzpPVDSzj2zdei4ta7lQe+6dB1W/nCc
ba1fd1Ri29Kh3TR/meqLqHiv+goG/Z36/KXxvalujvZF0Dr1OxV3HwEAAABA
sVFvWvVrSfoZVjmjZfsNmXqhaP1hx6sadrb1Dh0yP+99Mmb0QuPyX6w3Oq9l
63k9ar8L5aveeG33VGMOqjOXRN4tUCxUJ8V2TrjqgTZ61Kc5z9dLL+jofP8F
UQ8u07ulfP3toEb+9T/X3IiydL199qmhP/dsUj/FfH4nFFNM4r2i4qFll62a
roqPZ+q66t2W3o9p/kVa35mpnsM9d/RxfjwBAAAAQCEpv1M9h44/8uW8nvc0
X195Lqa+F8r7Cfqc8hrDjvWpxwcb16+adkn0a3jgvv7GdUTJz02SYqSaT5tm
jFTzF5PsWw6UZ5qbbepxpznULvp2i3p322KMyvdTbNf1/jNZtWqj98yTQ0LN
Lw9Dff2aN52Yd50QxRgXL16byG+Ecu+z+zRGoTn1ioHmWof6OqUZF83Q/rj6
si47xaK//HKd82MJAAAAAFxRra8nHxscOlZ62P4NvLtu6+3nWuXql2DqOz9o
4LzQ4zvnjFbGsWjeY77br5iJKTah+GvU3KUkad19e8/2a9ylFSOdMH6x82MQ
KBTVllAuZvY5oLiei7qj2Zo0Gms8RzNzsss7zRlv0exdv/d61FiiYoiK2fXo
PiuVuptJ6N3rg59zUsNSz/XyOGdd70gH9p/r55KqN6H6ULkeEwAAAACUF3pG
Ui7ogH5zvfZtp/rPTZ07zvD6953j177TPMOoy9T89ExekfKCXu/yXujP6hnO
lJOkWmlJ1NEc/NZHxmfbas8Mc/6diPJ9ND9UNUyTnsuq2gKutw8oNOVj6hrX
7JWJ3uzZy52PR7mrjzw4cIceeqpN2fX1mc7HFofmjeva0rb1FK9u7ZH+Ozj1
Rte7tbtv7+M99vCb/m+Dtm/K5M+9zZu/dz7mMCZOWOKdcJS5X1OGasioBrXL
92sAAAAAgPJF80eXLFkbef7qihUbjM+fSdXjs81hd51TFkSxUo1Lubmqsafe
ycrpjRMbVbz6u43lM1cLqIjWb9jq994b/vaCWO+jkD69txs7dpH//kz9AfVb
pH7rqgWjd4qq8e16jAAAAACA0qG575V+H5w/qrzPfJev+EN2vla2Yw9/yfn2
R6F8LeX4Kh9LcyZvuaGnV+XUlt6Be9Xzc23Lbt9fK9Vlbj0AAAAAAABQzjVq
MGan2J76OyUxbzFo2RkN6ufXt7482bbtB++rr9Z7c+eu8MaMWejnPpXXGn8A
AAAAAAAAdvRai0neyce96h1zWBPv6SeGJFar7vyz2wTGRtVbJInapgAAAAAA
AABQXl10fofA+Oh1V3Z1PjYAAAAAAAAASFO3rjN3io2qVqf6KbseGwAAAAAA
AACkTXVG9/zdf3pA7b9bba97t1nOxwQAAAAAAAAAhaJeRQsXrvH7GLkeCwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAFBMtm7d7m3b9oPzcQAAAAAAAACIZuOmbd6HH67w1q3f4nwsxWblyu+8
66/q5v3lV895u/3mee/OW9/wvl3HfgQAAAAAAACKQevXJnuV/lDD+/P/POvt
/tvnvXp1RjkfU7H48af/c+6Zrf19l+2ay193PjYAAAAAAAAAdgP7z90ptic9
us9yPrZi8OageYH7T5YtW+98fAAAAAAAuPT99z/481V79/rAa1B/tPfAff29
a6/o6l34j3bexVU7+HMwWzR715s7d4XzsYbx3cZt/hxc1+MAkJxTjm8WGNu7
/KJOzsdWDK67sqsxPqrrv+vxAcVi9eqN3rhxi7z2bad6zz411Lvhmu7emSe3
8A7Zt7635++q++eUaljsu0st75jDmvj3US8897Y3etSn3vbtPzofPwAAAID/
2Lz5e/8+vXq14f49verQmZ6by9K9fv26o7xZM5f5cUjX25JtxYoN3pWXdPZ2
+eVzvuuv7uatXrPJ+bgA5Gfx4rXGa9IlVTs6H195p15MmboEQebPX+l8jEB5
tPabzd6woR/79z16b3zY/g1C3y8FUQxV75uJkwIAgPJqw4at5S7WAyRp+w8/
+jHRe+/q6+39p5p53d9nO+qQxt5D9w/wxo5d5P3w47+dbZ/yRU89Yef8MuVt
uN73APLT9OUJxmuQ8rJcj6+8mzzpM+t1/LPPvnE+RqC8+ObbzV7L5pO886q0
9t+1JnW/lE3L/vrr75xvKwAAQIbmlF1x8X/yzTQXhnwzlBrF/Vu1nOwdeXCj
VO7xs5183Kve+PGLnWznLTf0NI5ryZK1zr8HlF8LF67xXmo8znvs4Te9W2/s
6ecIaS7yfXf385q9MtH76KOvnY+xoqtySkvj+T3inU+cj6+8a9JorPXavW49
PeyBVas2+vNq9vqjOdc6Sccf+bK3Zi3PHAAAwC3dj+hZ+C//W22n+xXm6qEU
KCf6xXqjvf13q12Q+/xsTzzyll/TtFDbasstk3nziG8h2PC3F/h90HMd08pN
1nuG9T+dV67HXNHo/Ybpe9F3R63h3FR3xLQP9/i/F5yPD3BJ9URr1xhRsLho
tqceH+x8+wEAQMXVs8f7XuU96ljvV8g3Q7H68af/073bLO+gvesV/D4/2713
9i3I9r47cUnge44M5c2qtoDr7wXlj44L1YKLclwfsGddr2P76f555nr8FYXt
/QfvM3PTsbrfrrWM+1A1UlyPEXBhxvSl/r1KpqeSC5V3r0MtUgAAUHDK+1GP
yTD3K+SboRiph4l6zud7v67Y6rlntvauufx176LzO/j373GW07b1lFS3V30T
Dqts7pWw66+reRMczfdH+Wfr+ZPL1Zd18XO0XW9DRRBUVzijedOJzsdX3n38
8UrrsXz+2W2cjxEopLlzV3iXX9Qpkfim+ltqnvxVl3bxHn5goFen5givccOx
XsMXx3jPPzvMu/3mXn5fS9syNB7X+wQAAFQcX3zxrXfSsU1D3ev87SDyzVB8
evf6INbcsEx/pde7vOf3pA+K+Si3Qb2d7rmjj7fPn8P3dqr0++p+bce0tlm1
Im3rb/3aZOffC8ovvTNTDD3uc/E5Z7RibnfKVCPc9h1QGza3bl1nWvfhbTf1
cj5GoBBU96fG88Otc05sDt3vRf+9cd3aI71BA+f9dH+zOnTuZ5dOM4zLHTmC
GsoAAJS6zZu/975dt8Wv66MejStWbPCWL99Q8OfJ+fNX+vc0Ye59/lqprjdt
6hfO9x0Qlu7NVe8zyj2+5pyr1pZiD1HXt23bD97773/l9e0926v2zDDv8AMa
WtelfNY0trt/3znW9RZqfj+K25OPDY4dHxXlBrnehlKma4xp3x9xYEPn4ysG
jzw40HoMqx+N6zECadNzyD/OahP5Gn/ZhZ38mkXLlq3Pa/265zKtQ/dUrvcP
AABIjvJwdP+gfC7lo2m+iek+oJB94jWv7MC9ctdh1LtkxZjoI4lioncNtr4b
ZV1ctYOfp5Bk7UTFS233/bJoUbI5pHrvYquvqlzxTZu+d/79oPzT+4VGDcZ4
xx3xkl+LVMeOnqGrntvW2/tP4XKllXvtejtKkXK9bL/fjz40yPkYi4GtPoF0
6jDd+RiBNH3z7Wb/Gh8lLnrtFV29Dz5IJm75+effGuf3qDYw9UcBACgNygmt
X3eUt+8u5tr/tlhNmmP76qv11tqEGRec1456oyg6ut8/r0rrUOeaaomqj1Ga
41EenWn9SdfWevqJIcZ1qRcz5zOSsGXLdm9g/7l+rNR2fun5VvMkXI+31Lw5
aJ51vw8dMt/5GMu77zZu899J2/bjpHc/cz5OIE2qIRHmXmmXXz7n15ZW36ak
1r1u/RbrO4r77u7nfP8AAID4lNPRr88c74qLO8eu4ZPx2WffpDLGrVu3e1VO
aWld9+6/fd7vH0MfYhQb9SXKdXxL5T3qeD17vF+QY3zVqo1+fYqyY9Ac2CRz
IxYsWGWtGdni1Xedfz8oPX3emG097l6sN9r5GEuNrX+Kfr8V+3M9xvJO78Vy
/U4oH9/1OIG0jBmzMOc5oLrqLzz3tl9PNMl1a26d+p/Z1p1kLBYAABSW4qKK
d+QTE82WVp6XrWaZHzfavQ45EyhKut8OExtVzSzV2yrk2NQrPrvX/QF71vWm
Tkm2nu/1V3UzbrP65fzw47+df0coTR3aTTMee3o3oFoTrsdYKtTXTblcpv19
6QUdnY+xGDRvOtH6O3Hs4S85HyOQFr0bPv3vzY3Hv64xqq2ld85Jr1v1us4+
vZX1/Lv5+h7O9xEAAIhO+V+q9ZVUXFTS6hM/+K2PrM9VB+9Tn/m3KEqKv1x0
foec51admiOcxQmVi6R5sW+9+ZEfy01y2cqzMG2z5pDS4wBps+U0jhm90Pn4
SkWud5wtm09yPsZioJrwtv14xy1vOB8jkJbZs5cbj/1Kv6/ujXgnnb7xixev
9U48+hXruafayoV+hw0AAPKnGGbY2j1hKddm+rTk55SolrqpBrqoThyxURSr
B+7rbz2vVO+iW9eZzseZFtX0MG37g/8a4Hx8KH2zZi4zHoPPPDnE+fhKwebN
3/u1QWzXuk8+WeV8nMVA/TJt+7FFM+qRoHRNmfx5wY/9t4d9vMM8miCqD5J2
TXgAAJAOPfNFiX2qZ0yt6u/4dQDbtZnqde44w+/v2/X1mT7ldyadVyZffrnO
O3S/F43jUk6pene73p9AHKqVazvvdvvN8/655XqcabHV0av0hxp+rzjXY0TF
YOqDrN8+12MrBbmudccc1sT5GIuBevjlul+j9iFKmXrsHbR3vZ2Oe81f078l
uS71YdJ72lznnOa69O87x/m+AQAA0ek3PExMVHlr11z+urOanps2fe+dcVIL
6xg1X8/1/gTimDVrmZ9vYIuNlnov53PPbG3c/povvON8fKg47r2zb+BxqHq7
rsdW7BTT07xT22/5s08NdT7OYjB+/GLrftx/t9qhahxt2LCVXlgoWjoPdKxn
jnvFS9+b8WWi6xg0cJ532P4NQj0r9e092/k+AQAA0S1fvsGfj277rT/1hGZe
m1ZTnOduqYaWbZzqH/n99/TOQPFR7P/4v71szYtWb23X40yT6pmatn/vP9X0
Vq/Z5HyMqDheajzOeC6qH4jr8RWzMHXOFe9wPc5i8FqLSdb9mKv2qGojXnVp
F/+4Vs6beuOtXr3R+XYBUakuuubX6D1ykrF+1RnVORImj2SP/3uh5N9jAwBQ
yu6+vY/1t/6VJuPLxbNgzx7vW8ep+lurVnFPj+KUq75Fk0ZjnY8xTeoNd/yR
5vjwi/VGOx8jKhZbH3vy7OJTDQ1bb0VRXT9dE1yPtRjkqlc9aMCH1s+rXkTZ
z1x0fvvUx615yosWrUmlfyeQhI2btnn16ozyY55hYqPquaBaqK7HDQAA4vnw
wxXW5xTVF3U9RtFcPN13mMapOTULFtDHAcVJ8+qVt2M6vtWb2PUY09al83vG
7dc83A0p1DIGbFq1nGw8JtOorV0RKE/+2MOD67pmU20D12MtFmed9ppxP2pu
kK3+4kcffW38bFr3VIp7P/7wm/4cZK1H85XT6i8OxLF163avY/vpoebSZ5xz
Ritv6dJ1zscOAADis+WOXnZhp3KRNyo1nh9uHOeuv67mjRu3yPkYgTh0jum+
2nR8K5ZQ6rEYPYscVtn8HKI+Lq7HiIpHeUNBx6PqALseW7F64pG3QsUaBvSb
63ysxeCHn35AKv2+unE/PvzAQOvn1bfJ9Fn13UxjzKoRX3Zde/6uurdkyVrn
+xNmFaE+7dpvNntNX54QKS6qZ5D6dUdR2wsAgCKnmlN6zgv6vddckvJyr6qa
g+pbbbo3Ue0t12ME4urXx9wbTTmlU6d84XyMabP1sVYPa5474MJdt/UOPCb1
7Ox6bMVo5IhPQsUblFeoOoKux1sMFi5cY92X06fZ+9Yrn9d0H3jjtd0TH696
e5rmLL368gTn+xP/oZoHH3+80uvebZb30P0Dfq5949envbqbXxvB9RiToncM
06Z+4T328JvWZ40g6hf7wQdfOd8GAACQv2avTDT+5j/9xBDn48to1GCMcZxV
z21bbnJcgag0z9A217Q8nYdpUezziAMbGvdBqfekQvmlvoRBx+RF53dwPrZi
s3Lld34/6TAxh3+e0zZwGcpdUz1A19tSnqgXjWk/nnJ8s1DL0H1U0Ocr71En
0fsrzfO39SBs3LC0a2y7onNG874Vx9NcqyGD53v9+87xa/q3bzvVz5es+cI7
3r/u6eddflEn7+/HNPXzeW3n6MVVi/8aqGNb/RVUvydKTFT2+XNNPzeD2rkA
AJQOU80qvR/+/PNvnY9Ptm37wTt4n/rGexTe26KY9eg+y3hsK5ZQ6vPq5Y1e
Hxj3geJTvP+AC4rFZeojlqU54q7HV0x0DivuEjb2ULYXnea6XH3Zf/qrC/3V
/+uRBwca96NiX2GW0aD+aOMyVJ80qbHWrT3SuB59r3PmLHe+P5OwfPkGv75q
lVNaekcf2tiPv6kGguZhKw/z9L83T4zyF888uYV/P3/26a18+t+0nkP2rR+6
r1Ac6unuel/nw5YjYnP7zb28r75a73z8AAAgOcrlMM1x0nOI6/Fl2OYeX3P5
687HB8SlmIHyNEzHd0WpuVnl1JbGfTBo4Dzn40PFpH4xpuNSc05djy8pug4p
p0wxX52LfzuokR/XueeOPl6LZu/687PzrW/xUuNxkeIP6leX/flzz3TTX72Q
NMf3iy++9ff35EmfebNmLvNrHNn2vWLEptqjmicc9v3ahPGLjd9Ft64zE9k+
9XoyzeOXZ58a6vw7SILqV+ocSismWZ7MnbvC+f7Oh23eionezZDDDgBA6VHc
wfT7r5w21+PLuOC8dsZxjhmz0Pn4gLhGjfzUeGwfdUhjP3fa9RjTZusNcsJR
r/gxA9djRMVk6yO0aNEa5+PLl86t3r0+sM53ztjrjzW886q09q69oqt37119
/byrsHM3FHs15eEG+Wulujuc97b+6sX+PSi+pHnNyv0z5fnt/tvn/bj1M08O
8X8zsuOl6glj2jeKKYcdh58r/avg9+XPPZ1M3NKWP6waM5s3f+/8+0hC3JzE
YqPYouoDud7f+dj7TzVjbbvuzyZOWOJ8/AAAIDnVqw03/vYrt9T1+ET5BqYx
nnj0K87HB+Tjput6GI/vXj3fdz6+QlDfB9M+6NJphvPxlRrFQUq9/3ASFJ87
dL8XA49L5Ya5Hl++pkz+3J+Tm2+M5MiDG/lzs1etCp7rrnzIqLX91BMrexlv
D/vY+Lfvv1+c9XXUpyooJzaMA/as6z31+GA/x7by7nWMf3f37X0ijSnTf6es
G67Jv0dTrr5cY8cucv6dJOXRhwalFpMsL/QOoxRqWykXNO4+0Py7Gs8Pp3ck
AAAlQv0lgn7z9R7f9dgy6tYy16pq06pizD1GaVq9ZpNxruFhlRtUiHtu9U1W
j4OgfaDnfv276zGWCtVvvOrS/9Rv9PsPU7/RSjmPpt+eJx8t3tqjOqfUo9lU
WycuzfGu9swwb83aTT+vS3NQ48Rgy9Yu0H83/W15qZMelubLX1K1Y0FiWPXq
jIo0NlN+p3Jb89lmvWs47cTmxnEqH9n195KkDu2mFeT7LST9Zug7fPKxwX5f
p1Kpi/7ZZ9/4uaD57Jt/nNWG31IAAEqAKafj1ht7Oh9bhuraB41RdbXWrd/i
fHxAXK93ec94v11ReviqL71pHzz9xBDn4yslFaF+Y5JUe9N0bCp26np8cWgu
+knHmusdJ2G/XWt5XTq/58fEbry2e6xlqM929ribNzXPV86VC633TEOHzPc6
d5zhzZuXXJ+hONRnft9dahUsphU1//6+u/sFLkfzqPPZ7t6W/nvaH+VlvlJS
VCdA9XsL9T0nRf3q9W5W8XDlDCtHufVrk713Jy7xNpRIPDSI3hn17T3be7He
aL/WhfLXtR+i7DvVKKFfEwAAxUvvfk2/87pHcD0+mfnel8Yx3ntnaeUboOJR
b7GgY1t5XZqT6np8haBahqZzfPbs0uhjXB7Mn7/SuJ+Lvf9wGpQDqVhB0P7S
nPvtPxRfzT3Nxda87ELFWk45vlmszwXNX3n+2WGBf6ucVds2K2e6bDy4Ts0R
Tva/4kxJ5+zmMvztBZHGqPzfoOUohhl3uxWfNr3nlqYvT3B+bqRBMbeWzSf5
sbZbbuiZqpuv7+G/i7j+6m7+vABR7R7VV1CueK3q7/g1Ubu+PtN/V6DeXx9+
uMJbuHCN/y5C17utW7c732fljd6nqK+cLfc528nHvUreBgAARcr2vKycLtfj
E1vfAdWycj0+IC71XVK/k6Bj+/yz2zgfXyF8u26L33ckaB+cekKz1NevfJiK
UodzzOiFxmvpezO+dD6+8uaVJuON+0v15lyPLyr1N9p/t9qhnvHVB0h9qRRr
UY3BNOJ2pvNeHn5g4E7jVwwo6G+POayJdbsVHwr6nGqvFnL/2/Lk0xS1PmTd
2sH1jFQHJu622+aaH7Z/g5LpyYTSNn784lC591df1sX78d/uxwsAAKKx9c2e
9O5nzscnprplmr9XEWozonRNnfKF8fxr8eq7zsdXCG9Y5ly+mmJOkXJmKlod
zmFDPzbu6zlzyNPNpnjNwfvUN+6vhQtXOx9jFCtWbPAOP6Bhzud6xar69Zmz
w2f1nK/jo23rKf7c68su7OTX2jO92wlDfexfeO5t47/36D5rp20wxSVUx9O0
3Xr3ofzSoM8Vco6M+keZ+tJnU/xaNR00J17vMxTD1X2a/vsjDw70e4JF3dfK
n40y1kYNxhiXFfdcMvU4E9VhcH1+AGFt2bLde/apoTnzwCvKPRwAAKWkZ4/3
jb/t5WG+pe7rTeO7/eZezscH5KNVy8nG49t1jbxCsdUmVA+TNNapOa5B86ZL
vQ7nwP5zjfv6k09W5b38GdOX+vV0y8u7tXy81mKScV8pPuh6fFHoPaLimbZn
+V1/Xc2fc65eSlGW+87wBd51V3aNPGe8XZupXpNGY43//umnO8afv/l2s3Ed
tj5Ziuma1lG9WmFygLWfNOc2V1xUY1XsJdfydJ6dcNQrofaz3v1ErQPxcmNz
3nScmhKa021a3vFHvuxt3158dSoA1RG2vSNSfrzqF7geJwAACM8Wn9G8V9fj
Ux6LaXzKO3M9PiAf99/bP/DYVi/3ijA3S3lF6rEWtA+UN570+rRPH7p/gDWe
EOe90LJl64uit0ivnub3Yfn0/1bM5M5b39hheZpfWKy17FQ7zjanvNjquiju
aTvmD9q7njdt6hd5rWPu3BXeFRd3DhWze/zhN/3PmN6NVN69zk7XP9XQjHov
oNoZthzgQtUgtd1nyYX/aBepp4tqYSj/Nsy+1ncbdby2eGbUc3rtN5v979O0
PL2zcX1+AHHpumnLC1eNINVRcj1OoKLTb6xiCk8+NtjvU6q5GLrP0/9XboT+
90ED55V0DzoA4TSoPzrwN105B+UhPqPnKNN9RzHEIwAb/SYHHdsVpfaobb63
csuSXp8tXy1DcZ6wy1PO5Rkn/bf+h+JD5XmOvubomrY76hzcbKb5uMXac8XU
B0j0fbseXxTKQ1duqGl7NOde/eyTWNfECUv8e4dc51gmT9s0VzwoP1e9ZUzL
M+WZKz/UNg7FAdPe/4qNqGaBaQzqzxclfqL8XvXIDhMbFfXHijrm9m2nGpe3
es2mSMtS73PbuVQe7jOBfKjfle0cVG8n12MEKiLNtVAc4bgjXgr9m6m8b82J
USy1WN/xA8iP6fkhnz6lSTL1vv37MU2djw3Il/qKBB3fysVzPbZCeMzy/kO9
ZJJcl59zlSN2c8SBDUPP9VRdw6DvTzFS1/vVRHUFTNset9+u4m/q2xK0zIur
dnC+zVFpPqQtnqiYvusxRnH5RZ2M26LfefVoTGI9qpVpygUPovPR9G81X3hn
p+X/85y2gX97yL71Ix+XGd277VzjNGm2nO2jDmkcuTec7Z1xEFttVpO+vc19
pMrWPbDRuyZbnuuId4orDxswUb0v03G+959qluv3pkAp+eHHf3u9e31g7F0S
heZfqN7Mpk30DwQqEtXtivLMUUjKcTfFMx59aJDz8QH5OnCveoHH9zNPDnE+
tkJQfCBo+48+tHHi66p6bnB8JaPyHnUizTF+e9jHxmWV19x2Wz/2OL3udB96
XpXWxmXecE1359scdXtsdTovOK+d8zFGoTqwtmN+6JD5iaxnQL+5OWORZal3
ienf+vfdsT+UcjhMve5vu2nnOuTKxwzzbFSIOgm2647qF0ZZ1qABH0Z+votT
p330KHPfTvUUDHsunXNGK+NySr3WMyoW1Uc+rLI5T1xzLFyPESh1et9r+92J
S/NsVGvd9fYBKIwH7guuf6i4heux2Z7tCpH3AaRN7yaDju9qzwxzPra0aU6s
6fy29VuJY9asZTljCFFjmra56knNV05a3dojA8erfMk4y1MvJtt+Lbb7SVvM
Tr2BZs1c5nyMUVx/VTfj9qj2cVL7LGpvJuVp23oALVy4Y46i9rvpb9XTqOyY
dP0MM44PPvgq1f2vnDHTO96o894Vy7XVOUzyWqr9Ylpe2Ji6rb+Z9sns2cud
nx9AkkaNNL9XUC0RvTNwPUagFKlOS8vmk2L9Rkbx3NNDY/UoBFBc7r2zb+A1
QL1RXY/NNhc06bm3gAum/MlM/5JSZqvZlVReW0a9OqOM63r4gYGxlmmL70St
0VcoprqaceqpqA6i5hmY9sG9d/V1vr1RKO/Adm8d9zhxxY/NGeY2q1d6vvM9
VYfCVh8j48iDG/nry/z3A/as6+dp33NHn8C/11zUsjUpu3U1XyvKxqyHDJ4f
+lnniy/i9yQLw5Zj3rH99NDL0fbHfe6rX3dU5HEvXbrOuDy9E8n1ecW3bbUW
HqsAv2+omK6/2vxO6t2JS5yPDyg1mvuueSRxfh/jUM2iuPWoABSHO255I/D8
P/m4V52PzZTbWun31Xl/g5Jw2onNA4/xoDmjpcZ0fiumk+S9h+I4mq8ftK79
dq0Vu1fl008MMd4/ha1hWmimeipxely/WC+4t5+obsSateUzRhxky5btxnNR
1ONUfbhdjzMK2/uHurVG5rVsxf9VWzbXc4R6Inz5/7V3n/FSVecex9+Y8rm5
nyTXihhUjIoaGwEbFqwExV6xd5SIFQsdQaQoHUUEBOlFepGOgEqV3qvSkSId
BTXr3v/ykhyOe+1pe86a8nvxTVQOM2v2mb1n1rOfsn6X2bnrezNk8CIzdMhi
s/v/zzfNdQ76O0Gz6Vx90pW3euDAf/qCaV6aYv3x7nPSPac2bG59PPFp3YNw
3cOOl/I4E1239puux4s100q9Dcpf1s7593WtUS2y7/MDSIew3hTKPfO9PiCX
aCZ92OeN63uD6jdUQ9OsyURTrepAO9Mkkce44uI2WfedEED8Hr6/V+C5r72i
77Vdffl7gWvTf/e9NiAKmuUTb4wg11xSOvj7iPoGRvk8YbNGdH8o2ce969au
gY+pvCnfx9ZFOZBBa1ZvpUQeZ8OG3fY+leu49uo5x/trTUSsPEjNMfW9xkQ9
eF/PwNeiXgqbN+9J+nHVq0I5obH2D/oO4Xoe3d909SsNyp3XjPegny3Yp1gx
29LnxD+jNtmeEolo03KK8/kLxnUDj/NXG8xFF7RIaM8WRHHyZNbuyj1WLn7Y
33vlheB7MNl8LgHx0rXtzBLBdRVlzm3ufX1ArlAfmLCevwXpnNRcB83XdMU1
1fNL9/+UHxbPY6pXPfPtgdzk2kNdeUm0MYpEqb7upD8H12cp78z3cQOi8Nyz
AwPf46pHLVxjmksUG3D15Yu692jYvB3ltCX7uMopDHrMs09t7P34urhy0RRX
SuRxdN/ddUx1Lz+b3rvqZR32HfiRB3p5X2MyXDFM3ZNJ9jE7fTjdOSepIM2x
Us6o63HC6rf1HIV/3pX/fe8d3eyfK8/yuqvcc8KCKMc53b8DzZlyPX9Qnbry
ztV3XdfAsLnvidDsrGTWXuLoeoGPp1xe199RL9iwtWTbvDYgGa46DVm5MjN7
kwPZRHFOV4ygINWwTJiwMuGa08mTVts4SKzHj3q/gvipBkc9klQ3pOsq/Z0R
JX1fde1xfa5LNXmu61Hb1p97P25AFHSv0vU+z+X5FQsWbHa+7mTznYIof831
PMrlSLZPx4oV25yPqzod38fXRXOogtacyKyYhQs3O2Pbou+Vvl9nvNQHM6yv
41mnvJ2xvWTDKD6dbP5fENWhP/lo37jicU880idmTsWsmeudf189Owv+bNi9
FMXq9Oe33fRRwnHDMuelP5cr7DohqhNQDX7tGp/amHJYTnaykp2RphlaQY/3
wnPBfXg/6jQjdE6X6uoTnYEHZCN9BrrOg5kz1nlfH5DNPvxgWuh30MP0fTeV
Xl2HDv1k6tYaFfN5JmXRd95coFmVQbM7NANPOSDqfda40Xj7PtE96s8+W2X3
nOrFoF5avteP7ODqJe67hn1SyPeLUZ9m10xkwOXLL752vs+bNp7gfX3pEpZX
FeX+IWyfkkoc9t1mnzkf9/ry7b0fXxdXjCuReXxhfSf1eeL7NcZL950Vs3G9
Fn3/zubvva5YVcvmkxN6HH23vPDsd+KKxSn2Gk/u8MSJq5yPMWP6kef//Pmb
nD+r81DnWzJxQ+WbFsXvwRVnTIWrN0kQ/f6SWbf6nAQ93q03dj7i53SPSfHd
sDXovag9je9zAigKYbMbNbvM9/qAbKXvL7E+83RvWLUMUT1n395zQ+tmVI/P
TJSioVzReGqYwijvWPVV5cu1s33SnnnqExsHV+5dvz7z7L5Rz5Pu/vTIbJXv
ysz4qGrPXO9t5WT4Pm5AFFRPWfKEBoHvc/WEzNV7XeqJ7jq/o5zNFDbLetWq
5OrcNLskLK6m2ZZRHqu9+w7a+uEoHstVF1+wj2OY3r3mOF+3+jlmy95P82Fi
9ZhKZu53Jil1cnAPvPvu7BbX31eecNgs5oKU95hIX0nVxrkeS/f5C/6s9iZh
+6BY6ypZLPj6evdtXYvk96AchlS+yxc+x1r93/5Qec/x/p2pX36T1Lqfeqyf
85genrGl/m/x9DXQLDff5wNQFHTP27V/1+w4akCB5KhXTFiNgmjmqmakRf3c
2kuE5awqrub7+OSDBvXGRPZ9Kh5/+Z96Nn/kloqdTZUn+5s3644xHTtMs99h
9f0nG+vLEJ9MzR9VHkrQunRtpB8ycsmzT3/ivDbnag6pax6OYsVRPs+Y0csj
jxvUrzM69PNUM++iWPuWLXttDEfXPNG9rHhmXodxzU5RLC3W3920aY8zli96
bN/vq3hs37HfXHPF+6G/Q91TzvZ9rOL0rten86/w9zrF4T+fssZecxLp5anY
unI8E1nboAELnI9XuD9fvdrh55uLYqfa0wTVYYm+6xbF70H5tHfeEjyHLxHK
Q502da19TN03c82AKUzztJJZt+r+XY+p90e5sq3jev6HKvfMqn7EQDL0eaH4
jfbTrnPh6cf7eV8nkI3mzNloTvzv8P4zqnNZtmxr2tbQ8M2xzufWPHvfxygf
vPHqiJS/S0VN94wVQ1Vvf/UfavHOJPtZoBmbysXwfcyQnEyNj2rvErQu9YPz
fcyAKIXlAikPIRf7kCqGGPR6Na85yucJ6/9X642RCT/eO03dea+HRTU/LihG
ValCx5QeU/0ag9asWSxhf0+1Q7p/6nrNmieWauy2KOg7tmvWz2HqSxk2Wyhb
hM1OF8UP1a9JebSaARsrLyOI+pcnc6zC+ucU7mng+i4QRq/lcP8MvTeDfqbG
ayOK7HehfMubbvgwqe/ex/++lqn5+shf1XqpBizsfsXh45Dsefn1198ltd6C
dM3I1RoIZD71Jlbusvr8qi+EZqmo7lbzWjQjLtW4vWpdRgxfYl59eZidyxjr
fDh8fwNA/LZu3Wfr6cLOrYrXdUh7Lp8+y1z3WyUX92qZZtzYFSl/Lylqp53Y
0O7n1BtVfVFVh6d9fzbsmfKZKz6qvgw+1+XqcVdUPcOAovSPazs4r626J5pr
cy1U4xv0WrWPifJ5tP9x1dce7lGkHgexHkf7Gt0bjOezUPc3U133okVbnI+f
bF8ACYvvhuXlv159eOhrDprFnUnUZ195kYo1hb0OvVeypUdALMo/DstlSoWO
Y7s2XyS9Nu1jXI+tHrmJvPeCzuuuH83899935Zw0rD+2SH8fus5ohpHu8cbz
OpQfqr6e33yz0/mYik0PGbzIDBu62MZ/Cj+G+mqlsuZKFdy9hmO5945utheJ
7/MA+SmevG3l/Vx+URvzyAO97P0S9a7QtUO9QjTnQPn0uqemuIf6IqtuV7WV
z/9zkJ1hG6u/R0HPPTvQ+zEBso3ysoM+2wrSHKaDB38qkvV07/aVcx3qO+z7
eOWDeGZmZQvdv7/h6g9MtaoDTfv3vjRTJq/JifyMXOCcX+85PqrZ0kHriqp2
FcgkqvUOu4aqdkN1wb7XGRXtnYNep2Y4R/1cihGEHdvTT3rL5qipnnTokMV2
D6S9UeeOM2ytRNj94iDJzAcvTDkprsdXz5tkH7dXT3f/UNdcrFj9BJQXl8n1
s6r91h441u9Nc+y/+Pxr7+uNkuJxUX+fu/jCljZmkOraXHOLFHco+HOKVcS7
NuVBF57Xrv8W9LN6X/v4nSgHRfdl1MNBOTF63ymGq7xl9fz84P2ptiY+0XkP
yi9V3wT1RlY+sPYQqfYiUg/aZGYhKDefeRXwSTmiUV/7kqVrmnJZfR8TINvE
msekmqqiio2KPr/VRzhoLcqh8H288oX6KHT6cLrtB6oedboXpriV8olUV5NM
PVSmUJ9b5S5GOYsDiXPGRy/zGx915b0ol8T3MQPSQfkFYddM1cFu3Ljb+zqj
oPu9rtcY9XMp1lCUn5XqPZPqmsPiWhs2JP8eUB6M63H1HaPgz6r2Q3k1Ya9V
1+nVq3d4fz+56H5srJxR0dwb9ar0vd50eO2VxPIvXTTzU/nHUfX/Vt1r0POo
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
6PtWOaPq4aB5RL7Xj8wwYviSI/o6qxeJPg99rwsAgHylnv5hPYAbNRznfY1D
Bi9yrk91d77Xh/9QDFL7Bs0nUKxDs5J695pjayI/7jrL6vbxV1aP7rNNr55z
bO8G0b+rl1ir5pPtvAnlj6gnrvbfymFWfbX2aRdf2NLWJakPXiJ1bT7ja4jf
tVe+H/j7U/1tpq2J91TiFNfStUF9FjW/81cxhN/WNA/e19N8+23884Dhl2pB
X3p+iJ2VWFQx0nT2idbnmGYlvF59uP2MyudcLs15cP0OlGvre32+qO9bInFR
zSumZhpBNm/eY7//6ruy7gX4Xg8AAPnsqcfcM5lUc+/7nr3qxArWWBXWr888
78cwX6lPtOoclZupmGUis/Z80ZxA38cN4S66IHhOss+9uOohg9b0zFOfeD9e
2UA95nv2mG1urtjJxj/jOVcvKd3S9sfwvXbETz31+vedZ2NBycxxipfm8tAr
umioR6br96DYse/1+aJ84rNOeTv0faq5pqpn0WwN3+sFAABAuBnT14V+txs7
Zrn3Nb7k6Psn6tHDbBQ/lN/pO9aZDM2w933sEE57yqDfnXqA+liPrjGueSHq
y+f7eGUy5UtpzrZqBpM5X5VD7vs1IDmatTNzxjobX1OedcEa0lS1bfW599eX
L8qc1zzwd6DeS/leJ646mZInNPj3MVE9yxUXtzF1a42yf6ZzwPcaAQAAEJt6
RrlqRkU5gb7XqNzQsD1Sl87RzU1F/DQ7IZl5rb797fQmeV0nmQ3UT9aVX/hW
Az+9Ptas2cE1KEGqF9Ss8VTPWeUJcg8sN+jaq5p49VJp3Gi8nQf/S++UjqbC
NR/Y/imaZ6+Z63L15e/Z+Tf6c81sU38N5Wtnwn3bfKH58K5zUz2Zfa8vE6g/
qnpADR2ymJ4gAAAAWUp7FNf3XuUFrFrltx5Iua3F/1jHuUbVXnJv3o+uXWZ5
j3UmSnMkZs/e4P3YIdw33+x0/g41e8vHmiZNWu1c07ixK7wfs0wT695botT/
0PdrAvKR+oG7zkvFA32vDwAAAEjVgQOHzDmnNXF+761Xe7TX9akms2SxBs71
Kb9s1sz13o9jvvp05FLv8c4wx/++lu1h+VDlnna+2OBBi+hVlyVGfbrM+Xsd
P85PLDLsfsCKFdu8H7NMs3Dh5kjPZ3r3AX6oj2zQOXnc72rSGxgAAAA54d1m
nzn3omeWaOQ1ljR//ibz1+INQ/fLvups8QvVuwbNnY6ScpiV86kZYeXLtbPz
6+++raut6XvikT7muWcHmjdeHWHrNDu0n2oG9J9vJk9abWuhqaHPXjq3Xe+J
9et3eVlT7RqfBt+n+U0NO6PD9zHLNNOnrY37PNfcq8cf7uPsqaD6+u+/9zsj
EMhHygPXZ3DQeam+B77XBwAAAKRq69Z9psTR9Zz7VeVK+Vqb5qHHmnl7200f
UVefAdRnS73gNL/1grOa2dil5rC0bjHF9o1VTfK8eZts7te6dbvMpk17zJYt
ey31JtS/b9y42/6Zaqplw4bdZtv2/cRD8pj23UHnvWY2+VrTXbd2DVxT6XPe
9X68MpHOX9eMLVFvSd3TWLt2p/35Zk3c87F17H2/HiAfLV++1XleMpcOAAAA
uUDzgF3feS+/qI2dj+JjXd27fWVzBsNio2XObW7jZ76PIYDoaRayK49QdZ6+
1qV7AEFrqny3/xl2mUr3Rwre69LscuV8z/7qyB7AqsUPu+7T4xDwY9pUdx74
xImrvK8PAAAASIVmLqlvlOs774QJK4t8Tfv3HzLVqg6MWYepGAVzOoDc1b/v
vIzLa1eOs2tN9PkIt3PXL3Odhw1dbGc8F/7zvfsOmrLnt3AeX/UQplYA8EPn
58nH1P/VeXnaiQ3NDz9Q4wEAAIDs9tRj/TKqjnHmjHWmzHnNY8ZG1RN1yZJv
vR8/AOmjHg2ua4D6MPhYk/rautY0fNgS78csaopjKi6S7udRnYLyb8Ou++PG
+pnHBeAXgwYssPMOD5+T6gc8YnjuXfcAAACQX5Yu/dbOEwnah+q/q86xqNai
uaeareNaT0Fnl2zMjGggx+kcd9XWX3FxG2/rCsttVw9e38fNRT1A1YtEPX2V
d69egnPnbrQ9nj8dudT07jXHvNf2Czt76pEHepnyl7X7dz38MUfVMJXv6m62
bduXlrVp7svz/xwUet3XvTzfxxCAMatX77DXivbvfWn7hPteDwAAAJCqxx7q
7dyLas5OUaxB+2LtyzWzOFZcVDQj3dfMagBF49Chn8w1V7zvvA60aTnFy7qU
46jc9aA1XXxhy5QfXzHMZcu2mjGjl5uPOs2w9fovPDfIPFS5p51Dp1lViluW
K9vaXPr3VuaS0i3t/+vfFTO+6tK29s/1z6pF/9vpTWyMM6yHSiIqVeiYlmOq
PqSx7olt30GfaQAAAABAtFSb7srVVO1UUfT1HPXpMju3ON69uWptd+/5wfux
A5A+umfy9OPuvh+q50xXHmMsUyavca7r9erDE3os9eIcPWqZadRwnLn3jm7m
vDOb2jzNKOKY6aSe1VEdT/UsVK5q2PPp80hzYXy/LwEAAAAAueeJR/o496Oq
Y9y3Pz395rQf7tN7bkJxUcVxm7w9weYZ+T5uANJLfTbCrgeJxiGjFFYDrthp
2N/V3Dnlhap+XTme8fQSyUQLFkTTd0XxYeWjxno+5dH6fk8CAAAAAHLPypXb
Yu7N9eealaF+dVE8p/JV69YaZf5avGFCe/HzSzUzX37xdZEcF81FVu3+rJnr
zeBBi0zTxhPM/ff0sHW+qlv9x7UdbA++6i8Ns723NCskquMD5Dudf6+8MDT0
eqDa9u92HvCyPs0pOunPdZ3rCpqrfuDAIfNJv/n2Wqq8V9+xzVSpXv/HH1Of
H6/6BPUjiPV8DeuP9f6+BAAAAADknhnT15kbr/8w7v3wzRU7JfU82kMrrtnw
zbG2P16i+3DFZ199eVha5yZv2bLXfPD+VBu7uPDsd5Lu0Vf2/BbmpeeHmMED
FxIvBRKknPJePeeYMuc1Dz3PVHuunhy+1qkcdtfalPNa+Od1n6XUycG9SrPR
aSc2jKTOXZ9BZ/zlrZjPV+uNkd7fmwAAAACA3KNZo8n0t4vVi1Sz5+fN22QG
DVhgGtQbY26p2NmUOLpe0vtw5WrOnLEubcdh7dqdpmqVAbavXdQxBJt3m8Y5
z0C20Ux3xTXHj1thZs/eYNas2WFzQBcu3JxQTnnbVp97ew2qiw+7f7Jo0ZYj
fl73h849o6n3mGYyTvivWvZ+ke6NVas60DRvNskMGbwokt7PyqUt9ofaMdeg
zxHf71sAAAAAQO5RLXiysz/Uc091juqbp1nKjz7Y29x6Y2c7O7nkCQ0i25dr
hn23j79KW59RzcR+p+nEIqlzTcecZyDbdO44w8bbUj2far7uJ5dQ16Ie3WeH
vgbNlS/89+bM2RjJdUT3W1S7f1mZ1qbidR3MXbd2tT0/dA1+/OE+to90yWK/
vgafftJb5slH+9r4pnJb32owzrRuMcV0+nC6fT39+syz+e6KW6tvqtZ7OG6t
+VjpOJZh+beH6TPKZxwcAAAAAJDb3qw7Ju0xwVTiom1bf2579aXr9S9d+m1C
M6GiEOWcZyDbKD80ihlEuj+TrphdQatX77C5knq+e27/2PYFiSe2G1Rzrn7L
ibxG1ZvrOevXGW3vESlmqTz3WL0+lY/rekzFO32/B0T9E55+vF/MY6Bj3b/v
PLN9x377ulSP0Kr5ZNujxWdfBQAAAABA7tAMYN9x0MIUf+jaZZbdP6fztStX
qvifgueqpFNUc56BbKRYYyrnj2KrjRuNL5LYqOrnk8krVyzV9Zia6+b6e2eX
bGyqPNHfdO/2VUpxzJbNJzufo3DNvw9bt+4zFa75IK5jqdlXYX1ZlCtbFO8F
AAAAAEDuWrZsq/d4qPzlf+rZuEBRzaRX7lEq61Wd6p23dDEP39/L3F7pI9tT
oPgfY8dR7JzngHnWQL5QTniy553OM+VQFsU6dZ4qhz3RNZYv187s3+/Oed+w
Ybe56Yb/zMIrV7a1afHOJJtbGtXaVdvvijWqn4jP3//69bvMBWc1i/TzY+SI
pd7f1wAAAACA7BVVP7xknHJcffPYQ73N4EGL0lpDX1iN10bEtT7NaVKcQT1W
u34009Zy6ni5Ziwph0k5X5o18vLzQ341dzuqOc9ANlN9eKJ524ohqj9mUd5b
0Lmc6DXt2ivft70643l8zaeSqNetvHvXvZq7b+vq/fevNUT9WaL+A75fFwAA
AAAge2lOR1HFQ1U7+lDlnnYeiObQ+8ijDKs7LUgzTDZu3J3y8ylXTPHfYUMX
RzLnGcgFE8avNOec1iT0HFSuY9UqA8z0aX7uKeh8DZtNX1jlu7ubffsPej+2
kyetdq5Rubs+17Zixba0fLa0f+9L78cdAAAAAJCddu3+3pnHpX5vmkuvOOEt
FTvbGUbnl2pmZyIrbqHcymN/W9P25jv5mPq2DlW1rzdc/YGNE7xYbbBp1mSi
6dt7rpk1c73Z8V18OVXpNH7ciphzYfQ6mPkBpJ9mwGtWmeKfOucGfrLA5l5r
fvrsrzakvf9wPKq/NCxmbE7XvZ49ZmdMD0zNpHetdf78TV7XphlTUcdGS53c
yM5u8n3cAQAAAADZKWw2U/UXh3pfX5RUE39miUah++w7bu5itm1nnw3gF5oT
3+TtCebCs9+xcTjdJ7r3jm7m1ZeH2RlK6t/se42F6R5V0PVN/T18x3A3bdpj
+6pEERfVfTndi1u5crv3Yw4AAAAAyF7qlefaey5e7H/GcZSUBxu211afAeYm
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
      
      "], {{0, 192.}, {676., 0}}, {0, 255},
      ColorFunction->RGBColor,
      ImageResolution->144],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSize->{244.78124999999932`, Automatic},
    ImageSizeRaw->{676., 192.},
    PlotRange->{{0, 676.}, {0, 192.}}]}]], "Input",ExpressionUUID->
  "637e125e-e442-496f-a91d-3b72deca2173"]
}], "Subsection",
 CellChangeTimes->{{3.8195181019029427`*^9, 3.819518104450482*^9}, {
   3.8195191286995363`*^9, 3.819519137218459*^9}, 
   3.819802535250301*^9},ExpressionUUID->"df98c57f-dd2d-475b-9e85-\
e6e1834e9d8b"],

Cell["\<\
Multiple uses of NIntegrate are extremely inefficient, in addition CNIG is \
slow, therefore the function below is not  an option.\
\>", "Text",
 CellChangeTimes->{{3.819801828428385*^9, 3.8198018508560877`*^9}, {
  3.819802049688532*^9, 
  3.819802086889659*^9}},ExpressionUUID->"bc1dc840-2626-4c66-82b8-\
f99598e1758f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Rho", "[", 
   RowBox[{"\[Alpha]_", ",", "\[Beta]_", ",", "\[Delta]_"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"12", " ", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"CNIG", "[", 
       RowBox[{
       "u", ",", "v", ",", "\[Alpha]", ",", "\[Beta]", ",", "\[Delta]"}], 
       "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"u", ",", "0", ",", "1"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"v", ",", "0", ",", "1"}], "}"}]}], "]"}]}], "-", 
   "3"}]}]], "Input",
 CellChangeTimes->{{3.8195181113543053`*^9, 3.819518179961141*^9}, {
  3.819521752012765*^9, 3.819521803476323*^9}},
 CellLabel->
  "In[925]:=",ExpressionUUID->"787e52e9-c670-4c15-a821-75135a5b247b"],

Cell["This one is numerically highly unstable", "Text",
 CellChangeTimes->{{3.819802095712109*^9, 
  3.819802102630467*^9}},ExpressionUUID->"2e8f18f2-451d-475e-94f9-\
971b68040f0b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Rho", "[", 
   RowBox[{"\[Alpha]_", ",", "\[Beta]_", ",", "\[Delta]_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"12", " ", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"FNIG", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"NIGInv", "[", 
             RowBox[{"u", ",", "\[Alpha]", ",", "\[Beta]"}], "]"}], "-", 
            "z"}], ",", "\[Alpha]", ",", "\[Beta]", ",", 
           RowBox[{"\[Mu]s", "[", 
            RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"\[Delta]s", "[", 
             RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], "-", "\[Delta]"}]}],
           "]"}], " ", 
         RowBox[{"FNIG", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"NIGInv", "[", 
             RowBox[{"v", ",", "\[Alpha]", ",", "\[Beta]"}], "]"}], "-", 
            "z"}], ",", "\[Alpha]", ",", "\[Beta]", ",", 
           RowBox[{"\[Mu]s", "[", 
            RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"\[Delta]s", "[", 
             RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], "-", "\[Delta]"}]}],
           "]"}], " ", 
         RowBox[{"fNIG", "[", 
          RowBox[{
          "z", ",", "\[Alpha]", ",", "\[Beta]", ",", "0", ",", "\[Delta]"}], 
          "]"}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"z", ",", 
          RowBox[{"-", "\[Infinity]"}], ",", " ", "\[Infinity]"}], "}"}], ",",
         " ", 
        RowBox[{"{", 
         RowBox[{"u", ",", "0", ",", "1"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"v", ",", "0", ",", "1"}], "}"}]}], "]"}]}], "-", "3"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.8195181113543053`*^9, 3.819518179961141*^9}, {
  3.819521752012765*^9, 3.819521803476323*^9}, {3.819522175545599*^9, 
  3.819522187908402*^9}, {3.8195224461188517`*^9, 3.819522451398994*^9}, {
  3.8195467661008472`*^9, 3.8195469191680937`*^9}, {3.819625604601119*^9, 
  3.819625619818672*^9}},
 CellLabel->
  "In[926]:=",ExpressionUUID->"25a08097-1be5-4ec2-a179-7fd55c1fd897"],

Cell["This one is also slow and numerically unstable", "Text",
 CellChangeTimes->{{3.819802129039006*^9, 
  3.81980214211283*^9}},ExpressionUUID->"6623a409-881f-41c9-acea-\
6a0082c7c64c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Rho", "[", 
   RowBox[{"\[Alpha]_", ",", "\[Beta]_", ",", "\[Delta]_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Mu]1", ",", "\[Delta]1"}], "}"}], ",", "\[IndentingNewLine]", 
    
    RowBox[{
     RowBox[{"\[Mu]1", "=", 
      RowBox[{"\[Mu]s", "[", 
       RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Delta]1", "=", 
      RowBox[{"\[Delta]s", "[", 
       RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"12", 
       RowBox[{
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"FNIG", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"NIGInv", "[", 
               RowBox[{"u", ",", "\[Alpha]", ",", "\[Beta]"}], "]"}], "-", 
              "z"}], ",", "\[Alpha]", ",", "\[Beta]", ",", "\[Mu]1", ",", 
             RowBox[{"\[Delta]1", "-", "\[Delta]"}]}], "]"}], " ", 
           RowBox[{"FNIG", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"NIGInv", "[", 
               RowBox[{"v", ",", "\[Alpha]", ",", "\[Beta]"}], "]"}], "-", 
              "z"}], ",", "\[Alpha]", ",", "\[Beta]", ",", "\[Mu]1", ",", 
             RowBox[{"\[Delta]1", "-", "\[Delta]"}]}], "]"}], " ", 
           RowBox[{"fNIG", "[", 
            RowBox[{
            "z", ",", "\[Alpha]", ",", "\[Beta]", ",", "0", ",", "\[Delta]"}],
             "]"}]}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"z", ",", 
            RowBox[{"-", "\[Infinity]"}], ",", " ", "\[Infinity]"}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"u", ",", "0", ",", "0.5"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"v", ",", "0", ",", "0.5"}], "}"}], ",", 
          RowBox[{"PrecisionGoal", "\[Rule]", "2"}]}], "]"}], " ", "\\\[IndentingNewLine]", 
        RowBox[{"+", " ", 
         RowBox[{
          RowBox[{"NIntegrate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"FNIG", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"NIGInv", "[", 
                 RowBox[{"u", ",", "\[Alpha]", ",", "\[Beta]"}], "]"}], "-", 
                "z"}], ",", "\[Alpha]", ",", "\[Beta]", ",", "\[Mu]1", ",", 
               RowBox[{"\[Delta]1", "-", "\[Delta]"}]}], "]"}], " ", 
             RowBox[{"FNIG", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"NIGInv", "[", 
                 RowBox[{"v", ",", "\[Alpha]", ",", "\[Beta]"}], "]"}], "-", 
                "z"}], ",", "\[Alpha]", ",", "\[Beta]", ",", "\[Mu]1", ",", 
               RowBox[{"\[Delta]1", "-", "\[Delta]"}]}], "]"}], " ", 
             RowBox[{"fNIG", "[", 
              RowBox[{
              "z", ",", "\[Alpha]", ",", "\[Beta]", ",", "0", ",", 
               "\[Delta]"}], "]"}]}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"z", ",", 
              RowBox[{"-", "\[Infinity]"}], ",", " ", "\[Infinity]"}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"u", ",", "0.5", ",", "1."}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"v", ",", "0", ",", "0.5"}], "}"}], ",", 
            RowBox[{"PrecisionGoal", "\[Rule]", "2"}]}], "]"}], " ", "\\\[IndentingNewLine]", 
          RowBox[{"+", "  ", 
           RowBox[{
            RowBox[{"NIntegrate", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"FNIG", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"NIGInv", "[", 
                   RowBox[{"u", ",", "\[Alpha]", ",", "\[Beta]"}], "]"}], "-",
                   "z"}], ",", "\[Alpha]", ",", "\[Beta]", ",", "\[Mu]1", ",", 
                 RowBox[{"\[Delta]1", "-", "\[Delta]"}]}], "]"}], " ", 
               RowBox[{"FNIG", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"NIGInv", "[", 
                   RowBox[{"v", ",", "\[Alpha]", ",", "\[Beta]"}], "]"}], "-",
                   "z"}], ",", "\[Alpha]", ",", "\[Beta]", ",", "\[Mu]1", ",", 
                 RowBox[{"\[Delta]1", "-", "\[Delta]"}]}], "]"}], " ", 
               RowBox[{"fNIG", "[", 
                RowBox[{
                "z", ",", "\[Alpha]", ",", "\[Beta]", ",", "0", ",", 
                 "\[Delta]"}], "]"}]}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"z", ",", 
                RowBox[{"-", "\[Infinity]"}], ",", " ", "\[Infinity]"}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"u", ",", "0", ",", "0.5"}], "}"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"v", ",", "0.5", ",", "1."}], "}"}], ",", 
              RowBox[{"PrecisionGoal", "\[Rule]", "2"}]}], "]"}], " ", "\\\[IndentingNewLine]",
             "  ", 
            RowBox[{"+", " ", 
             RowBox[{"NIntegrate", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"FNIG", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"NIGInv", "[", 
                    RowBox[{"u", ",", "\[Alpha]", ",", "\[Beta]"}], "]"}], 
                   "-", "z"}], ",", "\[Alpha]", ",", "\[Beta]", ",", "\[Mu]1",
                   ",", 
                  RowBox[{"\[Delta]1", "-", "\[Delta]"}]}], "]"}], " ", 
                RowBox[{"FNIG", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"NIGInv", "[", 
                    RowBox[{"v", ",", "\[Alpha]", ",", "\[Beta]"}], "]"}], 
                   "-", "z"}], ",", "\[Alpha]", ",", "\[Beta]", ",", "\[Mu]1",
                   ",", 
                  RowBox[{"\[Delta]1", "-", "\[Delta]"}]}], "]"}], " ", 
                RowBox[{"fNIG", "[", 
                 RowBox[{
                 "z", ",", "\[Alpha]", ",", "\[Beta]", ",", "0", ",", 
                  "\[Delta]"}], "]"}]}], ",", " ", 
               RowBox[{"{", 
                RowBox[{"z", ",", 
                 RowBox[{"-", "\[Infinity]"}], ",", " ", "\[Infinity]"}], 
                "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"u", ",", "0.5", ",", "1."}], "}"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{"v", ",", "0.5", ",", "1."}], "}"}], ",", 
               RowBox[{"PrecisionGoal", "\[Rule]", "2"}]}], 
              "]"}]}]}]}]}]}]}]}], "-", "3"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8195181113543053`*^9, 3.819518179961141*^9}, {
  3.819521752012765*^9, 3.819521803476323*^9}, {3.819522175545599*^9, 
  3.819522187908402*^9}, {3.8195224461188517`*^9, 3.819522451398994*^9}, {
  3.8195467661008472`*^9, 3.8195469191680937`*^9}, {3.819547087690041*^9, 
  3.819547096821822*^9}, {3.819547166637055*^9, 3.819547234949388*^9}, {
  3.819547289675169*^9, 3.819547291903098*^9}, {3.819547842397806*^9, 
  3.819547856686206*^9}, {3.8195480856385317`*^9, 3.819548096852*^9}, {
  3.819548222605934*^9, 3.819548224899705*^9}, {3.819548417065844*^9, 
  3.819548461263405*^9}, {3.81954870992828*^9, 3.819548712681448*^9}},
 CellLabel->
  "In[927]:=",ExpressionUUID->"094f27f9-d843-4af6-8f54-63f12f3f184d"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Timing", "[", 
   RowBox[{"Rho", "[", 
    RowBox[{"5", ",", "1", ",", "4"}], "]"}], "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.819521791614286*^9, 3.819521811346304*^9}, {
   3.819548581057251*^9, 3.81954858111292*^9}, {3.819548682624528*^9, 
   3.819548682719306*^9}, {3.819802125274663*^9, 3.819802125388488*^9}, 
   3.819802317946269*^9},
 CellLabel->
  "In[928]:=",ExpressionUUID->"df530ffd-20d8-4073-ac43-bd6401177e3b"],

Cell["\<\
First, re-write Spearman\[CloseCurlyQuote]s rho in terms of the distribution \
functions avoiding calls to inverse CDF. 
Second, use interpolation to speed up CDF calculations\
\>", "Text",
 CellChangeTimes->{{3.819801232214017*^9, 3.8198012496669683`*^9}, {
  3.819802346594426*^9, 3.81980237555171*^9}, {3.819802702911426*^9, 
  3.819802716463381*^9}},ExpressionUUID->"da5233f3-83cb-47b2-865b-\
73ba9b93acb5"],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3Xd4FWUW+PHf83OfdR93fVZdEJCHjiC9q4iyIoqKBevaFRV7r/TeQu/S
e++d0HtLqKEldAiQkNAhQEIC7y9n9pc1wH3nzq3vvcn3j8/KQjJz5p25M3Pn
PXNOsU9+eO3z//t//s//+eVvmf/z2seN6/z888dNX78n8/+8+f0vX33x/WeN
nv/+18+++OznRz+5I/Mvl2b+z9rMH/1L5p9vKKUAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIBr12/cUJdSUi3yZ9PxAAAAAAAA
AAAAAAAAAN6Ki0tSNSr1UPf938YW+bP8nem4AAAAAAAAAAAAAAAAAE9lXL9+
Uy5M9pwY+TfT8QEAAAAAAAAAAAAAAACeiNmReFsuTJaExIvG4wMAAAAAAAAA
AAAAAAA8sWXrcW0+TExMovH4gCzXb9xQadcy1NXUdJVyOU1duJimLqWkWn9v
MqZLKebjAAAAAAAAAAAAAAAAfzp95oo2H2bq1B3G40PuJcdmty4rVfkSnVW+
u5qpf93h+jiV3l5xcUlBjS01LV2NHBGtKpfpajQOAAAQeJevXFPnzl81HgcA
AAAAAAAAAPCMLh9m8OCNxmND7rNrd5KqVr679rjU5cQEoz6L1KcZPHCDKlO0
o9E4AABA4B05elZVLBXxv+t8wXtaqnlzY43HBQAAAAAAAAAAnNHlGAwcuMF4
bMhdOndYqv51RxOPcmGySM+iQMbWq8dqVfCfLR3EkWZ8HAEAgG/SMzJUoXtb
3Xadl/uULVuOG48PAAAAAAAAAADYu5aeQX0YhIT33hrnVR5MoPNhpN7LZx9P
dpynE+i8HCCLHJtyvAnqEgGhKyo6Xv3w7Sz1acPJakC/dVatMdMxwb1+fdZq
r/X1nx5sPD4AAAAAAAAAAGDvamq69ln/yOHRxuND7tD417k+5cIEqk9Ralq6
qlW9j/E4gFvFxSWp6hV73HTsyd+ZjgvAzTq0WXLbtaJCyQiVnnHdeGyw92iV
XtrrfeE8rY3HBwAAAAAAAAAA7KVcTtPnw4zcZDw+5GwZ16+r776e4XMuTKDy
AGpW6+04DslNIB8BwSDn7Splu5KPBYS4K1evaa8ZC+bHGo8P9grdd3uvpCz3
/62Z8fgAAAAAAAAAAIA9u/owUybHGI8POdf5C6nqjZdHOso1KXp/G/XsU4NU
j26r1ITx29SsmbvUkqX7VcyOxIDN///8/WxHsT1SpacVE+/6I1h++1lfT4l+
XUDo6BaxQvtZ7Zl5PTMdH/Skp5Vdn8Q8f2liPEYAAAAAAAAAAGDvWnqG9ln/
0qX7jceHnOlo/DlVunAHt7km8m72mrWHgx7f8hUH3Mb2wN0t1PRpO6jHgaBa
ufKg7XFJPgwQOmpk62l2q/591xmPD3rLl+93ex8gOTOm4wR8lXH9hpWjvndf
stq9J0kdOXpWxR87pxISLqgTJy5Y706YjhEAAAAAAAAAvCX9avT1YbYbjw85
z8VLqargP1u6nWcqnr+tupp6zUiM5UtF2MZWt/YAq2eN6bFE7iKfnYo2x6b0
7CI/CwgNcn+V767m2s/r0MFRxmOE3k/fz3J7n3Lq1GXjcQJOnTl7RU2etF19
2Wiaeu+tceq1F0dY9xRS68jdsV7wnpaZ9xjd1fN1B6sunVdYveBMbw8AAAAA
AAAAOCHzNf+6w/WzzzGjNxuPDznPu/8Z6/a5e5G8bVRScoqR+CZO2GYb26sv
DDc+hsidvv1qhva4lL4e69YdNh4jgP+avyDO9lqyZMk+4zFC7+03xri9VzmR
cNF4nMCtLly8qlavOaR691yt6j8zWFWr0F2VKuS+JqMn8t7ZVL1Yb4hVT9H0
9gIAAAAAAACAHamBrXvWOWfOnoCtNzUtw6rBffbcVeoZ5CLnzl9V9/+tme0z
9jdeHmnsvVNZb7F8bbWxlSve2fgYIncaP94+T6vp7/OMxwjgT888+YftZ/Zk
0iXjMULvyZr93OYEJCSSDwPz5N2GESOiVcP3JzrqRepvDZ4fZvXfNT0OAAAA
AAAAAOCKvEOoe765dKl/3/nbt/+U6t51papZtddN65HeOU1+nauiNx0zPh4I
rP5912mPN6nXPm3qDqPxNc48Du2e+e+JTTY+hsh90jOuW70KdMdl9Qrd6V0Q
xiQn9FJKqoX80Jyj0L2tbK93GdfZ18F0+co1dfDQGbVt+wnrflNIHoGrn5XP
oZMeMkfjzxnfLuReK1YcUJ9/OsWq1RLsHJhbVSzVxfpOaXpMAAAAAAAAAOBW
h4+c1T7bnD7N99wEmcedOiVGPVd3kKPnqYXztLZ62kuPe9NjA/+rWCrC5X6X
nl1/9F9nNLb1G45YPWd0x+bTtf8wPn64ncxxJiZetPLtNm8+rqZN26nGj9uq
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
p6gKJSNUzaq9VJ9ea4J6XUPO0LzJfNvPxJTJMcZjBAAAAAAAAIDsjh077/Nz
fulhlD0nplLpLmrIoI3qaqrn76zvP3Da0fxf8fztjI8dnIlcuFe7H9u1XmQ8
vice7usytvx/b248tpwmIfGiKnSf8/fwC+dprX76fraj3m05heQYyvlNNyaz
wmj+Fb6TnNX6Tw92+1lp1ni+8VhzO3c5Gll6dFtpPNZw1rnjMtvxfeCelmrD
Rvf1DV2pVb23R/kwa9YeNj4eTkhfSlfX3pZNFxiPDeFj/YYjVq6Z7vNAL0cA
AAAAAAAAociudseatYccL0feMd2xI9Hi6/um8+bG2s4HC6kVYXrs4EyXzsu1
+/HQ4TPG46tVvY/L2CRPxnRsOYn0gZEeR07mGKXnSPs2i60aGabjDraePVcz
14TbfPTeBPWvO/SfmXx3NbP6bJmOM7eSex+nORTTp+00Hm+4it4Ub9tXU/Kp
168/4vXyG7zgLKcp3PJhyhXv7DJ+yfu9fsN8fAh9kyZuy/zs6XNh5LO3d19w
ekoCAAAAAAAAgCfs8mGiNx0zGtuePUnqSU2P+qL52hgfOzjzwTvjXe7DYiGy
D0sUdJ179e1XM4zHllPEHzunypdwPR+XXaF7W6nmTRaoq6nXjMdsit04TZu6
w3h8MKdbxArbz8/DlXoajzG3eu3FEY5zKKQHm+l4w1HatQxV6L5W2nGVPJnp
03w7R8p9iUf5MGuc542bsnjJPttcugz6QsIN6VPprnbne2+NMx4nAAAAAAAA
ALhilw+zatVBo7FJnZmq5bq5jO2NV0YZHzs4U6ZoR5f78MVnhxiPLT3juvb4
79huifH4coJTpy+riqUj3M4rvvXaaJV48qLxeE3auu2EdnykJpbMB5uOEWa9
/7br/ELOW+YsmB9nm29wqzNnrxiPOYucUxr/OtfKw6tQMkI1b7pApaZ53usy
GL7+YrrtuE6ZHOPT8k+fueJRLoxYufKA8XFx5/m6+n5rJQrQexT2mmSeH9zl
wjxUpGPm/TT3JwAAAAAAAABC05EjZ7TPN6dPN1vTf/SoTdrY+vddZ3zs4F7a
tXTtPmz00WTj8cXHn9PG16blQuPxhTup81KqkPseSdTi+S/piaMbI3IAQ5Pk
E0RFx6s5c/aojVHxQclZqlhKn18mNTKWLt1vfFxyE7v9catC97Y0Hm+W6zdu
qBoVe9wWo/QKlH8zHV92V1PTVcF7WmrH9buvfb+GTJ0S43E+zJTJ230af3/1
GbVTvIC+/+jUKdQcg2tXrl5TtR/p6/YzILkwkvdsOl4AAAAAAAAA0Dl58qL2
GefcuXuMxlbUpm59bCw96sOBzA/r9qG86206vuUr9mvja/r7POPxhTt3PUSk
5smwIVHG4wwFBw6etnIZXI1T3jubWrULTMeIm124eNXKHci+rx6v0UddSkkL
6Hql347d56pI3tZq/4HTxscnN1i/4YhH+RPF87c1HnOWTp2WaePs23ut8fiy
GzkiWhtrvruaqYuXUn1eR8P3J3qcDzNyxCav1hW395SqUenPXKTqFXsE7L72
gbtbuIw9/9+bGd+vCE3Llu9XpTW1HW+9hzt0+IzxeAEAAAAAAADAjl2/JMll
MBXX6jWHtHGVLdbJ+LjBmSWL9fkmgwZtMB7fho1HtfGNG7vFeHzhTObs7Wrs
y5x99KZjxuMMFb/8OEc7VtLPxHR8uJ2ud9HYMYE/d7z+kn2uWc1qvVTK5cDm
5UCpenUGepQ/Ua54Z+MxZ6lc1nU/SlG5TFfj8WWXPXfkVq2aR/q8fPmsSN6h
p/kwkyd5Xh9G6sI8XLnnbcuqXqG71cPR32On267ypSKM71eEFqkJ4y6P+c88
tOZqpeG+ugAAAAAAAADghF0+jKm56mvpGerJmv20cX3RaKrxcYMzdu9079t/
ynh8y5Yd0MYn7/2bji9cpaalq0eq3D7flyXPX5syvtlI7RfdO/wyVkfjzxmP
ETcbPHij+tcdro/vls18n593R+bU3fWy+M9ro42PU04mNfQ8zZ947eWRxuPO
IvPZujjlfGQ6viwrVuiv09Kryh+9nVo2W+DxvhTe9CaT3Bvd8mYEoE+pLi+1
Vo0+xvctQkff3mtUoftaOTruJZ8rIfGi8ZgBAAAAAAAAwAm7fBhvnvP7w4fv
TNDGJM/1mRsOH21bLdLuS8mZMB3f3Dn6+cwdOxKNxxeuZF7Fbi6lY7slxmMM
JU1/n68dq88/nmI8PtxMajgUvKeldp/16rE6KHFcSkl1mxPTv29o9b0JBRnX
r1s5CVILwdtcCjkGqpbT11fRGTzQfF00ITl4dnFKHp7pGLPUrT1AG+fECdv8
so6Kpbp4lQ8jNfA8XZddPky9Jwf6dezs1vXyc0ON79twlnH9htUbT87D/sjJ
MmVO5n3wQ0Xc90bKInWM/NGfDAAAAAAAAACC5fCRc9pnnoF4T9Wd/n3X2T6H
/ebL6cbHDM591Wiay/0oz95NxyamTI7RHmuhUL8mHJ2/kKqtdSJeYg7uJjKP
dv/fmmnHKyZE8rIkznCe8/On7t1XafeX5GweOHg6aLGcSLigShfuoI2n6P1t
jI+XCZKvsj0mQY0cHq0++WCSKlWog8r/9+YuP2t572ymKpXpqvr2XqvijznL
t23WWJ/DZldjYUFknPGxEb17rnY773323FXjcR47fl4bn+zTtGsZPq8jKemS
bW8/O4sX7/N4fXIerVRan3+zabP/ajMuXLRXu56OHZcZ37/hQGpWJp68qBYt
3Kfatlqofvxulqr/zGBV4O4/6ytJP69Dh88Yj9Up+dx8+9WMm7bBCalvxX0A
AAAAAAAAgHCTnHxJP28zP7jzNvsPnLat31+maEfeSQwzz9YZ6HJf1nmsv/HY
hPQ80R1vMg9nOr5w9Oaro7VjWqVsN3X5yjXjMYaSmTN3acerVvXexuOTGmJ1
avVXef7SxKoZ8Ur94erCRbPz5DIfJ/WbhNT6COa6z52/ao2Dbp+9YaAfzsao
eGv/6GLasvW48eMoWPtG5qorlIywzTFzR2p0jBgWZS3P1XrkPsTuGPjkw0na
f9u166TxcRJSG8TdOCyM3Gs8znat9TXmvv5iml/W4S4P206kl/lNduv8tOEk
v42f5Dzo1rNs+UHj+9cd6asoefByX9Hg+WHq08zPVusWC9UP385Sv/40Rw0d
GqWGDtqomv42zzpWJozfpiZN3K7+6L9eNf5lnurccZmaOiXGyu+fMH6r1RdL
6rH16bVGdeqwVDX+da56/aURqlzxzqp4gXaq5APtVaH7WqsC/2hh8SRPSuqm
hEOuiORQ5r1Tf/5yRXL8pG+Z6dgBAAAAAAAAwBt2/ZKiouODGoc8S7Z7Hjt/
Qazx8YJnCudp7XJfPlmzn/HYxPffzNQeb8eOkQ/jqaup6bbz8pELzc+vhhq7
+cpuESuMx/dgwfa3xfVYNXN5OrGxyda7+FmxyJ/j4pKCtn6Zm9XtL8nBMFVT
4+03xmjjklompo+jQJIaSlKLzC5HxRsyFy61d377aY4aM3qz1WNI1vfLj3O0
v1OiYDtrDl7376ZzybJULtPV7fbLNpuO8yWbvJ216w77ZR2P1+jj9TEydswW
r9YpddR0dYTkuDty5Kxfts3uvlqX7xUqmjfR12AKVeGQs1++ZIRH21S9Yo/M
c99l43EDAAAAAAAAgLfs8mE2Rh0NSgxJySmqRIF2ts9j69YeYHys4DldbkSt
6n2Mxya++tx1Pydx7PgF4/GFm8mTtmvHs0LpCOPxhRrp6VLSRb6JkLn91LR0
o/ENHLBeuz+vXA1+nR959z57LkwW+btgvJcv+V5F8rbRjonUFDG1r86eu2L1
/XEVl+Q+mDyOAmXt2kPqubqDgjrf/Ujlnra1FTq2W6LNsyySt7XxMRNy3nFS
92LcuK1G45RaYrp+LsXytfXLOqQ3kW777XJxsgwZ4v1nvslvc7XL9UedqVOn
L2uXL3mOpo9DO3L/FczPtb+EQz6M05o3cq2bN3eP8XgBAAAAAAAAwFdJSfp+
SfPmB74ey6WUVJf1B7KTGiOh/h4rbid9THT7VOrTm45P9Oy+ShujzCWZji/c
yH7VjeeAfuuMxxdqli07oB2vzxpONh5f1XL62gImPh9yvdDFs379kYCvX3Id
dOt/4O4Wxntl2NUtORp/zvjx5C8y51z3iQHG575vVfCeltZ174Vnhrj898dC
oP+ZmDVrt6Pt6dR+idE4ly/fr42tW5cVflnHv2v2065j9OjNbsdI+vN4u+4D
B0/bHku+bpvd+erLRv7pNRUoGzYeNf559pTUUTF9DXDCybbUrNrLSM4rAAAA
AAAAAASC1GTXPQ+dPn1nQNctc1rPPmX/bnfR+9uoY8fpWxOO7N5NljwU0/GJ
4UOjtTEmJ6cYjy+cyP7W1QMqlt8/7/LnNHb5C2vWHDIe3wP3tNTGd+VK8OfK
LqWkaeNp03JhQNctNTWkH5Ju/X17rzG+vxYt3qeNb9AfG43H5w8bo+JVqUId
jM99u7Lo//eD0/UJrPNYf+PjJzq2X+poe+T+zGScnTro49yzx/ceaXIPmucv
rmv95LurudqwwX1OxiIfewA+VKSjdtmRkfu8Xq7kZRW613U/JrFwkffLDobt
MQnGP8+ekFyYQ4fPGB83J8qX7Oxom1o1jzQeKwAAAAAAgC9SLqepqKh4ax5Q
6jFXfKiLKleis3q4Sk/18fsTVZ9eq4PWJwWAWXb1YVasPBCw9UqOS6XSXWyf
xcrcYzDe+UdgxO09pd230lfHdHxi5Ah9PkxC4kXj8YWTMWP079L367PWeHyh
SNcnTuZIQ+E9c7u+CibiuZ75P5Ij6SqeQNfekHwX3VhULBUREvtL6qjpYny8
Rmj0qPPF0MEbbXsV6cjvSB268pnfdSTHQ+pmDPpjg+rUfqnVb6lCyQjbXCcn
CudpY/X3kTh1n5snHg6NffBULWe1dSqXNdtnSz5XruKS86a/jifdtsu++vn7
2W7HyNd8GLsadb70lWzy+zztcovla2P8GHRHetM9WMi+dqRJkvP2/tvjrHsb
6bkl+Uemx8ypEwkXbHOlsps8OcZ4vAAAAAAAAJ6Qeb1WzRdq31l0Rd6Na9Z4
vvVMynT8AAIj8eRF7TlAnvEGYp1btyVknl/czz2NH7/V+PjAe3b17hcvCY13
k8eN26qNMSf1FwkGmW/XjaWcZ0zHF2qWLtX3Svrh25k+LVvm5nbsSLR4m6dx
4eJVbXxSB8jUuH3y4SRtXIGsJfZolV7a9XbuvNz48ZSloKamT6H7WhmPzRcN
6g/3aL5atleOFbkOOfkeI7lEo0dtUk/V6u/1HLnk2xw9ek777683GOloW+Uz
K5/dmEz+nmeXdyLs8tyyq1ahu9F9rotTern4umwZ4+oV9P3gJk3cpv79aF+3
Y+RrPowcm3nvdH0/LNsvNbE8XebZc1dVgX+00MY8cmS00f3qlPSTks+jru6c
P8hzEak3JXmWUsdO3hGqXKarla//fN3B6tUXhqsGzw9TTX+fb+VxT50Sk2Pu
Dd9sMMrt+EieYCjUqgMAAAAAAHDn8JGz6otPpqg8f/X8fcosRfO1VU1/n6cu
X/H8mRyA0BZ/7Lz2s79ihf/rw8hzVbvn9P+dA2isfvx2lvGxgW8iF+7V7uPo
TYHJtfLUlMkx2hj37T9lPL5wopvTk9oLpmMLRW+/MUZ77EX6MMcaF5ekalTq
8b9lyZ/l7zxdzvoNR7TxFfxnS2PjNnHCNm1cw4ZEBWSdixbq+xDJfOG19Azj
x1OWR6r01MYq/WFMx+eNF+oNcfR9RfL45fuKr+du6dXy5qujVNlinbTnNR1d
TRPxR//1btctddUervznPpQ+LP7MTR41apPjbTGZD5N2LUMb12svjvB5+dOn
7dQuX/IhpD9a4byua1FlN2f2Hp9jkTowuuVLTpeny5NjJlzOV05JbTDZJ3Jc
pKdfV6mp6So1Ld36//JfyfOS5xTy5yyXUlLVlavXrJyjLPJz8nfXMpcRCjW9
TNu9J8k6z9kd4/n/3jzzu9th47ECAAAAAAC4Iu+GSU1wp+8AOiHP0EKlxwUA
/9iy9bj2Mz93ju/P+bP79cc5jt7z7NNrjfFxge/Gjtmi3cd79yUbj08MGaTv
lxAdHRo5O+FA5pbuvcP1OD5bZ6Dx+EJRlbLdtMeezNd5s8zTZ66oiqVu70Mn
OTGe1pno0HaxNr5aBnvvnDp9WXtvK/PAgVin1A/QjYX03DF9LGUn109drOH4
nr9dT5vsaj/SVyUnp/h9/Zu3HPfpnYLsFi6yz3OT+fnsuTBZ5Hhv2nieX7bn
my+nO47XZE0hu95fvXuu9mnZkldRJK++Xqrk3K1addDRGI0c7nutlXnz92iX
L/fMksPhdFmdOiy1jffH78g1x83ksyY9tOyOGzkH7t7teV4tAAAAAABAIK1d
e9h6d9cfz25d6d93nfFtBOAf8i6y7rO+avVBv6xD+m5kr1egI3M+Y8duMT4m
8I9vv9LPuyUlXTIen4iIWKGNcdb0ncbjCxd2c5cyP2c6vlAj46WbY5eeK94u
t+4TA7T7QfqveLIsu3fGBw/cYHT8dLEFoo/T7Nm7teNQLF9bj+aqg0HmLHXx
OqlPEkokXzfvnfa5KNLXxF/3KreSexepFeKv709Sd8ZufXIs2f2+r3kgkm/j
Sd9c4W1unq+OH7+gjWn1at/yur77eoZ22eWKd7Zqjvz0/WxH4zN0qH9qUj1w
t75u4m8/z3W0jH591tq+ByO5kv7uv4WcQXpASc8ou2O9TNFOVt0d07ECAAAA
AADIM8tmjef7tSaMjvRgMr29AHy3c+dJ7ed8zx7f3wWcN3ePKlGgXVDnFRAa
7PrBhMoc8tQp+n5Jq3ycc8tNTiZd0o5jONakCLQ5NjkWMqfpzTJbt1hoe371
NB/GriZG/LFzRsfvhWf0/XOkT6g/1/V0bX2O0Q/fzjR+LN1Kal9If4twiVdH
chIqlbm91lF2z9cdbPVECVQMnzac5NfvToknL9quz10+TIG7m/u0PXb9AXWi
N8Ub2f8HD53RxhQb6319OclxsuvZKfWIJGfkwULtHY3PdD/lzf7601ztOorl
b+s2D6FXj1VuY922/YSRfYnwIPW1qpbT160TkidmOk4AAAAAAJC7LV++X5Ut
3tnj55zyPlqFkhGqZtVe6rWXR7p9DzO7Ni0XGd9uAL6ZNm2n9jMeFe39PIjk
571QTz9nmZ2cd0aO3GR8LOBf338z0+X+lpxN07FlkVwN3XHp6zvouUlCwkXt
OLqriZAb/frTHO14HTh42qtlFrq3lXaZ0kdIakM4Xda19Azbc7bp8Rs+JMpm
Ptt/eZWbNh+zHYdjx88bHwtXHq1ye88dUbV8N+OxOSXfSezGXr63SO5PoNbf
q8dq2/W/8+ZYNXHiNtvciuykdpG72hy6fknZLcv8vuftNtV/ZrDH3xMXRtr3
eAqUPbHJ2ph86bfYoukC7XIl30jyTnbt0ueJ32rRQv+MjxzL0pdYt55WzSNd
/t75C6m2OXtZ3nhllJH9iPAiua4F77GvMezvXroAAAAAAABOffX5NMfP7eSd
0Ucq97T6x2/bduK2Z7NXU9NVh7ZLrBwZd8uSOeyTJ0Oj5wUA74wcEa39jMtc
oDfL7Nt7jeOebTL34+38L0Jb419dv+9c6L5WxmPLEr1JP9+9eMk+4/GFC7t8
mI1RR43HF2qqVejucqyk94s3y5P5Ybt7NU/rAkRHx2uXJz0VTI+f3Hvq4nux
3lC/reeJh/tq1/Nmg5HGx0Hn8Rp9tMeC6dic2GFTt07Uf2ZIQPu+SF07u/VL
3xnpeSY/uzEqXhXJ674HUalCHRytW3pYPlhQX5uk4fsTvdomyXErpOmVZFdX
dPas3UaOgQ0bj2pjioryLldbah7avffx+//vS2RXN/FW/sqHEV266Ps3yj7K
XqtH9mdEp2XaWlDZ1X60n0f5kMjdFi3cZ3s8Se7t6TNXjMcJAAAAAAByl84d
lzl+Zvdc3UEe5a8MHrhB5bvL/jnb808PNj4GALzXp5f+HejjJzx7933J0gOq
eH5nvZGE5OZJ7XrTY4DA+ParGS73e9linYzHliVmR6L2+OQdWOcSEvX5MJ07
LzMeXyhJtMnlkFxlb5bZ6KPJ2mV+/YXny2xQf5h2eT//EBr9EnT9nMqXivDL
8ocN09egkToSSUmhmw9er85AbezhMC/+n1dGaeMvV7xTQHsknTl7xbbWkhx3
t9bO27rtROa9T1vb+50aFXs4jiEpOUW7nOoVu3u1XcOH6nOfa1btrf23IYM2
GjkGNm85ro1p7dojHi9PjvuKpfTvepQv0fl/nw0ndXqyLIyM89s2S46XLlcy
S7Xy3a1jQOoNOYnvoSIduc+Gx4YM2WB7XNWq3sd4jAAAAAAAIPcYOVz/bDM7
eZd31CjvepFIvZinavW3XX73riuNj0U4O3nyotq06ZhatuyAWrHygFWvYN/+
U+rKlWvGY0POJvXZC2veFxYJic7n++q4OU/c6sVnh1i96uUcY3ocEBiffDjJ
9XxeBe/m8wLBrq7G1CkxxuMLFzKHrBtHyYsyHV8o6dRJn8fs7b1a1fL6OdSs
OhaeyHeXvm9HqPS/KvmA6xoaUi/BH8u3q9HRvMl849tvp/Ev87Sxh/q95fET
F1TeO/XHXyDrlUg+wusvjbC9d+nVY5XL35XaI3Y5FFJTxpNYdPkOxfK19Wrb
pC6bLrblyw9qa8RInTcTx4Fd3uCSpZ73jPrwnfG2+3XjLTVn4uLs92eW8eO2
+nW7J0/a7tG9tB3p5XX48Fkj+w/hr2O7JbbH1/btoXEvAAAAAAAAcrY5s3fb
1rcW8u9Nf5+nLvv47Ft6qRezee8xlHpfhJNuEcvd7kN5linvYH3wznjVpuVC
1ejjKVZ/rP5911l5SN99PcOalxkzZrOVH9Wi6QLVttVCNWVyjFXbQJ7T9um1
Rs2auVutX3/E6n8j/1256qA6dvy8NYcpNbdNjwXMOHzkrO3xd+FimqPltG+z
2Kdn9vI5kLkf6Vn/SJWe6qkn+quq5bpZvUOkrlXLZpGqZ8/VakC/dapd68Vq
6NBotWNHolWTQnJ6TI8jXHv7jTEu97f0IDEdW5aj8ee0x+XwzHOq6fjCiW7+
Vq5fpmMLJe+9NU57zG3zcn5Jzp2ulid96zxdVrJNbQphevyy1K09QBtj2jXf
7mskF063bDnOZYxMb7+dGdN3auM/ey60a0XIfawu9spluwZ03XI/bXfsS20O
u/o6kk+j68dTxcPYH7i7hevvBXd7nu81fcoO7TaVK/7fuii6vjvSe8vEcZBy
OU0bc68eqz1altSasfu+9Y2mhpaMi9xr2tWRGzIkyu/bXthB/y13qlfsoRJP
XjSy75AzyPerSqW7ao+x114cYTxGAAAAAACQs8k7iDLHYfccTHrZr1t32G/r
PHDwtLY2vVi+3PN39XKz6Oh4n591+lNWPkKRvG1Uncf6qSdr9ldVynVTtar3
Vp9/OsXKxWny2zz14bsTrHf9pU9Xj24r1arVh6y68SdOXFCnTl9WJ5MuqYOH
zlg1buQZsswNmB5r6K3fcMT2uHDaV6FEAec9kgJx7MpcsPQ3KF24g3rjlVGq
VfNIK2dM8sLkfGl6nHMrmUdztc8eC6E66wkJ+j4/338z03h84URXS65YvjY+
5yfkJC/UG+JynGQe3dtl6nKRKpXxPH+gc4el2s/EA/d4nl8TKF82mqaNc9WK
g14vV+bhpXeKbtlS28z0truzcuVBbfyh3OdJ7jl0tYnkWi+1EwO1bskxt7vX
kO9A+x2sX/dd6dWXPJs7lnxg3Th4+p6DXf2+3376b/0X3fdKua8ydSzo8vwq
PuS81s6Ro2dVmaKdtNsveUDy/cXtftWcY8eN9W99GLE28/v7v+7w/p5YcpF5
1wH+ELkwzvZ4k3dsTMcIAAAAAAByJqnV8lh1fZ93UbZYp4C8//mBTa3pD9/l
/W9PfPHJVK+ec4Yb6YtCPkLoWrx4n+0zdafLKXiPvg5/KPjovQnMxxtQNF8b
7TXKdGxZTibpa2F80nCS8fjCieRJ6sYyotNy4/GFiuKa/EHJk/FmefIOt27c
6z892OPlSf0J3fKaNQ6dPkFSA08X5w/fep/LZle/J99dMnce2rVhhNQC1G2D
9CMyHZ/O/Hmx2rjfeXNMwNbb6KPJtvcQkuOyKPN+yd1yLl5K1S5Dcsg9icmu
59X0aTscL2faVH1tGLnPy8oFqVAywuXPSN8wU8eD5PPpYpexdvf7kvNtdz4T
TnufSb1OV7+/MHJvQLZd8hDc1RC9lfRHHj6Eunbwr3p1BmqPuWee/MN4fAAA
AAAAIGeSOh12z8JeqT9cXbnqW38kHXn2qHtv8/6/NTM+NuHkg7ft+9jnJNL3
xmmdEQTXwkV7beZJnPfFeOoJfd+KUDFiBHMEwSY1e1zti1DKh7mamq49ZuR6
azq+cLLDpqeEvINPTppS8cf0/bkkn8ibZR45ol+m1HfzZFmTJm63PY+G0rvg
Mo+vi9PbPg4LIu3fhR8WgN4ogbBz50ntNkifRNPx6UR00ufUSf/PQKzznTfH
ur1/kJ6kTpZ16PAZ7TJGj3a2jCx251Op/+FkGVKj0a6eqNR7zPrZzxq6zgkq
nKe1sePh9ZdGaGPv6OZ8uTHqqMp7p+vvrFmqVejuOBbdOC5aGJh8GCE1OO36
FWeR2mJSF5FrLAJB+m7p+rdZ57ZRnp3bAAAAAAAA3JHnYnbvism7xYHKhcny
oU2NGJlXND1G4aJL5+Vun2/mJE7e40TwxcWd0u4zeQ/e6XKOxp+zcuJMH2d2
Pv2QWh/BVrJge5f7om7tAcZjyyK5erpjxtv8hNysTNGO2vHs2G6J8fhMmzc/
Vjs+8xfEerXMrVtPaJcp9xqeLEvXyymLp31aAq1YPtdzxTUq9fB4WVJ/UXrD
6Lb90aq9rFo8prfZie0xCdrt2LYtwXh8Ou1aL3YZs3z3kf3jz3VJPxnJB3F3
7+BJTSTpFeqvz7fksuiW9bTDa2iHtq7HUxS6r5U6d/7PWqJSv0b3s6Z6bC1d
dkAbkxwTUgfJ1e91zjzvubsnrVgq4qbtd8dEPkwWyeeW+j1yXy59m4TE0+D5
oWrqlBh60yLgdOdmIddh0/EBAAAAAICc4/KVNNuaz/Kc7MzZKwGPw64+TaBz
cXISeYdPV2snJyIfJnTp9lmvHqs9Ws7xE+fVM//+w3pGL/MQ0l9AntmbPvay
fNFoqvGxzm10/Re++WK68diy052L27ZaZDy2cPPbL3O0n0E5Hyxfvt94jCbp
ajCIY8fPe7VM6dehW+befcmOl7N6zSHbc2jBe1oaH79bffe1Pp/B03tiyXvQ
LeveOxqrdesOG99epzbZ5GVs3nzceHw6P303y2XM1T2o4+HEhYtXbWuPZGn4
/kSPcg0WL9H3oNyw8ajHcUptFlfLeqxab7e/K7VqpC6XLp7ffp57089LDybd
z5qs/1Czqr5HcMF7W6pFi/+bjyL5Ugvmxzmqp1IkbxsVF+dZL1fdvliyOHdf
05A7SB9uu+dQ3pzfAAAAAAAAXHHX237VqoNBicPueSn1YTwjz9jfe3Psf9/3
+2sTdf9dTa1n11L3WuYNpV+Np73jQ1G18t3V9RvmxxuuTZkSc9s+q1q+m9+W
L/U3EhIvqgMHT1v1/yMj91rv7nbpskINGbRRdWi7RDV4fph6vEYfVf+ZIVYf
gNo1+6oieVtbeQoF/tHCbc17J2bN3GV8rHObBwu5rg/z8w+zjceWnW6ey5O6
APivSymp1jVN9zmUXLkZM3LvZ1FqEujGxdtlds88l7paptxLeNKrsOj9bWzP
oU883Nf4+N1q/Pit2nj791/neDnys3bbXr2i5/VmTJK5ft22yLXYdHw6b7wy
ymXM5Ut29ts6pGeZ7E939wzP1R1s1ZDxZNnTpuq/I3mafyHKl+jsclnSi9Du
985fSLXqv+hike8Y5y/cnC+2ZrU+H+6rz6cZOyZWrjzodl958l1Jtn1jVLzH
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
Sdl//kTCBW2tPx3pyeTPY0Jirlqum3Z9nubflC3WyTb+GhV7ZK7PPs8iixxD
UVFHjX9ufKHLKZF+OaZjc2dAv3WO91O1Ct3Vu/8Z67g+yq2kV9669Yf9Fnu7
1q7rw8g7DN4uU/L7PM0pvFW/Pmsdr6/Qffa5RCOHe1a/KVBS0zLUnthktWrV
QTV61GbVv+9a6z2SY8fOG48NCLbUtPTbagrL+X76tJ1+X9eaNYe154cpU2KM
jwUAAAAAAAgvPXuu1j5rkHmMi5f830/AnYcr93Q83wL/ybh+w3rOlZaWYf3Z
dDwA4M7u3Una68XMGbuMx5fdy88Pcxnn808PNh5bTiH9iuR9fV/mdIOteIF2
1vy2v3rmvPmq67okUnfB12W/9epo7XbIXHzvzHtK+dxJ/yC73Bmd+fNi/X5M
jB61yXadnixr5aqDftnnBe9pqTZtPmb88+KrCiUjXG5f9QrdjcfmROWyXQP+
+X7/7XEq5XKaX+Nu3WKhy3X52m+sVfNIr7dTeiB5sq5FC/faLk/6zZk+PgDc
bPz4rS4/r3K9l2utP9d17Ph57flhwvhtxscCAAAAAACED3kXsOA/9e84m3g3
7/gJfT36iqUijI9ZTiQ5T6/UH66ZP/vv83V5J7ZSma7qmSf/UO3aLFad2i9V
QwdvVHv3JVs1hkxvA4DcSXIkddeMxUv2GY8vO6kt7yrOuk+47jUD722MildP
PNwn4HPd3pKaJS2aLlBr1x5W6RnOe/Y48dH7E12us1j+tj4ve88eff6ZPySf
8n/fEckzknsZ3To9rSPlroeKO3nvbKZiYhKMf0Z8JT0zJMfK1TY2+c19z5xQ
IP1ZpQ9rII7lSqW7qKVL9wckbulR4vrY8r5fUpbn6g7yaDslt8vb3iVSc8tu
2ddvmD9GAPxJl4uX5dMPJ6lr6f7J7ZXnVLr19Oy+yvhYAAAAAACA8CH1/3XP
GR6t2svvczROdGy7VBtTo48mGx+znOi9t8b5/NxfnsEXuq+VqlOrv/Weu/Q8
GD482upfkXE9OMeR1AXYHpOgYnYkBm2dAMxavny/9ry0fv0R4/Fl95/XXNfW
eKRyT+Ox5VQDMq9FRfLa9+UIFskr7RqxQsXGJgd0m997e7zL9b9Qb4hfli89
pQIxPoXubRWwMbHLefj6i+keLUt6tMk9jzfbKMdi9KacUedwxYoD2u0cO9a7
/AgTTp2+bOXb++s4lt4hvXqssu5JAxVz/acHa9fvj+W3bBbpaFtfe3mENWft
7Xqupl5TpQu77qlWs1ov48cGgJvJud3JdW7X7iSf1yXf5XXrkLpbpscCAAAA
AACEh/MX9O91igWRcUGP6UTCBVXgH/p6NStWHjA+bjmNvHuZ5y/ezes4leev
Ta25hoqluqgalXqohu9PUBMnbLPei9+9J8maW5J3dKVOjfxXnq0LOUav37i9
b5O8kyy/N6DfOtW8yXzrPVl5Xzv7/FT1ij3UocNnjI8vgMCaMjlGe+7ZsSPR
eHzZ6epKFLm/jfHYcjqpZda54zL1WPXeAb3eZSf9Pr75YroaOWKTij92Pmjb
Wuex/i7jkX5d/lj+tu0nvOqF5M7DAcwL699njXa9X30+zePlbd2WoPL/vbnj
bZP77batFlk9KU1/Fvzls4aTtdsb6Jwvf5M6h77W/ZGc8I/enaDOnrsS8Hhf
eXGENg5/rWPL1uOqXp2Bmdt1cz7hQ0U6qC8/nap27Trpl/VI3lCD+jf3EpTP
luRbmT4uANxMrmG1H3F/rpS8wBEe1l67lZwbdMuX/HLTYwEAAAAAAMJD964r
tc8YKj7UxUhMNSr20Mf0oJmYcrqM6zeCNjfoLZl3k5wa4cnvSU6Mq3waADnH
rz/P1Z4D9u47bTy+7CqVdl1XQ+b+TMeWm0iu5KA/NqjHa/SxzQv2lOS/fPDO
eNW/7zqjuVi6WihS989f65C6TJ6Onfx8Q00vJ/Huf8YGbExk3+jWO2rkJq+W
eTT+rCpeoJ3b7X6wYIeQq1XlDyU0257vrmZhe++1YcNR9c6bYx3nOhXP31b9
/MNstX5DcPdvV5vvcL/8OMeah5bccX+tT+o0SJ56oParLDcqKt76LE6ZEqMS
Ei4YPxYAuHbm7BUrV87JOfL1l0ZYvbC9WY9dDbI+vdYYHwcAAAAAABD6Ll+5
pkoWbK99xjBiaHTQY5o+bYft85TIhXuNj1tO9Vi14L0vH2xSc8b0+AIInC8a
TdV+/oNZk8MJ3bk2kH1iYC89I0Nt2XJczZyxS3XrslJ99/UM9c7rY9QL9QZb
9czKl4xQ5Up0Vo9U7aXebDDK6tv4209zVOeOS9WQIRvU0MEbM+9fdqozZ73v
GeJvuryrR6r4t/7KhAnbHNeXk15NR46eVQsX7dX+zPx5galLKPXodOuUfFtf
+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
AAAAAAAAAAAAfEU+DAAAAAAAAAAAAAAAAKJJnixNbHNhMt1Vx3hsAAAAAAAA
AAAAAAAAgK8mjd9smw/zc/WpxmMDAAAAAAAAAAAAAAAA/NG29UKV8e91/syF
ef/tEerm778bjwsAAAAAAAAAAAAAAADw17XrN9XpM1dUYuJ147EAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACLDzd9/V0nXbqgLF6+qi5eSrD+b
jgkAAADAH/fqFy9dtXCfjtQSEi6pj98fqfJma6oK52+rateMUYlXrxuPC+7a
s/e0+uT90apsmR7qnSpD1do1h4zHBATq0OFzavKkLWrUqPVq2NB1qk2rBapm
jRhV8+cY1anDEjU0+e/6941Vs2buUFcSrxmPFwAAAAAAhL/de06pZo3nqCqv
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
ebvUocPnbN/PbnKoyb3/wFnj2yQcyXbMn0s/b1MMGbzGeJzQq/fbTMf9J3XM
ryYF/x1dsDh9r0+dvuz68uQ9qbfnp6aN5hjfPm5o2Xye43peupxkPMZII+fW
lk3neVUnQXoISn0Z0zFHozGjN/hUsydYJO9J8nTv+7983Qz/k/zf//PHf3fp
tNTKoZG6VNeu3zC+zVKT3nq6dRo8yP7eYPqM7X7XbQz0flFID5aij7dX71Ub
rmr8OEW1ajFfDewfq2JitlrrE+j9f/s2i7QxLFq0O+j75Ldf9fk4JnvATpu+
zav9JOe77l2Xq6Rr4XWsRyI5lnX1mKTPWThdV0o65IhK3p3p+OAfyft0+r7L
mIvpGOGOxUv0+XeidPHOxmMEAlWn1jSv72Eb1ptpPF4AAAAAwdes8Rztc8H+
A2dCEsOIEXHO7x4yNFTnztOT3oQZ0/X5Uh7fZ9xZRz2Wu6U1/3rZsn3q8hXv
+8qvXnNI+7nrNxw1vl3CUfXvJznuj19+mmo8xnAj77kvXrpqCYe6GVVet+/d
8Mf+m2w8vkCtWLFfu35Hj7rfa8aXfBipq2R6+wRCahnoem+kRj6M/+T9dLXK
Qzxu42++HG881mgj9xH+3ouYImPw2e9vpHJmamzdC0lvx+ZN5qo6NaepVq0W
qDXJ9zlnzyWGbBseP6GvB/nis/q6DlKLR94TfPbxGCs/umrFweqTD0Yln2/G
qPffHq6+/2aiat1ygapfZ4b6+otx1r2I5AWNGL7O6lMpPRwlh33MmI1q8qR4
tXHjURUbe9D6u+3bT1o5zpI/dOjQOev8FMoc9769V2m3SShq5jst35d7Zjcl
JFxS2e69vb5YWjV+nBzS4zc9eKFMD+32XhJGfU779dEft5K7Zjo++GfWbH2/
3ewRfo+MW0l+qdP5vXTxLsZjBPwlPW8ln9qbe3Wppzp27EbjMQMAAAAIDanV
YfdskPWeeiFZ/tx5u6x5b07PKatXHzS+ndKrEjY9AZwUKdBOdWy/WK2LOxzQ
Ow2nuv6Lw2hMOFzIu6QH/6GvXSC9zyKlrojMgZV3+1cSr1n/LyR2eTd07drN
5H+XfhWB565Ibf/UPS/kv03X+5eeHnb7T+YMO+XryHv6+Qt2qfHjNqlBA9eo
9m0XqQ7tFqvhw9apOXN2qkWL96glS/epaTHbrO+PvItcvny/2rvvtPUOct/+
M+r8+avJ2zm4c7yl/4juGJVaUW4vT7bZU8W863Uj5s7ZZfz494e855Zzr6f1
K1mEfkluqPXLNI/buke35cbjjBZy/vd0nxjJpO6Q3HMXerSt9Y5KciSkXsu6
dYHdR9nR1p/4ex3j+9mEzVuOa/dLv36xQV/+gH76vAK5Bwr19pDrg+RuOR2v
me+uZ71rMr3votGgQau12712zRjj8aU4czZRe06Wc4zp+OCfH76dqD3+ypbp
YTw+uKdqBf38C1GtylDjMQL++KCa/ViKHRk769p5qTp2zP05OQAAAADCk25s
PE/WpkFftswDdepdLF57sa/xbZSeedMfQsbIZK7z4SPuvc+WekC65UmdfNPb
Jdy8U2WodnvJmHW41S+Xuh3Sn0bqWRR6tI01h0fGJOSdnLdjGDL3Xsjv5Hqw
iSpesIN6qlhn9e+cLVTuzE1UwXxtVOUKg9RnH49W3301QVV5faA191b+rmmj
WerhbE3/6HXxf/0u5P+l35QcXzKfXXL1ZP76kMFr1dAh69TSpXvV1Knxqn/f
WDVz5narX9ugQWvUiOFx1r9J3knf5H+bPGGz9efUNnnZ1+1tTT6MbBtdHoPk
tEgfMrfezVrb9M461vvZEoU6qnfeHKZ++mGy1YdnQL/VKmbqVrV+wxG/3tNu
cXj3GKx6ZJIrJnkg3qx7xdf6G/9u+OrosQsq27321/HUCuZrrXbsTDAeb7SY
NHGL4/aW89Imegu4Qt69unV+izRy/S5VtKP64J0RVj1HyUPw9/wrXn+5n3ZZ
pvezCfIcotseUg8n2Muv/WuMdvlSty7U2+Pn6s41A3I+2Dj5Xv+88f0WreR7
LTWl7La93Cubji+1J/K21h4nHCORySmvWtdTD6GzJPl5Umqv/VpjqqpcfqD1
7CfPh0L++/Vy/dTH742yajTVrTVNbdqsvwct9rj9fLgU/fsHPx/UHzJnxpof
cz18+schfMh8PH/vt2XsqE+vlREzfwwAAACAfzLdZf/+Wd4rB3vZDerMcHwu
ebZUN+ayG1Ygj/080Qfu+E29/9YwtWvX6aAtW1fvZPQo5qWmNm36Nsfvkcz3
Mx1jalOnxGvPO9FM8nW2bXPOR6hWRT+nSVdvQnqzmFgfq57OjpM+7XvJx9B9
nuT1BOuYk+tI3Poj1vtkXQ6okLEw098PX8j7Uslz8bSvXnq+l9UDw3S80UZy
+py2u+TmST6W6TgjnYxNS56e6XN4OPHmemJHl38h29f0fjZFd2w991S3oC/7
vWojtPs46Vpw67WlJXXmnOYoSF2YrduOG99f0U7yt3X7wHQNw9Rq19TXSRsy
mNyJSCPnG92cBMnLZDzGDLnOV/9+ssf5YzoPZ22qvvp0rDW/I+UznZ7FUqT+
+XAhPQxT8v9lHEHGETkukZrM4Qn0/lr6J1V6dUBQxzgBAABgT+7v5V2HCOd7
/aSkG+rU6SvqRMIldf5CojXXLtg9F+AO2W+6Z4GG9WYGffllSnTVLv/dt4ap
a9c5jkyzmwOfM1MjdfrMlaAvO3eWJrbHRq9eK41vl3Ah35HiT+jneMk7M9Mx
pnYz+X8eyd4s6O8Kw5XsK6freZs2C7W/K2N/GzYeve13nirqfT8gt/naf2fP
3tPaz9qxM3Q1jGSetS4OuYcx/T3x9rsv9dM87SN5t8Zct+B5oXQPx+0v/brk
3th0nJGuvof8aRm/fvzhVipX5iZWDYtC+duqV17srV75bx+rVliu5L/Lk6Wp
KlqgnSqVfM6U/0+ZW236uhCs64kdmVtu91nZMzQ0vo9N0R0DTwb5/kn2nWx3
u2WbyE+qUK6/9liTeDba3H/AfVKDT7cf5PtrOr4UJ09e0sb5yQejjMcH30ya
uFm7P+WaaTq+9Ebq8ZQpqR8n84fk/Mu4jjc5A77Odwi2RYv22MY5ccJm47Eh
fFR8bYBr3xe572nScDbj0QAAACEi839k7vWfY54FO4TFnKDEq9fVgAGr1X+e
7GL108l8t34cWd7dvfRcL2vs5vKVyHi/lN7Iu1Xd/hs3dmPQl59Hk+8gvVN4
fxc+1q49ZM0DlL4z3bsuC9n7Yl0dh7q/TTe+TcJF754rtN9h6XcTbn2SZP6h
m2N7kUjmYDttH6c5gNnvb2hdh1P/TqVX9e+wQkHqVnu7/1evPqj9nDVrDoXs
OGxYf5Y2DqkjY/p74g2pn+Zp33TqsNh4nNFOevlILobTfpA6E+Gc1x4phg+P
s3oDSo7LZx+OVqNGrbfyut36fDmXnTx12arpEx9/Qq2KPah6916lWrWYr/r0
WZV8/7NctWw2T9X8OUblztz4r357/yfcrid2ZH613efI/H9/ezBFOt29pvRP
DOZymzeZq92vOTM1Duk2mDd/t+NxFm51BqOZzIPSja+EW8+k55/ubhun5L2b
ji2ayH3/zl0n1YqV+9WECZutc0e71gvV5Emb1Zy5O61r1a7dp9SVRO/vx9Ny
yr2Q3ramt0F6EZu8L3XjY26RcTZPP2OiX5+T776eaBvnt1+NNx4bwoc8w7v9
fZH8eTn/ml43AACAaCZj5pL/kvZerHD+tkaeTWR8dN68Xeqbz8erbPd6fn6y
HWf9ex3VpuUC49sWtxo7dqN2n8mYSzCXffTYBe2y5V2D6W0D83TjNTV+nGw8
tnBw/MRFx7nt4fgu/MbN3yN6Pr4bPL2/HDduk+Pvl3+57y35gtOnbTe6Pr7k
wyxdtk/7OXFxh0N2HM6etUMbx+rVocvL8devNaZ63C8tm84zHmd6Ie+hpG6a
0/74lPnyUaV08c637N+UnJgH7qxt9TDs3zdWNW4wSz1furvVryBH8vEh+Yyh
vp6kNXnS7TX/UsyYud34djUhR0b77272jMGtmSP1iXT74sN3R4Rs/eUYyp/L
vjeqCHZeEG7nVPcv8ar/OQ9uk3OcLs5wqy8RKSQnc+yYjVafy4ezNbVqSPnS
L1DG3Ao/1lZ1bL9YbdniXX+zxYud8+G6dg6fukTR6vqNm1aeUzj0hpRror/r
IePYmzYds7iZY1sk+Zi2i1XqSZved5Hgr7rzSVGfn9++7SLXvxNyXpXcQ9Pr
BgAAEK327T+jvRd7q9LgkMQgc9SlPkjZZ3qobPe5N35bNTn+aL8HjyTff2M/
10JIX4tgLnvunF3aZc+dF349ixF6uncUDerOMB5bOJC8CN13SMaN5DxuOkY7
9WpPNz7WZ4q3/S0qvOJc80XqAaeu0yTvOF8o3d2akytz3WXcRub7i2Cuj/SC
8eWaPtGhHvuRI+dDdgxKvzddHEuX7jP+HXGyLu6wx/3ars1C43GmN1u3nrBq
huj2ibzjkFoypuOEOyqXH6jdz06/J7mMcesPq6lT4tWokeutPlBSc/PfOVuo
vNma+nTO9qdf0o6dCdrPK1KgXbp8RpMeEnbbQ+o+BWuZ8u5Tt6/l+h3Kvn3f
fjne8TibPm2b8X2U3rz/9nDt/liwIHyekeV5XRcnc1u8J/URJbfo6TR5lm54
LHdLVePHKda7XF3tXV2uQYpwqzUabaTn/NPF3N/3/ipRuKNf6yE5cGnrm2/b
luDKNtLNkXqz4iDj+y/cyTUj9VxbuXeUGoim4wqmc+evqKaNZqtPPxxjnf9a
NJun6tWeYdW7rlpx8J99VH35Xkj93sMhHKsAAABIT/Y75MOIrUG6f5Uaqz27
L7eem4M5N0Hmu5jexviD03ibr3NOfSW1t3XLlvF609sG5mW/3z4fplevlcZj
M02+n5nu0tdZCed+2jJfrFOnJVY/eqn9XrJwJ6v+WakindSXn41VLVrMVz9X
n6Ia1J2pRo/aoCaM32z13ful+lTVtNGc5OvUCtWh3SL19WfjrJzN/z7bU330
7kirnneV1wepgvlaq1yZm1hzr0sU6mCN+8i7xsx3/9GHyFRfC1/GBQ8dPufx
OvzFJ2O8+iwZ/5b5ppLjKPP/5y/YpcaM2aD694m16hh06rBE1awRo1onb3eZ
Typ95cuU6KqeKdlVvfpiH1WySEfb2t2y/3ytH+x03j97LnS5AucvJGnjmDRx
i/HviM6Zs1e0eYIpBg9aYzzO9GrZsn1Wr1DdvpHzlukY4Q7pm6Tbzzd/9/9z
r12/odZvOKraJR8r9evMtMbxJfdVrmH+Xk9Sk3wXp2NU5tWa3rahJvcMdttC
3n0Ea5nS30S3Dz56b2TI1j0mZqvj9aRE4Q6uL1PuATdvPq42ulw/IDU5zuXe
RvoKyjWzRKGOEXVtnDpFv1/k3GM6vhTnLyRq45TcDtPxhTPJiZNxN6n/Espn
kQJ5WqraNWNU396r1ImEi9Z7caefD2ZeIFTy9f6IY/957TPlEx2S7w36qdLF
u1g5ta+X62f15kx51g1EubK9fV4POedKHs3tcbZ35Tyvyx/94O3Q1VKLNJs2
H1PvVh1mu92KPd4+oHvVaCHjGF98MtaxXl9qj+dtbc2pMR03AABAtJFnBpmj
p7sP++l7d3uFyFzjZ0t1teajheI5XN7xTZ4cvu+b0hPdu0k5FoK97ArJz+26
Y0Q3fwnpiy4foD21D1S3Lsu0359HsjUzHl84mjt355/byOpt8b//9/931LLq
Ohw/ccGaky21hCXfSHImJEfj2LEL6ujRC1Zth4STl9WRo+et/BL5s/R9k3+X
PIVTp69Y/5aQcMn6c2r+1Cdu2XK+x+upxBGq7Se9ruTcLOsi28mfOgIVX9XX
vQnleV/2kS6OmTN3GD9WdSRPyel4qFxhkPEY0zvJ2dPtH+lBbzo+uLSfG+r3
s5wrg7HMa9dvWuffQOvdO81Dl/uuWbPD9xwYDK+9ZF9rL5j5MOU1yxShmrd9
7vxVlSOjfn507ixNrDnWbi5T6gekfmfqZv2AFPPm77be4dut0+jRG4wfb96Q
saBs9zawXYeXX/D9XXUw6ba15PCZji0cyb4dMmStVZ8gFONunnjq4ye1J01v
s2glz5je9lGU71nFVwaotq0WeHwff/DQOasOc4umcx3nzuhIXo2v6yLPhbrP
k/zPQLbTseP6Huutk5+VTe/HcHH5SpIaNWqDqlMzxprf6mk/B3vuY6SRmo3e
5MXIvVE49S0EAACIFstX7NPeg8nYkRvLWBV7wJoHbuLZW+41TW9jKKu+gt3+
CUWveF0/kGCOPyNySL0q3flDxoJMx2eS9EFyGufo3z/WeIzhSOqd6LaZjBma
js9O29YLHa+lvtZnMa1UkdvnDopQ5GCmNnVqvHabxm8NzxrSq9ccUhnu0B8L
xfzonYLgeDRHC+1+kpoIpuND4L78ZKx2H8u8f9PxOYnfctyxL5P829Jl+4zH
GSpy/ddti2DkNkmNO93y5N4uVOv94rM99cdA8jU5dnVg7zDTCnb9APHFx2Mc
75lefiFyatR+8M4I23WQ+k4XL4XPe8wK5eyf5yVO5rfcas6cnerxh1u5OqYW
bF99Otb4dotGcs6r8rp938XUJEf10w9G+V2TQvq7FMrv3A8rLX/qwzjlw3Tq
sDigbTV00BrtZw+KoLpfgZL6gWvXHbbq6NapNU3Vrz3dyleT+4ZcD9r3fXRC
Poy92bN2eqzRW63yEONxAgAARKMH/2Gfzy99zgP5XOn1/Eg272oCOpHantLf
ok2rBdY7O6lXIPePTRrOVhVf6WflNTj9/qRJ1Igx7Z0qQ233jdRdDfaypYa1
3bLLPtPT+HaBeXv3ndaeO2T+hun4TJIeQrpt41a+ZLSRmu66HhEy5iH1QkzH
qNOj23LbuAvkaRW0XgPBosvjypmpUUjjeOW/fbTfIakBZHo7pSXvEYsWaK+N
WcZBpV6R6Tjxh3nJ99m6fSX9b0zHh8D99MMk7T4OVn0YNzndRwipTZFeasJL
3xDddrh61d33+V06LXF8zyJ9IkOxzrv3nHLc/8GYc+/0vjRu/ZGAP792rRiP
YxfSY8T08eat/n1jteuxePEe4/F5E+eGjUeNxxcuvv9G3y80nNHnMThq/ez5
fCW9gKU2SqDLkmv5ozm8H/utX2eGz8uQ3ju6mlYvPRdYHqJTf8olS/aGfN/J
eU3yFVN6VZUu3llVrTTY6jkssXbosFgtWrxbbdlyXO3bf0YdPHjOqicr+Scy
30vyBIX894WLiVadIKn3Kj8jvY1Xrjpg9VKTvpnNm8xVHyYfB9Kj2M1a7lKv
kjkUetNitjlub7mP2xqm82cAAAAimeS92N1/PXRPA78+b9fuU1ZP8kDunfPn
amk9I3kzbiX32E8l37vrPuvNNwYb38bpnTy/2e2bFwN8bvXGw9ma2i77u68m
GN8uMG/yhC3ac4f02jYdn0lSK123bWKmbjUeXzhyGq8vWbij8fg8GTxozS3j
Mtnua6AWLtxtPC5fyD2B7j2gzJEMVRySQ6Sr7y91EcJxfPCbz+1ruaUYEyE9
INILqQ+S9R77nPBcmRsbjw+B69xxifb7KO+FTMfnjV9+mup4Xvnvsz3Dqg5F
sAzop8+Hkb6Jbi2nmmYOQmoHDp4NyTrr+uWKYo+3D0qNIzmWdMsMNM995qwd
Xo1jfPvVeOPHm7e2bz+hXQ9572o6vhTSC0UXp+TdmY7PNLmn/LWG87lWJ+u/
6lt9lX5NPlePGBFn5dpKfYj583er2NgDVm81+bPMdZO8Fanr8UTe1h7npPli
7JiNxrdhtBk6ZJ3H7T50yFpXl+lNLZoUUybH+7WM50v3sP08mY8SSOy6noby
TCk1c0O573bvPqV9howUkgtDLodnknf6gENdVul7aTpGAACAaKObR+1rPxmZ
E1C7Zox2brwn8n7oyUId1ORJ8T7PRU+8el37uf7U4oS7dD2Lpe9CMJcrz666
46J5kznGtwvMq1lDP29q+/bI6hHjpm3bErTbRWrDhOO7/HDwcFb7/DuxeEn4
zLN1ItfyNWsOqbi4IxFZ43j/gbPaffDjdxODtlz5TmzcdFQ1bTRHff7xGPXv
nPpeNkUfD+61zx8yt9CpnkClVwcYjxG3k3dYun0mdRJMx4fAfPbhaO3+jZR8
GJmfXNhDHwXpqXPufORdb3zRpdNS7fofOxb43Hy5Xr/5xhCPz9tSNzMU6ys9
Fx7J3kwbx9w5u4K03JvaZbZsPs/vz5XaaLqauqlJTb1Dh88bP968JfcuuR5s
bLsu7741zHh8KeT8oN2vzfzfr9FA9uGP3+lridmp+NoAK49I+tz4u1wZf5sz
d6eV86ibf+StvMm/P3vOTuPbMlpIrmH2DPbjb0Lu9/v1c7fv8bixG33a5/72
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
UQMHrlatk+/tq1UeYo2jyTh3ln/e/g4o2CTfnzox4UPuee32Uy4PPaO9yYf5
4pMxfveG9ZbMHZFj2W758mxjIqcft+4f3fEhz3jBXPaQIWu1yw72cYnIkFcz
hmOiV3S4kLmEdttE5gZF4zygd9/S9zlKTfKB5b2S9LbfvefW8dA339D3fI6Z
utX4OqYnP347SXs/4M/nOb3X85bMVa3+/STj2yatRvVnOsYt6246RrdF4/PH
R++O1O5DyckwHV96Iu/vHn+41S3nnaIF2qnK5QdavvxkrBozZqOV9+FNrwCp
VWe3X6W2nduxS000mf8u+Z/ezsv3l8wrTpsrL/MzovH7mXa9ZZ7IX/dVdQO+
R7h2/aZt3pRsX8kLMbGeurwFMWnilqAvX8a9dMufNdv7+qAyjpY7s32PHvFG
lNTgatlsnu36yTih6dhS69BukXZfyPfAdHyhFBOz1fH+7c03BhuJS2qFeKpZ
4y1v8mG++XK89vdlrqe/66FbhzIluxrf906snsea2OV+wu1rrDwXe3r+0f3b
21WH+r1c3Wc+Xbyzz581ckSc9vOqVjLzPXLav3Jff+DgObVjZ4Lau/e02rY9
Qa2LO2LVvp4+bbtavny/il19UK2KPaiWLtunpkyJV5MnxaulS/epuOSf27jx
mNoSf8L6Pbnnk8/ytSYugqODQ/9i6b9gOj4AAEIp8ep1tXffGSsfXe5hpJb/
iOHr1JTJ8dZ8jk/eH6W+/mKc1ae5ROGOVi0XqemiyxEIB5FeVzaavFt1mO0+
knE0p9+T+/EnC9n3SypXtnfyffnhkMTv9K5Kajqa3r7pnTyz6fZPsMdpe3Zf
oV12IHOGED10c6+lD7Lp2EyQ+m2678y3X00wHl8wFC/oPJbndH2R95tffDJW
5cnSVGX4Wy1L2p8LZY8CKFWqSCfb/VUy+f7Yn8/btPmYX8dHtnvrq88/GmP1
uZf7eNPbJa34Lccd+5ZIf0vTMbq6vvHH1aM5/sh/lHcFr7zYOyz3iz9q1piq
3Y8m+iSkV/I+9tEczb0+R8j3T+rhlyzS0TpvVXq1v+redbn1PlHyZa4kXtN+
ntR1CiRWeYbbuu24lZsgtWFffqH3LXNkZDxh3/4zQd1e8i6mY/vFqknDWWrc
uE3pZu7rqdNXrLlK0hvKrWeRJUv23lJnv9jj7dXqNYeMrePTxTprj3tv8sAC
NXzYOu3y27Za6PXnOPURku/vgQPRMbfiV801JE+Y9WgYNHC1dn+kt9xP6f2l
2xaSLxnsnEY7cm5z6r/p9F1K+3fe9kv6t6bvu+jedZmf63FZf29/X0Pj+97T
PtDFXqFcf1eXpZt/kOLXGjHacRYRSJ271HmlqT3qob65nUqv6s/zci0xvU+R
fjRtNEd7LPL+DAAQbU4kXFSVyg9U+ZKfXSSPRepbSy61W7n14YjrefiQMVDd
s6mn392+/cQtOTEy/iY9akIVu/RMl3qouuMsHOdjpzdOfe1lTk8wly05grpl
R2Odi2gm4+cD+61RL5TuoXJmamT1t5HrpNQskXc4Kf8t/1aySCf1ZMEOVr5C
oUfbWr0k6v42zcq/kn4/jRvMUt26LLPm0sh11i6HQZ5Hg7k+Uq99/YYj1rwc
E2OWOvIuTvedkbmIpuMLhrcqD3bt3iYlJ8byv3/U1OnTc6U1396bc47UnY5b
H37HRSR5tlRX230zY+Z2vz9Teojq9rmcQ+RcI9czOa9Iju727eHf80PylnXr
9Ej2ZladbtMxukWuH3Z9G0s/2cV4bG6Q+aC6fRnsnAb85eixC64/L8uz2B/X
lJqp1LLe+VR4pb8q/3I/VeSxdlaPR+lxXKXiIPVmsuee7q5efbGPdR9cOfke
qPBjba0eCpIXmNvhPWpq8nwX7fVaoonkY8l5W97lSs8uU3HIGI+uT26ZEqGp
rSDz5nXHdeeOS7z6jDlzdjp+P77/JnpyxOWcYbeOkqtnOrbUZC6gbn+kp3ku
UlNKtx1kLDkh4VLIY5L8Yqmd4s91bvq0bbeMJxZPfoaX+Rmelim1Op0+V/IO
/VmXXj3086nCrWZSWpJLq93OLtYrlT7BTjn1pYp2subxSp8fp33k77OGrnae
/L0vn7Nk6V79dylDeOc+IbrIexVdTywZ5+R+HAAQTX6urp/TF63olxRedHOf
Mt3lXS9meWcXqvraaZUu3kV7nEmejMytNL1907uDB89q99F3Xwd3LNHpfZ/p
7QLvyRi/1NEP1jUpJXchdS5DofxtVJXXB6pqbwyx6vm+VXmI9e5U3ju9UKaH
qvXLNOs9k4yHy7jZzFk7rD7LgwesVosW7VErVuy3xtJl7nOLZvOsXoXffTXB
OibT9mjydtwvFGSd7baRzPeL1rmXK1cecKzn7KbsGRqo/LlaWv3IX36+t7Xv
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
R54pI5fcH+j2q9w/mI4PSKtZ4znaY/b0mSshjUV6gutiSXs9kffCeR9q5ni9
WBV7wPj2dZvUjdZdK2UOvOn40lqxYr92/xyLsj5WTnT99wo+Etx+0DIHU55f
PN1blSjU8Zb5aTL/SXsftt732n+pSY903We3abPQp8968Tn9OSNF8YLhX2N4
0vjNXo1LyHc/V+YmVg5Iprs83zPbkbG2i5eSbotBzqktm87T/p4b9ZwkH0H3
+dJPK+3PHz9xyWPvyurfTzK+/xBe5JhwOmaqVRmi1sUduS2/TI7BWbN3qP8+
29PrHJgUxfzsEwwAAADPpI6o7j5Manmbjk+0abnA4z2j3GMuWbLHeKy43UyH
fJgunZYGddkyP8RuuZI7ZXq7wLx82ZvbHh/ST8Sb35e5HjKWLM+75y8kqmPH
L1rn1ISTl6xx/zNnE60+3mfPXVXXb4R37wF5htfl+EhtOtPxhSPpzac7t0ke
oOn4gLSkfpb2mJ1u9piVvGddbI0bzPL6c2Tup4zte7pvlPOd6f3hltYt52vX
U/LeTccH/0g/Ct1+Xbkq+t7NI/JJ/rTd8WpiHsLnH43Rfn+kf0vqn5UcZqfr
RYO6M4xv22BoUHemdp27dg7uM7o/pF+pLl7JqTUdX6jIfA7ddgg0v0Rn2NB1
2h7rqUldkVOnb83DbdZEnycXaM6u9PfTffboUd7XpJK+wN6sX4Vy/Y3vf284
PaO6IU+WJmrCeOe+53IO0f3+hYuB92H+6N2R2s9PO3Yhc6GkJo3TOuXK3Jgc
BNxGckO9/V7I+U96jHlzLtGRPC8ZYzS93gAAANHKqX7pxAnB7WXjicwrqfvb
dI/3jHK/OcHHeqgIHakjqdt3wX5nrOuvldehjirSD91xWd7LfJho4lQrrH/f
8MiNDDe684vU4pe+F6bjA1KTsTVd/XMZuzMd35MF7XtbiF27vev5I+PrRQu0
82q8MeeD0ZMXK3XHbMdlMzYyHhv816vHCu3xK7m3puMD0pL6FHbH6+vl+oU8
FqmhpPv+yPhHys9Jzw65b9P97Cv/7XPbvO9o4dQ3RHrRmI4vraaN9HkVbrxf
jxTffqXP35Jan0nX3MuDlX7l5cr29uq+qnD+trZ1oKTWqu3zkgt5yevi9ONM
c+bu9PpzPOXEpXjuqe7G97835J7/6eKea/n4Q46HY8c912OSPELdZ7hxTl22
fJ/28+WcLv0nd+06qao5zAVIkS1DQ3XwEPdVuJ3UdA7G9+i2Y/DeBmEzHxkA
ACCadeuyTHtPNnJEaPt8p7Yn+fml8GNtPd435nqwsfUcbHo7Qm/1Gv28HV/G
KfxRpkRX2+XKuIzp7QKzZD6a7rh8u+pQ4/GFmsyr1G2PSROd53+lV7oaFE59
ywFTFi7crf2ON6znff2VYFi2bK82NnkX6c1nyDn9sdwtvR53lPrVpveJW2QM
lXNR9KlcfoD2PQ9zmBGOdD0BpFZBqGOJc+hpKf1b5GfWrjvk2Cck45111L79
Z4xv12Bwmq8iPUVMx2enaqXB2pjT03z6DRuOOt7fSI/fa9cD2x47diY49qNJ
S35W6qLafZauH688RwW6LWJX6+f2zZ+/26vPOHzkvNf9TJ7I29r4/vfWhYuJ
yfeB9rVw/SH9lRrWm+n18su/3E97D+PWOubO3CTg9ZLz/PLl+4zvL4QnqR0V
rNyyFKWTP3//gei81wAAAAg37dot0t6XLVpspv/Q1Cnx2r4dt4zV3N9Qxcef
ML4N4cypBtG8ebuCumzdfKS3Kg02vl1g1voN+nHyzh2XGI8v1HbsPKXdHoMG
rjEeX7jZu++0dnt99/VE4/EBadWrra+3J+/FTMZWqfxAbWxDhqz1+PtnzyWq
PFmb+jT22Lb1QuP7xA3Sr0+3jiUKdTQeH/wn793s9qsb7xABtx09ekF7Lvrg
neEhj+fkyUvaeGpUn2LlgUveh9N1osYPU4xv12B5yyG3RPpemY7PToVy9u/X
JZfBdGyh9uqLfRyPXamB17zJHJ9zJ6Uu0C8/TfY6P0S8U2Wo1TdY95m6fJj8
uVoGvB2kD44uLk/9fFJ8+K59nzc7RQq0M77vfSH7/+vPxlm5LL7cI6dWMF8b
1afXSp/7b/7nyS62n+dmPkzNX6b6vV5/Pg+0Wmh8PyG8ybOW1CdzqiXnK8nD
KlG4oxo+LM74+gEAAKQnTrW4ExIuhTQWmcfSoulcr56/s/6rvtq6LcH49oNn
Tvkw3s7b8ZfuOdzEPEWEl5iYrdrjcuWqA8bjC7Xde/T5MMHuaxaJZJvotlew
614B/siTxX4O5SPZmxnvBSF1THTfJ5mX5/S7x49fVKWKdPJ5HFLuf03vEzdI
XrFuHRvU9X4eL8KPbl63zIc2HRuQVvzWE9pzUesW843EpBtTKFm4Y/K1z7lu
wmtR3Dt1qUMOgbw319X5MK3CK/b5MAXytDIeW6hJXyJdD8zUst/fyMpvatVq
gZJc/tSfIT1vpHZgi2bzVdEC7f3Kmfi1xlSP95B5/599vvLH748KeDtMnLhZ
G5uss6ffnzIl3qf1ldwe0/veH3KvLPVvvc1zkmPhmZJd1exZO/2uR/e6pj6M
mz1aE69eUw/dU9/n41ZIbkPHdouM7xtEjk2bj1n5Yf4cbylyZGyk2rVZqI4e
89xzDAAAAO6T/BO7+zR5VgplLe6Fi/Y4vg9JrXTxLlZdfNPbDt5ZvGSPdl/O
mB7c9+zFnmgftPEXRLa+vVdpj8tDh9Nf/+gjR89rt4fUnDcdX7j5+ccpHD+I
GPv2n9Uer29VGmI0tgSHOfye3jvMmrnD73HwDRuPGd8vbqj7m77uzzbyxiOa
rg9AxVf6G48NSGvRIn1PPlO9jXV9LT2R3nsXLjrnYkYqGd95smAH7bqHcx5l
EU0v7fQ6z2XkyPU+H9vZ7q0fUK2QFHmyNFXjxm706njTH2szAt4GGzbqe0d1
6uBc7/X4iUs+b4vMd0d2fbaLl66qEcPjVJtWC9XP1aeosmW6q8L521r9rlo2
m6dmzd7h2nv6D98dabsNC+Zzt+fUGofe7DpybZCe7qb3ByLTtm3HrbpL3tS0
F//O2UK98doANdSLmqcAAAAILhk/sLtny57Bvbx9JzKfpFnjOV4/u9SuGaOu
3whdng4CN2TwWu3+7N1zZVCXrauDzbsEvFdtuPa4DLTneiSSeWO67SE1nkzH
F26eKmrfR1pySU3X2gDSkp5n2vuqWjFGY2vdcr42thZN/z979x0mVZUt/P/9
XX10HmfmGUdBQF5AgjDkKIgMBjAgKiIqRhxEr5gDKtIEm0zThCbnnHNqcs6Z
JjZNzk1qcuoAuH+9ji9O29Q+lWtX+P7xuTrerqp1Qp06Z++111qsfd2I4Zuc
rnN9+B7H/13WhAYy59ufZJ2to20slr+98djgOZmz0p3XHdvrvxeAKZMnb9ee
s9K7yERMrq61yX4fF8554J80nKjddvk9MXWsnLmRmqHtVSH9IE3HZ8qbr+n7
TfqD1BocNmSDy/dQR45e0L7X1194319W8tZ079/dpv/x9RsZVh6IJ/vA3b5B
kUr3rCz9TX39WXFxK10+ftKL8tCh8z6PAZFHrgWyvrN3z1WqX7+1qn//ddY6
BenJ2LH9EmvNL3VgAABwjzxnXL6cps6mXFfbd5xS69YdtXLgpcfIzBmJatHi
A2r5ioNq2rRdlhUrD1k1DSdP3mH1gli/4ahauHCf9beLM1+TkJCsli49aP1m
r113RO1KPGP1hZC+q9J75siRCyppz1m1/8A5q07qtWvpKuNmeIwXwzFdvT9f
1rHUWb36sO36pOz69QmP2vaRZtYsfV+a8eO2+vWzdTn70kfJ9H6BWU+UdXzt
kXPGdGwm2NVokLVipuMLNlK3wtG+kloVpmMDsrPLO95keH2krEnVxeaod92J
5MtWHwtX7ht1vQRkXajpY+ILo0dt0W77V59PNR4fPLcj87lfd2zHjEkwHh+Q
XZ+eqx2er4/8xdx99UvP9Xd7rnugn9dqmLR1q76WhuhkqK+VK9asPayNW/Jj
TcdnktT5cPc898RH749V587fcCs26S+ie79ffpztk+3X3evVr+e4/mHKuWva
HqJ3VK2g78PJmKRrij/WweH+89c489JlB1SJQh21x61yuW5q5cqDxvcLAAAA
VOZzxXU1aMAG9dF7Y1X5El3UY7na+KSOpS/JWhlZkyFxPZp5D1vk0XaqXIlY
a165Xp3hqmvscjV2bIKaN3+vlbsTLusuw11RTe9s6Wvpr8+U9T3Sv9bVc0+e
cWfHJxnfV/DM2rVHtMdWelb787N168heqjHA+H6BWeVLdgnoGE2ws1tf178v
437Z6dYcV6/cy3hsQHavvzJUc38VbTw2qbmve+7I+ndSd6lTpyXa3/Ws5G96
91ytShZynLfmz3vcQHr5+YHafTBxovM+BgheMTFLtcdW1sWYjg/ITnLwHN5X
/8PcfXXv3mvcGu+aNTPR+H70F7nPt6uHUThPW3XterrxOHW+/GyKNnb6nii1
YsVBVSBntF/GgUsV6WStr/Qkrp07T2vf11froqT/jqP3z/P3FnfV7JQ1pLr6
wXdIT6SNG4/p7zHvi1IJW830gAsl5Uo4HmspmLuNXz/3wMFzavjQjapv37VW
byhZJ3wy+bLx/QEAABDpevde7dKYbqiqVKYbfetDgO75UfLn/fF5cd1WWPMQ
rp5HMrYWzGMzcE5qUemOr7/zYXS9FKKa+mY9EkKX5C04OjeeqtjDeGwmSC04
3fe03qvDjMcXTG7d/k17bYluOd94fEB2BXO1dni+Sm6y6dh08xJ3anXJXEZM
hyWqREH9ms/sr7tT06pwXse5NpXLdje+3d66dDlN5flbS4fbJ9entHTq+Ycy
XW6B2LbtpPH4gOwavDvW4flqsm6erM/Keb9ra8y6xCwzvg/9RXpNv/e24x7Z
d/i7h7G3nq3aWxu7rLUyHV8wkN/9/7w/Tntv4A5ZHyL9jBITz3gVk6xp033G
1Ck7fLLd1Sr11H6GrOEcPXqLahu9UJV1sT/SpEnbrXtPXZ1hIft4SwI5MXbq
1x3hcN9VqxSZYy0AAACRbPIkfX/lcFKpdNe7cvIRXHQ9Hxo3muzTz5F6/MUf
c20uQ0iu2JjMZ1fT+wfeM5UPI32hdZ9r108akaFUYcfXo0YfTTAemym6cT+p
pWM6tmBi11uqT681xuMDsjp/4Yb2fO3SeZnx+HT3htJj45OGE6zaAu7cO8o6
0DvvLWt8Hf3dk+VDPx+mY/vF2v1Qp9Zg4/HBO99/M0N7fKnBimD02SeTHJ6v
Mh9tMq7WreZrc5it343Me1+Z/za9//xFrheffzLZ9rdT8k1Nx+mMLidWcmpN
xxZsZPx11apD6ruvp1v5aK7cP0kNcOkhVKN6XzVxwnaVmuabnFrpLaT7zBHD
N/vkM5o2iXf5PtGZiRO2/fG+sh7E7m+L5G2n0tJvGT/ewapXj1UO9xvr0gAA
ACKPXQ57uJHarKb3N/Ry3u94/lPGYX3x/kePXlQVSnZ165yRnmGJu7xbi4Lg
YSof5vTpq9rPHTJog/H9ArN0174G740xHpsphfI47qUuvYFMxxZMErYma68t
PeNWGY8PyGrFykPa83X2HPO9KJ8o080nzxtPlO2mDh4896f3zv1Xx/kwMje6
b985I9vrC5LjZLdu2dv13DCvzstDHB7b4o91MB4b4EjzX+Y4PGdrVOtrPLbv
v5npMLZ/Feig9obwb4Ez6Rk31XNP6euqCOmbmHzyivFY7Rw5ekEb/6cNJxqP
L9hJHZNhwzZa+QmSH9bgvbGqVo0BquGH49XkyTus/jL+yrOcPm2X9tjJ/akv
PkPqA+nu91wl94XZa3xKjeo8/7DPJ9p/IMX48Q1Wsjbt+af7/ml/yXrZlJRr
xmMDAABAYFUp190nY7+hgHyY4CW1c3XH7YN3vJ8Tfu2lwW6dK/IcO3ZsgvH9
At+aZFMPS3r7+utz9+47q/3crGt/EHlk3Zzu3Khbe4jx+EyxWz968lRwj5UH
0tZtJ7X7af68vcbjA7IaMmij9nxdv+GY8fiK5W/v9bNGTMelDudyalTro31N
KPfGe7++vu/Fy88PNB4fvFcgp+PespXKdPX7Z8s90tVraZnSqfMKl+nyYYKl
9ojkEQ4evFF1ar9EDR64QR08dN54TP4k3+HSRRz3xb5D1gasWXPYeKzOSC07
3TbMmL7LeHzQkzo1umO3cdNxn33OzJm7vbqP/PmHeIfvu2KFPn6xZy/5MHak
H/P6DUet7+mq1Yd9VncIAAAAoeXfT0RGfRj6JQW3S5fTtMeuUQPveobo+jDp
lCzUUW3dmmyNVclaAmqBh4+xYxK0x33AgPV++9y5c/ZoP3fWrN1++1wEPxmL
0Z0bnzacZDw+U2bOSNTul47tFhuPL1hstakPc+z4RePxAVnJmmDd+Xrlaqrx
+KT+lKfPGfke+tU2B03G4O1eHx+C9wKyjjvn/c2127Rw0T7jMcJ70vvL0fGt
XNa/vb5kbk9qLd35vIqlugZFHSkEv6+/nObwnJXrlenYIs2+/SmqYmnn9Xn9
uS7Flwrmdly/UuqkXbho/j4GemfOXHVYz076M8m4ny8/6+03Rrp9H5k/R7Ta
tNk+L2f48E0Of5NlLZ/kjZrexwAAAECwmztPP08r8vytpSpbLFa9VmuIlZfQ
t/caNXnSdjV9eqLaf+Cc9Vxx5uxVK28gLf2mSs+4pTJu3rLqfQj5d/nvUjtS
1oacTblmPSueO3/D6iGyZ0+KOn7ikjp0+LyVl79g/j7rOUDy9/v2Xaviuq1U
o0dtUYMGrFfffDndWmv4VMU4awxO8hwK52lrPTvIM4BuvK5SmW4qKems8X0N
PVnvrzsH+2eeB56+76BBGzye23A0zlEgZ2v1eL521ryHPDvneqCFNS5Srnis
qlCyi1XrOO8/Wlnfm0KZ56aM41Yu190i/140X3urd7KQeRf5b1lVKd9dvfvW
qKBYJx2OZN2Z7vguXrzfb5/budNS7edOnBi+feLh3OUrqdpzY8iQyO2lZdeD
Q66v5Lf+bnZ8kvb8kXPLdHxAVhPGb3N4ruZ6IDjmKOvWHur2vaHcAw4atM6l
a5LkW+ve58N3Q6s/njzjVSkXp90euU82HSO8J+updcf47deH++1z5fskz0SO
PlfqSBTNfN569cVBauDADdYYhOn9hODyU5N47XlLrnDgTJ2y0xqnc/Y7GtNx
ifFYXbEr8Yx6+B7H2yDXK9Pxwbl2rRfedexknMYfn/X5p1O050t2zz7VR126
7FpOjuSKVsrS31PGFWV83vS+BQAAAEKF1At8q+4I9forQy2NPpqgNm48bo11
mo7NXTJ+duVqhjqRfNl6Vjh06Dz1PUKArDHVPR/Omev5WsDnqvV16Rk02MhY
r/TBMH1cws3atUe0+3z58oN++9yuscu1n7t9B8c5kp0+c9V2rklyTE3HaIrd
9btXj9XG4wsGkk+n20epacwRIrgMHeq4Pkww9bBwZe5OSL5e408nW/n+rr7/
osX7te9XP/M5zPT2u+PVF+37kA4c6L+aewgcWceiO8Zx3Vb47XOvXU9367np
4XuaWfOOsk6hTNHOavLkHcb3Hcyx648reY+m4wt38v399qvpLn13pbeV6Xhd
9dMPs7Tb8fUXU43HB9esXHVIxcQsU507L1Nr1h7x62dJ/t2zVXs7PGdkDV1U
09nqlAd9gGWcfsWKgyo+frdKyfydNr1PAQAAAACus5sjsKs/70yN6qGZDyO+
+XKa8eMSbuzqw8iYgr8+164+jIwZmt4vMCdpT4rtdaBl1FzjMZrSse0i7X4p
kDPaqi1nOkbT5mX+Pur2kTvz9EAg9Ou3zuG5WjBXG+Ox3SG1LF+rpc/1qFGt
j5o1M9HjNQMdNNe1IYNCpx7YiOGbbNc8v1NvpPEY4RtbEvQ9+WJj/LOmXrib
D+NI1QpxxvcfzJC+Ibq6wTnujbJqFJuOMVyNH7fVqlfhynf0TT/WmPI1yTmQ
etS6bTl46LzxGBG85J7x3Pnrv9dIP3NVXbnC+A8AAAAARKqJExzX0Bdz5+zx
+H0HD3a8FjkU1Ksz3PhxCTcLF+7T7u/lyw/47XObfDfT4WfKOnTT+wRm7dtv
nw8TyeeIzIfpeiaJxx5prU5F+JzG2nX6mldDM3//TMcHZNW+zd116q35yczv
uenYspNaMZ06LbXWro8audlag+uL/FWpYyn5zlm3/8vPpoRMLUvp0WZ3XS6Q
eV1mrjl8zJq5W3usu3f1X30Y+Z5Ir1lvn6XqvDzE+D6EGXbnj1xzTccXbq5c
TXO5JozUc/rlx1nGY3ZH7RcGarfnjVeoOQQAAAAAAFwzd06Sdozh0GHv1tu8
9/Zo47ktnmjeLHTqB4eKfn3Wavf36FFb/Pa59V4d5vAzZazW9D6BWbt2nba9
Dsj61lDsXegrdrWVRNF87dWFi6nG4zRlx079+VMsf/uQmWNHZNDlw4hIu85d
vpKqkk9ezvxn6KwRnjRxuzWPaXdNHj9+q/E44TsLF+nrdy5Zut+vny19jyuV
6eb185SsxTe9HxF4gwas154TeR9sZTy+cCLrmv5VoINL38fH87VTK1ceMh6z
OzZvPm67TVu3JRuPEQAAAAAAhIbhQ/V1XC5e8n6uc+u2U+qVFwapIo+2s2rd
5ry/ufF8FztF8rZTR49dNH5cws2wIRu0+3zhQv+N6+fPGe3wM194pp/xfQKz
Vtv08BKVSnc1HqNpsr7bbh9J//VPGk606jmYjjXQJIfAbn56yuQdxmME7pgw
Xl8LUOa+TccHvenTErX9R+749xM9jccJ35LfVUfHOlA1ndLSb6pffop3modl
p2mTeOP7EWaULRbr+L6RfBif2LnztHr5eX3dlOxq1Rxg5YGajtsdUheuVNEY
7TbVrN7XeIwAAAAAACB0dGq3WDvO4K/17TKPePzEJXXgwDmVtOes2rDxmJo4
cbsaN26rWrRwv9VbZ+rUnSqu2woVE7NMDR64QY0ZvUWNGL5J9ei+UrVoNtcS
122lGtR/vRrYb53q1mWFimo62xp7bddmoVWPpG/vNdY/RedOy1TTH2dbOnVY
8sd/v2NA5nvIZ/oiBwh3mz5tl/Y82737jN8+V/eZNRhDi3jLlh+0HTv+6YfQ
qifuD8eOX7TmLpyNs+e4N0p99P5YNXNmokrPuGU87kCpVqmHdp9IrxfT8QF3
HDh4TnuuSu0Y0/HBsS8+m+L0+lu+RBcrd8F0rPC9VlFz/3Ssc94fpZZn3rsE
MoYTyZdVowYTVL6Hot3OjalZndzzSCU9SWUdTPZz4qvGU43HFuok31quBa5+
D9u3WRRydeAybt5SpYvoc2HkWjR3nud9vQEAAAAAQORpG62voZ+UdNZ4fAgP
Y8YkaM+zw0cu+OUzZQxf95nSy8v0PoFZy5YfsB0/jsSaJ45ILXZ35r9kjPrJ
CnGqY7vFauSITVZOjelt8Jd1649o90OvHquMxwfckZp2Uz3yF8f1+QrkjDYe
H/5s2/aTLvXAkL85d57fqnB26XKaWr/hmEpISFZp6ebzTSXnVXJyJGdYckKL
P9ZRe35SZy+yxcfvVoVyt/njfHj79eFWvzrTcYUyyWspoKl9mp3kzMyemWg8
Znddv5Ghnizf3XbbpJ+b6TgBAAAAAEBoiWo6RzvWIHUBEhP9V7sDkeO7r2cE
PO9g8eL92s8cOzbB+D6BWVI3XHd+lCrSyXh8weSXH2e7lROTfTx+0sTtxrfB
X/r0WXvXNhfL316lnLtuPDYgq4qlumq/p/NYZx00Ro/eYtXccnZtlb45e/eR
tw6zbv/2m/YcpY8Xbt3+TV25mqZupGYYjyUcXL2W7lJe+huvDFVnzl4zHq+7
lizcb/Vitdu+Ajlbc48NAAAAAADc9mVj+1rsnzacaDxGhL46Lw/RnmP+6ssV
F7dS+5nSO8L0PoF5pYvdXYtbxpH37T9vPLZgM2nSdvXo31t6lBMjdSnCuU7M
gvl7rXXPT1fppb7+Ypo6cjR8txWh64tP9fd7kre2bdtJ4zFGuqPHLmrr+GQl
1+LVaw4bjxeQXDrdefqfD8YZjw8IJ9Ibz+63oXrlXmrzlhPG43SVrE+RmpKy
BktyPF15pgh0zzgAAAAAABAePm4wwXbM4ZknexuPEaHvdU0+jIx9+eszX3i2
n8PPlDE3Wc9qep/APKnbXqNanz/Ojfw5olVCQuiMIwfawUPnM79X/T3KiaEm
E2DWqdNXbOuO5HqguerfZ63xOCOZ9Jhzdi19LFcbdfzEJb/HIvdJV6+lWbhn
gs7Lzw/UnqtyPpuODwg3DT8cf9d3rWCu1mrIoA1+W2PiDxKvu88S33w5zXjc
AAAAAAAgNDV4d6ztuMPHDcYbjxGhr0KpLg7Pr/IluvjtM3VrrCuX6258fyC4
SD33jJuhM4ZsWs+4VSrfQ7+6NYYdP2u38biBSNfm1wVOv6vF8ndQ3bos91sv
Q+hJbzm7Y1OyUEd15uxVv8exZ2+KeqJstz8+t1KZbiopid5M+LPUtJsqx73N
tOfrxUtpxmMEwo30npLf8golu1haNJsTkv2DShXu5NZzxPv1RxuPGQAAAAAA
hC67+jDSN+TwkQvGY0RwungpVV27nu7S3+rWpEutCX/EduToBe15LWtZTe87
IBzs2XNGtY1eaNXVsRvDLlc8Vl2/kWE83khHvQdIr4Vi+du7NPdUomBHq3+P
6ZgjidQsK5rP8fH56vOpAfneSn0ByRvO/vmVSncNqdoD8L//fDhOe/2QuW7T
8QEIXjLO5GouTNfY5cbjBQAAAAAAoW3wwPXasQepY2s6PgSf/QfOqRef62+d
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
VPNf5mnzYZ59qo/x+AAAAAAAAAAAAAAAyK5c8VjtXPfx4xeNxwfArJZRc7XX
iMTdZ4zHBwAAAAAAAAAAAABAdmUe76yd6x44cL3x+ACYNX/BXofXh+a/zDEe
GwAAAAAAAAAAAAAAjhTM1UabD9Oq+Tzj8QEw79cW81SOe5tZ14Uc90WpttEL
jMcEAAAAAAAAAAAAAIDO4/+3rTYfplePVcbjAxAc0tNvqctX0lV6xi3jsQAA
AAAAAAAAAAAAYOe7r6Zr82GOHbtgPD4AAAAAAAAAAAAAAADAHalpN1XeB1vd
lQtTt/ZQ47EBAAAAAAAAAAAAAAAAnjh79pqq9+ow9dgjrVWh3G1U505LjccE
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
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
pwAAAAAAeEPG8OO6rVDvvT1KFczV2ufP5vKcXTRfe/XLT/Fq2bIDVm0A09sM
BItqlXp4/N2qV2cY9f3DwMgRm72q7ZDdylWHjG9TdtIbqcF7Yz3aHtk3RR5t
p2o+3Ve9VmuwavLtTDV2bIKaNTNRLV68X23fccrK5TS9jf60d99ZVaV89z/2
SekiMap3z9Xq0mW+/5FKvlOvu1i7xOl92n3UWcjqnTdHunxtio1dbjxeuO7M
mau2/Qgfe6Q1+YZBQu5v7eZqZZ2G6RgR/OxyzZNPXjYeH8JTty7L/ZL/L/k1
7705SrWMmqsGDVivRozYpJYuO6CuXvP8eWDnrtNq2LCNqkTBjraf3ar5XOP7
FQAAAADgmpu3frPW0sr4WqSvr5ZtX7HioHq99hCfzsO6ItcDzdUrLw5SsTFL
1foNxyL6OABr1x5xWsPfjsyLJ+5mfWOoSkw87fNrcLCtmZY6YVJjzN3tkPyP
aVN3hn2uizPyG/lkhTiH+yjfP3+1ck0PHjpvPE4EVuNGk1z6Hsn1ReZPnNXp
v3WbezHhao6R7Nfx47YajxfuGzF8k+2xbdd6gfEY8XvdPLvj1LjRZOMxIrjd
vHXbye9eZN9fwj9qPT/A62c5yeOS8TLJe5kwfptateqQNY7p79jnzdNfdxs1
mGB83wIAAACukvF0WUsobv9mPh7AVTJWceFiqjp85ILaseOUmjx5h+rRfaUa
PWqLGjlys/rlx1nqrTrD1TtvjlI/fDtDvV9/tNXPp3DetqpY/vbWWoc8f29x
1zNdpdJdVWLiGePbF0jy/R8+bKNVS9WX86/eiIQ+F4CdI0cvqJiOS1T9eiOt
tcnufodk/eyUzOui6e2A+6RWtbPjK/ktgwdusOpuS50QqXkteRB2r0nPuGV8
28T+A+fcqhUuc8zVKvVUe/ZG1m+zHamp5so14KP3x6nNW04Yjxf+98VnU5ye
E7keaGHNF59NufbH62rV7G8zL0g+jOS3uHKdqlyuu0rczTUqlP3w7Uzt8ZXf
LObJzfv2q+m238MF8/cZjxHBTcZ5dOfPo39vaTw+hJ8F8+3z+HSkP+Nbr4+w
xjLnzE4y9ht0/sINbYxffz7N+P4FAAAAshrYf52q+XQ/VbF0V6sX/HNP9bHW
jud76O55E3kGrF65p1q4aL/xuF0lOT2pqTet+h7S40Xu16VWPPUlgp/kYZw6
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
C1KP45mqvT3ap4Em52PxxzqoqhXjrNo17741Sn3+yWSrH4TUO2n4wTjVp88a
NXNGopo6Zad1rmzffsqaCzp/4UbEr/E5euyiVSvflX0t85U/fT+LZ1sgxD33
VB/t9/wFN+qMIHC6d1+pPWbu9GaoXlnfU/LLxlOMbFtTJ3ULJR/V9P4PV6dP
X7H6KDmrzXNHl5hlxmOONPIstcODPOCon2fbHsuB/fX91WI76WufCKkZJL2U
TO8bUxbZ5JVK7aVI3jeRZM2aw9rzQHJlTMcXaYYO3mh73eKYwJk9e1Nsz6GG
H443HmN2ly6lWWNapvMkEN5WZ/7ePZ63nUvPCsXyd7CtPQgAAAD4W8q5a7Zr
b0WVct3VtevpTt8rLf2m+vG7mbb95O+4ctX/fYik5o2z2iV5/tZSffTeWDVx
wja1cNE+tWzZAavGBM+Ndxs+ZJPHuSnekLH1YvnbqzwPtFT//J+m6p//p6n1
7x83GG+tC5e1CDL+vHHTcatG6KlTV6xz0fT+CmVSw8mub8YdMk/20w+z1KXL
9BUDwkHyySu2ua1799KHLNjo8ljk+nzo8HmX3kPWq9td50+dvhLw7ZJejFIP
XBfXJx9NML7vI8HBQ+etvCrn9wO/qHXrjxqPN1LI3Jzk7t/Z/xVKdlEzZiQ6
fZ18r+TZR3ccX7fJofu1xTyn50Gk9y57v/5o7b5pFuF1cyKJ5KdJnSVH54H0
IjMdX6R5qqJ93+x58/cajxHBrW30QttzKKbjEuMx3rFx4/E/9UOUdY8TJkT2
bzN8T+qTfv+NfQ+xrOrWHmLdg5qOGwAAd2XcvG3NM168lGrNZ1+4mGqRf5f5
MPl9Yx4ZCB1S88XuvlXqwLiSC5PVufM31IfvjrF9X3/nw4wcsdnpmtZ/P9GT
65WL7NY7ekOOUdniseqtOsPVd19PV7ExS1WP7itV395rMp/lj/2xpqVyue53
vVbqDNGD3ffmzdvjUk6b9I9au+6I8XgB+FabXxdov/dNvptpPD78l9Tx0h2r
+nVHuPQeco/36N/18+PSI9DEtnWNXa6NKef9zcnDDDBnPXKE1L9YtZq+av4m
98VVyt99XyxkjYP08pR5Ckev7dB2kc33KkodP3Hprtds3XbSpRzp118eYnzf
mHTmzFUrL8zRvimct626kZphPEYEjtTR1X1X5PnWdHyRxG7tl1z3+G7CjuS3
SY9wu98/WYdnOk5xNuWadgz0wMFzxuND6Dty9IKqU2uw9Szm6phvzaf7Gumn
DgAIHlevpVvr7E6cuKQSd59RSXvOWmt8lq84qHbsPG39+6rVh9Wmzb+vdRcr
Vh60+gLe+d8bNhy16nDe+d979p6xXi/jFdLjQ3o+r117RE3PvC9bu+73v12y
5IDqGbdKde641JorlrqR0jeibu2hVh+J77+ZrmrVHGDd60lPv2pP9LT6H+f5
ewuXayVbc5Rlullry03vZwD25Jpi912uVqmnV+MDA/qts2p7OMpj8GceivS8
cXbNyp+zNb1d3FCuhH5MzxX5c0arD94Zo9q3WaTGjk2wfuP2709x6bOlR5Pu
fcdlvpfpfRNONm854bSmkpA+SsxFAuFp/4Fz2u/+Ky8ONB4f/mvQgPXaY+VK
nQa5F3vlhUG21/uVmc+ggd6u6zcyVBGb2tsyp29630ciGWcomKut7fkitUek
f4/pWMOZ5LC5cu+d475mqsij7dSzVfuo2NjlasOGY7bzwp99PPFPnyPjRRUz
n9lc+Syp45iaFtlzyv95f5x2/3TutNR4fAisttH63OI5c5OMxxcpZA2W3bWr
fMkuxmNEcJs1c7fT30CZwzEdp7Dra/7vKj2Nx4fQdfLUFdX0x9luzQ3KuOJ3
X88wHjsAwAzJKfFmLjHU+Hu+G4D3Xn1JPweSP0e0T3p7yvx61nregciXq1m9
r+31ScbqJWfQ9P4PFbdu/2bVWXXpmee+KFWuRBdrDHDmjES1b3+K1zVcdu3S
58P8q0AH4/snXMia4IK52tgeX1lDN3zYRuOxAvAvqf/k6BpQqkgn47GFE8nL
ldyBHR72aaxaIU77Wyz1O5199tNV7GsEftJwokfb5a2O7RZrY5L+UKaPm7vk
2EoN1XCoo3r6zNU/1eF3pEDOaLV69WHjsYYrV/Nh3CG9XZr9HG/VeJG1Ue6M
XT2etx050kr/uylkHsl0fAgs6VeoOx8afjjeeHymXbp8Q82OT7L6Hs9fsNfK
EVqwcJ/V12Xx4v1u1yfWWbXqkO31q0vMMuP7AsGtdJEYp7+fwVKzWO7/dXFK
LUjT8SH0TMy8JktutDt5MKJGtT7W2n3T8QMAzND1jg13/u6HAsBzK1fajw2M
HeO7uhsy9n9nvsffNVlk/sfuOVByc6Seten9H0rS02/ZPv/I+O/PTWb7Lc9J
zh/p26X7/FCfWwoGMo9RtaLjedU7ZH5LrhumYwXgf199PtXhdUB+C7jm+obU
88yeLyz/zdXXS29K3fX6+Wf62b42Ne2m7RpS4UpOjb/Y9W+SeTLTx86t47w3
JeB54f6WnHxZ5f2H/hgJyacItWMVKnR9RE3I+2Arhz2WIo08W+r2kdTOMR0f
zJDvh6NzolDuNsZjC7TVaw6rmA5L1Htvj1aP2zzXZ1X8sQ7qvTdHqaY/zlLD
h2+y7l3c/dwunZdp31/uNejhATvHjuv7kt5RNF8743EK6cNmF6esazIdI0LD
/v3n1U8/xFvrYDy5N2z282xqsQNABJPxCtPjFKaQDwMErwolu2i/u++8McJ4
fJ4aNmSDdrukZjjXJc/IWG72/fnwPb+oSZO2B+TzG36gr0F+8xZzs96QZ9X6
dUfY/p7neqCF2k7/AyBifPPldO314PoN36zZjWTyfCh5Edn3beE8bV2eW+7f
d632GH3z5TTt65YtP2Dbi+iO/n3XGdk3S5fu18ZUtlis8WPn7nF2lLcgdVRD
fZxYejE7WysqPVNnx+82Hms4kjwrR9eQQHr2qT7q4iUzOXPBZuTIzdr91PSn
eOPxwYyShTo6PCdy3t/ceGyBIDVeevdc7bSmmKvkN6f28wPVkEEb1Nmz11yK
oUIp/ZhXk+9mBnyf/LdeXDr55SGgZdRcp+dl+RLBcW8a122F01hD/d4zGMn3
WPLqZJw5lL/XCVtPqKZN4q1nLU+vzy/VGKB272bMEAAinfwumhynMIV+SUDw
WrrsgPa7K7U+TK0H9oUqNuslZV2S6fhC1cJF+6x5jaz7U/rHBurzm3w7U3tc
M27yXO+Nb7/Sz3uLHPdGqfnz9hqPE0Dg2PWruZGaYTy+UCfjpbr9K7+1S5ft
dzpm/WXjKdr3WLjo7rocMk77cxP9b2lWMR2XGts3P34/SxuXzEuYPnbusOtr
s3VbsvH4vDVj6q677g2zk/HxGdN3GY81HKWl31Rff+G4lpe/mZhHDmbS/0a3
r06dpldSpJJaKLrz4sqV8M0tljFwuY+QOjj+ugbJb4vUj5X7gus3HN+XZty8
ZVs3eP2GowHdL5LHmDVHVnIa6eEdvGRMNN9DznO5PnhntPFYheQiOIv1yNGL
xuN0l9Rfaxu9UNV+YaD6qvFU9cO3M9TgAevV9u0n1a7EM+pE8mXrGuDu/JM8
Z0lu2qHDF9ThIxeU9LjbvOWEVdswYWuyNXbct+9a1aP7SjVmdILq1WOVer/+
aPXCs/1VnZcHW/GUKx57131wqHyv5fr40w+zrDpcOe5zrxdSdq+8MEjt3Hna
+DYBAIKHiTEKkyQXJtTrQAPh7N23Rmm/v81/mWM8Pk+dTbmm3a4XnrXvHQDn
Tmc+i86ZnWTNa8h4TiA/W57VdMeWOseei+u20vb3PPdfW1i1BEzHCSCwJozf
pr0uyBys6fhCnYy/OnuekrkeqRcj9y+tms+17nGyvoeMwTp6nfRnyPp3ibvP
qFo1B1rr0V15jvvw3TFG903pIjEO45LczMtXQitfW3KQdPt5ztwkv31uINef
yzN/yUL29dTpSeFfSXtSVLkSsVYvBH+P89SqMUBt3Rr6uVy+9rim5lbN6n2N
xxYM5FqYtOesOnX6akStmZs+baf2uyTzr6bj84cBA9Y7zZP0NenP98tP8da8
eNZYBvZfp31NoHvH6OrFVSzVld9HD8g+k1xDyVnYtOm4NTYl3ylf3ie2brXA
pfNv5sxE4/tD6PqzZbX/wDnjcbpDamYWy9/BreuBPD/Jfac8T5QpGmPlNMmY
Vr6Hoq3eVgVztbb+tz+vScG+PnzNmiO2uYKukvrr48ZuNb49AIDgo6uTGUzk
niFfjmirNkTef7Sy/lmtUg/19hsjVY1qfax/f+GZftY8+tefT1MtfpmjOnda
aq0f7d51hZo3f69atuyA1U+BGnxA8JL7crs6+cePh24P+D69Vmu3S+qLmI4P
nvvWpnfHLfoleSTl3HXb8Ur5/8n6GNNxAgg86bejuzbQo857ci/2RFn3e53U
qN5XNWow3qrPpvubt+qOsNZlv1ZrsCpTtLNb7//802bnbmVtoS62/3wwzvhx
c1dq2k3t9owevcUv59XkSdut+bU7nxOIdaoyX+Foni8r6Zlh+nhEAjkWrVvN
V3Uyv/8yBiX9Lr0dJ5Jcuuef6af27Q9sLnyoOHAwRbvv5FiYjs+0F5/r/6d9
ImONyScvG48rEHbsOKU9N+bO2WM8Pl+6eeu2avbzbKufsi/Gpz0h87sfvT/W
ypVITr5sO+f9zhsjA7p/7OrF9euz1vjxC1ZyXsl4hNRaqloxzrq/KZSnre15
IGMYBXO1sfLJpS62J5976NB5Kw/blfPuwEHzOSYpNusCs9qScMJ4rO6QPDdT
1xNvSR6o6f3nyLnzN7zOWaxfb4Ratz6w9bUAAKHnpWzPgc5IX1TJNZk0cbsa
MXSj+rX5PBXbaamaMnmHtWazfZuF1vP1mNFbrHGvQQPWqZbN5qpuXVaoaVN3
Wuv3JR8+Jmapmpz5muXLD6q1a4+oefP3qIUL96mDmfd3p09ftdaOBXPeKgDf
kuuA7rpTtUIP4/F5o/Gnk7Xb5umzMILDm68P1x7b27+Zjy8UfdxAX9tdSG92
0zECMOOJMo5zNWSuwXRs4ULmyXI9ENg11DqyLqJ9m0XG94nUItfFuCDz+dV0
fO6Sfo667ekZt8qnnyXzRU9X6eXwsyQnxt/P+5JjW7aY45pFokLJLow5GLAo
87yw+97nuLeZ9U+plSDrofLniLbyFaQ21TtvjrLOK6mpb3o7glm71gu1+3jW
rN3G43NGvpfye7TDD+vadM9vhfO0M77dgXDs+CXtuTF6lO9zIk2RXA/JwTN9
L/Pf86utKp/5m2P3N4Fe82GXDyN9pS5eCq36d/4k1yRZa9u40SRVIGdrr8+H
CqW6qL6916hLl13PT6j5dF+X3lvqkATDeuBfW8xzKd7x47YZj9Udr74UPNcV
dwVrPsyAfvq6WXYkN1rWZWzbftL4NgAAQlfyyStq8ZID1vjjF42nqI8bTFA/
N4m38lVMxwYgPEX9rF9THOq1IHTroKVGpunY4J1XXxzk8NjKGL7p2ELR3Hl7
bJ93X3tpsPEYAZgj86KOrg3Ze/HAO4MGeTYm6UuS4zQ73n+9e9xRSZOHlfuv
za1aK6bj84Suh42v6kbEx+9WVcrb12YJ1Lh8cvIl275cq1YdMn48Is0H74zR
Ho8uXZYbjy8cNPxAn1++d19w9xDfs+fMn667UrdM/puv3l+e03T7Rtblmd5+
f5PaFrrtnzplh/H4fEFyIQvnta/XkV2Nan1V2+iF1vpPWfu5dVuylY+1YeMx
a662Q+Z/l9/I2i8MtHL2/HHvk723kr9Jjof0UNHFI/kMpo+laZIzJHVgfFHX
zJF8//xVfdpwotVfyS4O6b1kd+3K6pknexvfb6JEQdd6Ekj9SNOxuuOzRvr1
jsEsmPslNfrIfk1cdnJujR+3Vd1IzTAeOwAAJsl6/N/7klNfJpT83k8+neMW
wfJr1ljIuhQZszEdn6eOHruovYf/8ftZxuODdypqxo+kDrLp2EJNWvpNVb6E
fg23rAuOhDFqAI5JTwzd9aFOrSHG4ws3n30yydh4rfy2Ju46bXwf3KHrZV/m
X52Nx+apQnnaONym//14olfvK/1Gqlfu6fKcTaDWqY4YvkkbwztvBrY/RaST
WsC671SRR9tR98VHpJebo30c7PXUdH37fFVPSupM2l2TQrHmlyd0OZGzZgZ/
7SBXziG7Z8qsnqrYw6qllHLumlufIbU3pk3bZfVNqVVzgE/ufUytp5meuR26
mKQ3z+HDF/z22TLO9/s4cHrQjQPL2ITUzJMxiEDd/xbK3VY1/HCcmjF1513x
vFVHX5c4O6lh4+l3x1d1uc6cuepyvIMHrjd+vN2xZcsJr3v7BFog+pR6Y87c
JKfbIP3GZK1+QkKy8XgBADBF7tdWrzmsYmOWZt43jv/TulH5vU9KCu61L1DW
Mco65uHr9T8IfnsyzwHdPW+9V4cZj88bdjVCZ85INB4fvFP8sQ4Ojy21CtzX
oe0i/VjcfVFq8+bQ6iuNyHbr9m8W03GEk/r1RmqvEbNm8nvqD7LurlyJWL+t
g85OngGCrVbHxYup2nhrPz/IeHye0tX6l2PgyftJXsvnn05xa/10oNepFs3X
3mEcMqdh+nhEkrhuK7TnRDD0RwsXr2n6xFSr1NN4bHYk9113fmzfccrr99f1
Xbxj8IDQmpf1lG77hw4N/b60ksPg7PdH1q5MmrjdZ595/MQl1eC9sVZvN0/v
gUzWDn7x2f7auF58rr9PPkPq7Iwdk6BaNZ9n5XaUKRrz53uCzO/mocPnjZ8/
Yvq0napYfsf3DIEic/9Tp+y07pOk5p47r+3efaXb2+zrulx2z23ZDR+60fgx
d9fq1YdV3dpDtfm9JkifLOlRKteiqKazVZ9ea9SM6busXkLB0D/LmVKFO9lu
n+RxLl160HicAAD4k/QrldzkHpn3c40/nWzdN0sdy38V6GDNNzpbexbM9eBg
s/4n87hJPr7p+BAYgwdv1H6Hf23hm7rtplSv3Eu7bSkp7q1DQvDR9QKQ+p2m
YwslJ09dsZ1v7RobubXzf6+fRt07T/abr9a3uePI0YsqX5axcBnb3rGDfta+
OJ55/tbS4fVBxiGDtRd6uEjPuGXlxrz5+nBVrnisT9dEyrW/XIkuavjwTca3
05Ht209pY+/dc7Xx+Dwl1yZH2/R43nZuv9fgwRu0tQbsntEDvU5V5vR08ezZ
y1qMQNH1H5NxnSNH/VeHINLo9rPMk5mOzc7lK+na7+mSJQe8fn9n+Z39+qw1
vg/8TX7TddsfanUaspNrSK4H7O9RpPeN9MDxVwzy21a39hC374dkbt3Uflu7
9oj+Pi3zPvvylVS331OeXadN3aneeMX1nAFf1YHyxttvuJ7HEQhyv+ZujZp5
8/e6tc3yrOzLulxyjXH2PcxK+pGZPObekufQLQkn1JrM79Gy5QfVsCEb1JBM
06fvUmNGJ6hO7RerNr8usOa1BvZfb/2z2c+zVZPvZlr5YQMGrFMjR25WE8Zv
s74zEydsU/0y98moUZsz3++Amvr//tuatYetsQ3555aEZHXq9FV16VKatb9N
7wNfOHf+upXTY3euyG94QgLr5AAAweNsyjV19NgFtXPnaeueeuigjdbv+++/
++tU2+gF6o3XhqmXaw5QDT8Ypxo1mKAql+turdcqXSTGymWVPq+ytsxXebaM
kQcvqYupO25Nf6SXTKSQPsy680D65JqOzxvFH3PcM5d+OuGhzsuOx7p8tY4q
Unz0/lj9uFjprmHzjO8uWZMl90hZx6SCuc5tsJDfjaxjeoGqFyj3m47mWaTW
+PkLN4zvl1C2cNE+7TWiTNHQ7VkTymQttKznrPvqULdzIeR78lSlHmr06C3q
wkX351gCSeYUtPeoIVzPUvJ2HX+fYlx+j+UrDli/0e4ce3nmHzRgvZHf9Y7t
Fmvjkh4qpo9JJFhjM+ca6jVBg40u5+2nH4J7jMVufCh+lne9fJYuO+D0GtWl
8zLj+8DfpAaHbvtnxycZj88b5Zz0SercaUnAYmnWdLZbv4/St8nkvrOrzRDd
0vU1agvm77Nyp93Z9qxMjd9L3kdDTZ85Zwrlaas+bjBexXRcYtXkaBk1V3Xu
uNSqMyN1iGS8s0LJLm7fL3vK3To7kmOhe68dHtTl6t5VXwfOkZZR84ye+wge
p89cVXn+bl9rUr5vjK0AAPzl3Pkbat36o2rFioPWGFLDD8arzxpNVu/XH23d
L0s9SKnj501dSH8jHyZ42Y13yBoxk/c48tnbtp20ctWb/RSvon6ebd3Xd8r8
HnTutNSqO3jkyAWr563p/RjqdDkF0kPedGzeuH4jQ5vX91KNAcbjg/eeq9bH
4fF9+fmBxmMLFRk3b2nH7MXsOaE9LuspGZPLmgtzh8w9hkK920jcb47W1d3R
4J0xxvdNKHuqYg/tvpXnE9PxQWnXgUo9T3mO3LjpuNq776y1Xth0rO4YPWqL
9twL5VqW1So5/k6VLR7r9LU3UjPUf9ycM5I8cOlv7M81+c5I3VldbdnPPp5k
/JhEgueecnzfLKQvhOn4woluP3/+v5ONx2ZHri+62GXtvDfvXavmAKfXKlnL
Z3of+JusVdRtfyivRZLzw+7YfvX51IDGI+dy3n/qn3Gzk/oQJvffuLFbtbFJ
XUC75yh5/mrfZqFPegyZGr+PciN/KV/mcZUcofUbjlljGa5+hvytjCPXfmGg
1/tJR+5z3K3pYlcfaNky9+pyyb2xu3UkP6zPczL+K3HXaac5Mf+u3EulpoXu
cxgAwLzkk5dV6WKdrbnbh+9tZt2/OOtFFArolxTc5NhULNVFe/zat/fvHIfk
vKxafVj91CRevfHacFW1Qpy1btGdepTyPSmcp62V8x/sa1yDVZG87Rzu22Cv
5+yMPB/rzhupoWk6PnivUO62Do+vrP8xHVuomD5tl/Z7UiBna+PxmSJzhrr9
snVbsl8+8+Ch89ZYsqwNXb3msLp0ObTmrU3ttzvs7hXkvsL0vglVPeNWafdr
voeiyUsOAkePXdQeo9deGmw8Pm9067Lc4XYVzN3GeGze0K0DlzUudq+Li1vp
9joYyYEIlh6hzz/dz2GMpYu5XhcHnpFrta5XjdTHZ17Dd27/pr8nefetUcbj
syNzqbrYpSaZN+8teXnOrldjxyQY3wf+VkOznkN40hcnWLz4rOPru/jo/XEB
jUXGORt9NMGt38qVKw8Z34d2dV10PW1Wrz6sHRNxl6nxe1n/6Ep8xR/roDp1
WuqTZw/pr1OjWl+P95Uu50Tu79yNZdPm49rPWbBwn1vv9XMT1/ZlVp9/OsX4
uY/gIr3vnPVOqlCqq/E4AQChaf2Goz65dw02gaqPD+/MnbNHewzffM23dZMl
76tr7HL1wdujrbkpX+d8SU+E6pV7qoMH3atPGcmkBpVuf3b0cz6Uv/XuqZ/D
8/e8LAIjz98cP6NJ/z9fvL+MB2XcvG2NDcs8/+Ur6dba+nDK83z9laHa78mg
/qHdS9ob/qwXf+fcknG4ju2XaOc2Ze3bqlXmx2bdIWsKdftt/gL3eqm7Y85c
/b2MdX9wX5TxfROKrLW1D+pzlCVXwXSMUGrK5B3aYzR9+i7j8Xnji8+mONyu
AjmjjcfmDV0+jFz3Hf299MeSvsbuPBe9/vIQtTvptPFtzeoTzfykJ+up4Z7F
i/drz5XnqvU1Hl84kXNZt6+/bBzc847y3KOLXWr0evq+o0Zudum6tXbdEeP7
wN/yaWqWSC8X07F5Sp6T7fKdzpy5GtB4/vO++313Dh+5YHw/2tUOqlj6z3PP
M2bsUsXyd3B7O3Wkzqa7fX58YdbM3U5je+yR1mpR5m+YPz7/wMHzqlXzuara
Ez1d3ldyz6LrvfRVY/frINn1S3Jn3EHu+XLc5/4Ye++eq42f+wg+ixbudzpn
82nDicbjBACEHpm389U9rGmyJr9t9EKr3h9jWqFDdzyfLB/n9XvL3LGsd3+6
Su+AnYcy7zV16g7j+zUUTJq0Xbsfx4zeYjw+b+jmDeT8SM9wva4q3CPrdYYO
3aiqVeppjdHInE+VcnGqZvW+1jr1urWHqs8/mWytcWraZLZq1GCCimo6x/rf
8iz+9RfTrPmSjm0XW//tTs80+btffvr97wb2X2eNF8k61wf/p6l68P80Vf/8
n989+P/9XtdEeki3jV5g1dJt/ssc9c2X01WNzBgqlupq5c1JPaqShTqp8iW6
qDLFYqxxFiH1ppzVaAuXfM9jxy9qt7NM0c4R/Ttutz526GDv1sdKXTQ5R135
PSvnQu+MYHL9hj6PaHLm742/PvetOsOd7kvT+yYUyT29bn/KvEcor2MOJ/Ib
pztOZ88GR10QT0mvM0fbpcsbCRVVHPSVs7broeg//Z3U9u+eeb9jl5fm6Ls5
JEjrIH7y0URt3NLn1HR84Uzur3X7fvjwTcbjCze6WjyyNsh0bHZu3dbn8nhT
26aCTU3irLZsOWF8H/jTxIn6sZdnqvY2Hp+nhmf+5ui269UXBwU0lvp1R7j8
e/nH+FDm99Wdvjv+IjHo8iyE1A+dMzdJvWBTi8cVpQp3VO/UG2n1Jxs9eotK
2JpspB+wjDU4y+mpXK6b1W8xEPHI57RuOV97/XZFrx6r3P7cPXvOaN/P1V6G
cvwK5dHXCcr1gD5fbfDA9cbPfQSnqVN3WuPndue8t70UAQCRp0he39Q2DKSc
9zdX+XNGq8plu6vGn06y7vmST14xvi/hGTmejo5zmX919uj95F58yZIDqnGj
SW71PvI1mXM3vW+D3a8t5mn338yZicbj80a+hxyvvQr1NcXBTOoN/auA79Yp
BbNw6Acoa1R12yc9UkzHZ5LdfIAntbPkd3HuvD3q1ZcGu32uSW6O6f3hKsk1
1G2HP/vUFczVxul+lFonpvdPKJExd7vx4PfrjzYeI35X+4WBDo+R5DWajs1b
nzR0nD9R5NF2xmPzRvmSjueGpTb5nb+RHghVyjvOm3FExqtjOiwJijk9nXat
9Tl2kk9pOr5wJbnqhXI7/p2U/NxQv58NRroxkDa/LjAemzO67+gbrwz16P3s
evpld+iw+Rod/lSuhD4vaO68JOPxeUrWmei2a+++wK0h6dhukUfP9bIexvQ+
vKPZz7O1ceZ90L5/iY6Mz7z9xkgV122FOnf+uvFtvGP8uK22cTf7OT7gMbXP
fM73ZB/fsXCRe/2NhPRM1r1f964rXHqP5k31542IjXXcf1R42wsP4W2STR6n
kLWE27afNB4nACB0PP5/zeTDSJ+JEgU7WP3XZS1a0Xzt1YvP9bdqKpQrEWv1
0pS5crlHXbPmsNq58xQ1FcKUrvfp/8/efcdJUWwNH3/uc+/n6sd7fQ2XIO6H
jAFBBERQuSoGUBEUA5gQQTFHJOclxyXnnLPknHPOOeewS85xsd49zbO6LF09
eWp69vfH9/V9LjszVT093dVVp87xp+aIxLZLrk0T57Sdvn0jc39kpJA5Od2x
S3DxnmKZ19XFsUtuD9Pti1YVPh5q/DcfTlIbxvQxD4Ruv7msgYc7r3Ukyp7R
PodLlZ8neP0eW7ckqE8/HKKyZfAcr2FH9gjeSHTPOpWsuen6IjkOQvGZEmvk
Tf3FY/HEbXtLcofrxoZCniHOnnP39S+a6OJ/P/90mPG2BUpyvNn1rXD+dsbb
FogCeVrb9ktyu0jNhuef7uDTvUKe3XftPmG8X55MmqSviyD1Nky3L1otXLhX
e9xNrDemBbmz2e8P+KriKONt80QXC/v1F/7tNZL8nN5cx6K9bprk4ND1XcZc
kRzL6IkuLl2eNcPVhqaN/IuFCXc7PYlPel7RtTM5H643fcp4Tx0rN++8ebuN
98mO/NYltlnX/oJ5w7/3yKn+qLekvqWvnytrLbr3++XH8R5fP3jQGsdn4Tde
7WG1S/fvgwatNn4+ILKV/8g+X2cyiec/fsK96wcAgPCq8Inv64dZ0sWqHJka
WXHszxZsr3787ndV9deJqmL54apalYlW/Kbk55Cc/LOT/it1QE+cvMTeWNiS
ZyW780z2LvryPvK8IrEGgT5D6OYI/Mk1I31jzUavZrVJ2uNmum2BkGue7pyo
V3uq8fZFK29yNEQTN8fDSGzAA3+371dBH6/90UrqtNsdn7ff7OPxtStXHbL2
0QZ6jsnYzvRx8JVuPu6n78eG5PMGDVzj1bGU+4LpY+MGEtOUJ0dzx2Mp9cRN
txO3SOyE7nvydk9pJGvbyn4/q9vvU5Jj1a5f8ryjy9tpJ0u6hhG71mVn8pRt
2r4QDxM6UhNDd9ylzrXp9kWjgpocUFKr1XTbPNHtKZFcZL6+1zGHtf3UJIeF
6b6HitSDkz2Iur5LzJDpNgZCag7b9UvmqkP92TIH+eH7Az2eX+Xe0/+NxICZ
PoYpSYyrrq2e4mFkDCG59SL9nio1sHV9kLGQ5JUKZ3uGDl0bUJ0kIfHp/nz2
kSPntO/pae5ywYI9jrEw8m+Sf2bDRn3MTfPGs4yfD4h8r73kXKfttRe7GW8j
AMA9XinaxdoDnEzGf8/ka6c+LjtYVa8ySY0csUFt3hyv9u8/HdV7JmCGbt61
iI97Ly9cvBbQ84OM1WVfpKzDyP77CeO3WGP31Oe8xB3Pm79blS83xIoJ8/S+
b7/hee0yrZK9w3bHrEDSM7jptgVi2vQd2vNhxkzfc5jCO3lztgjoGuAmbq+X
JHM+ur5V+cnzPqS0QGoG2h0fXU5tyVMyftxmVaJY94DPL7kfSl4EN+4V1c0l
ylg3FJ/3jGZdObWly1jz88Zvv0xwPI6himuCf5zybUTDeKdblyW2fcuaIdZ4
2wLxjGb/gLf7vuUe8W7pftYaq+m++EJitHR9unLVPbUB3ea/z3S0Pea5YppY
YxfT7fOF5CtevvyAGjVqg+rVfblVt3vI4LXq8OFzxtuW0lO57dezZZ7PdNs8
0Y3j5Dzy9b2+0tS8s/NsAXfn/XLyzpt9HPu+aXO88TYGQnKN2/VL8pOE8nMl
5kNyWns6tyS+xFM+yUiqT9uimb5mzwP/ox8nVPlpgmv26xR7vou2H0OHrA1r
W+Li9GOTZLq8uin5G6ste5d17/nLj+O0rzt46Iw2R2SyGtVu5YCbM3eX9m9i
6083fj4g8sn4620P97JVqw8ZbycAAIAnuj1Az/m4n+PCxatez3fI88TrL/dQ
VX+ZqFasPKjOnb/id/snT9qqMj+gfw6QOR03rimGg+zzsjtmUjvNdNsC0bH9
Iu35EO69JmlJ546Lvb4GuJnkwdq2LXy10EPhx+/Gavt37Bh1ZUS+R+3nVyVu
M+XfyRre99+M8SuHWep7VY6HGlnrv26OtdLF2L5QuFPQP+v0mcteH98dO939
mw2HuDb62vIiR6bGEb/fNK2pX2eq9vs6fCSy1of90avHcm3/JJeR6fb5S/ZQ
2vXJm3iYcmUGWPsFTPfBH05509z8fUayk6f098mvKo003j5PZA1bctg0bzpb
FS/WzXE9W/aTRcq93mkf9YkIrymgmxsqWsi3eBjZv+TLOFhqbpvueyhIzJZT
vyUO2XQbA6Wre+NvvgxvSO6hp/Pa5/K8/bztoK5dvxXr4nT9iIR1XLne/frj
OI/jgZT/JnmdJd7KbXMTun1Ut2oFh2884JQ3KOV5LOOufI/a75VJJrUu/WlD
fMJF7Xt+Wnaw7WuWrzjgMUYn5WvXrD2s/TupL2D6fIA7yJjSae3l+afbuy7O
GgAApD1S69FuLCPzOL68j6zfyTyGbmz0bMF2qlqVSVYdr2D3QWoiZbrPvh9i
cQg+MxpI3TW741WqRC/jbQtE2XcH2PYr0711Xb3O7Aa1akwOONdssPzn77e+
c6knILWcMv273q3aa/fXV1nSx1rXPvnfn8je3Mr5IfMykk9K4sEkl0XFT4db
c5j9+61Uv4/ZpGbO2mnlmo2GZ7znC3XQzhmabluk0K1XJu/tlTjOdu0WOs4J
eDo/syadh21bz4v4tRFf6ObmZB0r2J9VpqTzHqWU/KnnnpZIvVVPx3D6tB3G
24nb6XLqy/3OdNuCwSm+ee26I8bb569ffxpv2yen9S8Zo0ycsMV42wOhqxOV
7h+1jbctWg0auFp7Tg0evMZ4+5xs2ZLg1Xp3ao9laaZWrzlstO3dHGqBTJ8R
2fdSXVyzfBe+vE/eXL7lDXX7fhw7knfBqc8Sy3DmrP/7wiJFAYf6PvMX7Anq
Z8lcTt++K1TOGM95oit8MuzPfXHy3Ob0t106LTF6DCXXR8q4ovsd8sDIWOGx
LE1V+7gFrq0Nr8spFKp8oqnJeSHxIp7OoWwZGqnde27FIEtMzCMx9rFfovxH
Q/xqi9O5+ZbNvKzUSNLFLSaT30fKHIJLluzT/0bnB/c3iug2qP8qx3OvahTE
eAIAgOhW4An7+taflLOPRXeyfXuClTsh+T2kDrTUPN20KfQ5YPv1W6kdk31X
ebTx4xyJdM9RodjHH07ZMtrXsJbnbtNtSwtknkqevyVf7/kL1615vqPHzlt7
X+S/x09csnJqXLt+88//pmT3v12+cv22//vXnyaoB/52az7oT0n/d5Z0sdae
IuKe9BJv/qGNWar660Tj7YsUModqd4xkb6HsU86Wwf4644msaTZtNCti9jAH
my4eRvbUBfNzNiaNK3w57rKP1PSxiVQ1qk503DMrmsZSWz4S6fJS5dDUdXOb
4cPXac/JKZO3G2+fv8p/NNS2T7p4mMqfj3R9biYZ2+n2YEhtGdPti1avFO2q
/Q1Fcs5MGcv7EwuTTHL5max/IsdW17baNSYbP75OJO7brt3ZH2rk9Xv06+O8
XmaneZPZxvseTCOGr/fY5zat5hlvZzDUrDpZ20d5XgrGXhJ5j4H9Vln7XLw5
n779cvSfeUZkXmDcuM2Of+9UlybUZK40db+S5zZ07XV7HViJ27br19tvhLbG
lti956Qq9Xovj+fQqy90VafP3B6v1r+f/to2duxmv9ojsTm690xZx17m1kq9
3ttju2WeJ3VMqOzr0v295Gs3fT7AXT58f5D2fJI5hfiEC8bbCAAAoFNUkyfg
reI9/Xo/ed6UHAobDeRR0K3nFMkfvfWoQ3G8ihdz9/4sybNq16+nHgvueizM
ebd0P9vvOD9rKh5JPJLu+bV93ELj7YsUH2ryTCXPUXozF/vXvMCt/cqythsN
+YWcZE1vP08tOdyC9RkyzsidrblP38HxKMrBE0yyH9bTsWtYj7rykUiuJfq4
Zt/qWkQqyeukvV+1d9/96sTJi+rtN/t4XQdB9iFPmrjVeLuDQfLs6focF7fA
ePuiVbaM9rlAU9d+jDTr1h/x6R5vR+q4muyD5G+wa1coa8gEQ+YH7cdxEn/p
zetXrznkMcbWzuzZu4z3PVgkPsTTMajw8VDj7QwW2Qcj1xRdX2UvwKLFe/16
b1lXlTw7ujq2dt4r1e/PvTGy/6BIAfvcZCl17WwmP4zkfdPFNjuNFXzN1xRp
Mt5jf77IdTNUnyl7tKS2lDfXJ6krL3lbUr+H03NTILUsdW2S386Fi1dVnZpT
HH9jKe/tc+ftvuP9x4zeqH2N22ptwTzJSyX5tXXn1HdfjzHeRgAAAB3dXE2e
HM2Nt81Xuueq/z4THesCwSTrKLrxa43fInvfmhPZN6HrV7kyA4y3D8Ghy7Hr
xutWuG3ddlz7G5H6UKbbFym+qTxae5y8jYeRNY9a1SepXbtPGO9PuBR6Ul83
UfI8BeMzyr7rudZ7alLv2vSxiTSSp8jTcfuiwgjybUWovftOab+3Vi3mGm9f
MMi5p6tJ93FZ3/NYmjRmzMY/47U91UGQWo9SKyqa4ielNqWuz1u3JhhvXzSS
80e3R6BAnjZB/Sz5rcqa3YWL14Jyz1i/4ajP9/nUZE3c5PGv+Kl9nkFht14Z
KXT1r72JoZI8UClrvqTmtA4tORtM9z1Q27Yf1z6j3n5u9o2q67vQ1QFM6fWX
u6shg9d4vEbIWqvER730bGeff/eVK478833kc54t2N7jaySfhol8Uj98+7tj
u5Jz4Or+/fCRc8a/d39JHnFdv4YPXx/Uz5L5wbg2872KJ7Huj0+0vq3WUEo/
/zDO9jUybgvkNy1xL7prprfxhXIeL168z/b9+/RaoX0dOVThD4kh1J1TEuMX
DbUAAQBAdNLVfMjpslzrTnVXv61MfHJqMmepO15uXhOX3ES6fg0atNp4+xAc
upz7ubM1M962SCfzzbrfyKyZ0bM3M1BVf9XP697vIR5G4mBkX7LdvrJoV6n8
cO1xqVU98FjL3r3183lOTB+XSCJ5uT98z3NMUdFCHdW164nG2wt7TrnPZ8zc
abx9wVL6Dfvc8LLO74bzU9ZUalabdFvbH/jf6trvLk/2FlFXT0/WNXX9Zc+C
/44cPWf91uXZJ7kuSEpSx1h33JvEzgxKGyQfbN1aU25b25TayYHuN5d1xZQ1
mP0h9zCT34/kXNS17afvxxo/f3R++2WCtt0S7+L0nRV/qZvjd1Iwj32dblnH
lbGJ6b776+ChM9Y6ua4ebUqSs0nmYUy3OdgSjl/0ft3+n7VV2XcHqHff6qte
fbGrKlWityr7Tn8rl6Yu750nkp9SxkUp2ySxlt68Nty1wuVcl8/0pm2SJ073
b40bBuc6bkKzxvqY/Iz31FHr1x8N+DMkzuPH78YmnRve1zh++sm2jvs33ni1
h+Z+0yGgtv70vX2cjbfkt+c01/llhRHa15qsLQh3c6of3rLZHOPtAwAAsKN7
xiqYN7j7xkKtQzv9nFMzxmJ3OHHiovZ49e653Hj7/DXeoTa02+ss4y+6vMLF
nutsvG2RzimnwObN8cbbFynKOcQL3P83+7VMmROo8dskV8/pB2rCWP01WPID
BPLeXTot9jgXaPe/Z0nX0PhxiRSSJ8dp73ay7A9F53pNNOnedan2+wskZ3uk
aZE0htf1M9Jr/A0cuNo2ftdpv/fWbdF3H/7g7f7a/gYrLiOtadNq3m3rxnL/
y5GpsSr7zgBVq9okNW/+bjV40GrtcV+wYI/PnynxDvsPnFY9ui1TpV/v7bi/
X2JZAs0TI/E8hfP/VedE7uWSF0p+91OnbbfGWvVqT9W2ocTLZuv/Sp0XXdsK
PNEmYvODDBywStvuLZpcTvJdFMnvnIfjyVwttbUuJbeC6X77Q+LBXinaxas4
GCHr8vsPnDHe7lCRvINSI9abYxFMEqMgz7ep2+NtPEzb1uHLqSdj67dK9PKq
XdWrTFKLFu/Tn08ZGro2lkFyR2S4u45j/4sX6+bXeHb1msNWvJWv55E34xHd
nqxKnw0P6Hi0aTnP7/Nf7sXSZ6f3f+lZ+/grGTuYPhfgXk57MyK9NiQAAEi7
dLkZJcev6bb51I9c9v0QM6bvMN6+SCN7CnXHS+bBTLfPX+3b6+Oi4uMvGG8f
gkP2Ddl9xzWrTTHetkjnFA9DzQJl5RuQeVWn9crU/1aiWHc1Zeo26sr8H13t
Qlm783fe9vcxmzzuO31Gs5f86bxtjR+TSCBzyt7k8Zfc8lLzwnR70yKpEXDi
5CWv8p5U/22S7fcn6wt2uSLcasHCvdpzNVJjYC9euqY++2io1/eQlJavOGi8
/cEkuW7S36Vf8zpylDz9vnKqe2l3rqUm9boaNZyhhg1da8Vsdem0xFrHLlOy
jyqUr62Vs+fNV3ta9wKR7/FWXteZSElqVATaV4kZkVjtTZviba9rn32s/53F
xS0w/l29WESfAyKujfn22VnocM21y0exN2lsIeMsp3NBxm/LVxywcnjY/bvs
zzLdb19I3glPtW5Sk7iZ02eiP29ky+Zzfb5W+EvOK4lh0D1/eVsvqU+fFWE5
NsdPXFRFUsT46TySuclt+7jkmqz72zo13Tv38dEHg7z6niWOTmIhpc5cQsIF
der0ZbVv/2krZnLu3F3WXj6J0XwsS1OV6d/28SpOsmdspCZO2OKxvfuTPlP3
HrIfJpBjsXuPfn7GicRWebN/QXcOeVMHD3Ciq7Eo9ux1fx1EAAAQfXR5FmpV
D2xMH05OtSslht90+yKR05q41Pkw3T5/ffrhEM6DKHf9xk3tuduubWTOLUeS
Q4fOao/fnDnRU2PDH3JdTN6L/MD/eI6HkbiZ+fN932Md7ZzmN+fM2e3Te8me
43fe7ONxv6nkHX/9Ffsc1vI9mT4mpslxz/FQI4/zqvLdOdVDQGh0bL/I2h+f
/D3E3F/figFzes37pfvZfoeSl8F0f4JJ1rN09RPkf9+1O7LmWrt1Wepxz7NT
PEw0jWPku3vNoX5K8WJm83e41fBh6/xaNwu3YMTDOJGalFI3Tff5kgvV9Hc1
aeJWbfuk7ZFYV/PgwTPaNks8S/Lfye9b7l3e5EaReAOJZ9Jdy2XsEc4+SpyV
5HaRWmPe5umROMee3ZdZMU6+1vR587WeVu08099tuAwetCbpvPCv7pE3JM/h
d1+PUce82OskMZlFCjjHoMiehlAfEznfvInVePWFLnfs4XKqOShzXG6NgZb4
IKdreDi8UrSr13vmRo7coH2fRg1mBHw8ypXR59JLTfJ4Sq42b9/7tRftx2IS
y2D6PIC7OdVYHODifbYAACA6yf5T3dildo3JxtvnDVm3cVrjadVinvE2RiKn
3Ktu+e7tSN1p3TOj6bYhOCS/ru7cdXMd7XA5eux8SOdy3Kpfv5Uq5r7b5yl1
a5bp766jBg1cY7zNkWr9hqPac+zlol29fp9x4zZrc+unJPUdJe9MzkyNbf/9
c5fluwsmGefVrDbJY24d8f3XY1w7p+5mnTUx3fKdfVp2sLX3ef36o3fkVsqf
u7Xt6z58b6DxPgVbhU+Gac/bZwu0M94+sWv3CVXgCfvvJLX7HeJhKlccabwv
wfJt5THafsoa+u49kRXL5BajR230es3MlEJPtg15zrwypexjAkWOhxob/56E
3FNzZ9PXlfrw/fDGgXhLl4dTZH6ggXX/8XYdu13bW3XtJC5B9zcSZxKuvm3f
ceK2Olxy3R46dO1tcTES+yLPBSWL91RPJ53Lkk/Zm3GU3X1c4jZMf58mbEh6
FpDcLP4cNx2pCzNh/Bafx6pyLZo+bYf2feX7D8UxOHT4rGoft8DK56ers5OS
HC9dTHoOzTOOGNB/pfHv219S28/pehMqkkvGl3gS0bfvSu37SZ6aYBwPyXPj
1G6JqWrbar7Pv4GnHmtl+34VywdW5wk4cECfN+mdkn2Mtw8AACAl2VOpG7t8
U3m08fZ5Q7c/Vshcq+SeN93GSLRxU7z2uLV18d5U3VyDzJ+YbhuCY59Drtq6
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
ak9Vk6dsUzt2Hg/Kd75la4IaN26zlY/KaT4iW8ZGxo8jAABAStV+1a8NLl9x
wHj7UmrRbI7H+hbWc9/p4OU6jWayV0t3HGW8bLp9/ihezL6mrzzrESMRPSZO
2Op4HWCe0jvffT1GewzluXbzlnjjbQymMh72rd+6VtRUvXsuv+11TvdJIXP9
oc6npsvvLjVL3LJW2rXzEp/XRbJljFU/fT9W7T/guS5Ddc2ez5j76xvvezDc
SLypOnVYrJ4r2D5pLOR5/SaldP+spb74bIQ6cfKi8X7AN3I/mz5th7Um88M3
v1u5BR76V2Bzo8FkIh5GSHyLL/FgctzCnc/LG19W8LymNWO6fe2RSCL3Ted7
ay01fcYO4+1MS1Kv2SX75ovIrutgx1OdIfFFhTvzqpw4eUm1bDlXlSszwFqz
LP1Gb9Wy+Ryf17eDbd783drrePGXuhk/3oGSOJiCedv6fV+RGBWp7xGOtkrs
u9Q7ypahUdJ4sYEV7yNja4lLlbjjrVsjP+4cvnmxSGefzsdnk8bd585f8/r9
33ilh+P7SR3KQPsg69mSx9RT2yUnqunjHW3On79i5d6Qem6LF+9N+i7MP4fL
PU3qJErN0zdf62nFH3v3fFhbvVC4o/Vs+fzTHaxrYd/ey633knG2xGOY7lta
J+eabjznL/neCzzRWhV7rrNVB1NqLkst9XFjN1t5uBcv3mflXZJnT6nf2rrF
XNW44Uz1VaWRSdfPTl7FkSaTXE6mjyEAAEBKLZo55NM4Gjn5NH750blWuJA6
vZFWczuS7d5zUnss+/VZYbx9/sifu7Vtf2TNxHTbEDwy/+B0LdjpxZ5sKGtt
MPMD+vmSbBlija8ZBMvMWbs81kiSfx8+7M5acRJvEnOf5zrwMj+wcOHekLRf
9njpPtdttSdkT6TE9sh+pdTfiawP5c7WTL32Ylfrd+5LHKPsUbY7PjLfY7rP
/pK8ZiOGr1fffjna7xgI2UMq+WRM9wXB9eSjLdQD/1vDcv///VcEc77Uk6fz
Sj42c8dg/oI9PsXEzJmz2/j3lppc23U5xpO1bjnPeDudNG2kz8OfrFOHRcbb
mZbIuEW3h0Ty+Jhuny9Gjdro8fySenMyXjh46KyVK+7VpDGE0z3znbf6Gt8n
sWr1IZXDJkZ44oQtxo+5v06cuKjeKt7L73uKjNfkWnHk6DnjfUH0klgrX8/N
Pr28nxv75Yfx2vfp0mlx0PohY3tPzwZVfhln/HgjNGSfhJyXeXK08KoOtL8+
+3ho1OVZdRvJPzRs6Dr1qstq6xYp0M74sQMAAEhN9mvrxi+RMO6VmubffjXa
41hL5vwicZ47kkm+ed3xlHVI0+3zx1OPtbLtz2NZmhpvG4Jn6FB9znSpp2a6
fW7idCzFS891USdPuT/n1k/fjXXsp8wnytqq7vWeYrBSGhqEfX+pSQ4G3edt
2+7evauyZif7t1evOZx0ngWW01u3Fy7f462M9zOZrL9t3HjMIvOYqf9d9ntO
n7bTmu+SeKFA5qDKfzREbd4cXTme8BeJAbf73iUn+vz5e1T3rkutGDHJUy1x
j5InKZhznLJ/fksIa1l46+y5y+rzT4d5zB8pZs3eZby9dnp1d86tEsz1s2CT
ulCejrvEippuZ1ojcSG670PyjJlun7fkOubp/JJ7v9TxyZ3Nc66ElHbtPmm8
f7I35esvRqsi+dupMiX7qqlTthtvkz9kbPN1pVEeY/vsSC2Icu8NVIuX7DPe
D6QNBw+d8fk8rfbbBK/fX37XdmOSSp/dmcMqUEePnlNZ0+vrLrZsNsf48UZw
SS50iekKds4QJxU+GWa837hF5kw+Ljs4bN+9v2S/QjTMIQIAgOgT10a/P8J0
HdTdu0/a7ptKLUu6hmrFioPGj6XbSC4d3TENxXpuODyauSnPcGnA8qTfu+7c
LVOqr/H2uYnMYT9boL3jNVZyovbrt9J4WwPxw7e/a/uX8Z46atduzzmFShbv
6dXzf66YJkHfd+yUH0ZiK0wf30igW4eRdXvTbRPbd5xQzzwV92e7Yh5oYP3f
UrdMzk+J2/RnLSm1vLlaqFUhrt8Fsy5c1MfHSW4E3eskJ9jhI+fUpk3xVg7s
GtUmqR+/HasKPNHGiq9Jf5dzrpU8OVtYudiXLNkXcXXaNm06ph7RjAGTr8ty
HTXdTp2fv7fPgyl7frduNR93ZEfqBHq6HkmcutQjMd3WtEbysOm+kzYRnm8o
2cB+qzyeX4HsiV+5kvtkMMg9pUCeNn5/Dw3qTjPeB6Q9klPDl/O0hY9xJWvW
HrHqMmXPGKsK5mmrhg4J3V4z2TMh9W6k5m/KNsu4bs8e83F/CI4DB89YcxHB
eFb0ldxrE29Sez6SyPnw43dj1TP54nyqXxQuffu6M988AACIfrp9fTLmNdku
mWOVPA+exlmPZWlGjSQ/yRhad1wHDVpjvH2+kvgtXX+axM403j4EjzyPZ37w
zr1QsheLdRffSX1ob55r33+nv5o33515uEYOW2/bJ5k/OBbvXW1AiXF541Xn
mvDJEhODO2ck69i6z5Kc+6aPr2lS10t3fGQPlen2ybkjNaJCOe/0QZn+avny
A8b7itDbf0AfzzxwwKqA3vv6jZvqzNkr1p4++W/C8YsqPv5C0hgr0Xi/vTFs
6FpV+o3eVr2/5GMie2iXLt1vvG2ezJ6zUz2RvXnSWObWvHbOmMZqzOiNxtul
I3VNnK5J75Tsoy5fYUxmwpDB+tx/I0fcWRcy0nTvviyk90tBHcHADRyw2qv5
GieDBq423g+kPWvWHPZ6DVnyHGzfEZlxqSlt3HRMVasyUb33dn8rV+DWbeSI
jBZynTQRB5NSsOc2EDySM0hyGVeuONLaX2PyPJHnmEkTtxo/JgAAADpvafa7
m4yH+bbyGK/2e0lemPiEC8aPoVvt2XtSe2zr1ppivH2+kty0uv7IPmjT7UNw
7dx5UuXN+dfermwZY9USF6x3RapWLeZ5/Zwr117Jvyz5Lky32xelSvS+be/c
IzFNrH2tvr5P5c9HOB4f2Qt484/gtv369UTt55FjXqnt2xO0x2dAgPEBweCU
3ycQMjcqNQoioW4NwmfR4r3ac2LC+C3G2xcJJAbt3PlrVkyP2/a0Stvd0OZh
Q/V1BD98dyCxMAYNHLha+91IvVzT7XNy+Yo+/jdYJE422Hn80pq6taZ6fbyd
5nUiOW8XotvRY+fVu6X7OdZbLP5SNysnnum2Im2S/TDffz0m5PdET14p2sX4
sYD3ZF68d88VqthzkqOqkZULOZTnR54czdWvP423cnib7jsAAIAnr77YVTtv
Ee62nD5zRRUp4N3+6WLPdbFyg5o+fm62eUu89vj+8uM44+3z1fhxW7T9mTV7
l/H2ITSuXr1hzRWYbkc0kJpIvuaelznE/E+0tubFG9abpnr0WK7WrjusNmw4
phYu2qu2bE1QmzfHR8w+XImhlFoy+wJcD5J4wnyPt7I9Jr17Lg96u2VtVPcd
zJ3nzpw9wTR9xg7t8Zk/f4/x9gU7HkbiYD58b6A6dPis8b4h/Dq21+flGObS
epdwH7mu5Xv0zvug5G+/kRhZ9bTSGqmbprtGSL010+1zMm26/n4e6H1T1oa6
d12qrl13R76rSBVbf4bXx/2Fwp1srxPi2YLtjfcFkPx3I0asV80bz1bNm89R
7eMWqiGD16iTJy8ZbxvSrrPnrqrnnu7g871OrrfffDHKik/4+Ydx6vGs9vlC
HvpXXfVd5THWvHrMffX+zE1o935u2wOFOx05ek7Nm7db9em1wqp9+16pfipr
+liv5/5kT1nubM1UiZe7q88/GaYqlR+umjaaaeUsNd03AAAAX3z28VDb8Y7U
mw1nOwb0X5U0Dq/v1VisQd3p7OkKAqkRojvGMg9gun2+kuc9XX82bSZfLOCN
8eM2O+6TC8QzT8WpTZui67e4Y8dx1an9IlXtt0lJ96ZpIc3VopuvmD5th/Hj
YFqPbvraCsk1FffuPWXFazVvOlt9VWmkeu7p9lYuH5nXCXUtlWDUS5L21q89
1dqnyhgobevccbH2PFm4cK/x9iHtkNqrFcsPt/KzP1ugnerZPfjxoPCdrHVE
wvO9P4YPt69v6Sup41O0UAfVuOFMtWPnceP9ihavvtjNq+MvNRNkzC9rcLq/
kbrdpvsDAJHmxMmLVj5eb+93mR9soMqU7KOWLbu9bq7Ev+rmdSTvTOrPlbx+
kkNOnovHjd1s7SmUmvSmjwdCS/Zdyf5C2W8se5Sl/lIyqZt76fK1oOc+BgAA
MEX28OnmMMLx+TK+/vj9QV6P9WPrTzd+zKLF8aSxre449+3tvvpCn344RNsf
2V9hun2AW0h8hewZCsZ6RGp5crSghoKfdPNZbrxeB1v13ybZHhs5ZmVK9vU4
pyhrhJJbOJRtlL11vsTEyG/wmXxx1j7/BGpDIoUhQ9Zqzxv26QH4osJw2+tD
vkdbGm+bJ+vXH/V7jPl41maq6q8T1fIVB4z3IxpV0OyjSin9XbVVzep/xbl0
7bxE+7e/j9lkvE8AEGnk+c+be57s6Zg5a6d2n4TkSNW9tn8/5g8AAACQ9nxa
drB2PinUnz112jZrDcqbsf4jMU3VkiWh3b+d1pw4eUl7vENR7yPUJGejbk3R
dNsAt5FYRVlTCEVczGzql/lFlx+mS6clxtsWbjLvt23bcTV06FpVrcqkoJyn
7eMWhLzdiTdvqgUL9qhXina9I74p8wMNrDzEZUr1U/OT/kb+1vRxRmSSXNe6
81hinU23D4BZ+XO3tr0+5M/dynjbPJF7X7YMsV7dt2Pur6/eeLWHVevk5Clq
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
tm07ru3H99+QHwBAdJAYkCaxM1X+3K1V3lwtVZWfJ7jqWu1JQoK+xoMonP/O
PXK//DhO+/dLluwz3icgFGS/qN05L7mSTLfNF2+82sO2Hw/fX9942wC3Wrvu
iPa+OHXaduPtgzvo5ohk7sZTbpgPNDGbon6dacb7BgCRIsPd9nlOn8zlX87H
CeO3aK+/eXI0N95fAAAAwKQcDzV2XH8KR70BWePbtvW42rDhqLV+NWXqNtW6
5Tz1daVR1lpX44YzVY2qE9XnnwxTBfO2VY/ENLWeD54r2F4VzNNGPZq5ifY5
IhS+/+Z3499bMOTN2cK2fw/9q67xtvmiQ7tF2u+qWeNZxtsHAPCsXbuF2mu5
5AC7eOnaHa8pXqy79jXnL1w13icgFJ55yj63o9viYXTrrTHEwwB+W7Bgj/a+
OHfuLuPtgzvocq962is1oP8q7fn38L311NlzjM0AIJmuHvJrL3Xz6/0kP7bu
GtyuzQLj/QUAAABMkpy1TrEfhw6fNd5GX0h+9ctXrlt75o+fuGi1f/26o2r+
gj1q/fojavWaQ2rpsv3W/z2g/2rVod1Ca95mzJiNqn3cQlW31hTVOHamiq0/
Tf38/Vj1RYUR6pMPBqty7w1UlT8focaN3Wy8j8Fw/UaiVfvb7jvPkamx8fb5
4psvRmnP361bjxlvHwDAsyeyN9dey8f+vsn2NbqajzH3sZ6O6PV+6X7247eH
Ghlvmy8k7sWf9VYAelIrUHcv7d51mfH2wR10e41KFOuufY3ML2RJ11B7/lX9
daLxfgFApJC5a+31sorv10vZX6p7v1wPN1GJN28a7zMAAABgkuQC0Y2Zi9jU
JkDkk5oTErczZ85uK/eO3d9U+Xm89nt/t3Q/433wlvRPN18n+45Ntw8A4JnM
z+nuSQXytLF9zZWrN6y6i3av+aTcYON9AkKl4qfDbM/73NncM+65kaj/zb9V
opfx9gFuNXjQGu1vS56ZFi/eZ7yNiHy6c+jDdwdqX9O65Vzt62Qfjtv2WQFA
KCXe1MfD9Ojme/yq5E/XvV/H9ouM9xcAAAAwLWcmfb2kxUv2GW8ffDNs6Lrb
YpyyZYhV31QerRKOX/jzb2bM3KnNyymWrzhovB/eatZsjrYfkuvHdPsAAJ7t
P3Baey2vVH6E7WuWLt2vfU3vnsuN9wkIlReLdLI9792UF2nrtuPa3++3X402
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
AAAAAAAAAAAAAAAA3li16pDKmj5WGwtTq9pk420EAAAAAAAAAAAAAAAAfHHz
jz9U7eqT1ZO5WqpHMzdVTz3WSr1Xqq+aPo0aSQAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACiW+LNP9TJU5fUmrVH1LRp
O9TcebvUunVH1JatCWrjpmMqPuGC8TYCAAAAAAAAAAAAAAAAThYt3qfefauv
ejRzU5Xh7jrqwf+t6ejhe+upT8oNVj27L1O795w03n4AAAAAAAAAAAAAAADg
4KEz6ruvx6jHsjT1GP/i5D9/r6WyZ2ykOndcrC5cvGq8X4GYNHGrqvrrRNW4
4Uy1c9cJ4+0BAAAAAAAAAAAAAACAd6r/NiGgGBidzA82UBU/HabWbzhqvI++
SLx5U5X/aMhtfcl0b121YMEe420DAAAAAAAAAAAAQu36jZuWG4k3jbXhytUb
atfuk9a+9cuXrxs/JgAA9zh95op6r1TfkMTCpPbKC13VgYNnjPfZk5t//KGe
f7qDbR+eLdjeePsAAAAAAAAAAAAAX8ka2P4Dp9XSZftVz+7L1EcfDFJvvNrD
Wit88rFW6uF766mM99RNUkdbIyJrhobqmXxx1uvi2ixQCQkXQtbeJUv2qWwZ
Yv/8/Jj766tp03cYP44AgMi3eXO8eirp3haOWJhk6e+qo2pUnahOnLxkvP92
JC/Mf5/p6NiHm3+YbycAAAAAAAAAAABgR3KqSO2Gxg1mqpLFe6oXCndSuWIa
h2z9T+JUKpYfro4eOx/UPqSMhUmWPWOslbPG9DEGAESu5o1nW7Ep4YyFSSnd
P2qpTz8coq5dTzR+LJJJLMzTeds6tjtXTBPj7QQAAAAAAAAAAACSzZ69S5V9
d6C1zpXp3/WMrf+Jp/O2UevXHwm4T19VHKX9jFOnLxs/5gCAyHP6zGX1YpFO
PsWtPJG9uapXe6paunS/2rQ53srtcuLERbV8+QHVpuU89dsvE9TzhezrC3mS
M6axmjdvt/HjInUPS77Wy2N7u3ddarytAAAAAAAAAAAASNvOnrusalabpB6J
aWI0/kXn/dL91bnzV/zq27atCVZtJt17+/u+AIDoNWXqdpXhbu9ywuTM1FhN
nLBVXb/hff6WvXtPqZ++H6vy527t+z3xnf5qz96TRo7L1Ws3VP4n2nhs47ul
+xn/DgEAAAAAAAAAAJB2rVp9SD2WpanxeBdvyLrkwAGrfeqf1EnK/GAD7Xvm
yNTY+HcAAIgsAweudoyjTJbxnjqqU4fFAX/esuUHVIE8nmNMUvuk3GB14eLV
sB0X+azCT7Xz2K4SL3c3/h0CAAAAAAAAAAAg7frisxHGY1x8JeuT+R5vpbZs
TfDYvzNnr6hcDzvnu4mtP8P49wAAiBw1q0726n4k+dTWrgu8nl9KK1YcVO+V
6ufTfVHiOnt2X2blbQnlcYmLW+BVDcV33uxj/DsEAAAAAAAAAABp280//lAX
Ll6z9vrK/990exBev/40PmQxK5KPpdCTcVbcSpEC7dRXFUeqH7/7XX30wSD1
XeXRqkHdaerdt/qq117spp58rJVKf5d39ShSe/rJtmrs2M13nL/xCRfU558M
U+n+4by3P0u6hsa/BwBA5Bg8aI2XMSiNVHz8hZC1Q+Js8j3a0qd7ouSqqVh+
eNBrAK5ec1i9UKSTV234oEx/499htLk1Xr/KeB0AAAAAAAAAAC9cvnJd9e29
UuXP3frP9YtnnopT27d7zreB6LBi5UGv6kDoSPxK4fzt1Htv91cVPh6munVZ
qjZsPKZOnb7sd5uOHD2nqledqB7N7HvtJulLzH31VeYHG3q1dz3ZkqX7jX8X
AIDIMGjgGpXuH7U95z95q6+6cvV6WNrUstkclTV9rI9xMXVVlZ8nqEWL9gYU
PzF92g6fYnIk9tX0dxhtNm2Kt8boyce4UD7G6wAAAAAAAAAA2Ll2PVE1bzLb
yu9vt44h8+3sO41+8h0/nbet1+tbuWIaq9de6qZ+/G6sWrhorzp77mrI27h4
yX6V75FWfsfreKNNy3nGvwsAQGQYO3aTx/tGhrvrqFEjN4S9bRLH3CR2pkr3
T8+xOqlJnrQ3Xu2hhg9bpw4fOef4OSdPXVY9uy9XH5cdrIoUaO/T55R7b6Dx
7zDazJ+/x8pjx3gdAAAAAAAAAABno0dtUA/9q67H9Qypn2S6rQit8xeuerV+
JvWNgl1zwVddOi2x1h+DHQvzJXvYAQD/51j8efXwvc65xbKkb6iOH79otJ1b
tiao3NmaB3T/S39XbZUnRwv1w7e/q0/KDbZqG+bN2ULljGns1/tJjE7fviuM
f4fRRuKXnMY/UjvJdBsBAAAAAAAAADBN9o82qDvN63UN5tejn1M8TMZ76qgh
Q9YYb2NKEqNVvFi3oMXC/PzDWON9AgBEhqvXbqjiLznfYyRP2tFj5423Ndmw
oet8yvMWKhJDJPUXTR+PaNM+bgHjdQAAAAAAAAAAPDh95op6Irv3+4jJv542
yHdcKF/cHd//41mbWrEyptuns2zZgaQ2NvN73S7mvvpq8pStxvsBAIgcP/8w
zvHe8ViWptZ4ynQ7U5N7+e9jNvmd1yUQEjtb4ZNhxGSE4DutVX2Sx+MvYzjG
6wAAAAAAAACAtEziGnyJhZG59e3bE4y3G+Eh37XEPyV//0UKtFM7dh433i5v
LFy4VxV+qp36z99reXVuZ36ggYprs4C1IwDAbQYOWOV4/5DaQjt3nTDeTidy
b2vccIZ6JKZJWGJhvv96jDp56rLxfkeba9cT1YtFOnk8/rmzNVPbtrljvAYA
AAAAAAAAQCjcSLypnrHJ/2GnaKEOasTw9dZrTLcb4SVraLt3n7S4MVbk+o2b
atLEbapG1cmq7HsDVanXe6uSxXupt9/so8p/PFS1aTVPbdoUb7ydAIDIs3rN
YSvPiW58lOHuOmrx4n3G2+mLteuOqN9+meDYL//ywdRVJV7ubr2/6T5GIxmD
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
X5wVO2q6bYGSa5BTTrjU86kS65TxnrrWOF9qX//y43g1cMAq4lLDTHKa676n
+rWn+vWe2R+yz2X+ctEuxvsbLitWHlQF87S5/T6944TxdvnDRL0kO3LNWLCQ
MToAIDJEa3w7fNOs2Rzt2KXqLxOMt09Hnrk+/XCwx/GX5IN5p2Rfa49DuNv4
2kvdvJvHfaI182E+kmuWzEM88L811IN/u3Uc7/97DVUgb1u1Z89JtWPncat+
9YzpO9XiJfvVmjWH1apVh9TKlYes55z5C/aosWM3W+bN323teZX//8QJW9XS
pNdNm7ZdjR+3xfq3hYv2Wv/3okX7rOehvXtPqfiEi1w3fTRp4laV7h+1HH8L
8swme5NMtxUA0gq5lyUkXLDWvWfN3qUa1puuPvpgkPrs46Hq2y9HqxcKd1JZ
0jVUD99bzyLjKn/mw55Ouj+zv9Q/OR7S582QnIenz1wx3kYgWGQNddjQdVYN
MF+uMcWLdbf2s5tuP5Bs7bojqnLFkdq9O+yHQSSRfWNO19ia1SZZcZKyxyzT
vXU9XpPr1JxsvE+BkLGVxHvnyGSfh0Nivd38+02eTwvGmrfEyvz3mY5WDu5o
zA0UaaQGpe67WOhnvTJ51rN7P6lXbrq/4dCj2zIrdiN1/4sUaOfa37nMXfsT
EyO1TGXeVqS/q46VjzFvzhbqqdytrbG5/N59eT+Jodu8Od748QAApG2p8yCz
PyXtcqoPvHNnZNZKkj0aKfdXOZE69Sba+MO3v3sxzqyl6tScYuUyNH1MTZLn
i5OnLlvXpUWL9lr1cXp2X67KfzREvfb/2Xvz8KiqbP2/2+7n9vfpe/tpsEWk
+SEICFdEZkHkgjIjoIjMCAoCgoojMs8zhHkKc8IMIczznDCFJIwBAgFCgIR5
ngRB7f3Lu+m0IZy161TVqVrnVO0/Po8IVXXWXmfae+213lVpkvig1gzRvPFc
WXuOdXaxQsPlnFzmwliwfvcUxEACoS7IH5w6dc3luql44eHi50d6H0Oj0Wis
APvC0EyLjUsVq1Ymignjdsk539ulx4pK5cZLDePX8g12O6blDdCe5vaL01jh
QhsG+bzcNmo0vuDhz49Fq48XGu5PUOCZhhwEbts1wc3GTSfTr8Uhpq5Z3S9Z
YxeggUJdpzUNeqYMHrhZmSONPDAnxrmQB9P200UyBzyQ57XoZ+qr+X6hPIPE
Z58sEmEz4sSpZHvGlJ1MrWpTDP2OGKknWj34DnUvf1BrOvt4fQnuYehsqq5n
7D9w2+kpyDFHzQtqPuP3polDCRelZivuy3Opt8TFi3fFhYt33M4nx9xlQN+N
omSREaaeCdAA13uOGo1Go+EC70MjTURdnxJ8QDOFqu1ArQC3fRTvVZtqas6F
GhYO+1YuU+9dZKxV9sSeY/elr7l954HUV0FfBfTKGT50m6wbQY5Lvpz95T6c
p7XmdsDpdUH+olxJtfZ9k49mB4ymskaj0fgaxKygg4Z366zwvWJQ/82iaqVQ
USDXAPFyjr5u6yr4izt3tY6JO2B+oeodU7PKZHYbNRpfg73Jnt3Wms6LwedG
j96h5+cav4OeX726r3PrvajzYTR2QVUnt2//ecPv7NyRoozlfPPVcvZxucPc
OfvdyhN3dj7Mz36b/6N/VpUKE8XaNUns43Y6iOFT9xzuYU9+c0DfTeS5+6r9
UvYx+wqz/cKcnA/jD6DJXuQV1znAiE8c0/WkGo1Go2EAuaHU+wn6l9z2afwH
dPGpawFxRG77jDidcsPlPOvVPAPF5k189bJ5njfWmsygWOFh4vKVe+y+9BZo
eSSfvi5rk7t1XiMa1Z8teyw0qhcuypceY6qmJhBwchzEH8ybd0Dpv/p1Zsr4
MbedGo1GYyfwjk1MvCL1QaDXDk2XvC/2c+y7Ff3Y9f60e6DPIOVPaFijro/b
Ro3GX2AN2KzBHNPPHMwv0f+D226N5yAX6uChi2LfvvPiUMKT+mbEq+zYW/Xg
wQvif/MOduu9qOvRNHYB+hBUXy/EdVTfHTxgM3mNv55/CPvYzPDLr7/JWjp3
7l+n10XBdjO5AFYDncp163VejKdMnxpH+ha1h578Zr4X6b6se/elsY/ZF0A3
FX18XF2veP45+T73J9Onx7v0J+IYuj5Go9FoNP4G8xnq3bRm7XF2+zT+o0/P
9eS1cOSIPfs7/vDtSuX8CvnrnHVW33+jtq9i2fGO0cHAvP/AgfNiWeRh0fGL
ZaJJgzmi3nvQdenn1/4Kdkfnw9CgD9Yr6dcL5bvc2XqLGzcfsNup0XgDnpXn
L9wRx5OuypzjvXvTxO6Ys2LtmuNSe3zq5D1icUSCjBGMDIkW48bslPWHkybF
iNCJMWLF8kTZa/3ipbseaRxrnA+un0ULD4l6dWaKNwoPF6/mHiTzHbjfb1aB
PQNoM3P72WnUqDyZ9GnIsCh2+zQaDhCvyP/SAFPPHuQn7N59ht1mjXkwd0L+
50v/rd6nwlq0XMnRYtOmk+w2R0efdvudDS1e3TtAYxci0tcp1LWKdYur72NN
b/Rd6FjYXVsBdWro7+PuvDYQ+mbjGYRnEcfaoPo7oSIuPpXdB06jTasI0qfr
N7ifZ9S31wby96Bpzj1eX9Ci6TxT12iJ10LEyVPX2O11EohnuNorqFX12f57
Go1Go9H4krPnbpLvpfCZ8ez2afxHhTJjDa8DrAe5bTMCa2nVWntgv02s9qF3
gWruhz7iTsgtj4s/J/75N2M/a57G6XVBvsZV/tr69SfYbdRovMEXcUS856pV
miR7WSNvdeb0eLF1a7JITdNaEIEA3hlrVh+XGvIffRDudj25ncEcqOA/B4qP
m8yTPZwWLjgoDh664Jg8YDuRoNDzhCY19IO4bdRouEBtKXIm/vEn188lfAbz
UW6bNWpOp1wXdWtO9+jdg/col/ZqQsJFkfOv5np5IV6BfharVx/T70WNrWjX
ZjF53UZFJ7v8/ncdV5DfnzEjjn18FHiXvJp7oOlnDWrbIhYdknoy3LZbBdYl
mHNGRSWLDRtPiFUrE2UdB3qd9+i6VrRsNl90aLtE6kFXTV+fFis0XPZntWrt
gJg0akK4/eAUkEtguAb7cze33yvYG1L1O/u0+QL28VoJ/PNVh6WmrstmjeaK
W7e1joknoAamQG71MwLxLW47NRqNRhM8PPz5F/KdNGzIVnb7NP4BczvqOmjT
ahG7fUZMmxxL2oz4Gadt6PfyzlsTlPGvtPO32X3oinOpt7X2i0mwBx4IdUG+
AvrmqvV1yDDP9Fw1GrvAoTONe6pMsZHy/omNSw2oeGwgg3j74ohDcn7lqubd
LuBay/9Sf5n3ifwLxL+RvwNd/CGDtoie3daKsBlxUk/wypV7em/PYpo1ovvC
TJqwm90+jcYOLIk8LHPwzDzTqlSYpN+ZNgT1LtXeCfX6nZXjLz1EYqJ/9W1j
487J45qxr+MXS0XKmRvs/tZojEC/a+raNZN/GxubSn6/fdtI9vEZgfeB2XVc
7epTZb4It8124tHjX8SqVcfEN18uF3my9zGVn0qBtdGWLXz97p0CdGSpvrk1
q7inuQFN9dfy0TUZyPO8/9Mj9jFbxYOHj8U75el4fQaIhZvRxNKoQY6dSjcP
17HW3tFoNBqNP8nzfB/DdxJyZblt0/iHieN3OS7OXrzwcNJm9JTntO27r+ma
GPBle2fcW/17b/Q6Hmk1WB+XKBIi3qs2VTRtOEe0/2yx3FPM/ocuIttzXeR/
Jc89AT2rMP9G7xLUpV++fE/27UGveaz7EHdFXiDWk8hjAvgz/h7gM9i7vHL1
yfewz5d49Io4lXxd7vvtiT0ne6LovT81JdPPmSqmpHV1NE4Hzwru52O+F/uJ
dq0jxMoViTLOw+0TzdNs2ZIsSr4+gv06yQxiU1gH1Hh3sujQJlLqZGPeh33l
XbvOyNjUzVu6jx0nV6/dJ/NJoR+l+65rNL9z89ZD0brlQlPPvw9rz2Ttq6t5
GmiruqPN4IqXX+jrN9uxlszzfF+XNqFe5tgxXT+hsTdVKkw0vH6LFhhq6vuI
i1D3wNdfLmMfnxGV3zYec2awZzsrfC+7rU4Ac1doX/Xuvk7qnHpSY9cr/buI
zXGPxa7E700jfedODgd8/Hr+IcpzMaDvRvbxWgVy+sz0REN+NdbC3PYGChPG
0XtOoNj/DtcxYY1Go9H4DeRvG72Pypcew26bxj98rtBEjTahiepvMGen8ovz
5ezPatu+/efV87xCzpnnoX7HqpgkRd4cfWW/97dKjRFlS4wWH9SaIUKGRcle
o+gJglyW8xfuKPd20UOE+v0dO0+z+zHYOZd6izw/qB1CXhG3jRqNt9y7/8jn
z0t3KZ/+XN206aTO12ME9aaI/VP9HX0F5vbYC0StX5MGs6XmI/qgrl13XM5T
8F5F7ifmI9gPBk6ZmwQbvXvQc5x2rRez26fR2JE5c/aRddOZqVpxksx357Y3
2Nm+I0Xk/rvr8+Uuo0ZE+8X+b75S18IgpzFspn37xPgSzC1OnLwudu0+I9at
T5K9E0NDY8TwodvS32/rZA+OWtWnyb4fjerPFm1bRYjGH82WdS/oz7Jh/Qlx
Mv37eo7iP6g56xdtl5j+DUorqV36+eUeX1a2RSW71DPBfAt5b9y2OpW7934W
ixcniHIlRit1IrJSs8pkWY/Gbb8dGT92J+m3uPhUU7+BdWr998OU5wDryUCJ
JWC8NSpPdnndQRP1wsU77PYGGqi7Ufm94xf2zJfUaDQaTeCR++/G6x3E0Llt
0/iHhh/OMrwGsFaxY+whZs9Zcg5Vu/o0VttwfMo29M2EPgm3/8wyfSrdk8oM
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
qX3XGf5GpbvuKZgbN05/j9r5/rYTvbuvU95zTu8Z4m++aLvE0JeoT+K2zRUj
Q6LJa2HvXv/Fd7bvSBF5cxjr0Fr3nOgma8NqVZkivu24XIweuV0siTwsDiVc
tLS/hJOhns85/9qD3TarUNUn3LnrbJ3Orp3W0PfzPp698Z076Rz1jGsrJkbd
i+vjJvT8OND2i6n8ygzsFndHvhL6N1n1nM7+XBeR/Y9dn5D+Z9RdIodt7brj
4ujRy0Hf0y6DWeGua77xzsM73o51lJcu3yXtDpTefGY5otCEt3LvT6PRaDTB
h6taM8wnrDxeq4+NtSo9BfWGo0ZE+zQmbBZol6N+ZseOFLl2+fmRc/pvQt/P
yL9vFBzGbhsFdN2p62LLFv/uszf80Lh/b1k/9hgPRpDLcOz4VdnTG5ox3PZo
nmUYoTcOihay7/PFFVg/585u3P8hgxHDotjttDvfdqR7gGN+4q8aXI1nYE+L
On9ai8B+bFP0Y0k4bE99GPTtdGddUK7EmPR5wZOxQAefioM6YY9vxAh6Pxbr
H9QQ+sMOHCc17ZZIOnFF1pm6u745duwKOQ70VeT2s11Q5YZ6AvJyly85wj4u
p4C1o8qf0JblttGXXLt+X/bi+qrDMplPePLUNa9/EzpWRr4sU2wk+3hdsWNn
CnktRC5O8Ls9qO9POnFNPoOXRB4REREJYv36E2LB/ANi0oTdYmroHtG353r5
bsiWbmO2P3WRe6bP/zH9v3/qLP/u+T9ibt1T6nlduHhH5u3rvpau2X/gPHkt
vFUqcDTOxozZQY7zpweP2e3zhhBFfttShvfkg4ePZZyVsgnz1A0bT7j8nXVr
k8jf6JP+POD2u1Wgz7bq/Yy8E24bjcDeADS2KLtRUwsw/0M8vkkD6NdPF43q
zxIjh0eLTZtPildy9nvyLM/y3batItjHZ1cmjNulvF4yqPHuZHHlir3yxVXv
m8N+1sDnZujgraQvEhO1bp1Go9FoPAf1H5Q2CKD0GT2l2juTLIvzQc/7eJL3
sRqNkHrlRj62c3/vffvpfBhve3a6y9ulxxragVoibj9pNJxgHy3/S/3Je3VY
+jqH20ZPiXHRw7penZnsNtod1DZR/kOMn9s+DU3YdFobBvElbvs0z4Ie59Q5
GzxwM7t9WZkxLc7lWgBrGOinDx8e9dR+DfRVqO+8mnsg+9jMMmTQFsN1WrMG
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
tkUlS00uu/Wrwx616t5t8tFsWV9LfX9J5GHl96OjPdtr0DwBNZTogYh+J97u
d4EEvU+rYQDvqSoVJiqvzQK5B8i6e25b/UGltyZ4fS9jzYt5O3qjDB6wWYwc
Hi17u2X/QxeR/bknZHwWOV7cYzZDWFg8OV476BJg/uvqnGzc8HtMDe9O6ASj
n42eq7lG1XfRKXuTmOO50g+yI1j/Wb2e/rgJXZsT7wf9JORWUj2WQZX05yX3
9cLFlSv3RIum801fH9A6D4ZcVaoX1pN8scDOBbIa+Gvu3P1P6eS/V22q5b3Z
Tpy8KqZO3iPzbKCplfm8NaoX7vK6zZPdeH3VrnUEuw/9CTTDqfu/T09n94LT
aDQajUbjf6jcaCNQ/8VtLwWlYQztIX/3cobOLOVDbj9pNHbh4KELbteSI4+G
226N7+CqV0TNN/fYnch7VY1rKzNA/IfbRo2zUeXD4L5V9XhHnyRVzjdyMrnH
51SQCwfNEiuf2aiB5B6XJvhAzYQrDSrMVZ2kUegtZ87e9Pm8KyMnBryQ7t+C
uQeIt0qOEV9/sUx0TKd7lzVi5YpEsf/AebEn9pw4e+6m3Mt/8PCxfP7gv+gZ
l5p2S+pyxMalyrxqX/YtQv4I9uWNxgPdQdR+c52zXt1p3QAZD0l/F35Ye4bs
94O8mZf+u+dTazCMK3RiDPu1Z1dQ069as06bHMtuoxlwj3Gss7ylbSvr935D
Q2ld0kkTdvv8XKAWgzo+cpYuXb7Lfr1wgDyFym+r81Mz81HdsKCJDzWpP9vQ
B2WKjWK3zan8+tu/0teSj+ScworfQ34L9F/wrIUOsavrd2RINPlbp5Kvkd8b
Myp4tKeRH/fCn43X88gpTPFz7bNGo9FoNBrngzmY2fXGoUMX2e01AusmKj5V
8J8D/W5P6xYLSR/apb+4RmMH0APP7PMnv967DHiwv8oRZy3jkLpOOzFk0Bal
T1Frr993Gm/B/A5x3qzXF/qeXbxE7xVgXxI6k6prdMfOFPbxOZHU1Fvi5Rz9
LH8OQxefe2ya4GJW+F5y/fh7rL2bLbQ//M2MabQWip3B++L48as+80u7VovJ
Y3f+fjXb+YIenxX+27LlFPu1Zzdu3/lZvJ5/COmz1/MPZbfRDNBX4b4/PaHx
h7N8ol3404PHsm7O6JjovePr8/F5G/pZ0qj+bPbrhYu4+FTT10a3H1cHlS5K
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
Nyn4dSzW7fzgw9mpx11VzJq1LPFYVOZ+do90/zDv72PiWnus15J2rHzbQ13f
D7V+dHfe+8VlFz4a1m/YnHq8JRVrByWdr/E1eXvvlT/87umsj9m/RtPUx1AW
Fi9ZG0aMmBPGjp0X1qxJzqGGNJxSN3utxpgnk3ZsVcHxR92X+NoQf1P0+fxV
pbKfFwd+mvN9xNJl61KfCwAAyk5S3+Ik5531UFi8uPz7p8bv+t95d3q48vIn
wgF7Nfuybn/8rqHmbo1Ck0aV9zs+iu+THPkw8TumtOMDqq74fXe2+uCF+Nst
/TK5BWmPgaopvuf6+Ymd856ntXa/O1x83sOZ7zAPqtW8WOf6dgfUbFbl6kd0
6TQ0cT7imln8PX0h23n8sVGJ27n2t+pLUXpmfZacb/FNp5/UOSxeUv6fGauy
eA/9ag2Gr2pU/5XU4yuJ+PudOge2Tjzf/v7XAanHyNd9Pn9lOPLgNgXdL3aU
XJjtrr+2T+JY72v3TuYxp52QvUZBfP1PO36oamIdmOyfyfunHtuObsvWLxLv
lzE/cPvvLkoqvkfaN+E4R2rDAADs2N5//7OCv9OM363F35XFmvdpxw3bxZ5I
h+yXvXZQ7EuyI32vBlQusQdhUXMC4u9nBw78NPXYqbri+7yS5rYUV2XvkVBU
dQ5IXtvt0P6dAo/X5rDXDxombmfgC2pMUXri++pY8yXXdRx/txD7BKYda1VV
e8+mWY/LGSd3Tj220hC/v4i/zznw/22WORd/su316u67BlW514+KbN36TaHN
PW+GPb/foKDX/hOOvi9TeyrtuEvTlKmLE8d7WO3WmXXZpHoIMZc+7fihKon5
FknX672t30w9vh3d/AWrE+e/3r9fKrX9/ONvzyfuJ76XyNX7FwCAyq/HQx8W
9B3FPtUah1Gj56QeL2TTrPHgxHN38GA9k4B0TJ22pOA8gOOOvC88+cToKlcf
g4rn0NqtUsmFie81t36R/vjLS/zuPamOQ1F6HN30h2dzrLm12uHWGElf+7Zv
Zz3f4vl87W96+e1Eymrv2Szr8dlvB+3BQsWxYMHqcPOfnsv8JqXQ1/7f/vqJ
Hfa976UXPJI47vie/6Jze2T9W8yNTzt2qEo+/XRh8rX65OjU49vRxRzKpPkv
rZot8fUpV47mA52HpT4PAACUrZ6Pjsj5/UT8vemNf3gubNioxgYV18SJi3yu
ASqkG657KvH+FNcOjzjo3vBUn7GpxwnRK4MmpZILUxVfr18bPCVxLmLfiJJu
I2pzz1upj5Md06uDJofrr3kqXPjLhzPr2d27f7jt86I8mIrgiJ/cm/V+EGup
pB0bO56XXp4Yrrz08VDrR42L9Jofcz6eHzA+9fjLUhxf0viPPrRt+Msfn8v6
t/jZIO3YoSrp0mlY4rU6oP+OfZ+qKPb43l1Z5//nJ3Yq8bZHj5mbmCsc1dil
gbriAABVwLTpS8KPv/Pt36bG3+je0+qNsHLV+tRjhEJkO48za0HqmwIpivmk
cU36jJMfCMcf2T4cW6dduPDcHqHvc5/4DT0VzuW/6llu+S/xe894PVyxbZ9V
8bvmpne/ljg3U6ctzvv8T8bNz/k7x9hvQT47VD2/u7pP4n3Beg+lqUOHd4v1
+n/SMR3CzFnLUo+/rMX3+bHeW7Y5iDnxN1ybPWf+6EPbpB47VCX173wp8X71
jv6P5WL/Gtl7PUa33NSv2NuNfaiT6nFu96/bBqY+fgAAyke/vuPCwfu0+DIP
pnHDV8PSZetSjwuK4sffyf7ZpnWLN1KPDQAqg3//88VSzXk5qFbzzLrOmac+
EJo0ejUMGTI18xu9ZcvlW59+UuescxZrM+Z7bnyfHms95Jr7jh3eS32MQPm7
/77kHIUBO3g9DsrP4iVrM3mXRX1fcNUVT4YtW7emHn95Oef0rolzcdZpD2T9
95grnHbcUJU0a5yco15o/1JK5pS6HXO+dpx6fKcirVPEPnz3tXsn8XeTX+Zn
Htsh9bEDAFC+4nvFLVu/2Pb/048Fiiqev0mfb1rJhwGAgnw+f1Xe7w2z/865
fjh0/1bhzjteDO3avZOp9+L749yOOqRN1rmMNV9yPW/x4jXh5Lr35zwef//r
gNTHB6Qj9mBMujf8518vpR4fO4bh788q0vuEc898KHwybkHqcZe3Dz+cnTgn
B9ZsnvXf6x4uHwbK06039896Le5bvUnqsVUVLw78NO/rSPwtwF3/eSls3pI7
p3Lo0Jnhp/u2zLu9n9Rqnvnsm/bYAQAACjViZPL3TA8++H7q8QFAZdG///ic
daXjd8PHHt4uXHn5E5laA3PnrUw95srovLMeyjq/sY9U0nNiDcd8v8f/+Ymd
9UmCKmz5ivWJ94efHdcx9fjYMcxfUFj+bK3dG4UXX/w09XjTlFQPLslP92+V
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
ifNbY85mrBEX3zukPSYAAAAAAADKx6MPf5h3Henvfx2Q6XtUWvsspLfKsOEz
E58ffyt//FH3lVneRFFc+9veqR/D0taq+et5xx1/m9/rydFlUrfg9cFTwz9v
eyGcXPf+Uj1WYz+aV+5z+cTjoxLjifkwX82J2esHDcOwYcnnfUXwySfzw/41
mhZp3o85rG3o3HFomDtvZZH2Fc+tow5tm7jd2JfryssfL7jm1Ha/vqR4vc7i
8Una5vgJufP3CjV/wapQbaeijefCc3ukfl5UdTGfb+HC1WHMmHmhR48PM/kt
vXuPCXfcPjBceenj4XdX9wl/uv6ZzLWw37brZ9/qjXOeT9nUPbxdlasTc9Xl
T5T4vl9tp/rhX/8YGObMXZH6eAAAAAAAACg/n366MO9vruM6dmnuc9PmLQWt
YcX+OUnbWLN2Y6nmSZTE2ad1Tf04lqYlS9eFGrvclXPMJxx9X7mtLc77fGWo
d8eL4ZD9WpX4WKXRHyOuX++9W/K69/Z8mJjT8c6701M//rm89da0TJ2oQuY6
jufYw9uFvn0/Kfb+Yk5Brn289PLEzONiz62nnhqbqf1QSA2JmM9TnHh+9cuH
E7cZe7SVdH7XrtsUflKzsL51X3VY7dapnxsV2cxZy8Kd2+4hf7ju6dCl09Dw
wvPjQ6f7h2bqnb048NNt//3etnvMS6Ft27dDz0dHZM67uxsMCr/99RPhd1f3
Do0bvpr533EbF53bIxx9aNvM69Opx3fK5KjU3rNo+WElsWr1htTns7y8/fb0
Es3VPtUaZ2pR6YsEAAAAAABQ9cTfs8f6CrnWk2JdmNLe75Spiwtez0rKuSjr
fJi4lh/X1Q+q1SIcun+rnL1hzjr1gdSPZWmKv6PPNTdN734tlbhiP6Z//eP5
ItcC+ap4zpd33LM+WxZq/rBRYkwxHyaOqXevMakf+1zefHNq2GvX/LkmsfbT
327pnxl3SfYXc/VyzVu8dyU9t1ev0ZneKEnPjbWNihPT9BlLc469Q4d3SzTm
2Hss3/p+9vHclcmlSfscqYge7vZhie4ZFU1Vyof58/XPFmuOYp5SzJUraQ8/
AAAAAAAAKq+rf/NkzjWlO/4xsEz2O+jVyQWva934x2ezbqOk/ZJq7NIgU1Ph
huueCq2aDwn3tn4zUxtg6NCZYdny9d/a34qVGxK3dekFj6Z+LEvL7DnLQ7Wd
k9eOL/hFt1Tji3lQMT+pOMc85gyUd7yxLsFRh7T5b1+k/+c/ibFdd1XF7rnV
pdOwgnIKfnZcx0weS0n3t2Tp2nDg3sl1UmLOzYQ8+3njjdy1JYrb/y3X+Rfn
KF9c2cR1+1+c8WDOeGNdnlirK+nvw4fPSv08qWg2b/mioN58lUVV65cU+0sV
Ojfx+rj8okfDe9tew9OOGwAAAAAAgHQtXLg65/p27BNRVvvu2mV4kda4krYz
afLirDkxcVwx9yHWlqh7ePtw8XkPh5tv7Buee/aTMGr03GL9ZvyO25NrpjSo
93Lqx7O0XHZxz8Rx1t6rWdiwcXNqscV14Jg3Uty15CMPblOu8S5atCYcd2T7
L/e/vS9SUh7F+AklzyMpC0OGTC1ofm+5qV+prNXH6/On+ybXY4qefHJ03u28
++6MnNuItV6KE99LL04Mu38nebvxnlSU7S1YsDoccdC9OWOttlO9MGbsvPDx
J/MTH3PnHTvOfai0zJ23osxyU8pb3SPah4kTF6U+p+Vp9LbX66LM0S/P7las
fDQAAAAAAAB2LLnyO/berVFmLb+s9n3nHS8WvL4V8wRybSuunX/yyfwwYuSc
TB+mxUvWlkmPhKQ+JSVZV6+IkmopxPX4yVPSXYv9/dV9SrSefNXlZZfj9U1L
l60LJ2TJ1cqVE3P8kUXLoygP8Xrab48mOec19i0aN25Bqe0z1mzKtb8rL328
oO30fe6TnNsZPWZusWOMdTpybftft+WvrRVzy/58w7OZayvfudumzduZ52za
vCUxj7GoeThVwZKl68o8T6W0xZ5kJ9e9P/xu2/2uRdPXw1N9xoaxH82rsr1/
mjV+rchz+KffP5O5VtKOHQAAAAAAgPIXe7jU2OWu5LXX1m+W6f5PPvb+Iq1t
lWVuTiHeeSe578r+NZqmfjxLy6LFaxLHefZpXVON7bILHynxOvM/b3uhXGKd
M3dFYg5Jpm9SjpyYtM/1b/p1jnpB0UnHdsjUNymt/T3QeVjO/R28T4uC5+ih
ru/n3NbIUXOKHeeChaszNahybf/ow9qGF56f8LXnxfo5b709PVx0Xo+w5/cb
FHTeXnn51/N/au7WKOvjDqrVIvXzpSK68BfdSy1XpSRiHtM+1ZuE2ns2zbxu
HFOnXbj15v6hfdu3Q6tWb4Sej4wIc+etTH2+KqKhw2aGA/Zqtm0OC5/vY+q0
DcPf10MMAAAAAACgqmnWeHDiGtLhB95TpvuO68GF1EP4qtgXKc35OmS/Vomx
xT5MaR/P0hLnOWmcXToNTS2u2I8q1/kRz6dD908+RtvFdeeyjnX5ivXhwL2b
514Xz/G3Dh3eTf082C7OV65x7FO9caZ+TGntL+aO5OrhFr3/wWcFb695k+T7
XDRs2MwSxfvOu9Pzxps5P3eun5mr2PutqPe+WD/mm/v9+Ymdsz42V2+5qizW
iDn9pC4lymWptlP9sPeuDTN5LHGeYy5TrR/dncnt/P01fTK5di2bvZ7JwYr1
XLp3/zAMenVSpnZYzN9at35T6vOwI4g5bNl6JCbea7ddn3+7pX9Yu878AwAA
AAAAVAUbN23JrOslrR+NH196fU+yefTREUVei/zo489Tm6++fcclxhVr7KxZ
uzH1Y1paxoyZlzjWlavWl3s8sd/FbbcOyHt+dO0yPNOvJ/YZyfW4Pr3HlGm8
y5avD2ecnHvdPZ4zufJM6hxUtvlohfp42zWXK9cjjmPChIWltr+BAyck9ura
rqi5Z7+6IHdNoTFj55U47oe6Di9RnkUuvzy7W9Z9tr33rcTnLFxYerV6djQx
J2LOnBVh7tyVmTyu+fNXZ/qarVq9ISPmssW8ldjHauPGLdvuP1vD5i1bMzmc
acfO17Vs+Uao+cPsdZKyiflLzz37SepxAwAAAAAAULZaNE2umXDNlb3KdN8x
d6SQOh7flGbPg5Ny9Hb659/Lp/9OeRkxYnbiWMd+VL45SZMnL8r0m8l3bsR+
I9uf83D3D3M+9rHHRpZZvHF9/bQTOuXcf6wN8vIrEzOPz9UzbNCgSamfCz87
rmPOteVx4+aX2r7eLaDOSqzBUdTtHrJfy8TtHVunXSbXoTTiP/X43Me9qGJe
UJNGrybub0D/8YnPHTp0ZurnDpSHmLt0T6s3tl0vhddcat3yjbBla+lc9wAA
AAAAAFQ8xx7eLnGt6N13Z5TpvuNaVHHWh4tSH6Y0f8ufr5bN3HkrUz+epemD
Dz5LHGvDei+XWxwPdBqW6U+S77w4pk7bb61t1jmwdeLjX31tcpnEO3v28py5
F9s90v3DL5/zzNMfJT7uvLMeSvU8+Hz+qpz5KY8/PqrU9jVj5tJM/5lc83bt
b3sV67ref8+mifkmpVnbJtYF2rd641LJhTmoVoswddqSnPuLNbySnv9A52Gp
njtQ3iZOWlTQ/Xe788/pFubMXZF63AAAAAAAAJSuWA9hrx9k75UUaz6U5b5j
7ki+/ga192r+rX+re3i7vL/njn0wGjd89cvaMz8/sXOJa8qs37Ap1Ngluf/O
ry/umfrxLG2LFq9NHG/ssTXv87LN/4k9jy7N0+Nmu9NP6pzpp/TNbVx83sOJ
z9m4aXOpxzxjxtLMtZMv3gZ3fj2fKNZKSso5qfnDhlnHVl7a3PNm4jgOP7D0
+jnFXJgjD74357yd8/Oumeu7ONv/Sc0WWbd59rZtlvacrd+wOVx1xRPFzoM5
cO/moVXzIQXvK3Gt/+zuqZ03kKaYp3fwPtmv+Wz32AcfGJ56zAAAAAAAAJSe
D3P0w7nyssfLdN9XXfFk3jWq7g99EI4/6r7/5cIc0T5MnLgo53ZjD5zq370r
y3pXoxDX24sb7x23D8y5lrZ4yZrMunTMa1i4aHWmX878BavCZ7OXh2nTl2Ti
jnVtRo6aE4YPnxU++WR+pejTcPShyT2KDt6nZVixckOp7/PVQZPDKXWT+/N8
0223DkisF3LFpY9lfU7MAyvtuBctWpOYc7Fd7JHU68nRWZ8fz+/Ea6H7+6md
A3UOSK6x8/Y700tlH3FOau6WOz9un2qNw+LFa4q9j6T8u3r/frHM5i72FYu9
puJxz3cex3yoIw66J1MrqKj1b/b43rfveVHcXlrnDaRt9ZoN4T//Sn7t/qYz
TukSNmws/TxJAAAAAAAAyl+H9u8krgvFXJmy2m9c+/7xd/KvTcU8kpgzEnNH
Pi4gf2R+nr4usW5HXB+OeRwxHyKuIcc1+J/u2zLTXyH+lvzAms3D/jWaZv4W
txVtX2ve/f/+53/+z//+d6Frbd903JHtw6RJpdenpSy8NnhKzjHsW71JaFj/
lRLn9mzctCW8OPDTIuXBRLHnVq7tnnlKl6zPO6eUa4LEPI0Tj+mQOxdm5/qh
X99xidsYNGhS4nN/su28TOP4x3ynpJguK4WaSHHt+fJf9cx7nGO/rKHDZhZ7
P3FdPGnb7du+XebzGHPlnh8wPlx8Xo9w5CFtQt3D22fyn2K9q2uu7BXeemta
5jHF3X7sq5RtbIfVbp3KeQMVScwxq/7d/D33tr8ulyR3FgAAAAAAgIoh1i3I
th5U60d3Z3oplcU+4/p3rd3vLmhdatXqotUeKaTmTEUT18SLWguivMX1wXzj
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
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP9f
+3BAAgAAACDo/+voh4Kqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqPmJvN1k=
    
    "], {{0, 478.}, {1122., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->144],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{501.9000000000001, Automatic},
  ImageSizeRaw->{1122., 478.},
  PlotRange->{{0, 1122.}, {
    0, 478.}}]], \
"Input",ExpressionUUID->"32191e19-78ad-43cc-bb98-2962e651c50b"]], "Text",
 CellChangeTimes->{
  3.819801226957637*^9},ExpressionUUID->"5917b6b3-418e-4c1c-8a05-\
ee7cca8302c3"],

Cell["This implements the first step", "Text",
 CellChangeTimes->{{3.819802885433208*^9, 
  3.8198028885267467`*^9}},ExpressionUUID->"2aa23c5e-e7ff-48d9-a295-\
ce322301f2b5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Rho", "[", 
   RowBox[{"\[Alpha]_", ",", "\[Beta]_", ",", "\[Delta]_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Mu]1", ",", "\[Delta]1"}], "}"}], ",", "\[IndentingNewLine]", 
    
    RowBox[{
     RowBox[{"\[Mu]1", "=", 
      RowBox[{"\[Mu]s", "[", 
       RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Delta]1", "=", 
      RowBox[{"\[Delta]s", "[", 
       RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"12", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"FNIG", "[", 
           RowBox[{
            RowBox[{"x", "-", "z"}], ",", "\[Alpha]", ",", "\[Beta]", ",", 
            "\[Mu]1", ",", 
            RowBox[{"\[Delta]1", "-", "\[Delta]"}]}], "]"}], " ", 
          RowBox[{"FNIG", "[", 
           RowBox[{
            RowBox[{"y", "-", "z"}], ",", "\[Alpha]", ",", "\[Beta]", ",", 
            "\[Mu]1", ",", 
            RowBox[{"\[Delta]1", "-", "\[Delta]"}]}], "]"}], " ", 
          RowBox[{"fNIG", "[", 
           RowBox[{
           "z", ",", "\[Alpha]", ",", "\[Beta]", ",", "0", ",", "\[Delta]"}], 
           "]"}], 
          RowBox[{"NIGPDF", "[", 
           RowBox[{"x", ",", "\[Alpha]", ",", "\[Beta]"}], "]"}], " ", 
          RowBox[{"NIGPDF", "[", 
           RowBox[{"y", ",", "\[Alpha]", ",", "\[Beta]"}], "]"}]}], ",", " ", 
         
         RowBox[{"{", 
          RowBox[{"z", ",", 
           RowBox[{"-", "\[Infinity]"}], ",", " ", "\[Infinity]"}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"-", "\[Infinity]"}], ",", " ", "\[Infinity]"}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", 
           RowBox[{"-", "\[Infinity]"}], ",", " ", "\[Infinity]"}], "}"}], 
         ",", 
         RowBox[{"PrecisionGoal", "\[Rule]", "2"}]}], "]"}]}], "-", "3"}]}]}],
    "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.8195181113543053`*^9, 3.819518179961141*^9}, {
  3.819521752012765*^9, 3.819521803476323*^9}, {3.819522175545599*^9, 
  3.819522187908402*^9}, {3.8195224461188517`*^9, 3.819522451398994*^9}, {
  3.8195467661008472`*^9, 3.8195469191680937`*^9}, {3.819625604601119*^9, 
  3.819625619818672*^9}, {3.819734929169793*^9, 3.819734993174328*^9}, {
  3.819735112529951*^9, 3.819735115638834*^9}, {3.819736610165099*^9, 
  3.819736638769079*^9}},
 CellLabel->
  "In[929]:=",ExpressionUUID->"935b3696-015e-4e02-ba1a-da1a86402919"],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"\[Alpha]", ",", "\[Beta]", ",", "\[Delta]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Beta]", "=", 
   RowBox[{"\[Alpha]", "-", "1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"NSolve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Delta]", "/", 
       RowBox[{"\[Delta]s", "[", 
        RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}]}], "\[Equal]", "0.2"}], 
     ",", "\[Delta]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]", "=", 
   RowBox[{"\[Delta]", "/.", 
    RowBox[{"sol", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.819803048730143*^9, 3.819803140392355*^9}, {
  3.8198031878663387`*^9, 3.8198031925259237`*^9}},
 CellLabel->
  "In[930]:=",ExpressionUUID->"801f2f41-dbdc-474d-bddb-87eac7c2567a"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Timing", "[", 
   RowBox[{"Rho", "[", 
    RowBox[{"\[Alpha]", ",", "\[Beta]", ",", "\[Delta]"}], "]"}], "]"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.819735877813394*^9, 3.819735889830868*^9}, {
  3.8198031453895597`*^9, 3.819803146558352*^9}},
 CellLabel->
  "In[935]:=",ExpressionUUID->"8b222c4f-6335-4715-ba11-d5405e9c3922"],

Cell["Now for the interpolation", "Text",
 CellChangeTimes->{{3.8198031523384047`*^9, 
  3.819803154536578*^9}},ExpressionUUID->"6dd75d8c-2ddc-40f5-9029-\
21ca415502e2"],

Cell[BoxData[
 RowBox[{"Clear", "[", "FNIGi", "]"}]], "Input",
 CellChangeTimes->{{3.81982367365982*^9, 3.819823676316717*^9}},
 CellLabel->
  "In[936]:=",ExpressionUUID->"c3ca2539-735f-45e2-b8f1-2095669832a4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FNIGi", "[", 
   RowBox[{
    RowBox[{"\[Alpha]_", "?", "NumericQ"}], ",", 
    RowBox[{"\[Beta]_", "?", "NumericQ"}], ",", 
    RowBox[{"\[Mu]_", "?", "NumericQ"}], ",", 
    RowBox[{"\[Delta]_", "?", "NumericQ"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "r", ",", "x"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"a", "=", 
      RowBox[{"InvFNIG", "[", 
       RowBox[{
       "0.0000001", ",", "\[Alpha]", ",", "\[Beta]", ",", "\[Mu]", ",", 
        "\[Delta]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"b", "=", " ", 
      RowBox[{"InvFNIG", "[", 
       RowBox[{
       "0.9999999", ",", "\[Alpha]", ",", "\[Beta]", ",", "\[Mu]", ",", 
        "\[Delta]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"r", "=", 
      RowBox[{"Range", "[", 
       RowBox[{"a", ",", "b", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"b", "-", "a"}], ")"}], "/", "70"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"FNIG", "[", 
           RowBox[{
           "x", ",", "\[Alpha]", ",", "\[Beta]", ",", "\[Mu]", ",", 
            "\[Delta]"}], "]"}]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"x", ",", " ", "r"}], "}"}]}], "]"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.819737536751947*^9, 3.8197377262940187`*^9}, {
  3.819737798997216*^9, 3.819737802324263*^9}, {3.819737878204465*^9, 
  3.81973801159448*^9}, {3.8197382208969717`*^9, 3.819738221719878*^9}, {
  3.8197382643743277`*^9, 3.819738320767379*^9}, {3.819738357569353*^9, 
  3.8197383719819613`*^9}, {3.819739072702215*^9, 3.819739127567222*^9}, {
  3.819802682812738*^9, 3.819802682902944*^9}, {3.819802739403582*^9, 
  3.8198027394978437`*^9}, {3.819817964240465*^9, 3.81981803163913*^9}, {
  3.8198180739792337`*^9, 3.8198180743382483`*^9}, {3.819823581440063*^9, 
  3.81982358562927*^9}},
 CellLabel->
  "In[937]:=",ExpressionUUID->"04cc7c12-270e-481c-bb50-694d7a254cda"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fi", "=", 
  RowBox[{"FNIGi", "[", 
   RowBox[{"5", ",", "4", ",", 
    RowBox[{"\[Mu]s", "[", 
     RowBox[{"5", ",", "4"}], "]"}], ",", " ", 
    RowBox[{"\[Delta]s", "[", 
     RowBox[{"5", ",", "4"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8197379702356052`*^9, 3.8197380210929317`*^9}, {
  3.819802633827742*^9, 3.8198026388810797`*^9}},
 CellLabel->
  "In[938]:=",ExpressionUUID->"dc357754-be05-4f3f-8ad7-7f09de9930de"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   RowBox[{
    TagBox["InterpolatingFunction",
     "SummaryHead"], "[", 
    DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
     TemplateBox[{
       PaneSelectorBox[{False -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
               ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
               BaseStyle -> {}, Evaluator -> Automatic, Method -> 
               "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GraphicsBox[{{{{}, {}, 
                 TagBox[{
                   Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                   LineBox[CompressedData["
1:eJwVx30w2wcYwPF4qUulqlSEKI0y8dKrU3Q7I8/Tdb3Ua4n0BTvaeul1dJYx
Rd/mpaLqZdMa6yIvjLRr13HrZIbGGfWyeanNLrmjvZp6LT/ibRZiv/zxve99
HC+k8hINKRSKP5n+VFGyj0hAbZd+v7ZYocrmMNQ2O8K5Ju2ZOcH9Ysc6jldx
/mr8glG7NPC1pOn0K45r/efRQW0G7cNnstJMxTbAOKtTJxzaVo5xbmbnTwTD
6slSzmr+f8rmf70jMwyyoYTuVuzusaYsP/z0Zx1XBP7daMtKX1Kea7p/6jxd
AUKZpdHh+hnliCbTc9f9XqCFN9ddNnqttM5977G18whooi/ay6sGlHExwuMD
l17CpIBy0vi6DKzX/aViy3+g7OMGX2HknzDHPCFN9p2EY3eeC46sjUPNH6wV
7ctp6DsuyYirnYOlT7MMnylnwdIKdHm3NHBVFhYJR99C0g9bb/hO65D2oKvq
J948GGQ1Tnwh0IJjbECgya4F+ODgSkTGbgrapN67gdULwPY1bYvyN8TlHu1Q
mW4BKD3nqWNVxrh/+dFD6yAC5hdY9bGzJkj17Coov0HA1pPoQTOrnchTFJa2
yggw3BhRfZRCQ3lSOo/ZRoD76O+X1SIzrI3LW7owSEBipNspfoc5yvH6+8mj
BAS5J5S+S7NAnBCkiSYJSFtfVMQ4WiL2aWbS5gmovC1+MRi2F2dNc4v6NAR0
vblp9VuGFT6cYvoXrBGQX+pg319Ex9ay7gHTDQICNsfo7CZrDBwNvWqsJaCw
Kfqvyn4G2nUMB0RtEjDmR2sVvrJBRYj8w7AtAg7mj97tpjIxPbeo3lxHgBkz
2cvBwQ7vnrtVXE56Op2p7Azah54qSeEGaf4+oWVuvD2uSZbdYZuAvhJ22bMM
B3xcWxIrIO3XOa0Nku3HeFmV7Tekq2u9GesxLIzYE7X3KelvuXkPFjUsNKj+
8WwvafFQyoCb0BG7UlMSVKRntn3OfGJxAMdbaurHSTd+ZaaKlh9AD8+hnlnS
Hb2dLTxvJ7SfZfAWSasm6T5FrU441HD09Arp5KQr312KcMaka3OF66S5xYor
/FFnfB7q/csGaakV9djUZ+9gwa+707WkdTmammYTF5R47GjYJF1X0ZJY+aUL
Tki/Ltwi3UurYNm7sHGpyctXR/qIayjnSSMbNykhj/Rmyen8qROuGOJiu3Ob
tDktUxc35oov/l4N1ptLb6ZNXHRD4o46S+/NHFOLPTo3fKsWiPXeuOeXxS1y
x2uSPIXeYcMMu0M2HqiwDe/T+38GDONx
                    "]]}, 
                  Annotation[#, 
                   "Charting`Private`Tag$46877030#1"]& ]}}, {}}, {
              DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
               AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
               GridLines -> {None, None}, DisplayFunction -> Identity, 
               PlotRangePadding -> {{
                  Scaled[0.1], 
                  Scaled[0.1]}, {
                  Scaled[0.1], 
                  Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
               All, DisplayFunction -> Identity, AspectRatio -> 1, 
               Axes -> {False, False}, AxesLabel -> {None, None}, 
               AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
               Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameTicks -> {{None, None}, {None, None}}, 
               GridLines -> {None, None}, GridLinesStyle -> Directive[
                 GrayLevel[0.5, 0.4]], ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], 
               Method -> {
                "DefaultBoundaryStyle" -> Automatic, 
                 "DefaultGraphicsInteraction" -> {
                  "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                   "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                 "DefaultMeshStyle" -> AbsolutePointSize[6], 
                 "ScalingFunctions" -> None, 
                 "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
               PlotRange -> {{-3.055473999600471, 13.547227040986042`}, {0., 
                0.9999998999999694}}, PlotRangeClipping -> True, 
               PlotRangePadding -> {{
                  Scaled[0.1], 
                  Scaled[0.1]}, {
                  Scaled[0.1], 
                  Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
             GridBox[{{
                RowBox[{
                  TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   RowBox[{"(", "\[NoBreak]", 
                    GridBox[{{
                    RowBox[{"-", "3.055473999600471`"}], 
                    "13.547227040986042`"}}, RowSpacings -> 1, ColumnSpacings -> 
                    1, RowAlignments -> Baseline, ColumnAlignments -> Center],
                     "\[NoBreak]", ")"}], "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"scalar\"", "SummaryItem"]}]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
               ButtonFunction :> (Typeset`open$$ = False), Appearance -> None,
                BaseStyle -> {}, Evaluator -> Automatic, Method -> 
               "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GraphicsBox[{{{{}, {}, 
                 TagBox[{
                   Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                   LineBox[CompressedData["
1:eJwVx30w2wcYwPF4qUulqlSEKI0y8dKrU3Q7I8/Tdb3Ua4n0BTvaeul1dJYx
Rd/mpaLqZdMa6yIvjLRr13HrZIbGGfWyeanNLrmjvZp6LT/ibRZiv/zxve99
HC+k8hINKRSKP5n+VFGyj0hAbZd+v7ZYocrmMNQ2O8K5Ju2ZOcH9Ysc6jldx
/mr8glG7NPC1pOn0K45r/efRQW0G7cNnstJMxTbAOKtTJxzaVo5xbmbnTwTD
6slSzmr+f8rmf70jMwyyoYTuVuzusaYsP/z0Zx1XBP7daMtKX1Kea7p/6jxd
AUKZpdHh+hnliCbTc9f9XqCFN9ddNnqttM5977G18whooi/ay6sGlHExwuMD
l17CpIBy0vi6DKzX/aViy3+g7OMGX2HknzDHPCFN9p2EY3eeC46sjUPNH6wV
7ctp6DsuyYirnYOlT7MMnylnwdIKdHm3NHBVFhYJR99C0g9bb/hO65D2oKvq
J948GGQ1Tnwh0IJjbECgya4F+ODgSkTGbgrapN67gdULwPY1bYvyN8TlHu1Q
mW4BKD3nqWNVxrh/+dFD6yAC5hdY9bGzJkj17Coov0HA1pPoQTOrnchTFJa2
yggw3BhRfZRCQ3lSOo/ZRoD76O+X1SIzrI3LW7owSEBipNspfoc5yvH6+8mj
BAS5J5S+S7NAnBCkiSYJSFtfVMQ4WiL2aWbS5gmovC1+MRi2F2dNc4v6NAR0
vblp9VuGFT6cYvoXrBGQX+pg319Ex9ay7gHTDQICNsfo7CZrDBwNvWqsJaCw
Kfqvyn4G2nUMB0RtEjDmR2sVvrJBRYj8w7AtAg7mj97tpjIxPbeo3lxHgBkz
2cvBwQ7vnrtVXE56Op2p7Azah54qSeEGaf4+oWVuvD2uSZbdYZuAvhJ22bMM
B3xcWxIrIO3XOa0Nku3HeFmV7Tekq2u9GesxLIzYE7X3KelvuXkPFjUsNKj+
8WwvafFQyoCb0BG7UlMSVKRntn3OfGJxAMdbaurHSTd+ZaaKlh9AD8+hnlnS
Hb2dLTxvJ7SfZfAWSasm6T5FrU441HD09Arp5KQr312KcMaka3OF66S5xYor
/FFnfB7q/csGaakV9djUZ+9gwa+707WkdTmammYTF5R47GjYJF1X0ZJY+aUL
Tki/Ltwi3UurYNm7sHGpyctXR/qIayjnSSMbNykhj/Rmyen8qROuGOJiu3Ob
tDktUxc35oov/l4N1ptLb6ZNXHRD4o46S+/NHFOLPTo3fKsWiPXeuOeXxS1y
x2uSPIXeYcMMu0M2HqiwDe/T+38GDONx
                    "]]}, 
                  Annotation[#, 
                   "Charting`Private`Tag$46877030#1"]& ]}}, {}}, {
              DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
               AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
               GridLines -> {None, None}, DisplayFunction -> Identity, 
               PlotRangePadding -> {{
                  Scaled[0.1], 
                  Scaled[0.1]}, {
                  Scaled[0.1], 
                  Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
               All, DisplayFunction -> Identity, AspectRatio -> 1, 
               Axes -> {False, False}, AxesLabel -> {None, None}, 
               AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
               Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameTicks -> {{None, None}, {None, None}}, 
               GridLines -> {None, None}, GridLinesStyle -> Directive[
                 GrayLevel[0.5, 0.4]], ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], 
               Method -> {
                "DefaultBoundaryStyle" -> Automatic, 
                 "DefaultGraphicsInteraction" -> {
                  "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                   "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                 "DefaultMeshStyle" -> AbsolutePointSize[6], 
                 "ScalingFunctions" -> None, 
                 "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
               PlotRange -> {{-3.055473999600471, 13.547227040986042`}, {0., 
                0.9999998999999694}}, PlotRangeClipping -> True, 
               PlotRangePadding -> {{
                  Scaled[0.1], 
                  Scaled[0.1]}, {
                  Scaled[0.1], 
                  Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
             GridBox[{{
                RowBox[{
                  TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   RowBox[{"(", "\[NoBreak]", 
                    GridBox[{{
                    RowBox[{"-", "3.055473999600471`"}], 
                    "13.547227040986042`"}}, RowSpacings -> 1, ColumnSpacings -> 
                    1, RowAlignments -> Baseline, ColumnAlignments -> Center],
                     "\[NoBreak]", ")"}], "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"scalar\"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["3", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["False", "SummaryItem"]}]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[Typeset`open$$], ImageSize -> Automatic]},
      "SummaryPanel"],
     DynamicModuleValues:>{}], "]"}],
   InterpolatingFunction[{{-3.055473999600471, 13.547227040986042`}}, {
    5, 7, 0, {71}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, CompressedData["
1:eJwBSQK2/SFib1JlAgAAAAEAAABHAAAArH8wWpxxCMCxQrr33IsGwLcFRJUd
pgTAvMjNMl7AAsDCi1fQntoAwI6dwtu+6f2/mCPWFkAe+r+jqelRwVL2v64v
/YxCh/K/cGshkId37b+Id0gGiuDlvzgH3/gYk9y/wD5ayjvKyr8Ah0zo0o2c
P0iwNkLY9tA/DEz0qmkS4D/4P800Z6nnP+Azpr5kQO8/6JM/JLFr8z/cDSzp
Lzf3P9CHGK6uAvs/yAEFcy3O/j/evfgb1kwBQNj6bn6VMgNA1Dfl4FQYBUDO
dFtDFP4GQMix0aXT4whAwu5HCJPJCkC+K75qUq8MQLhoNM0RlQ5A2VLVl2g9
EEBXcRBJSDARQNSPS/onIxJAUa6GqwcWE0DOzMFc5wgUQEzr/A3H+xRAygk4
v6buFUBGKHNwhuEWQMRGriFm1BdAQmXp0kXHGEC+gySEJboZQDyiXzUFrRpA
usCa5uSfG0A239WXxJIcQLT9EEmkhR1AMhxM+oN4HkCuOoerY2sfQJYsYa4h
LyBA1bv+hpGoIEATS5xfASIhQFLaOThxmyFAkGnXEOEUIkDP+HTpUI4iQA6I
EsLAByNATBewmjCBI0CLpk1zoPojQMo160sQdCRACMWIJIDtJEBHVCb972Yl
QIbjw9Vf4CVAxHJhrs9ZJkADAv+GP9MmQEKRnF+vTCdAgCA6OB/GJ0C/r9cQ
jz8oQP4+den+uChAPM4Swm4yKUB7XbCa3qspQLnsTXNOJSpA+XvrS76eKkA3
C4kkLhgrQIBRCBY=
    "], {
    Developer`PackedArrayForm, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 
     14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 
     32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 
     50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 
     68, 69, 70, 71}, CompressedData["
1:eJwdy1tMkmEcBnBsZC3E1RbLuWXR1LDWanmRVvJ3iIe7Ptmgg5shzdNF5Wkt
a6QzZ2u0lBqsWE4rP0qjsQ7aAbSaoRZCljIJUjfAEAjepKAcIL1fF89+2/Ps
YUvOCioTaDRaMU6BVq8Kzl7gepPGVUvJj7i5b6d1GzfZuPt0aXPCpnXAU/ZJ
dMxs0DVe6z6lOQFtGt8aV90lYMy8mMmNqEDyy5wzfOAp7GxsDd7aOgpVRinT
LpiCOtntzJOuWXCTc/YBYgHI8P4dppgDCPfe6V2fF6ElVMHP2LYEtV6ii/Pb
AwVD8if3JT6wtD/jaaU/oAzRm+UiP3zaEtfPR/zAKJVP1DQHgBNmKa9YA+Da
vb6jZTuChIjS4xYh+DlmCK9tRdCjWOxM6UGg9JgzFUMIBvtR19EJBDl3VUnj
Ftznx3uDCwjeO7+8VLsRRBqq26R+BNaRB0d8ywjCJR2+4hCCMzzWPcsfBL2B
D7KxFQTlge6r+REERSVRvjiKILEwXn8ohiBrknHZgeUbOMsVqwhKK8nsUax4
mH6RGUdAs+3hFmFPGzPIeiy5wfT1BjZdQivUYPWpXv0bbAOH/dBM7QIixYbd
nNg078BqOg+rPNip8neGANb0vGYkiL3u1hpD2DxSlP4XK0wjgitYF9sgjGDV
WeLqKLadTD4YwwbPHftGefNx1fFVbP+dyVeUTgubHv//O59HafUP1lKG++wy
Stb3HDWls0zxmtKYSnyk/AeaMlCY
     "]}, {Automatic}],
   Editable->False,
   SelectWithContents->True,
   Selectable->False], TraditionalForm]], "Output",
 CellChangeTimes->{{3.819737998342581*^9, 3.8197380218557463`*^9}, 
   3.819738224146838*^9, 3.819738403117317*^9, 3.8198025525428257`*^9, 
   3.8198026411066837`*^9, 3.8198026847737837`*^9, {3.8198027242116833`*^9, 
   3.8198027412044086`*^9}, 3.819803414045279*^9, 3.819823680282023*^9, 
   3.819828793731038*^9, 3.8198290047154093`*^9, 3.819866976643981*^9, 
   3.8198691107298517`*^9, 3.820343037038313*^9, 3.820389683359421*^9, 
   3.820426606348482*^9},
 CellLabel->
  "Out[938]=",ExpressionUUID->"690a185c-6f0d-4934-b57a-8995542aad6d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Timing", "[", 
    RowBox[{"FNIG", "[", 
     RowBox[{"0.9", ",", " ", "5", ",", "4", ",", 
      RowBox[{"\[Mu]s", "[", 
       RowBox[{"5", ",", "4"}], "]"}], ",", 
      RowBox[{"\[Delta]s", "[", 
       RowBox[{"5", ",", "4"}], "]"}]}], "]"}], "]"}], ",", " ", 
   RowBox[{"Timing", "[", 
    RowBox[{"NIGCDF", "[", 
     RowBox[{"0.9", ",", " ", "5", ",", "4"}], "]"}], "]"}], ",", " ", 
   RowBox[{"Timing", "[", 
    RowBox[{"Fi", "[", "0.9", "]"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.819802451985673*^9, 3.81980250628703*^9}, {
  3.819802573269217*^9, 3.819802652402364*^9}, {3.8198027254779377`*^9, 
  3.8198027335308933`*^9}},
 CellLabel->
  "In[939]:=",ExpressionUUID->"b4cd15e3-d6d7-4541-bf36-fdef6521f2a4"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.024471`", "0.8425641642701189`"},
     {"0.022698`", "0.8425641642701189`"},
     {"0.00001`", "0.8425668882988568`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.819802590433086*^9, {3.819802623152042*^9, 3.8198026527887363`*^9}, 
   3.8198026856141567`*^9, {3.819802735232684*^9, 3.819802741316268*^9}, 
   3.819803414293585*^9, 3.819823680388084*^9, 3.8198287938612137`*^9, 
   3.819829004821316*^9, 3.819866976762268*^9, 3.81986911082474*^9, 
   3.820343037146185*^9, 3.820389683451861*^9, 3.820426606440806*^9},
 CellLabel->
  "Out[939]=",ExpressionUUID->"b506ae02-9d5f-4080-9f52-c4ce8155bc01"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FNIG", "[", 
       RowBox[{"x", ",", "5", ",", "4", ",", 
        RowBox[{"\[Mu]s", "[", 
         RowBox[{"5", ",", "4"}], "]"}], ",", 
        RowBox[{"\[Delta]s", "[", 
         RowBox[{"5", ",", "4"}], "]"}]}], "]"}], "-", 
      RowBox[{"Fi", "[", "x", "]"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "2"}], ",", "5"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8197377314046803`*^9, 3.8197378115833683`*^9}, {
  3.8197384229447813`*^9, 3.819738423979611*^9}, {3.819738467523591*^9, 
  3.819738467947589*^9}, {3.819802763781485*^9, 3.819802769966859*^9}},
 CellLabel->
  "In[940]:=",ExpressionUUID->"2356b937-9b06-437e-879b-d63dba35fadb"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"38.065995`", ",", 
    GraphicsBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQfdXja8CCB//2v+2XFF9XJGR/ZJO94/m7//Y/MJvb
f8BPyH7bjuuiLFf/7RdgzLxmeUvQftYR9v25h//tP/BUzcXqiYB90p10QccF
//YrFEd5fe/itQ959P9p6fR/+xlEQrvfpfHYu72YvmtVH1D92lUcF6247bW+
HE8WqQWaL/VcdP8pDvtP3BrbnkcC9dtJTgntY7Z/InigSyYQyH/3Zs0WHSb7
a+IR8YEe//YvqAt49OYwg/0u5Q6O3Wb/9jucWtXydtdvuzWaCnff6wLte6pl
qXrgh908/R0bVVSB9v1a/9Z8x1e7JusXUX3CQPlQy7upLO/tShwb9A9zAfnp
fx+0r3xhl+YuwfKD8d/+BiHf00zmj+wifDfc0Pn5dz/DN5EpEtHX7byCPdYm
fgDyDZw1as2P2NlEPmic9hzI9+H1tGzabKcXXxF2+h6Qv+/owthlN+wUUgW0
Ga4B+dL82ZPln9kJZ6/4b3IWJP/4qfaV93YWMgKVaw7/3e8w+9CXzXJf7eLO
ln9S3vV3/4HfHlpnnX/ZrdJ3fyq0/O/+Bbuf3tHRY7J3+PL01IcGoPqobXPY
bnLbpy31dckoB6o/Ga9/TovPvjts6977uUB+GsO3bxYC9td2tGw4FwVUH+Gp
WpIvZC8R9J1jI5APi18Abkr/zw==
          "]], LineBox[CompressedData["
1:eJwV0nk01GsYB/CJuqZcS44ikX1Ku+XSoodLqcaShiQRjSXdLEN1bSfZpkiW
Iko7MamhjajLbyalpFtRtIlcwkhlmc3MpO7z++M97/mc53m+73ve8xozoxmh
ShQKJQQXubMa2ckCrpz3LW+eTnWslkOPS9g61ik5j8J0TjFP0HBwV8qLyTou
56VUB8WrMNQcGhrrykvT0eOuOeeMVR1KbGaqd8agzc/RplX85uBjwu1Z7YHz
t5b5jxTLobm7Q8trA1rXm+XeLAabM1MuEfboXa463z6PQZk3LYltjY6wfjz4
fQi0NLfcuLAYfVMosJR0QeqzuP46YzRrk1lCMg/GjlzSaddF808dYbpVQ6DT
U9cvGmjq2jCi9iG8mBo/rKyC9tS6z0p5Cevu6dXo/5TxKIW0wXkJncA94Cz4
Q4weW1k1e0YXHBsp9AzvR7c97fZr7QOX93bGz3lovlmo3YavUFsYtG3wLjol
bitn73cw88zK+lWF/q2p02vtGCg9+TBueQ59rb7MxHwCYtKUaa4F6Nz09liq
EHrXLfULOYbOlzqo9wqBqDnUVBSPbl2V6RIhhmWsCsmNaLTVwmMyIwmcW/Jy
8dMw9Ls3qmatElAdku7qC0B7Dri/3SOFxFKjAoU3aQsZTS6F4YDNT7Td0E4n
5likToLvvFjFMmcy/z1F8mMSWjpKVmxcgw7RD70aKQO7/IfBQZboVbYrAl7L
QNDr71qxCJ1YKWAvlUOJpcTqqyH6eFfFziQ5uKbl6VnpoE/fb/nFk8OPV4uU
4tXRNTsunpLLocq0abhxBlqSE+K0RAG7DuxsV56axPcLt1zGUIBGs6h+swi9
K0+UHK0A/pzcS3kjaH1WODNdATFhCzM7+9DfvWdOz1WASR0/ev4HdIuX6sk8
BXSo+G3f3Y6mGnjaZyqA7SsETgv6LsffJl4BtpXHad94aPsGj6pABQhk5urW
dWi/gFddoIAzdJ44vhot0NCRzFEA/axvN1GOZkxrth6Qg2Jk/NH08+R91Cae
c+XAtc/m0gvJ/Mtzf0XIISDHrDA/G/0iQ0mZJgf1nsakN2lo77j2ue9kwFu+
PVg/Ec269yk+XQasw2N0Zgz6XRQRvkgGr41M9b4HontvCsWBk5AR0zDNZjta
t3mWrlAKtk3bhhM80Lb0ne0pUjgdnFk/Yx26VMdqQY4E/Cu++RjooVcGp//H
EoGa9AgEz0ZX76DGkf9poxGtkoredN2kz00IxsMMsY1UyqMsHVofajABg0vq
C9w60JOb+N30UYi+ldaWlIs+/aRDa/EAGCnp1z9gozWXq9aO9MMrRu1FlUNo
3QfHLt/sAxvRUFTBPvTYdjrPpRcG1qf6vGeiHadbO1v1QNEpPTD0Q7c9sAjq
64JJW3e165vQrIMNW/e+hcqjg6IxB3TvrOw4p07we3f4o60d2jPxQvGS19CY
cPt6kzmZFzp1IuQFRLW6FlAN0JceqdKutILR/IFED2100Nvi/N+fQFqDDv2D
EpnnrhkXxIc99SlvmDIJzos+PTO8D241w8yRUdK0r58n7sDKm4zR/YPolAnt
8mQuzOH+k/TjI5rin2OsXQpyjhmV/Zp0S78w8AT0lOUUqrWSDgoz/+ICDy9K
jIr4pB0XRiVnE1fPBlYtqCNdlvRw/AxxvLhlNaeKdFZp2tBlIqbA8vGKK+R5
1fNNy8oJn7wSRn0JWR9k1JleJdZkK39yPEF6cx17dyVheDRi39OjZL/KT4tt
lcT09E7p1mSyLjY9LeUQgmTI+HCArA9GGzqVE88TOZrB+0jfORi5/DJx+2/N
8yO7yf44a5PIYqIoNsHigC/pNV4Sr3QiKaqv9ocHmt9EUYifEUF/uTqxN6Cp
qSsUSQJifVjNCzV7dFuk8pVREWHBNNhZZIXO8Of8eXKKmNgxup9jiF5zLcSX
ocKb+Nex6pCuhPdmmveWyLRZvP8B6cw3/A==
          "]], 
         LineBox[{{-1.1700663920205896`, -0.00005056282126681174}, \
{-1.1694917288850648`, -0.00004826647752168012}, {-1.167334782688497, \
-0.00003945072705335839}, {-1.165177836491929, -0.00003050923457320609}, \
{-1.163020890295361, -0.000021446146798748122`}, {-1.160863944098793, \
-0.000012265720639628719`}, {-1.1587069979022249`, -2.9723233743589317`*^-6}, \
{-1.1565500517056568`, -7.322293079120579*^-6}, {-1.1543931055090888`, \
-0.000017955217638365717`}, {-1.1522361593125208`, \
-0.000028472115834829448`}, {-1.1498986289654227`, -0.00003973249055654049}, \
{-1.147620261381824, -0.00005056282126681174}}], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQPbND6efW5Of7rzGG+Oc2ce2/+TtEVZDh+X6GD93n
XvKw7Jf64qXM+/bZfoYN8ZVBh5n2x7xxUOS8BeIXXTQsZ9z/4I6OLOMWIP/A
bLUDG/7ue7aXRfRjOpDPcGLOBP7P+77Ub2G5eP4pkD/JWuTzETuzilVMZ/eA
+Esc5kRcsysvWMBwciWIn5+UKvrQ7ldCz58DzUB+g8X0D+ff2DE6pXzZYA7i
dyxOefLTjo9F5MmE+U/2MziYHni1g90+4A/no54eEP//vRe/Oewnfvl/v6MS
yG94ruJkyWUv8vT17YZgIP9Beb/sIh576WOHLxewg/gS29UmC9jH7Nt5MefL
4/0MFyy9fkkJ2s/btv58xkMgfwHTNrn5gvbSohV20w4+3v+2X1J8XZGQPQAc
KZru
          "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQHVV+ZtMZsQf73/ZLiq8rErK/suyK4H+2B/sZDlRd
8mATsg9Mn8lV++r+foYL4it3NQja/2ro/Pj7GJDvEJ/V+U3A3ndL5v6f9UC+
AsP76yv47T9JaUV//XhvP0PDxYXxW7nsZ5tIOZWcA/GFFtxN4rR38ePS/LwK
yD+QO+UTO4f9tMZX3z4kg/jMjVmWrPbWL1ZNenP1LpAftMO5+p/dE8bZldmb
gPyGBb67wn/b9Ul3J7zqA8kHV5xV/WH3wC9b74U7kO/wvcN8xke7zoxo0XQV
kHrfpJlVb+yMmrz/PGUA8hk2vPu66qnd7dnWj1Pu3gHyrbQWt9y1a9mqferx
ThBfzusP63k73fPSG5OmgfgJFx5oTbW79oJ7xsMiEJ8n1WviRbsGpj91Cf4g
/p5G34RHdpoyb1Lva4P493p177+2u2R6xyeOA8Sf8pd10Se7Gv8zxnef3Aa6
Z92GW27f7c41rWG8PRfIZ7gatM6Iwb7hY9w2nmogP0FN/Egyk71RgmC2XQSQ
v4BznUUvi/1U27IrC4VA6qfJW53gsI/5Yb88o/3WfoYCBffn2QL2fOmfomel
APkL1t5oSBK0P3B1icAZRyDf4O+e8BAh+236j9y9bW/B4xcAfR3x7g==
          "]], 
         LineBox[CompressedData["
1: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
B0ugU6xWSjsdTdsc6lsCetm/zVfnkP256vWWQKWGYFh+AXqmMUqyFIhOoul2
MdlvzBPbUsi4bsEuVYFuXzOfVgpRvp/uhdaha3zMpcpAQKQlXbcZbR+if6EM
XqQujLN0oJMYs16UAYuKiCj0kPXfPMsvA5dmNVOHQbRZVe1gGfy+fD1Iehgt
YuvCXA5Wf/xqvo6T81wVsIP+9+aVtTpsEn36IefhcjAW6lYymEWPOPzQL4fa
REaHtQtorUk583JQPbzzI3WZnN/zNutyyK/V+ua0igX/vm4N2JfDXrPbm2VZ
0Yuauk7lED8Vcuo7B3peZ7tDOWz1KHz+Zh3a9pCpTTkE830tN+RHt59aodfn
iGVdZt+EHrHiOlkOHgd2K5RuRevV+hDlsEA7aXNXlLTJfbFysDW5E7tHEn3j
5vCachgef9s7IoNmnan5VgbnXcv4I/aiBQzli8qgmWtMx/gAmua+I6gMTkRw
P+FSQotMRliUQcme/UXlyuik8HS5MlAsNfnjooaWZr40XwqfDN1l5TXRctLZ
+aUQ7lT9LuokWlHfdn8prF871XbmNNp9aHi8BLxf8/OsO0fmm0m+LQGnwovu
blfQGi3yc8XwU+dJjsJ1tKjDhvBisOhPmvxxEx1+/MfhYjBYNW9megdtfy3T
gQrSx32P/OdDzrtLx6YQ3nem35n0Q4fud3EpAKEbHalxL8l+tFw98mHNC9Ht
/O/QZrvdXXJhsDmP6Xcq2Z/YlS2ZEGI2XJrUhvbTefMkFkZuJG1Z343uN3Pg
joaDd27dudOPpgbIvYiEXv9/u9VHSasK/goFubfUp0k/yPndelscCA8THg/x
TqOVHQc4nkNzliblzhy5389bLg9BvJT7dd8CmuEuv/ZNcK5rnlFbIa3s0WYA
VV2vdJNWrUE7jf12AOGR8wm8rGjlGvUHHmAzs4P5DgcZ5+n79QyoDKMX+njQ
1M/ntwcAL2dyntoGtFmBHSUYssQUbXm3oCMGYnXfAuvepSrn7Wg5zgmRSDAh
SsT6xMl8Tyve97BspNWVKIu2Vc3viQV1LzN1tSNoPfkR7mQIDRKLTFRDT+qa
V3yCsYixf+s00ae3teSmgG+ufWqvAdkfzJ9Og5YxL2FnCzTPawvTTBD/o+3U
ew0df8SbJwucV61vVLVG1/M6FmWBsPCbJ+scyfw7ppw5YCNhPuh0Fx3arpCU
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

          "]], 
         LineBox[{{-0.9321548335859634, -0.00005056282126681174}, \
{-0.9291974103169947, -0.00003771022931614576}, {-0.9269025101050807, \
-0.00002747287474144655}, {-0.9246076098931667, -0.00001714205604119723}, \
{-0.9223127096812527, -6.724001230890009*^-6}, {-0.9200178094693388, \
-1.5313764234192728`*^-6}, {-0.9177229092574248, -5.747603594841166*^-6}, \
{-0.9154280090455109, -9.884520300734723*^-6}, {-0.910838208621683, \
-0.000017913586360385203`}, {-0.9085433084097689, -0.00002180252994310461}, \
{-0.906248408197855, -0.000025605749487928042`}, {-0.9016586077740272, \
-0.00003294951667079382}, {-0.8924790069263713, -0.000046552355460777184`}, \
{-0.8901841067144574, -0.00004972091586344374}, {-0.8895555584004097, \
-0.00005056282126681174}}], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQLWG0Prmu5fz+t/2S4uuKhOwr2o7evLv/3H4GBs12
5tn89hV7l2eGlQD5DUHeT8p57Su+dP48pwHkK9hITfPiti9P8pM8MPHsfoYE
vm3zL7HZl9ldj1iUfAaonpNR480vu7LSnS+kJIB8h54vRSLf7MrWzK6YfOY0
0HzDvx26H+3KHtdy8DSC+Evn2hW8sCuVSpjRYgriL5q76/Idu5JAJ42/L08B
+XbJs1QP2pV0qOwonQfi9xXJ6By2K9nP5vEuCMS/UeLw86ZdybcX19PYgfwG
6f2VIk/tSnRPp9/ffRLId9lZIfjWriRl7ffwAiDf4cRUl8pPdsWXCsU9b54A
ygdPjtD7ZVe07leY9urj+xkOXK6LyGWxL3p659nieCDfQVn5gC6bfZHM/jIZ
ESC/YZ2E01N2+8Ku5mm8tceA9t91PGDBbV+QxnPtvd9RIH+1o+Q2AfuCue9S
M5iB/AWHn37LF7TPv3Lh64PtR/YzPDi7ZZGKkP0e9VK/A1OPwMMfAIWevV8=

          "]]},
        Annotation[#, "Charting`Private`Tag$46877155#1"]& ]}, {}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{0, 0},
     DisplayFunction->Identity,
     Frame->{{False, False}, {False, False}},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     ImagePadding->All,
     Method->{
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}},
     PlotRange->{{-2, 5}, {-0.00005056282126681174, 0.00007037341654264591}},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.819737740931988*^9, 3.819737775244165*^9, 
  3.819737805813043*^9, 3.819737848286536*^9, 3.8197384352570744`*^9, 
  3.819738503492104*^9, 3.819802799932559*^9, 3.81980344650524*^9, 
  3.81982883356427*^9, 3.81982904527461*^9, 3.819867015612417*^9, 
  3.819869152410224*^9, 3.82034308026435*^9, 3.8203897260584497`*^9, 
  3.820426644536087*^9},
 CellLabel->
  "Out[940]=",ExpressionUUID->"f1c524f5-23a5-4af0-972c-618f74d6258d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Fi", "[", "x", "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "2"}], ",", "5"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.819737791947177*^9, 3.819737817103397*^9}, {
  3.819738427090166*^9, 3.819738427391645*^9}},
 CellLabel->
  "In[941]:=",ExpressionUUID->"86b4d5f6-07d6-46bf-ba25-e5bbe6bbc62a"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"0.019039`", ",", 
    GraphicsBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJwVznk01AsbB3AhlBKmRd4s2ZMt6mrj+UUkSwsiXUvIFuK1C2UJNRFSqrEm
ayYJRcJTUdqoS0VZ6s4pQs0wGGPMmHfeP57zPZ/zPd9zns1eIfY+wkJCQo8E
9//MoVd84fP5qD21KWDrDjO4MGtau32ej6VkCdumNDOI4nxODqDz0XAd6yvp
qxmcEBPX6RviY5pvaIJjmjmoKPqdq3jMR/Yfkgt5bj+sVePbD9bxUZhHKBs6
WYCY9g1N6So+Kn4svfap2QImdnR9iM3jY65l0XL1C5ZQb6epahfOx3CDiox4
Iysoc8D5pNN8VImo2XezzAryXJzfPfLk4y9nufKvGw7CWZ/0SOUjfGwOfD7/
S9QazBLGumZ0+JjUfOnI8wUb6KVWBlFGl/CieQs7c8sR6KyHfe+Hl9Bwd/T7
3Igj8Ki5f53opyWcGKAs9T89ApROcQzuWEJyp5eGhttR8Bryk9lXsoSXD0mN
qJXbA1NS69GYyxI+4+UvLY88BqTAKv72bh4eiUtg8Fv+hp2bpGOpHTycZe97
oLXRFdy7o5mqLTx0tYg6YhbrCnf1D/yUreShWsYP00BwA2L255upREFf0Jd0
6Yc7+Jbb7feP5qHB37Kf9Bw84LLTw7ZvwTz8Hai7Q7LTAz43X6jrOcFDS6/+
jZZOJyEoQTWPup2HVKk/fr22nnBV7/Iata08XKIsbojP9ISmb8yL+Zt52Juj
53vqvScImz2PI0vx8O63IX9hZy+4Kebp6f+Li1f/Pf6VHukNnVlFOmoFXHSv
blt+kuUDE4RYRf5VLoY1Pl1cZucLa5jBSqRLXFS854ha5b5wwtFEVjiKi9/T
V+5Zf8IPpuSG5r8d5iL5VU3/5Gd/WP/G/L/OllyMUN++Wn93AOyJq5no2cvF
tAciWvLFAZA2fHa4bQsXq6Idbi0EnwaF0o0d+SJcTL7dYHJcOQjMHJL2kjiL
WOoaHnosJwj8RccfkqcW0emiQYmCaDA0+jZXxQ4vYoj9uWRlRjBYb3W+4ty0
iO/yfNQDB0MgqvGaCylwEWOWbzGNlAiDnyFtmTpeiyhNod5MtwkDx62jzyxc
BPsE9aTErDAwLDXWjjmwiP7vHJR15cOBnvWVM6S6iKY92nl3dkeAb6ByQcUQ
B6mxoo7Xq6Pgk8bBD9jHwXLTpg+ji1Gwn/Zf0S9vODjw7J+gPYejQcWlI0jy
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

          "]]},
        Annotation[#, "Charting`Private`Tag$46907028#1"]& ]}, {}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{0, 0},
     DisplayFunction->Identity,
     Frame->{{False, False}, {False, False}},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     ImagePadding->All,
     Method->{
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}},
     PlotRange->{{-2, 5}, {0., 0.9986784112577811}},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.819737848396221*^9, 3.819738435368908*^9, 
  3.819738503590247*^9, 3.819802800011828*^9, 3.819803446715859*^9, 
  3.819828833691389*^9, 3.819829045382369*^9, 3.819867015776664*^9, 
  3.819869152459682*^9, 3.8203430804638*^9, 3.820389726299676*^9, 
  3.820426644659827*^9},
 CellLabel->
  "Out[941]=",ExpressionUUID->"f3911d2f-be43-43cc-aa9f-7571586c42b2"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"\[Alpha]", ",", "\[Beta]", ",", "\[Delta]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Beta]", "=", 
   RowBox[{"\[Alpha]", "-", "1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"NSolve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Delta]", "/", 
       RowBox[{"\[Delta]s", "[", 
        RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}]}], "\[Equal]", "0.2"}], 
     ",", "\[Delta]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]", "=", 
   RowBox[{"\[Delta]", "/.", 
    RowBox[{"sol", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}],
   ";"}]}], "Input",
 CellChangeTimes->{{3.819803048730143*^9, 3.819803140392355*^9}, {
  3.8198031878663387`*^9, 3.8198031925259237`*^9}, {3.8198174166777563`*^9, 
  3.819817416679809*^9}},
 CellLabel->
  "In[942]:=",ExpressionUUID->"270fd1b9-7ded-4d67-9747-9605abecce4e"],

Cell[BoxData[
 RowBox[{"Clear", "[", "Rho", "]"}]], "Input",
 CellChangeTimes->{{3.81986934266689*^9, 3.81986934584167*^9}},
 CellLabel->
  "In[947]:=",ExpressionUUID->"aca100fa-c0d5-481e-ab1b-46e5b660fdff"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Rho", "[", 
   RowBox[{
    RowBox[{"\[Alpha]_", "?", "NumericQ"}], ",", 
    RowBox[{"\[Beta]_", "?", "NumericQ"}], ",", 
    RowBox[{"\[Delta]_", "?", "NumericQ"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Mu]1", ",", "\[Delta]1", ",", "Fi"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Mu]1", "=", 
      RowBox[{"\[Mu]s", "[", 
       RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Delta]1", "=", 
      RowBox[{"\[Delta]s", "[", 
       RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Fi", "=", 
      RowBox[{"FNIGi", "[", 
       RowBox[{"\[Alpha]", ",", "\[Beta]", ",", "\[Mu]1", ",", 
        RowBox[{"\[Delta]1", "-", "\[Delta]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"12", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Fi", "[", 
           RowBox[{"x", "-", "z"}], "]"}], " ", 
          RowBox[{"Fi", "[", 
           RowBox[{"y", "-", "z"}], "]"}], " ", 
          RowBox[{"fNIG", "[", 
           RowBox[{
           "z", ",", "\[Alpha]", ",", "\[Beta]", ",", "0", ",", "\[Delta]"}], 
           "]"}], 
          RowBox[{"NIGPDF", "[", 
           RowBox[{"x", ",", "\[Alpha]", ",", "\[Beta]"}], "]"}], " ", 
          RowBox[{"NIGPDF", "[", 
           RowBox[{"y", ",", "\[Alpha]", ",", "\[Beta]"}], "]"}]}], ",", " ", 
         
         RowBox[{"{", 
          RowBox[{"z", ",", 
           RowBox[{"-", "\[Infinity]"}], ",", " ", "\[Infinity]"}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"-", "\[Infinity]"}], ",", " ", "\[Infinity]"}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", 
           RowBox[{"-", "\[Infinity]"}], ",", " ", "\[Infinity]"}], "}"}], 
         ",", 
         RowBox[{"PrecisionGoal", "\[Rule]", "2"}]}], "]"}]}], "-", "3"}]}]}],
    "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.8195181113543053`*^9, 3.819518179961141*^9}, {
   3.819521752012765*^9, 3.819521803476323*^9}, {3.819522175545599*^9, 
   3.819522187908402*^9}, {3.8195224461188517`*^9, 3.819522451398994*^9}, {
   3.8195467661008472`*^9, 3.8195469191680937`*^9}, {3.819625604601119*^9, 
   3.819625619818672*^9}, {3.819734929169793*^9, 3.819734993174328*^9}, {
   3.819735112529951*^9, 3.819735115638834*^9}, {3.819736610165099*^9, 
   3.819736638769079*^9}, {3.81973811743257*^9, 3.819738176084696*^9}, {
   3.819738234995644*^9, 3.8197382468383904`*^9}, 3.819738283778955*^9, {
   3.8197383385956793`*^9, 3.819738351866726*^9}, {3.819822479611168*^9, 
   3.81982248416646*^9}, {3.819823593240717*^9, 3.819823596031711*^9}, 
   3.819823690762929*^9, {3.8198698741708527`*^9, 3.8198698819015503`*^9}},
 CellLabel->
  "In[948]:=",ExpressionUUID->"47542a3c-85a9-4455-b9e8-3507b6514730"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Rho", "[", 
   RowBox[{"\[Alpha]", ",", "\[Beta]", ",", "\[Delta]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.819735877813394*^9, 3.819735889830868*^9}, {
  3.819817423829784*^9, 3.819817425524651*^9}},
 CellLabel->
  "In[949]:=",ExpressionUUID->"ba6e5be2-7a40-400b-add4-3e14e2ddebea"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"1.319414`", ",", "0.18104997758692765`"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.819736151939748*^9, 3.819736694556099*^9, 3.819736961710187*^9, 
   3.8197381661587887`*^9, 3.819738201605915*^9, {3.819738249952627*^9, 
   3.819738382306879*^9}, {3.819739084634708*^9, 3.8197391349897223`*^9}, 
   3.819803448791891*^9, {3.819817436344594*^9, 3.819817441357111*^9}, {
   3.819823695161586*^9, 3.819823705567911*^9}, 3.819828836236539*^9, 
   3.819829048214992*^9, 3.819867018422387*^9, 3.8198691551980753`*^9, {
   3.819869349722926*^9, 3.8198693606833467`*^9}, {3.819869884446385*^9, 
   3.81986989051152*^9}, 3.820343082116377*^9, 3.820389727994979*^9, 
   3.820426646086583*^9},
 CellLabel->
  "Out[949]=",ExpressionUUID->"5ade394f-d0f9-4697-89b9-ef85379abc46"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Quantile dependence", "Subsection",
 CellChangeTimes->{{3.81980328044744*^9, 
  3.8198032976402187`*^9}},ExpressionUUID->"68836dd2-ab21-4da1-a29e-\
0c038e5f54b6"],

Cell["Speed up copula function by reducing precision", "Text",
 CellChangeTimes->{{3.819806101589385*^9, 
  3.819806124279887*^9}},ExpressionUUID->"9a408d62-9fb0-4dd4-898a-\
ca6d71d6814d"],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"F2NIG2", ",", " ", "QD", ",", " ", "CNIG2"}], "]"}]], "Input",
 CellChangeTimes->{{3.8198237090887537`*^9, 3.819823711535408*^9}, {
  3.819867553838355*^9, 3.8198675557907457`*^9}},
 CellLabel->
  "In[950]:=",ExpressionUUID->"eb220b3c-f401-487d-903c-704da5c71130"],

Cell[BoxData[
 RowBox[{
  RowBox[{"F2NIG2", "[", 
   RowBox[{
    RowBox[{"x_", "?", "NumericQ"}], ",", 
    RowBox[{"y_", "?", "NumericQ"}], ",", 
    RowBox[{"\[Alpha]_", "?", "NumericQ"}], ",", 
    RowBox[{"\[Beta]_", "?", "NumericQ"}], ",", 
    RowBox[{"\[Mu]1_", "?", "NumericQ"}], ",", 
    RowBox[{"\[Delta]_", "?", "NumericQ"}], ",", 
    RowBox[{"\[Delta]1_", "?", "NumericQ"}]}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"F1", ",", "a", ",", "b"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"F1", "=", 
      RowBox[{"FNIGi", "[", 
       RowBox[{"\[Alpha]", ",", "\[Beta]", ",", "\[Mu]1", ",", "\[Delta]1"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"F1", "[", 
         RowBox[{"x", "-", "z"}], "]"}], 
        RowBox[{"F1", "[", 
         RowBox[{"y", "-", "z"}], "]"}], "  ", 
        RowBox[{"fNIG", "[", 
         RowBox[{
         "z", ",", "\[Alpha]", ",", "\[Beta]", ",", "0", ",", "\[Delta]"}], 
         "]"}]}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"z", ",", 
         RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
       RowBox[{"PrecisionGoal", "\[Rule]", "2"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.819519289105919*^9, 3.8195193269159927`*^9}, {
  3.819519413125264*^9, 3.819519484217794*^9}, {3.81951988838881*^9, 
  3.819519892439076*^9}, {3.8195201195848618`*^9, 3.819520125477846*^9}, {
  3.819806007294449*^9, 3.819806011632511*^9}, {3.8198064611351*^9, 
  3.819806462944315*^9}, {3.819806601113714*^9, 3.8198066339162693`*^9}, {
  3.8198067138315697`*^9, 3.819806764073468*^9}, {3.8198067999203577`*^9, 
  3.819806855925569*^9}, {3.81980728820545*^9, 3.819807298415759*^9}, {
  3.819807418381255*^9, 3.819807437799156*^9}, {3.81982362646393*^9, 
  3.8198236360360403`*^9}, {3.8198675245079823`*^9, 3.81986752774839*^9}, {
  3.819867864015051*^9, 3.8198678684615517`*^9}},
 CellLabel->
  "In[951]:=",ExpressionUUID->"e3e0a41b-880c-48f3-aeb0-16092de9a5cd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"F2NIG2", "[", 
   RowBox[{
    RowBox[{"x_", "?", "NumericQ"}], ",", 
    RowBox[{"y_", "?", "NumericQ"}], ",", 
    RowBox[{"\[Alpha]_", "?", "NumericQ"}], ",", 
    RowBox[{"\[Beta]_", "?", "NumericQ"}], ",", 
    RowBox[{"\[Mu]1_", "?", "NumericQ"}], ",", 
    RowBox[{"\[Delta]_", "?", "NumericQ"}], ",", 
    RowBox[{"\[Delta]1_", "?", "NumericQ"}], ",", " ", "F1_"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"F1", "=", 
       RowBox[{"FNIGi", "[", 
        RowBox[{"\[Alpha]", ",", "\[Beta]", ",", "\[Mu]1", ",", "\[Delta]1"}],
         "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"F1", "[", 
        RowBox[{"x", "-", "z"}], "]"}], 
       RowBox[{"F1", "[", 
        RowBox[{"y", "-", "z"}], "]"}], "  ", 
       RowBox[{"fNIG", "[", 
        RowBox[{
        "z", ",", "\[Alpha]", ",", "\[Beta]", ",", "0", ",", "\[Delta]"}], 
        "]"}]}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"z", ",", 
        RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
      RowBox[{"PrecisionGoal", "\[Rule]", "2"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.819519289105919*^9, 3.8195193269159927`*^9}, {
  3.819519413125264*^9, 3.819519484217794*^9}, {3.81951988838881*^9, 
  3.819519892439076*^9}, {3.8195201195848618`*^9, 3.819520125477846*^9}, {
  3.819806007294449*^9, 3.819806011632511*^9}, {3.8198064611351*^9, 
  3.819806462944315*^9}, {3.819806601113714*^9, 3.8198066339162693`*^9}, {
  3.8198067138315697`*^9, 3.819806764073468*^9}, {3.8198067999203577`*^9, 
  3.819806855925569*^9}, {3.81980728820545*^9, 3.819807298415759*^9}, {
  3.819807418381255*^9, 3.819807437799156*^9}, {3.81982362646393*^9, 
  3.8198236360360403`*^9}, {3.8198675245079823`*^9, 3.81986752774839*^9}, {
  3.819867864015051*^9, 3.8198678684615517`*^9}, {3.819867916644662*^9, 
  3.819867951727518*^9}, {3.819867989772142*^9, 3.819867990987503*^9}},
 CellLabel->
  "In[952]:=",ExpressionUUID->"2b8e21aa-61e6-4b99-a314-ce3494fca39a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Timing", "[", 
    RowBox[{"F2NIG", "[", 
     RowBox[{
     "0", ",", "0", ",", "5", ",", "0", ",", "0", ",", "0", ",", "1", ",", 
      "1", ",", "1"}], "]"}], "]"}], ",", " ", 
   RowBox[{"Timing", "[", 
    RowBox[{"F2NIG2", "[", 
     RowBox[{
     "0", ",", "0", ",", "5", ",", "0", ",", "0", ",", "1", ",", "1"}], "]"}],
     "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.819806014963282*^9, 3.819806084277236*^9}, {
  3.8198069311499357`*^9, 3.819806951509453*^9}, {3.819867583421425*^9, 
  3.819867585944745*^9}, {3.819867901577136*^9, 3.819867903511463*^9}},
 CellLabel->
  "In[953]:=",ExpressionUUID->"55efa086-575f-4849-959a-555b94601135"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2.369386`", "0.33333333333790505`"},
     {"1.16867`", "0.33332694551996006`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.819806088247965*^9, 3.819806468802452*^9, 3.819806638915154*^9, {
   3.819806792644305*^9, 3.819806815787095*^9}, 3.819806876183002*^9, 
   3.819806955414073*^9, 3.819807305702797*^9, 3.81982365804381*^9, 
   3.819828840179274*^9, 3.819829052177153*^9, 3.819867022322555*^9, {
   3.819867560531713*^9, 3.819867588727541*^9}, {3.819867896079773*^9, 
   3.819867907730995*^9}, 3.81986795998967*^9, 3.8198691592439547`*^9, 
   3.820343086415471*^9, 3.820389732094124*^9, 3.820426649728134*^9},
 CellLabel->
  "Out[953]=",ExpressionUUID->"c340375b-0199-4890-80fc-bad1a0215891"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"Clear", "[", "F1", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F1", "=", 
   RowBox[{"FNIGi", "[", 
    RowBox[{"5", ",", "1", ",", "0", ",", "1"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.819868024753722*^9, 3.819868025793189*^9}, {
  3.81986817610513*^9, 3.819868189337946*^9}},
 CellLabel->
  "In[954]:=",ExpressionUUID->"bf4a6894-1758-450e-ab28-a91a207c6eca"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Timing", "[", 
    RowBox[{"F2NIG", "[", 
     RowBox[{
     "0", ",", "0", ",", "5", ",", "1", ",", "0", ",", "0", ",", "1", ",", 
      "1", ",", "1"}], "]"}], "]"}], ",", " ", 
   RowBox[{"Timing", "[", 
    RowBox[{"F2NIG2", "[", 
     RowBox[{
     "0", ",", "0", ",", "5", ",", "1", ",", "0", ",", "1", ",", "1", ",", 
      "F1"}], "]"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.819806014963282*^9, 3.819806084277236*^9}, {
  3.8198069311499357`*^9, 3.819806969187812*^9}, {3.819867976600874*^9, 
  3.819867977552045*^9}},
 CellLabel->
  "In[956]:=",ExpressionUUID->"214c1a61-c28d-46a4-b0c7-612bcc1d316e"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2.807277`", "0.13066010368419123`"},
     {"0.207267`", "0.1306599156380405`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.819867578454727*^9, {3.819867980741088*^9, 3.8198679990129223`*^9}, 
   3.8198681940999327`*^9, 3.819869163981482*^9, 3.820343091363933*^9, 
   3.8203897369927673`*^9, 3.820426653972809*^9},
 CellLabel->
  "Out[956]=",ExpressionUUID->"830c1b31-73d6-4fbf-bc0a-dd074ec24340"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Timing", "[", 
    RowBox[{"F2NIG", "[", 
     RowBox[{
     "0", ",", "0", ",", "5", ",", "1", ",", "0", ",", "0", ",", "1", ",", 
      "1", ",", "1"}], "]"}], "]"}], ",", " ", 
   RowBox[{"Timing", "[", 
    RowBox[{"F2NIG2", "[", 
     RowBox[{
     "0", ",", "0", ",", "5", ",", "1", ",", "0", ",", "1", ",", "1"}], "]"}],
     "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.819806014963282*^9, 3.819806084277236*^9}, {
  3.8198069311499357`*^9, 3.819806969187812*^9}},
 CellLabel->
  "In[957]:=",ExpressionUUID->"59f90e50-7f35-490a-90c6-d44f8cca0f98"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2.794864`", "0.13066010368419123`"},
     {"1.311333`", "0.1306599156380405`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.819806973342342*^9, 3.819807309697803*^9, 
  3.819823665530532*^9, 3.819828844405568*^9, 3.819829056514227*^9, 
  3.819867026837213*^9, 3.81986916861407*^9, 3.820343096215578*^9, 
  3.820389741740484*^9, 3.820426658158297*^9},
 CellLabel->
  "Out[957]=",ExpressionUUID->"661d6d73-01b6-44fa-b920-ec24d21759a9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"Timing", "[", 
   RowBox[{"F2NIG2", "[", 
    RowBox[{
    "0", ",", "0.5", ",", "5", ",", "1", ",", "0", ",", "1", ",", "1"}], 
    "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.819806014963282*^9, 3.819806084277236*^9}, {
  3.8198069311499357`*^9, 3.819806969187812*^9}, {3.8198166309888973`*^9, 
  3.819816666137176*^9}, {3.819868058926683*^9, 3.819868066078223*^9}},
 CellLabel->
  "In[958]:=",ExpressionUUID->"a6728d1e-83ed-423b-b5ba-d39686ed6c48"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"1.515992`", ",", "0.2139682489413956`"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.8198166460127697`*^9, 3.819816667547194*^9}, 
   3.819828844489141*^9, 3.819829056548986*^9, 3.819867026903311*^9, 
   3.819868067944229*^9, 3.819869170342472*^9, 3.820343098064074*^9, 
   3.8203897436094103`*^9, 3.820426659705797*^9},
 CellLabel->
  "Out[958]=",ExpressionUUID->"d7a40c18-06fb-438f-b60e-b6008a1884f1"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"CNIG2", "[", 
   RowBox[{
    RowBox[{"u_", "?", "NumericQ"}], ",", 
    RowBox[{"v_", "?", "NumericQ"}], ",", 
    RowBox[{"\[Alpha]_", "?", "NumericQ"}], ",", 
    RowBox[{"\[Beta]_", "?", "NumericQ"}], ",", 
    RowBox[{"\[Delta]_", "?", "NumericQ"}]}], "]"}], ":=", 
  RowBox[{"F2NIG2", "[", 
   RowBox[{
    RowBox[{"NIGInv", "[", 
     RowBox[{"u", ",", "\[Alpha]", ",", "\[Beta]"}], "]"}], ",", 
    RowBox[{"NIGInv", "[", 
     RowBox[{"v", ",", "\[Alpha]", ",", "\[Beta]"}], "]"}], ",", "\[Alpha]", 
    ",", "\[Beta]", ",", 
    RowBox[{"N", "[", 
     RowBox[{"\[Mu]s", "[", 
      RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], "]"}], ",", "\[Delta]", 
    ",", 
    RowBox[{
     RowBox[{"N", "[", 
      RowBox[{"\[Delta]s", "[", 
       RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], "]"}], "-", 
     "\[Delta]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.819518189338543*^9, 3.819518220859734*^9}, {
  3.8195192861290417`*^9, 3.819519287127159*^9}, {3.8195197771142273`*^9, 
  3.819519778007903*^9}, {3.819519813861994*^9, 3.819519885822287*^9}, {
  3.8195201301879177`*^9, 3.8195201525517807`*^9}, {3.819520236266234*^9, 
  3.819520249415814*^9}, {3.819520383316399*^9, 3.8195203885049353`*^9}, {
  3.819520456056508*^9, 3.81952049414478*^9}, {3.8195211925109873`*^9, 
  3.8195212000199633`*^9}, {3.8195227496475782`*^9, 3.819522755003859*^9}, {
  3.819558072321418*^9, 3.8195580935184937`*^9}, {3.819558994717226*^9, 
  3.819558995577005*^9}, {3.8198061385896797`*^9, 3.819806143955283*^9}, {
  3.819806859521715*^9, 3.8198068656597843`*^9}, {3.819807380740391*^9, 
  3.819807386273698*^9}, {3.819823718445403*^9, 3.819823725966091*^9}, {
  3.819867497901802*^9, 3.819867503271834*^9}, {3.8198680861420097`*^9, 
  3.819868089598827*^9}},
 CellLabel->
  "In[959]:=",ExpressionUUID->"18463817-38b1-4ec2-bce1-dfae88565416"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CNIG2", "[", 
   RowBox[{
    RowBox[{"u_", "?", "NumericQ"}], ",", 
    RowBox[{"v_", "?", "NumericQ"}], ",", 
    RowBox[{"\[Alpha]_", "?", "NumericQ"}], ",", 
    RowBox[{"\[Beta]_", "?", "NumericQ"}], ",", 
    RowBox[{"\[Delta]_", "?", "NumericQ"}], ",", " ", "F1_"}], "]"}], ":=", 
  RowBox[{"F2NIG2", "[", 
   RowBox[{
    RowBox[{"NIGInv", "[", 
     RowBox[{"u", ",", "\[Alpha]", ",", "\[Beta]"}], "]"}], ",", 
    RowBox[{"NIGInv", "[", 
     RowBox[{"v", ",", "\[Alpha]", ",", "\[Beta]"}], "]"}], ",", "\[Alpha]", 
    ",", "\[Beta]", ",", 
    RowBox[{"N", "[", 
     RowBox[{"\[Mu]s", "[", 
      RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], "]"}], ",", "\[Delta]", 
    ",", 
    RowBox[{
     RowBox[{"N", "[", 
      RowBox[{"\[Delta]s", "[", 
       RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], "]"}], "-", "\[Delta]"}], 
    ",", "F1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.819518189338543*^9, 3.819518220859734*^9}, {
  3.8195192861290417`*^9, 3.819519287127159*^9}, {3.8195197771142273`*^9, 
  3.819519778007903*^9}, {3.819519813861994*^9, 3.819519885822287*^9}, {
  3.8195201301879177`*^9, 3.8195201525517807`*^9}, {3.819520236266234*^9, 
  3.819520249415814*^9}, {3.819520383316399*^9, 3.8195203885049353`*^9}, {
  3.819520456056508*^9, 3.81952049414478*^9}, {3.8195211925109873`*^9, 
  3.8195212000199633`*^9}, {3.8195227496475782`*^9, 3.819522755003859*^9}, {
  3.819558072321418*^9, 3.8195580935184937`*^9}, {3.819558994717226*^9, 
  3.819558995577005*^9}, {3.8198061385896797`*^9, 3.819806143955283*^9}, {
  3.819806859521715*^9, 3.8198068656597843`*^9}, {3.819807380740391*^9, 
  3.819807386273698*^9}, {3.819823718445403*^9, 3.819823725966091*^9}, {
  3.819867497901802*^9, 3.819867503271834*^9}, {3.8198680861420097`*^9, 
  3.8198681210647783`*^9}},
 CellLabel->
  "In[960]:=",ExpressionUUID->"c8dd7ca8-73d4-4e7a-9647-2344652ee07b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Timing", "[", 
    RowBox[{"CNIG", "[", 
     RowBox[{"0.5", ",", "0.2", ",", "5", ",", "1", ",", "1"}], "]"}], "]"}], 
   ",", " ", 
   RowBox[{"Timing", "[", 
    RowBox[{"CNIG2", "[", 
     RowBox[{"0.5", ",", " ", "0.2", ",", " ", "5", ",", "1", ",", "1"}], 
     "]"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.819806145460721*^9, 3.819806173623905*^9}, {
  3.8198069102025127`*^9, 3.819806922193555*^9}},
 CellLabel->
  "In[961]:=",ExpressionUUID->"25834616-70c1-4651-bf36-ea8b4a65dc9e"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"4.288205`", "0.12344306848504849`"},
     {"1.233831`", "0.12344505580377246`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.8198061790095463`*^9, 3.819806881359993*^9, 3.819806927388659*^9, {
   3.819807401468657*^9, 3.819807431116255*^9}, 3.819816740377598*^9, 
   3.8198288503265343`*^9, 3.8198290622923098`*^9, 3.8198670333444977`*^9, 
   3.8198680992431707`*^9, 3.819868131375306*^9, 3.819869176887948*^9, 
   3.820343104614436*^9, 3.8203897500353107`*^9, 3.820426665306182*^9},
 CellLabel->
  "Out[961]=",ExpressionUUID->"40e30b05-31a3-4e96-8849-e9931146a7dd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"F1", "=", 
    RowBox[{"FNIGi", "[", 
     RowBox[{"5", ",", "1", ",", 
      RowBox[{"\[Mu]s", "[", 
       RowBox[{"5", ",", "1"}], "]"}], ",", 
      RowBox[{
       RowBox[{"\[Delta]s", "[", 
        RowBox[{"5", ",", "1"}], "]"}], "-", "1"}]}], "]"}]}], ";"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.819868142229245*^9, 3.819868154746846*^9}, {
  3.819868198980146*^9, 3.819868200491823*^9}, {3.819868246054645*^9, 
  3.819868248505289*^9}, {3.819868344497655*^9, 3.819868369942237*^9}},
 CellLabel->
  "In[962]:=",ExpressionUUID->"a0df2ab3-0230-4538-8ae2-6c8c7b8e097d"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"0.782073`", ",", "Null"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.819868371008506*^9, 3.8198691777896757`*^9, 
  3.820343105664116*^9, 3.820389750950117*^9, 3.820426666156013*^9},
 CellLabel->
  "Out[962]=",ExpressionUUID->"83410a4d-12a2-41fe-bb25-8f873842c3f2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Timing", "[", 
    RowBox[{"CNIG2", "[", 
     RowBox[{"0.5", ",", "0.2", ",", "5", ",", "1", ",", "1"}], "]"}], "]"}], 
   ",", " ", 
   RowBox[{"Timing", "[", 
    RowBox[{"CNIG2", "[", 
     RowBox[{
     "0.5", ",", " ", "0.2", ",", " ", "5", ",", "1", ",", "1", ",", "F1"}], 
     "]"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.819806145460721*^9, 3.819806173623905*^9}, {
   3.8198069102025127`*^9, 3.819806922193555*^9}, {3.819868126856941*^9, 
   3.8198681304722977`*^9}, 3.8198682157258987`*^9},
 CellLabel->
  "In[963]:=",ExpressionUUID->"4537a2ed-6620-46a0-813c-f3e9f450cd21"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1.227666`", "0.12344505580377246`"},
     {"0.430044`", "0.12344505580377246`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.8198681364023046`*^9, {3.819868210661747*^9, 3.819868217735856*^9}, 
   3.819868251647518*^9, {3.819868357256342*^9, 3.8198683737789707`*^9}, 
   3.8198691796353292`*^9, 3.820343107714329*^9, 3.82038975289925*^9, 
   3.820426667817196*^9},
 CellLabel->
  "Out[963]=",ExpressionUUID->"3ad876e7-65bc-4c64-828c-67b761a61b0a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"CNIG2", "[", 
     RowBox[{"0.5", ",", "k", ",", " ", "5", ",", "1", ",", "1", ",", "F1"}], 
     "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"k", ",", 
      RowBox[{"{", 
       RowBox[{"0.1", ",", " ", "0.2"}], "}"}]}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.819806145460721*^9, 3.819806173623905*^9}, {
  3.8198069102025127`*^9, 3.819806922193555*^9}, {3.819816734859906*^9, 
  3.819816758520204*^9}, {3.819868586090678*^9, 3.819868608345832*^9}},
 CellLabel->
  "In[964]:=",ExpressionUUID->"bb2bb86f-e078-47a0-9c50-904b1ea0b033"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"0.884279`", ",", 
    RowBox[{"{", 
     RowBox[{"0.0645138257047425`", ",", "0.12344505580377246`"}], "}"}]}], 
   "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.81981674407028*^9, 3.819816759896042*^9}, 
   3.819828850429277*^9, 3.819829062336748*^9, 3.819867033377159*^9, {
   3.819868605307604*^9, 3.819868609497632*^9}, 3.819869180615857*^9, 
   3.82034310881592*^9, 3.820389753919319*^9, 3.820426668768867*^9},
 CellLabel->
  "Out[964]=",ExpressionUUID->"452275d7-d4b9-4245-92cd-db252339aa42"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"CNIG2", "[", 
     RowBox[{"0.5", ",", "0.1", ",", " ", "5", ",", "1", ",", "1"}], "]"}], 
    ",", 
    RowBox[{"CNIG2", "[", 
     RowBox[{"0.5", ",", "0.2", ",", " ", "5", ",", "1", ",", "1"}], "]"}]}], 
   "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.819806145460721*^9, 3.819806173623905*^9}, {
  3.8198069102025127`*^9, 3.819806922193555*^9}, {3.819816734859906*^9, 
  3.8198167775326767`*^9}, {3.81986862495618*^9, 3.8198686311887083`*^9}},
 CellLabel->
  "In[965]:=",ExpressionUUID->"788eeb90-cf8b-47fd-aa81-47af25265667"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"2.466675`", ",", 
    RowBox[{"{", 
     RowBox[{"0.0645138257047425`", ",", "0.12344505580377246`"}], "}"}]}], 
   "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.819816778771134*^9, 3.819828851714344*^9, 
  3.819829063697804*^9, 3.819867034849189*^9, 3.819868633986919*^9, 
  3.8198691832137947`*^9, 3.8203431117148*^9, 3.8203897565251102`*^9, 
  3.820426671237414*^9},
 CellLabel->
  "Out[965]=",ExpressionUUID->"4860ea29-f136-4aa3-95ca-d9f4307233cc"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"QD", "[", 
   RowBox[{
    RowBox[{"q_", "?", "NumericQ"}], ",", 
    RowBox[{"\[Alpha]_", "?", "NumericQ"}], ",", 
    RowBox[{"\[Beta]_", "?", "NumericQ"}], ",", 
    RowBox[{"\[Delta]_", "?", "NumericQ"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"cn", ",", "k"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"0", "<", "q", "\[LessEqual]", "0.5"}], ",", " ", 
      RowBox[{
       RowBox[{"CNIG2", "[", 
        RowBox[{
        "q", ",", "q", ",", "\[Alpha]", ",", "\[Beta]", ",", "\[Delta]"}], 
        "]"}], "/", "q"}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"2", "q"}], "+", " ", 
         RowBox[{"CNIG2", "[", 
          RowBox[{
          "q", ",", "q", ",", "\[Alpha]", ",", "\[Beta]", ",", "\[Delta]"}], 
          "]"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"1", "-", "q"}], ")"}]}]}], "]"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.81980450583208*^9, 3.819804553216284*^9}, {
  3.819804687657542*^9, 3.8198047616195803`*^9}, {3.819804804678753*^9, 
  3.819804804918667*^9}, {3.819806184638261*^9, 3.819806186308365*^9}, {
  3.819816808189499*^9, 3.81981689815062*^9}, {3.819816941530897*^9, 
  3.819817059702691*^9}, {3.8198237385146217`*^9, 3.819823743488731*^9}, {
  3.819867179778172*^9, 3.8198671922040243`*^9}, {3.81986863591418*^9, 
  3.8198686916147423`*^9}},
 CellLabel->
  "In[966]:=",ExpressionUUID->"7716b04b-f26d-4175-b3ed-90fa39e06b50"],

Cell[BoxData[
 RowBox[{
  RowBox[{"QD", "[", 
   RowBox[{
    RowBox[{"q_", "?", "NumericQ"}], ",", 
    RowBox[{"\[Alpha]_", "?", "NumericQ"}], ",", 
    RowBox[{"\[Beta]_", "?", "NumericQ"}], ",", 
    RowBox[{"\[Delta]_", "?", "NumericQ"}], ",", " ", "F1_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"cn", ",", "k"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"0", "<", "q", "\[LessEqual]", "0.5"}], ",", " ", 
      RowBox[{
       RowBox[{"CNIG2", "[", 
        RowBox[{
        "q", ",", "q", ",", "\[Alpha]", ",", "\[Beta]", ",", "\[Delta]", ",", 
         "F1"}], "]"}], "/", "q"}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"2", "q"}], "+", " ", 
         RowBox[{"CNIG2", "[", 
          RowBox[{
          "q", ",", "q", ",", "\[Alpha]", ",", "\[Beta]", ",", "\[Delta]", 
           ",", "F1"}], "]"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"1", "-", "q"}], ")"}]}]}], "]"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.81980450583208*^9, 3.819804553216284*^9}, {
  3.819804687657542*^9, 3.8198047616195803`*^9}, {3.819804804678753*^9, 
  3.819804804918667*^9}, {3.819806184638261*^9, 3.819806186308365*^9}, {
  3.819816808189499*^9, 3.81981689815062*^9}, {3.819816941530897*^9, 
  3.819817059702691*^9}, {3.8198237385146217`*^9, 3.819823743488731*^9}, {
  3.819867179778172*^9, 3.8198671922040243`*^9}, {3.81986863591418*^9, 
  3.819868652256215*^9}, {3.819868703278591*^9, 3.819868724834214*^9}},
 CellLabel->
  "In[967]:=",ExpressionUUID->"fd0e64af-be12-4343-9afa-d7b352caaa2b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"QD", "[", 
   RowBox[{"0.1", ",", " ", "5", ",", "2", ",", "1"}], "]"}], "]"}]], "Input",\

 CellChangeTimes->{{3.819805751159234*^9, 3.819805759311998*^9}},
 CellLabel->
  "In[968]:=",ExpressionUUID->"510d534d-ea5d-4622-b34d-d1b72d9de7bd"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"1.232714`", ",", "0.19434503170344974`"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.819805762373126*^9, 3.819806188321129*^9, 3.81980688801801*^9, 
   3.819807441565406*^9, 3.8198169014826612`*^9, {3.819816945390411*^9, 
   3.8198169560352707`*^9}, {3.8198170379076633`*^9, 3.8198170617103357`*^9}, 
   3.819828854283782*^9, 3.819829066285087*^9, 3.8198670375879917`*^9, {
   3.8198672038599863`*^9, 3.8198672100144663`*^9}, 3.819867540334237*^9, 
   3.819868728554349*^9, 3.819869184399815*^9, 3.820343113025717*^9, 
   3.8203897577807703`*^9, 3.820426672576277*^9},
 CellLabel->
  "Out[968]=",ExpressionUUID->"04479335-7706-40db-a119-a984b8556160"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"Clear", "[", "F1", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F1", "=", 
   RowBox[{"FNIGi", "[", 
    RowBox[{"5", ",", "2", ",", 
     RowBox[{"\[Mu]s", "[", 
      RowBox[{"5", ",", "2"}], "]"}], ",", 
     RowBox[{
      RowBox[{"\[Delta]s", "[", 
       RowBox[{"5", ",", "2"}], "]"}], "-", "1"}]}], "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.819868734040756*^9, 3.819868752309579*^9}},
 CellLabel->
  "In[969]:=",ExpressionUUID->"cf0c7569-081f-4d01-8557-764273f56548"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"QD", "[", 
   RowBox[{"0.1", ",", " ", "5", ",", "2", ",", "1", ",", "F1"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.819805751159234*^9, 3.819805759311998*^9}, {
  3.819868757552515*^9, 3.819868758087956*^9}},
 CellLabel->
  "In[971]:=",ExpressionUUID->"02c88982-f063-4511-a14b-ad1a49cbf889"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"0.282832`", ",", "0.19434503170344974`"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.81986875866597*^9, 3.819869185571887*^9, 
  3.820343114478385*^9, 3.820389759006216*^9, 3.820426673850075*^9},
 CellLabel->
  "Out[971]=",ExpressionUUID->"11aca7c3-9c81-49b6-b52f-e7623209bf54"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Timing", "[", 
  RowBox[{"QD", "[", 
   RowBox[{"0.9", ",", " ", "5", ",", "2", ",", "1"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Timing", "[", 
  RowBox[{"QD", "[", 
   RowBox[{"0.9", ",", "5", ",", "2", ",", "1", ",", "F1"}], "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.819805751159234*^9, 3.81980576528796*^9}, {
  3.8198687964730253`*^9, 3.8198688052706223`*^9}},
 CellLabel->
  "In[972]:=",ExpressionUUID->"5a2c229e-5847-4d75-b5f3-00cf08d6c977"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"1.205715`", ",", "0.20988759675319327`"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.8198057682751827`*^9, 3.819806190808078*^9, 
  3.8198074438356047`*^9, 3.8198170706188583`*^9, 3.819828855564891*^9, 
  3.8198290674718637`*^9, 3.819867038821332*^9, 3.8198688066399918`*^9, 
  3.819869186757873*^9, 3.8203431157222433`*^9, 3.820389760202917*^9, 
  3.820426675103722*^9},
 CellLabel->
  "Out[972]=",ExpressionUUID->"7bb530ac-fad5-4c39-9f25-597188bc1620"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"0.266457`", ",", "0.20988759675319327`"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.8198057682751827`*^9, 3.819806190808078*^9, 
  3.8198074438356047`*^9, 3.8198170706188583`*^9, 3.819828855564891*^9, 
  3.8198290674718637`*^9, 3.819867038821332*^9, 3.8198688066399918`*^9, 
  3.819869186757873*^9, 3.8203431157222433`*^9, 3.820389760202917*^9, 
  3.820426675354541*^9},
 CellLabel->
  "Out[973]=",ExpressionUUID->"0021986e-e4c1-477d-a869-70a09ecd451d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Timing", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"QD", "[", 
     RowBox[{"q", ",", "5", ",", "0", ",", "1"}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"q", ",", 
      RowBox[{"{", 
       RowBox[{"0.05", ",", "0.1", ",", " ", "0.9", ",", " ", "0.95"}], 
       "}"}]}], "}"}]}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"F1", "=", 
    RowBox[{"FNIGi", "[", 
     RowBox[{"5", ",", "0", ",", 
      RowBox[{"\[Mu]s", "[", 
       RowBox[{"5", ",", "0"}], "]"}], ",", " ", 
      RowBox[{
       RowBox[{"\[Delta]s", "[", 
        RowBox[{"5", ",", "0"}], "]"}], "-", "1"}]}], "]"}]}], ";", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"QD", "[", 
      RowBox[{"q", ",", "5", ",", "0", ",", "1", ",", "F1"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"q", ",", 
       RowBox[{"{", 
        RowBox[{"0.05", ",", "0.1", ",", " ", "0.9", ",", " ", "0.95"}], 
        "}"}]}], "}"}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.819652170299946*^9, 3.819652184987463*^9}, {
  3.8198047733803797`*^9, 3.8198048355050917`*^9}, {3.819817101153591*^9, 
  3.819817101340743*^9}, {3.8198688807208557`*^9, 3.819868880977449*^9}},
 CellLabel->
  "In[974]:=",ExpressionUUID->"163e50a5-f3c0-4171-bae6-6c5d2ad63ee6"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"3.841235`", ",", 
    RowBox[{"{", 
     RowBox[{
     "0.10866850075420068`", ",", "0.17451266501622997`", ",", 
      "0.17446643539588916`", ",", "0.10866331770784655`"}], "}"}]}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.8198688851526527`*^9, 3.819869190799017*^9, 
  3.820343120121908*^9, 3.820389764262995*^9, 3.820426679240587*^9},
 CellLabel->
  "Out[974]=",ExpressionUUID->"48356ed3-873e-45c1-a581-5b278e95c06b"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"1.574426`", ",", 
    RowBox[{"{", 
     RowBox[{
     "0.10866850075420068`", ",", "0.17451266501622997`", ",", 
      "0.17446643539588916`", ",", "0.10866331770784655`"}], "}"}]}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.8198688851526527`*^9, 3.819869190799017*^9, 
  3.820343120121908*^9, 3.820389764262995*^9, 3.820426680814053*^9},
 CellLabel->
  "Out[975]=",ExpressionUUID->"101df602-0a9d-4f66-b359-532666381651"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Timing", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"QD", "[", 
     RowBox[{"q", ",", "5", ",", "4", ",", "1"}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"q", ",", 
      RowBox[{"{", 
       RowBox[{"0.05", ",", "0.1", ",", " ", "0.9", ",", " ", "0.95"}], 
       "}"}]}], "}"}]}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"F1", "=", 
    RowBox[{"FNIGi", "[", 
     RowBox[{"5", ",", "4", ",", 
      RowBox[{"\[Mu]s", "[", 
       RowBox[{"5", ",", "4"}], "]"}], ",", " ", 
      RowBox[{
       RowBox[{"\[Delta]s", "[", 
        RowBox[{"5", ",", "4"}], "]"}], "-", "1"}]}], "]"}]}], ";", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"QD", "[", 
      RowBox[{"q", ",", "5", ",", "4", ",", "1", ",", "F1"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"q", ",", 
       RowBox[{"{", 
        RowBox[{"0.05", ",", "0.1", ",", " ", "0.9", ",", " ", "0.95"}], 
        "}"}]}], "}"}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.819652170299946*^9, 3.819652184987463*^9}, {
  3.8198047733803797`*^9, 3.8198048355050917`*^9}, {3.819817101153591*^9, 
  3.819817101340743*^9}, {3.8198688807208557`*^9, 3.819868895905711*^9}},
 CellLabel->
  "In[976]:=",ExpressionUUID->"98fa22f0-d133-46d9-8db0-efa433bd1fd4"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"6.727574`", ",", 
    RowBox[{"{", 
     RowBox[{
     "0.7103769883559601`", ",", "0.7553123574082344`", ",", 
      "0.8311379475286363`", ",", "0.8158930341783069`"}], "}"}]}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.8198689026545353`*^9, 3.819869199386228*^9, 
  3.820343129076922*^9, 3.820389772667647*^9, 3.820426687593639*^9},
 CellLabel->
  "Out[976]=",ExpressionUUID->"c5e8af7d-2615-45ad-ac74-1c23760a478a"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"2.44878`", ",", 
    RowBox[{"{", 
     RowBox[{
     "0.7103769883559601`", ",", "0.7553123574082344`", ",", 
      "0.8311379475286363`", ",", "0.8158930341783069`"}], "}"}]}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.8198689026545353`*^9, 3.819869199386228*^9, 
  3.820343129076922*^9, 3.820389772667647*^9, 3.820426690047275*^9},
 CellLabel->
  "Out[977]=",ExpressionUUID->"8592f4fa-172a-4d33-8c96-18879336bebf"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Empirical measures", "Section",
 CellChangeTimes->{{3.819817169228855*^9, 
  3.819817189178879*^9}},ExpressionUUID->"b1d62794-389c-4d11-aed8-\
446b6a451be9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Alpha]", "=", "5"}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Beta]", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]", "=", 
   FormBox["1",
    TraditionalForm]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Mu]", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Mu]1", "=", 
   RowBox[{"\[Mu]2", "=", 
    RowBox[{"\[Mu]s", "[", 
     RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]1", "=", 
   RowBox[{"\[Delta]2", "=", 
    RowBox[{
     RowBox[{"\[Delta]s", "[", 
      RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], "-", "\[Delta]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]", "=", 
   SqrtBox[
    RowBox[{
     SuperscriptBox["\[Alpha]", "2"], "-", 
     SuperscriptBox["\[Beta]", "2"]}]]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Mu]IG", "=", 
   FractionBox["\[Delta]", "\[Gamma]"]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Mu]1IG", "=", 
   FractionBox["\[Delta]1", "\[Gamma]"]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Mu]2IG", "=", 
   FractionBox["\[Delta]2", "\[Gamma]"]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Lambda]", "=", 
   SuperscriptBox["\[Delta]", "2"]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Lambda]1", "=", 
   SuperscriptBox["\[Delta]1", "2"]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Lambda]2", "=", 
   SuperscriptBox["\[Delta]2", "2"]}], ";"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQrfW08pxl6RtHrhs+10D0hMUZT0G0UE7OCxD97Ev9
e1sgzZrXDKbNijZ9BtFawWLfQfSk3dnsdkDafnUemJac+0gARK89+BlMv7pz
VQxEizg/AdPPluXejgHSX46XgGkeMS21iUC67IE2mD7B+1wbRE+beEwHRD+Y
PTMERIt0LgbTb/7+Fd8JpJ9kCkmA6GcHXANAtHLrlSgQ3X1kRyKIDq96lgWi
WUKjOkE0u0stmJ6/583mS0C6cPUHML0n1+jkZSCtpmsKphVm+V8A0SusfG+A
6GN1yx+BaD35M2AaAMmpoeI=
  "],
 CellLabel->
  "In[978]:=",ExpressionUUID->"b04f51ab-dba9-43ff-9453-0443c6f82d25"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "[", "123456", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "50000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Y", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "n"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"W", " ", "=", " ", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"InverseGaussianDistribution", "[", 
      RowBox[{"\[Mu]IG", ",", "\[Lambda]"}], "]"}], ",", " ", "n"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"W1", " ", "=", " ", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"InverseGaussianDistribution", "[", 
      RowBox[{"\[Mu]1IG", ",", "\[Lambda]1"}], "]"}], ",", " ", "n"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"W2", " ", "=", " ", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"InverseGaussianDistribution", "[", 
      RowBox[{"\[Mu]2IG", ",", " ", "\[Lambda]2"}], "]"}], ",", " ", "n"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8171042599886017`*^9, 3.817104286610984*^9}, 
   3.817104467237665*^9, 3.8171046422284803`*^9, {3.817104695795639*^9, 
   3.817104732988944*^9}, {3.8171248172502813`*^9, 3.8171248316301107`*^9}, {
   3.817127389200902*^9, 3.817127389488452*^9}, {3.8171356139177723`*^9, 
   3.81713561417614*^9}, {3.8171356554525757`*^9, 3.8171356556521177`*^9}, {
   3.8172140959961157`*^9, 3.817214096310006*^9}, {3.817270219331251*^9, 
   3.81727027098927*^9}, {3.817288917973435*^9, 3.8172889183338346`*^9}, {
   3.817289820795442*^9, 3.8172898209089203`*^9}, 3.817290486924219*^9, {
   3.817290576837955*^9, 3.8172905769800463`*^9}, {3.817300851713566*^9, 
   3.817300852154126*^9}, 3.8176579951579723`*^9, {3.819628214785843*^9, 
   3.81962821487637*^9}, {3.8196282793611813`*^9, 3.8196282830919743`*^9}},
 CellLabel->
  "In[991]:=",ExpressionUUID->"e470ac11-aaa8-45d2-8444-5e32d927112e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Z", "=", 
   RowBox[{"\[Mu]", "+", 
    RowBox[{"\[Beta]", " ", "W"}], "+", 
    RowBox[{
     SqrtBox["W"], " ", 
     RowBox[{
     "Y", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Z1", "=", 
   RowBox[{"\[Mu]1", "+", 
    RowBox[{"\[Beta]", " ", "W1"}], "+", 
    RowBox[{
     SqrtBox["W1"], " ", 
     RowBox[{
     "Y", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Z2", "=", 
   RowBox[{"\[Mu]2", "+", 
    RowBox[{"\[Beta]", " ", "W2"}], "+", 
    RowBox[{
     SqrtBox["W2"], " ", 
     RowBox[{
     "Y", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"X1", " ", "=", " ", 
   RowBox[{"Z", " ", "+", " ", "Z1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"X2", " ", "=", " ", 
   RowBox[{"Z", " ", "+", " ", "Z2"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8171047503801403`*^9, 3.8171047723967247`*^9}, {
  3.817104814436576*^9, 3.8171048600783663`*^9}, {3.817125976519915*^9, 
  3.817126008381916*^9}, {3.81723094278487*^9, 3.817230949781246*^9}, {
  3.817231606292857*^9, 3.817231611277597*^9}, {3.817270210432276*^9, 
  3.817270238929926*^9}, {3.817270290731044*^9, 3.817270301906034*^9}, {
  3.8172889214165154`*^9, 3.8172889282650003`*^9}, {3.8195650407297163`*^9, 
  3.819565040932901*^9}},
 CellLabel->
  "In[997]:=",ExpressionUUID->"229ca683-0d21-4489-8773-f56a3a393ee0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Mean", "[", "X1", "]"}], ",", 
   RowBox[{"Mean", "[", "X2", "]"}]}], "}"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Variance", "[", "X1", "]"}], ",", " ", 
   RowBox[{"Variance", "[", "X2", "]"}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.8195566259874153`*^9, 3.819556641045239*^9}},
 CellLabel->
  "In[1002]:=",ExpressionUUID->"bc51babc-08a7-403d-8c8d-be43cb6c4ca1"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"0.004732216652287629`", ",", "0.001145264973100436`"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.819556627881173*^9, 3.819556678426649*^9}, {
   3.819564964970853*^9, 3.8195649882080584`*^9}, {3.819565027636516*^9, 
   3.8195650492379436`*^9}, {3.8195650866348677`*^9, 3.819565117944808*^9}, 
   3.819565194499694*^9, 3.8195652417068167`*^9, 3.819625864114237*^9, 
   3.819627520874373*^9, 3.819628216840858*^9, 3.819628254130321*^9, 
   3.819628284926598*^9, 3.819735417002633*^9, 3.819817196693346*^9, 
   3.819817481460689*^9, {3.819817606442547*^9, 3.81981769065133*^9}, {
   3.819817745746031*^9, 3.819817819197566*^9}, 3.819818064078607*^9, 
   3.8198288599159803`*^9, 3.819829071590432*^9, 3.819867042980213*^9, 
   3.819868937954039*^9, 3.819869201729051*^9, 3.81986960169899*^9, 
   3.819871820136406*^9, {3.819871877213725*^9, 3.819871940872252*^9}, 
   3.819872025593993*^9, 3.820343131876732*^9, 3.820389775236856*^9, 
   3.8204266901282873`*^9},
 CellLabel->
  "Out[1002]=",ExpressionUUID->"9ab61f97-acc6-45a1-8aae-d97b6ef86aad"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"1.0004210992641585`", ",", "1.000989203275101`"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.819556627881173*^9, 3.819556678426649*^9}, {
   3.819564964970853*^9, 3.8195649882080584`*^9}, {3.819565027636516*^9, 
   3.8195650492379436`*^9}, {3.8195650866348677`*^9, 3.819565117944808*^9}, 
   3.819565194499694*^9, 3.8195652417068167`*^9, 3.819625864114237*^9, 
   3.819627520874373*^9, 3.819628216840858*^9, 3.819628254130321*^9, 
   3.819628284926598*^9, 3.819735417002633*^9, 3.819817196693346*^9, 
   3.819817481460689*^9, {3.819817606442547*^9, 3.81981769065133*^9}, {
   3.819817745746031*^9, 3.819817819197566*^9}, 3.819818064078607*^9, 
   3.8198288599159803`*^9, 3.819829071590432*^9, 3.819867042980213*^9, 
   3.819868937954039*^9, 3.819869201729051*^9, 3.81986960169899*^9, 
   3.819871820136406*^9, {3.819871877213725*^9, 3.819871940872252*^9}, 
   3.819872025593993*^9, 3.820343131876732*^9, 3.820389775236856*^9, 
   3.820426690129923*^9},
 CellLabel->
  "Out[1003]=",ExpressionUUID->"aaa55f0f-7ed2-46cc-8804-54e9f7027ba7"]
}, Open  ]],

Cell["Correlation", "Text",
 CellChangeTimes->{{3.819818406346814*^9, 
  3.819818407233303*^9}},ExpressionUUID->"9a6d8114-b18c-4ec6-a7f5-\
e61cfe56ed5d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"{", 
   RowBox[{
    FractionBox["\[Delta]", 
     RowBox[{"\[Delta]s", "[", 
      RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}]], ",", 
    RowBox[{"Correlation", "[", 
     RowBox[{"X1", ",", "X2"}], "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.81955654347717*^9, 3.8195565574426737`*^9}, {
  3.8195566886219273`*^9, 3.81955669428321*^9}, {3.8195648640036173`*^9, 
  3.819564893718998*^9}, {3.819565069077416*^9, 3.819565095877689*^9}, {
  3.819565221861521*^9, 3.819565224873064*^9}, {3.8196282242952747`*^9, 
  3.8196282304634542`*^9}, {3.819817201581565*^9, 3.819817202022564*^9}},
 CellLabel->
  "In[1004]:=",ExpressionUUID->"2f148626-6269-4941-a6cf-db7c15d4c57d"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"0.390625`", ",", "0.39103613489497424`"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.819556557760701*^9, 3.819556597023031*^9, {3.8195566631743793`*^9, 
   3.8195566946058683`*^9}, 3.819564894010373*^9, 3.819564989758464*^9, {
   3.819565028374978*^9, 3.819565118967896*^9}, 3.819565195394351*^9, {
   3.819565225431151*^9, 3.819565242773448*^9}, 3.819625864156075*^9, 
   3.819627522154263*^9, {3.819628217856359*^9, 3.819628254804497*^9}, 
   3.819628286154331*^9, 3.81973541928423*^9, {3.819817198915308*^9, 
   3.819817202266624*^9}, 3.819817482750758*^9, {3.8198176074746847`*^9, 
   3.819817692250003*^9}, {3.8198177466117077`*^9, 3.819817820026843*^9}, 
   3.8198180649375343`*^9, 3.819828859923304*^9, 3.819829071596202*^9, 
   3.819867042985784*^9, 3.8198689379619217`*^9, 3.819869201735648*^9, 
   3.819869601705015*^9, 3.819871821996992*^9, {3.819871879087552*^9, 
   3.819871942244557*^9}, 3.819872027065789*^9, 3.8203431319691677`*^9, 
   3.8203897752441883`*^9, 3.820426690134419*^9},
 CellLabel->
  "Out[1004]=",ExpressionUUID->"1996f611-47c8-4cb3-bd84-26514e406eaf"]
}, Open  ]],

Cell["Rank correlation", "Text",
 CellChangeTimes->{{3.819818409512001*^9, 3.819818412371585*^9}, {
  3.819871822642043*^9, 
  3.819871823333*^9}},ExpressionUUID->"21066a50-ed6b-491e-8679-0260ec0a1a64"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"{", 
   RowBox[{
    FractionBox[
     RowBox[{"6", " ", 
      RowBox[{"ArcSin", "[", 
       FractionBox["\[Delta]", 
        RowBox[{"2", " ", 
         RowBox[{"\[Delta]s", "[", 
          RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}]}]], "]"}]}], "\[Pi]"], 
    ",", 
    FractionBox[
     RowBox[{"6", " ", 
      RowBox[{"ArcSin", "[", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"Correlation", "[", 
         RowBox[{"X1", ",", "X2"}], "]"}]}], "]"}]}], "\[Pi]"], ",", 
    RowBox[{"Rho", "[", 
     RowBox[{"\[Alpha]", ",", "\[Beta]", ",", "\[Delta]"}], "]"}], ",", 
    RowBox[{"SpearmanRho", "[", 
     RowBox[{"X1", ",", "X2"}], "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.819628232711729*^9, 3.8196282338833847`*^9}, {
  3.819817210034563*^9, 3.819817228057394*^9}},
 CellLabel->
  "In[1005]:=",ExpressionUUID->"13d745e5-7a6d-4089-b91b-93c4a4104335"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
   "0.37543265153460786`", ",", "0.37583297443133534`", ",", 
    "0.37341890847620185`", ",", "0.3736061522528345`"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.819628234291012*^9, 3.8196282557365227`*^9}, 
   3.819628286830481*^9, 3.81973542023866*^9, {3.819817204493834*^9, 
   3.819817231108039*^9}, 3.8198175012941732`*^9, {3.819817656761565*^9, 
   3.8198176944084053`*^9}, {3.819817734623851*^9, 3.819817822413795*^9}, {
   3.819818068838689*^9, 3.819818081181669*^9}, 3.8198288631497183`*^9, 
   3.819829074944454*^9, 3.819867046205792*^9, 3.819868941242597*^9, 
   3.8198692051105537`*^9, 3.819869604200246*^9, {3.81987182555026*^9, 
   3.819871944912012*^9}, 3.819872029952805*^9, 3.820343133364935*^9, 
   3.820389776488699*^9, 3.820426691302218*^9},
 CellLabel->
  "Out[1005]=",ExpressionUUID->"ec0d8658-add6-445e-b42d-8e0ae2968459"]
}, Open  ]],

Cell["Quantile  dependence", "Text",
 CellChangeTimes->{{3.819818414876438*^9, 
  3.8198184312542152`*^9}},ExpressionUUID->"dd22405f-7e62-4463-8b43-\
d7e10c61a2e5"],

Cell[TextData[{
 "Empirical DF (values lie strictly in ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{"0", ",", "1"}], "]"}], TraditionalForm]],ExpressionUUID->
  "722e7d8f-8da3-431d-87c7-e335d40d8172"],
 ")"
}], "Text",
 CellChangeTimes->{{3.8195178781911497`*^9, 3.8195178803676777`*^9}, {
  3.819801334296489*^9, 
  3.819801359792729*^9}},ExpressionUUID->"5e852cc0-81ca-4263-99e8-\
965ff057c731"],

Cell[BoxData[
 RowBox[{
  RowBox[{"hatF", "[", 
   RowBox[{"x_", ",", "s_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"n", ",", "k"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"n", "=", 
      RowBox[{"Length", "[", "s", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "x", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"n", "+", "1"}], ")"}]}], " ", 
         RowBox[{"Length", "[", 
          RowBox[{"Select", "[", 
           RowBox[{"s", ",", " ", 
            RowBox[{
             RowBox[{"#1", "\[LessEqual]", "x"}], "&"}]}], "]"}], "]"}]}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"n", "+", "1"}], ")"}]}], " ", 
           RowBox[{"Length", "[", 
            RowBox[{"Select", "[", 
             RowBox[{"s", ",", " ", 
              RowBox[{
               RowBox[{"#1", "\[LessEqual]", 
                RowBox[{
                "x", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}]}],
                "&"}]}], "]"}], "]"}]}], "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"k", ",", "1", ",", 
           RowBox[{"Length", "[", "x", "]"}]}], "}"}]}], "]"}]}], 
      "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.819517885815874*^9, 3.819517955710746*^9}, {
  3.819518035114222*^9, 3.819518047352261*^9}, {3.8198186311819983`*^9, 
  3.819818709985516*^9}, {3.819818877233992*^9, 3.819818877557209*^9}, {
  3.8198189787478952`*^9, 3.8198189797002497`*^9}},
 CellLabel->
  "In[1006]:=",ExpressionUUID->"b0a3f4a5-50f8-4aad-adaa-7fe526a85505"],

Cell[BoxData[
 RowBox[{
  RowBox[{"s", "=", 
   RowBox[{"Sort", "[", "X1", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.819818952447513*^9, 3.819818959349216*^9}},
 CellLabel->
  "In[1007]:=",ExpressionUUID->"5cf986a7-e867-4647-a35a-b4079323d7ee"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"q1", "=", 
   RowBox[{
    RowBox[{"Sort", "[", "X1", "]"}], "\[LeftDoubleBracket]", 
    RowBox[{"Round", "[", 
     RowBox[{"0.95", " ", 
      RowBox[{"Length", "[", "X1", "]"}]}], "]"}], 
    "\[RightDoubleBracket]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"q2", "=", 
   RowBox[{
    RowBox[{"Sort", "[", "X2", "]"}], "\[LeftDoubleBracket]", 
    RowBox[{"Round", "[", 
     RowBox[{"0.95", " ", 
      RowBox[{"Length", "[", "X2", "]"}]}], "]"}], 
    "\[RightDoubleBracket]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sel", "=", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"X1", ",", "X2"}], "}"}], "\[Transpose]"}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"#1", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "<", "q1"}], " ", "&&", " ", 
       RowBox[{
        RowBox[{"#1", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "<", "q2"}]}], "&"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.819818961020239*^9, 3.819818971769662*^9}, {
  3.8198190739702806`*^9, 3.8198191234602947`*^9}, {3.819819381196774*^9, 
  3.819819412454166*^9}, {3.819819520190617*^9, 3.819819520375792*^9}},
 CellLabel->
  "In[1008]:=",ExpressionUUID->"9b59f033-16c1-4042-81b7-e15fd34b7741"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Length", "[", "sel", "]"}], "/", 
  RowBox[{"(", 
   RowBox[{"0.95", 
    RowBox[{"Length", "[", "X1", "]"}]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.819819451730194*^9, 3.81981954079277*^9}},
 CellLabel->
  "In[1011]:=",ExpressionUUID->"e4fa06c7-cdd1-4e44-ae43-c1647f5785e0"],

Cell[BoxData[
 FormBox["0.9590947368421053`", TraditionalForm]], "Output",
 CellChangeTimes->{{3.819819453609642*^9, 3.819819541131671*^9}, 
   3.8198288633375587`*^9, 3.819829075126129*^9, 3.819867046389083*^9, 
   3.819868941395718*^9, 3.819869205261204*^9, 3.819869604364522*^9, 
   3.819872033258934*^9, 3.8203431336279783`*^9, 3.820389776650276*^9, 
   3.820426691458514*^9},
 CellLabel->
  "Out[1011]=",ExpressionUUID->"6e7bad0c-f63b-4dcf-aa52-83536817901f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"QDemp", "[", 
   RowBox[{"q_", ",", "x1_", ",", "x2_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"q1", ",", " ", "q2", ",", " ", "sell"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"q1", "=", 
      RowBox[{
       RowBox[{"Sort", "[", "x1", "]"}], "\[LeftDoubleBracket]", 
       RowBox[{"Round", "[", 
        RowBox[{"q", " ", 
         RowBox[{"Length", "[", "x1", "]"}]}], "]"}], 
       "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"q2", "=", 
      RowBox[{
       RowBox[{"Sort", "[", "x2", "]"}], "\[LeftDoubleBracket]", 
       RowBox[{"Round", "[", 
        RowBox[{"q", " ", 
         RowBox[{"Length", "[", "x2", "]"}]}], "]"}], 
       "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"0", "<", "q", "\[LessEqual]", "0.5"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"sel", "=", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"x1", ",", "x2"}], "}"}], "\[Transpose]"}], ",", " ", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
              "#1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "<=",
               "q1"}], "&&", 
             RowBox[{
              RowBox[{
              "#1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "<=",
               "q2"}]}], "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Length", "[", "sel", "]"}], "/", 
         RowBox[{"(", 
          RowBox[{"q", " ", 
           RowBox[{"Length", "[", "x1", "]"}]}], ")"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"sel", "=", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"x1", ",", "x2"}], "}"}], "\[Transpose]"}], ",", " ", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
              "#1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              ">", "q1"}], "&&", 
             RowBox[{
              RowBox[{
              "#1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
              ">", "q2"}]}], "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Length", "[", "sel", "]"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "q"}], ")"}], 
           RowBox[{"Length", "[", "x1", "]"}]}], ")"}]}]}]}], 
      "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.819818492339328*^9, 3.819818585411067*^9}, {
  3.8198187256617403`*^9, 3.819818725903754*^9}, {3.8198195561363897`*^9, 
  3.819819637403047*^9}, {3.8198197111932993`*^9, 3.8198197519398613`*^9}, {
  3.8198197824330072`*^9, 3.8198197849070883`*^9}, {3.819819820017666*^9, 
  3.819819912278123*^9}},
 CellLabel->
  "In[1012]:=",ExpressionUUID->"d859b0da-3f5b-4835-8b05-158797231cf5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"QDemp", "[", 
    RowBox[{"0.05", ",", "X1", ",", "X2"}], "]"}], ",", 
   RowBox[{"QD", "[", 
    RowBox[{
    "0.05", ",", " ", "\[Alpha]", ",", " ", "\[Beta]", ",", "\[Delta]"}], 
    "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.819819892385852*^9, 3.819819897956522*^9}, {
  3.819819931762328*^9, 3.819819935481346*^9}},
 CellLabel->
  "In[1013]:=",ExpressionUUID->"7f3565f5-498e-438c-a469-ba735f553db9"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"0.1724`", ",", "0.1747496991185794`"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.819819898729998*^9, 3.8198199374696302`*^9}, 
   3.819828865069171*^9, 3.8198290768914347`*^9, 3.819867048219659*^9, 
   3.819868943108494*^9, 3.81986920719832*^9, 3.819869605792007*^9, 
   3.819872037307741*^9, 3.820343135164937*^9, 3.820389777932139*^9, 
   3.820426692724744*^9},
 CellLabel->
  "Out[1013]=",ExpressionUUID->"88594d39-c68f-4174-b268-42f33901da13"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"QDemp", "[", 
    RowBox[{"0.95", ",", "X1", ",", "X2"}], "]"}], ",", " ", 
   RowBox[{"QD", "[", 
    RowBox[{"0.95", ",", " ", "\[Alpha]", ",", "\[Beta]", ",", "\[Delta]"}], 
    "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.8198199384543333`*^9, 3.819819949181839*^9}},
 CellLabel->
  "In[1014]:=",ExpressionUUID->"1675ce38-ceba-45c7-8780-04ce74f638fd"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"0.2235999999999998`", ",", "0.2239889422875028`"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.819819951190922*^9, 3.819828866888563*^9, 
  3.819829078615349*^9, 3.819867049972467*^9, 3.819868944926277*^9, 
  3.81986920906539*^9, 3.819869607144319*^9, 3.8198720386183357`*^9, 
  3.82034313671362*^9, 3.820389779215967*^9, 3.820426693980082*^9},
 CellLabel->
  "Out[1014]=",ExpressionUUID->"19b561eb-00e5-4be8-83c8-7b691a28d223"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Histogram", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"X1", ",", "X2"}], "}"}], ",", " ", "Automatic", ",", " ", 
     "\"\<PDF\>\""}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"fNIG", "[", 
        RowBox[{"x", ",", "\[Alpha]", ",", "\[Beta]", ",", " ", 
         RowBox[{"\[Mu]s", "[", 
          RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], ",", " ", 
         RowBox[{"\[Delta]s", "[", 
          RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}]}], "]"}], ",", 
       RowBox[{"NIGPDF", "[", 
        RowBox[{"x", ",", "\[Alpha]", ",", "\[Beta]"}], "]"}]}], "}"}], ",", 
     " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"Darker", "[", "Green", "]"}]}], "}"}]}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.819556734395372*^9, 3.8195567348772*^9}, {
  3.8195568075683813`*^9, 3.819556886165537*^9}, {3.819557029570169*^9, 
  3.819557049871866*^9}},
 CellLabel->
  "In[1015]:=",ExpressionUUID->"c015fc55-4690-4959-a0ec-8ef445a73cba"],

Cell[BoxData[
 FormBox[
  GraphicsBox[{{
     {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
      Opacity[0.574], Thickness[Small]}], {{}, 
       {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{
        Opacity[0.574], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-3.5, 0.}, 
               NCache[{-3., 
                 Rational[3, 25000]}, {-3., 0.00012}], "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{54.33251601281029, 80.63555844675744}, {
              116.45122164431038`, 117.14591548277652`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.00012]& ,
           TagBoxNote->"0.00012"],
          StyleBox["0.00012`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.00012, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-3., 0.}, 
               NCache[{-2.5, 
                 Rational[59, 25000]}, {-2.5, 0.00236}], "RoundingRadius" -> 
               0]},
             
             ImageSizeCache->{{80.01055844675744, 106.3136008807046}, {
              115.15026999294241`, 117.14591548277652`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.00236]& ,
           TagBoxNote->"0.00236"],
          StyleBox["0.00236`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.00236, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-2.5, 0.}, 
               NCache[{-2., 
                 Rational[48, 3125]}, {-2., 0.01536}], "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{105.6886008807046, 131.99164331465175`}, {
              107.60010415911051`, 117.14591548277652`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.01536]& ,
           TagBoxNote->"0.01536"],
          StyleBox["0.01536`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.01536, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-2., 0.}, 
               NCache[{-1.5, 
                 Rational[181, 2500]}, {-1.5, 0.0724}], "RoundingRadius" -> 
               0]},
             
             ImageSizeCache->{{131.36664331465175`, 157.6696857485989}, {
              74.47229960820499, 117.14591548277652`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.0724]& ,
           TagBoxNote->"0.0724"],
          StyleBox["0.0724`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.0724, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.5, 0.}, 
               NCache[{-1., 
                 Rational[5201, 25000]}, {-1., 0.20804}], "RoundingRadius" -> 
               0]},
             
             ImageSizeCache->{{157.0446857485989, 
              183.34772818254604`}, {-4.3049691380226704`, 
              117.14591548277652`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.20804]& ,
           TagBoxNote->"0.20804"],
          StyleBox["0.20804`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.20804, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1., 0.}, 
               NCache[{-0.5, 
                 Rational[4429, 12500]}, {-0.5, 0.35432}], "RoundingRadius" -> 
               0]},
             
             ImageSizeCache->{{182.72272818254604`, 
              209.0257706164932}, {-89.26175822824815, 117.14591548277652`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.35432]& ,
           TagBoxNote->"0.35432"],
          StyleBox["0.35432`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.35432, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.5, 0.}, 
               NCache[{0., 
                 Rational[1043, 2500]}, {0., 0.4172}], "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{208.4007706164932, 
              234.70381305044035`}, {-125.78132958450585`, 
              117.14591548277652`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.4172]& ,
           TagBoxNote->"0.4172"],
          StyleBox["0.4172`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.4172, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0., 0.}, 
               NCache[{0.5, 
                 Rational[1139, 3125]}, {0.5, 0.36448}], "RoundingRadius" -> 
               0]},
             
             ImageSizeCache->{{234.07881305044035`, 
              260.3818554843875}, {-95.16250321838139, 117.14591548277652`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.36448]& ,
           TagBoxNote->"0.36448"],
          StyleBox["0.36448`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.36448, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.5, 0.}, 
               NCache[{1., 
                 Rational[3219, 12500]}, {1., 0.25752}], "RoundingRadius" -> 
               0]},
             
             ImageSizeCache->{{259.7568554843875, 
              286.0598979183346}, {-33.042061865561365`, 
              117.14591548277652`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.25752]& ,
           TagBoxNote->"0.25752"],
          StyleBox["0.25752`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.25752, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1., 0.}, 
               NCache[{1.5, 
                 Rational[3847, 25000]}, {1.5, 0.15388}], "RoundingRadius" -> 
               0]},
             
             ImageSizeCache->{{285.4348979183346, 311.7379403522818}, {
              27.150183289695477`, 117.14591548277652`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.15388]& ,
           TagBoxNote->"0.15388"],
          StyleBox["0.15388`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.15388, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.5, 0.}, 
               NCache[{2., 
                 Rational[2113, 25000]}, {2., 0.08452}], "RoundingRadius" -> 
               0]},
             
             ImageSizeCache->{{311.1129403522818, 337.41598278622894`}, {
              67.43322192312478, 117.14591548277652`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.08452]& ,
           TagBoxNote->"0.08452"],
          StyleBox["0.08452`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.08452, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{2., 0.}, 
               NCache[{2.5, 
                 Rational[497, 12500]}, {2.5, 0.03976}], "RoundingRadius" -> 
               0]},
             
             ImageSizeCache->{{336.79098278622894`, 363.0940252201761}, {
              93.42902367099525, 117.14591548277652`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.03976]& ,
           TagBoxNote->"0.03976"],
          StyleBox["0.03976`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.03976, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{2.5, 0.}, 
               NCache[{3., 
                 Rational[421, 25000]}, {3., 0.01684}], "RoundingRadius" -> 
               0]},
             
             ImageSizeCache->{{362.4690252201761, 388.77206765412325`}, {
              106.74054681802811`, 117.14591548277652`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.01684]& ,
           TagBoxNote->"0.01684"],
          StyleBox["0.01684`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.01684, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3., 0.}, 
               NCache[{3.5, 
                 Rational[39, 5000]}, {3.5, 0.0078}], "RoundingRadius" -> 0]},
             
             
             ImageSizeCache->{{388.14706765412325`, 414.4501100880704}, {
              111.99081598247737`, 117.14591548277652`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.0078]& ,
           TagBoxNote->"0.0078"],
          StyleBox["0.0078`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.0078, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.5, 0.}, 
               NCache[{4., 
                 Rational[69, 25000]}, {4., 0.00276}], "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{413.8251100880704, 440.12815252201756`}, {
              114.91795719805528`, 117.14591548277652`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.00276]& ,
           TagBoxNote->"0.00276"],
          StyleBox["0.00276`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.00276, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{4., 0.}, 
               NCache[{4.5, 
                 Rational[37, 25000]}, {4.5, 0.00148}], "RoundingRadius" -> 
               0]},
             
             ImageSizeCache->{{439.50315252201756`, 465.8061949559647}, {
              115.66135814169411`, 117.14591548277652`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.00148]& ,
           TagBoxNote->"0.00148"],
          StyleBox["0.00148`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.00148, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{4.5, 0.}, 
               NCache[{5., 
                 Rational[9, 12500]}, {5., 0.00072}], "RoundingRadius" -> 0]},
             
             
             ImageSizeCache->{{465.1811949559647, 491.48423738991187`}, {
              116.10275245197967`, 117.14591548277652`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.00072]& ,
           TagBoxNote->"0.00072"],
          StyleBox["0.00072`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.00072, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{5., 0.}, 
               NCache[{5.5, 
                 Rational[3, 12500]}, {5.5, 0.00024}], "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{490.85923738991187`, 517.162279823859}, {
              116.38152780584423`, 117.14591548277652`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.00024]& ,
           TagBoxNote->"0.00024"],
          StyleBox["0.00024`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.00024, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{5.5, 0.}, 
               NCache[{6., 
                 Rational[1, 12500]}, {6., 0.00008}], "RoundingRadius" -> 0]},
             
             
             ImageSizeCache->{{516.537279823859, 542.8403222578062}, {
              116.47445292379909`, 117.14591548277652`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.00008]& ,
           TagBoxNote->"0.00008"],
          StyleBox["0.00008`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.00008, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{6., 0.}, 
               NCache[{6.5, 
                 Rational[1, 12500]}, {6.5, 0.00008}], "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{542.2153222578062, 568.5183646917533}, {
              116.47445292379909`, 117.14591548277652`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.00008]& ,
           TagBoxNote->"0.00008"],
          StyleBox["0.00008`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.00008, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{7., 0.}, 
               NCache[{7.5, 
                 Rational[1, 25000]}, {7.5, 0.00004}], "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{593.5714071257005, 619.8744495596476}, {
              116.4976842032878, 117.14591548277652`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.00004]& ,
           TagBoxNote->"0.00004"],
          StyleBox["0.00004`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.00004, {}], "Tooltip"]& ]}, {}, {}}, {{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{
        Opacity[0.574], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-4., 0.}, 
               NCache[{-3.5, 
                 Rational[1, 25000]}, {-3.5, 0.00004}], "RoundingRadius" -> 
               0]},
             
             ImageSizeCache->{{28.654473578863133`, 54.95751601281029}, {
              116.4976842032878, 117.14591548277652`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.00004]& ,
           TagBoxNote->"0.00004"],
          StyleBox["0.00004`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.00004, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-3.5, 0.}, 
               NCache[{-3., 
                 Rational[9, 25000]}, {-3., 0.00036}], "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{54.33251601281029, 80.63555844675744}, {
              116.31183396737809`, 117.14591548277652`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.00036]& ,
           TagBoxNote->"0.00036"],
          StyleBox["0.00036`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.00036, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-3., 0.}, 
               NCache[{-2.5, 
                 Rational[9, 5000]}, {-2.5, 0.0018}], "RoundingRadius" -> 0]},
             
             
             ImageSizeCache->{{80.01055844675744, 106.3136008807046}, {
              115.47550790578441`, 117.14591548277652`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.0018]& ,
           TagBoxNote->"0.0018"],
          StyleBox["0.0018`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.0018, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-2.5, 0.}, 
               NCache[{-2., 
                 Rational[407, 25000]}, {-2., 0.01628}], "RoundingRadius" -> 
               0]},
             
             ImageSizeCache->{{105.6886008807046, 131.99164331465175`}, {
              107.0657847308701, 117.14591548277652`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.01628]& ,
           TagBoxNote->"0.01628"],
          StyleBox["0.01628`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.01628, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-2., 0.}, 
               NCache[{-1.5, 
                 Rational[933, 12500]}, {-1.5, 0.07464}], "RoundingRadius" -> 
               0]},
             
             ImageSizeCache->{{131.36664331465175`, 157.6696857485989}, {
              73.17134795683702, 117.14591548277652`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.07464]& ,
           TagBoxNote->"0.07464"],
          StyleBox["0.07464`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.07464, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.5, 0.}, 
               NCache[{-1., 
                 Rational[51, 250]}, {-1., 0.204}], "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{157.0446857485989, 
              183.34772818254604`}, {-1.9586099096625986`, 
              117.14591548277652`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.204]& ,
           TagBoxNote->"0.204"],
          StyleBox["0.204`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.204, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1., 0.}, 
               NCache[{-0.5, 
                 Rational[4441, 12500]}, {-0.5, 0.35528}], "RoundingRadius" -> 
               0]},
             
             ImageSizeCache->{{182.72272818254604`, 
              209.0257706164932}, {-89.81930893597725, 117.14591548277652`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.35528]& ,
           TagBoxNote->"0.35528"],
          StyleBox["0.35528`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.35528, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.5, 0.}, 
               NCache[{0., 
                 Rational[2117, 5000]}, {0., 0.4234}], "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{208.4007706164932, 
              234.70381305044035`}, {-129.38217790525647`, 
              117.1459154827765}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.4234]& ,
           TagBoxNote->"0.4234"],
          StyleBox["0.4234`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.4234, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0., 0.}, 
               NCache[{0.5, 
                 Rational[2273, 6250]}, {0.5, 0.36368}], "RoundingRadius" -> 
               0]},
             
             ImageSizeCache->{{234.07881305044035`, 
              260.3818554843875}, {-94.69787762860712, 117.14591548277652`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.36368]& ,
           TagBoxNote->"0.36368"],
          StyleBox["0.36368`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.36368, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.5, 0.}, 
               NCache[{1., 
                 Rational[633, 2500]}, {1., 0.2532}], "RoundingRadius" -> 0]},
             
             
             ImageSizeCache->{{259.7568554843875, 
              286.0598979183346}, {-30.53308368078025, 117.14591548277652`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.2532]& ,
           TagBoxNote->"0.2532"],
          StyleBox["0.2532`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.2532, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1., 0.}, 
               NCache[{1.5, 
                 Rational[3943, 25000]}, {1.5, 0.15772}], "RoundingRadius" -> 
               0]},
             
             ImageSizeCache->{{285.4348979183346, 311.7379403522818}, {
              24.91998045877898, 117.14591548277652`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.15772]& ,
           TagBoxNote->"0.15772"],
          StyleBox["0.15772`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.15772, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.5, 0.}, 
               NCache[{2., 
                 Rational[397, 5000]}, {2., 0.0794}], "RoundingRadius" -> 0]},
             
             
             ImageSizeCache->{{311.1129403522818, 337.41598278622894`}, {
              70.40682569768012, 117.14591548277652`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.0794]& ,
           TagBoxNote->"0.0794"],
          StyleBox["0.0794`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.0794, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{2., 0.}, 
               NCache[{2.5, 
                 Rational[123, 3125]}, {2.5, 0.03936}], "RoundingRadius" -> 
               0]},
             
             ImageSizeCache->{{336.79098278622894`, 363.0940252201761}, {
              93.66133646588239, 117.14591548277652`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.03936]& ,
           TagBoxNote->"0.03936"],
          StyleBox["0.03936`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.03936, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{2.5, 0.}, 
               NCache[{3., 
                 Rational[54, 3125]}, {3., 0.01728}], "RoundingRadius" -> 0]},
             
             
             ImageSizeCache->{{362.4690252201761, 388.77206765412325`}, {
              106.48500274365226`, 117.14591548277652`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.01728]& ,
           TagBoxNote->"0.01728"],
          StyleBox["0.01728`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.01728, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3., 0.}, 
               NCache[{3.5, 
                 Rational[191, 25000]}, {3.5, 0.00764}], "RoundingRadius" -> 
               0]},
             
             ImageSizeCache->{{388.14706765412325`, 414.4501100880704}, {
              112.08374110043223`, 117.14591548277652`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.00764]& ,
           TagBoxNote->"0.00764"],
          StyleBox["0.00764`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.00764, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.5, 0.}, 
               NCache[{4., 
                 Rational[73, 25000]}, {4., 0.00292}], "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{413.8251100880704, 440.12815252201756`}, {
              114.82503208010043`, 117.14591548277652`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.00292]& ,
           TagBoxNote->"0.00292"],
          StyleBox["0.00292`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.00292, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{4., 0.}, 
               NCache[{4.5, 
                 Rational[51, 25000]}, {4.5, 0.00204}], "RoundingRadius" -> 
               0]},
             
             ImageSizeCache->{{439.50315252201756`, 465.8061949559647}, {
              115.33612022885212`, 117.14591548277652`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.00204]& ,
           TagBoxNote->"0.00204"],
          StyleBox["0.00204`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.00204, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{4.5, 0.}, 
               NCache[{5., 
                 Rational[3, 5000]}, {5., 0.0006}], "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{465.1811949559647, 491.48423738991187`}, {
              116.17244629044582`, 117.14591548277652`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.0006]& ,
           TagBoxNote->"0.0006"],
          StyleBox["0.0006`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.0006, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{5., 0.}, 
               NCache[{5.5, 
                 Rational[1, 3125]}, {5.5, 0.00032}], "RoundingRadius" -> 0]},
             
             
             ImageSizeCache->{{490.85923738991187`, 517.162279823859}, {
              116.3350652468668, 117.14591548277652`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.00032]& ,
           TagBoxNote->"0.00032"],
          StyleBox["0.00032`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.00032, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{6., 0.}, 
               NCache[{6.5, 
                 Rational[1, 25000]}, {6.5, 0.00004}], "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{542.2153222578062, 568.5183646917533}, {
              116.4976842032878, 117.14591548277652`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.00004]& ,
           TagBoxNote->"0.00004"],
          StyleBox["0.00004`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.00004, {}], 
          "Tooltip"]& ]}, {}, {}}}, {{{{}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {}}, {{{}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {}}}}, {{{}, {}, 
      
      TagBox[
       {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[CompressedData["
1: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
         "]]},
       Annotation[#, "Charting`Private`Tag$47006983#1"]& ], 
      TagBox[
       {RGBColor[0, 
         NCache[
          Rational[2, 3], 0.6666666666666666], 0], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
         "]]},
       Annotation[#, "Charting`Private`Tag$47006983#2"]& ]}, {}}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{-4.16, 0.},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   PlotRange->{{-4, 4}, {All, All}},
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.02], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.8195568803948107`*^9, 3.819556887139757*^9}, 
   3.819565017545841*^9, 3.8196258648426123`*^9, 3.819735425357203*^9, 
   3.819818112768261*^9, 3.819828867856789*^9, 3.819829079551066*^9, 
   3.8198670508760853`*^9, 3.819868945825802*^9, 3.819869209984273*^9, 
   3.819869607769951*^9, 3.819872039237898*^9, 3.820343137572885*^9, 
   3.820389779884987*^9, 3.8204266945937138`*^9},
 CellLabel->
  "Out[1015]=",ExpressionUUID->"60358ce1-61f9-4ce6-9b0e-be3376d8eb5c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Fi", "=", 
   RowBox[{"FNIGi", "[", 
    RowBox[{"\[Alpha]", ",", "\[Beta]", ",", 
     RowBox[{"\[Mu]s", "[", 
      RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], ",", " ", 
     RowBox[{"\[Delta]s", "[", 
      RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Histogram", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"X1", ",", "X2"}], "}"}], ",", " ", "Automatic", ",", " ", 
     "\"\<CDF\>\""}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Fi", "[", "x", "]"}], ",", "  ", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.819556904652926*^9, 3.8195569184449873`*^9}, {
  3.819818125571156*^9, 3.819818179706017*^9}},
 CellLabel->
  "In[1016]:=",ExpressionUUID->"0b34faeb-c3d1-4fac-bdc2-ef911d66cfa8"],

Cell[BoxData[
 FormBox[
  GraphicsBox[{{
     {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
      Opacity[0.574], Thickness[Small]}], {{}, 
       {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{
        Opacity[0.574], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{-3.5, 0.}, {-3., 0.00006000000000000001}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{54.33251601281029, 80.63555844675744}, {
              116.50615647299699`, 117.14591548277652`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.00006000000000000001]& ,
           TagBoxNote->"0.00006000000000000001"],
          StyleBox["0.00006000000000000001`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.00006000000000000001, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-3., 0.}, {-2.5, 0.00124}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{80.01055844675744, 106.3136008807046}, {
              116.21589594733291`, 117.14591548277652`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.00124]& ,
           TagBoxNote->"0.00124"],
          StyleBox["0.00124`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.00124, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-2.5, 0.}, {-2., 0.00892}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{105.6886008807046, 131.99164331465175`}, {
              114.32674269555312`, 117.14591548277652`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.00892]& ,
           TagBoxNote->"0.00892"],
          StyleBox["0.00892`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.00892, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-2., 0.}, {-1.5, 0.04512}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{131.36664331465175`, 157.6696857485989}, {
              105.42214012857032`, 117.14591548277652`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.04512]& ,
           TagBoxNote->"0.04512"],
          StyleBox["0.04512`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.04512, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{-1.5, 0.}, {-1., 0.14914000000000002`}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{157.0446857485989, 183.34772818254606`}, {
              79.83493684079264, 117.14591548277652`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.14914000000000002`]& ,
           TagBoxNote->"0.14914000000000002"],
          StyleBox["0.14914000000000002`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.14914000000000002`, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{-1., 0.}, {-0.5, 0.32630000000000003`}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{182.72272818254606`, 209.02577061649322`}, {
              36.25650063176846, 117.14591548277652`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.32630000000000003`]& ,
           TagBoxNote->"0.32630000000000003"],
          StyleBox["0.32630000000000003`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.32630000000000003`, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.5, 0.}, {0., 0.5349}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{208.40077061649322`, 
              234.70381305044037`}, {-15.055656701729177`, 
              117.14591548277652`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.5349]& ,
           TagBoxNote->"0.5349"],
          StyleBox["0.5349`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.5349, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{0., 0.}, {0.5, 0.7171400000000001}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{234.07881305044037`, 
              260.38185548438753`}, {-59.88368907208688, 
              117.14591548277652`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.7171400000000001]& ,
           TagBoxNote->"0.7171400000000001"],
          StyleBox["0.7171400000000001`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.7171400000000001, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{0.5, 0.}, {1., 0.8459000000000001}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{259.75685548438753`, 
              286.0598979183347}, {-91.55652405895724, 117.14591548277652`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.8459000000000001]& ,
           TagBoxNote->"0.8459000000000001"],
          StyleBox["0.8459000000000001`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.8459000000000001, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{1., 0.}, {1.5, 0.9228400000000001}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{285.4348979183347, 
              311.73794035228184`}, {-110.48249426624058`, 
              117.14591548277652`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.9228400000000001]& ,
           TagBoxNote->"0.9228400000000001"],
          StyleBox["0.9228400000000001`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.9228400000000001, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{1.5, 0.}, {2., 0.9651000000000001}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{311.11294035228184`, 
              337.415982786229}, {-120.87775682095587`, 117.14591548277652`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.9651000000000001]& ,
           TagBoxNote->"0.9651000000000001"],
          StyleBox["0.9651000000000001`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.9651000000000001, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{2., 0.}, {2.5, 0.9849800000000001}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{336.790982786229, 
              363.09402522017615`}, {-125.76790872790666`, 
              117.14591548277652`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.9849800000000001]& ,
           TagBoxNote->"0.9849800000000001"],
          StyleBox["0.9849800000000001`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.9849800000000001, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{2.5, 0.}, {3., 0.9934000000000001}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{362.46902522017615`, 
              388.7720676541233}, {-127.83908976696729`, 
              117.14591548277652`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.9934000000000001]& ,
           TagBoxNote->"0.9934000000000001"],
          StyleBox["0.9934000000000001`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.9934000000000001, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{3., 0.}, {3.5, 0.9973000000000001}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{388.1470676541233, 
              414.45011008807046`}, {-128.79842540263672`, 
              117.1459154827765}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.9973000000000001]& ,
           TagBoxNote->"0.9973000000000001"],
          StyleBox["0.9973000000000001`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.9973000000000001, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{3.5, 0.}, {4., 0.9986800000000001}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{413.82511008807046`, 
              440.1281525220176}, {-129.1378826275659, 117.1459154827765}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.9986800000000001]& ,
           TagBoxNote->"0.9986800000000001"],
          StyleBox["0.9986800000000001`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.9986800000000001, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{4., 0.}, {4.5, 0.9994200000000001}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{439.5031525220176, 
              465.80619495596477`}, {-129.3199104148468, 117.1459154827765}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.9994200000000001]& ,
           TagBoxNote->"0.9994200000000001"],
          StyleBox["0.9994200000000001`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.9994200000000001, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{4.5, 0.}, {5., 0.9997800000000001}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{465.18119495596477`, 
              491.4842373899119}, {-129.40846447352396`, 117.1459154827765}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.9997800000000001]& ,
           TagBoxNote->"0.9997800000000001"],
          StyleBox["0.9997800000000001`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.9997800000000001, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{5., 0.}, {5.5, 0.9999000000000001}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{490.8592373899119, 
              517.1622798238591}, {-129.43798249308298`, 117.1459154827765}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.9999000000000001]& ,
           TagBoxNote->"0.9999000000000001"],
          StyleBox["0.9999000000000001`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.9999000000000001, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{5.5, 0.}, {6., 0.99994}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{516.5372798238591, 
              542.8403222578063}, {-129.44782183293603`, 117.1459154827765}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.99994]& ,
           TagBoxNote->"0.99994"],
          StyleBox["0.99994`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.99994, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{6., 0.}, {6.5, 0.9999800000000001}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{542.2153222578063, 
              568.5183646917534}, {-129.45766117278902`, 117.1459154827765}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.9999800000000001]& ,
           TagBoxNote->"0.9999800000000001"],
          StyleBox["0.9999800000000001`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.9999800000000001, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{6.5, 0.}, {7., 0.9999800000000001}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{567.8933646917534, 
              594.1964071257005}, {-129.45766117278902`, 117.1459154827765}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.9999800000000001]& ,
           TagBoxNote->"0.9999800000000001"],
          StyleBox["0.9999800000000001`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.9999800000000001, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{7., 0.}, {7.5, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{593.5714071257005, 
              619.8744495596477}, {-129.4625808427155, 117.1459154827765}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ]}, {}, {}}, {{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{
        Opacity[0.574], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-4., 0.}, {-3.5, 0.00002}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{28.654473578863133`, 54.95751601281029}, {
              116.51599581285001`, 117.14591548277652`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.00002]& ,
           TagBoxNote->"0.00002"],
          StyleBox["0.00002`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.00002, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-3.5, 0.}, {-3., 0.0002}, "RoundingRadius" -> 0]},
             
             
             ImageSizeCache->{{54.33251601281029, 80.63555844675744}, {
              116.47171878351142`, 117.14591548277652`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.0002]& ,
           TagBoxNote->"0.0002"],
          StyleBox["0.0002`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.0002, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-3., 0.}, {-2.5, 0.0011}, "RoundingRadius" -> 0]},
             
             
             ImageSizeCache->{{80.01055844675744, 106.3136008807046}, {
              116.25033363681848`, 117.14591548277652`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.0011]& ,
           TagBoxNote->"0.0011"],
          StyleBox["0.0011`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.0011, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-2.5, 0.}, {-2., 0.00924}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{105.6886008807046, 131.99164331465175`}, {
              114.24802797672896`, 117.14591548277652`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.00924]& ,
           TagBoxNote->"0.00924"],
          StyleBox["0.00924`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.00924, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{-2., 0.}, {-1.5, 0.046560000000000004`}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{131.36664331465175`, 157.6696857485989}, {
              105.0679238938616, 117.14591548277652`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.046560000000000004`]& ,
           TagBoxNote->"0.046560000000000004"],
          StyleBox["0.046560000000000004`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.046560000000000004`, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{-1.5, 0.}, {-1., 0.14856000000000003`}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{157.0446857485989, 183.34772818254606`}, {
              79.97760726866142, 117.14591548277652`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.14856000000000003`]& ,
           TagBoxNote->"0.14856000000000003"],
          StyleBox["0.14856000000000003`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.14856000000000003`, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{-1., 0.}, {-0.5, 0.32620000000000005`}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{182.72272818254606`, 209.02577061649322`}, {
              36.281098981401, 117.14591548277652`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.32620000000000005`]& ,
           TagBoxNote->"0.32620000000000005"],
          StyleBox["0.32620000000000005`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.32620000000000005`, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.5, 0.}, {0., 0.5379}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{208.40077061649322`, 
              234.70381305044037`}, {-15.793607190705657`, 
              117.14591548277652`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.5379]& ,
           TagBoxNote->"0.5379"],
          StyleBox["0.5379`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.5379, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0., 0.}, {0.5, 0.71974}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{234.07881305044037`, 
              260.38185548438753`}, {-60.52324616253314, 
              117.14591548277652`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.71974]& ,
           TagBoxNote->"0.71974"],
          StyleBox["0.71974`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.71974, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{0.5, 0.}, {1., 0.8463400000000001}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{259.75685548438753`, 
              286.0598979183347}, {-91.66475679734044, 117.14591548277652`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.8463400000000001]& ,
           TagBoxNote->"0.8463400000000001"],
          StyleBox["0.8463400000000001`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.8463400000000001, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1., 0.}, {1.5, 0.9252}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{285.4348979183347, 
              311.73794035228184`}, {-111.06301531756871`, 
              117.14591548277652`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.9252]& ,
           TagBoxNote->"0.9252"],
          StyleBox["0.9252`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.9252, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{1.5, 0.}, {2., 0.9649000000000001}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{311.11294035228184`, 
              337.415982786229}, {-120.82856012169078`, 117.14591548277652`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.9649000000000001]& ,
           TagBoxNote->"0.9649000000000001"],
          StyleBox["0.9649000000000001`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.9649000000000001, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{2., 0.}, {2.5, 0.9845800000000001}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{336.790982786229, 
              363.09402522017615`}, {-125.66951532937647`, 
              117.14591548277652`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.9845800000000001]& ,
           TagBoxNote->"0.9845800000000001"],
          StyleBox["0.9845800000000001`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.9845800000000001, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{2.5, 0.}, {3., 0.9932200000000001}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{362.46902522017615`, 
              388.7720676541233}, {-127.7948127376287, 117.14591548277652`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.9932200000000001]& ,
           TagBoxNote->"0.9932200000000001"],
          StyleBox["0.9932200000000001`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.9932200000000001, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3., 0.}, {3.5, 0.99704}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{388.1470676541233, 
              414.45011008807046`}, {-128.73446969359208`, 
              117.1459154827765}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.99704]& ,
           TagBoxNote->"0.99704"],
          StyleBox["0.99704`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.99704, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.5, 0.}, {4., 0.9985}, "RoundingRadius" -> 0]},
             ImageSizeCache->{{413.82511008807046`, 
              440.1281525220176}, {-129.09360559822733`, 117.1459154827765}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.9985]& ,
           TagBoxNote->"0.9985"],
          StyleBox["0.9985`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.9985, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{4., 0.}, {4.5, 0.9995200000000001}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{439.5031525220176, 
              465.80619495596477`}, {-129.34450876447931`, 
              117.1459154827765}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.9995200000000001]& ,
           TagBoxNote->"0.9995200000000001"],
          StyleBox["0.9995200000000001`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.9995200000000001, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{4.5, 0.}, {5., 0.99982}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{465.18119495596477`, 
              491.4842373899119}, {-129.41830381337695`, 117.1459154827765}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.99982]& ,
           TagBoxNote->"0.99982"],
          StyleBox["0.99982`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.99982, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{5., 0.}, {5.5, 0.9999800000000001}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{490.8592373899119, 
              517.1622798238591}, {-129.45766117278902`, 117.1459154827765}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.9999800000000001]& ,
           TagBoxNote->"0.9999800000000001"],
          StyleBox["0.9999800000000001`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.9999800000000001, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{5.5, 0.}, {6., 0.9999800000000001}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{516.5372798238591, 
              542.8403222578063}, {-129.45766117278902`, 117.1459154827765}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.9999800000000001]& ,
           TagBoxNote->"0.9999800000000001"],
          StyleBox["0.9999800000000001`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.9999800000000001, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{6., 0.}, {6.5, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{542.2153222578063, 
              568.5183646917534}, {-129.4625808427155, 117.1459154827765}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{6.5, 0.}, {7., 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{567.8933646917534, 
              594.1964071257005}, {-129.4625808427155, 117.1459154827765}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{7., 0.}, {7.5, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{593.5714071257005, 
              619.8744495596477}, {-129.4625808427155, 117.1459154827765}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], 
          "Tooltip"]& ]}, {}, {}}}, {{{{}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {}}, {{{}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, \
{}}}}, {{{}, {}, 
      TagBox[
       {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[CompressedData["
1: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
17ahFHot024WtI6x8jlzNZrHSuHtoeTPh3PHWKd6TQd7EkrBgO+ZnrHlGGte
SCRIXv8zbF23uZbLm8PSDdvQJfa5DHbs4exInRxh9TIXU0SbKyHgyGjDR8+/
rH5eZdztRB2IGGZHmK7tZYH7ivHaQz/g7UwF84tMO8s+Lmeq36wFUv/7EzYY
WMeaHjL4mzL+H5zTF8/773wei70vq3e7+C/4SPP++fnaO/jr6NN4QqYXdvdy
b/QzqYfL/wXH7tzXB9JjRfPqn9tgoA7ynbj6QTu5rVbPpBc418JvexX/BU1d
Yd7p93/B2nqPppX6IDywbPFVzB8Bcq/wwDWnIQgeOQD9NSPw4HzhoLbbEPjc
SPr3tHcEni5ffL3ecwicohy9KIxRONHQ5vPWbwj0qnjdu2xHIVCg0q4oeggY
uxQv3BdmA/dOKSmVwiEIXw7RHXDkgP8Nt2OlPMNQpSdBPyU8Dufw8cdB94Zh
jUKPqKv4OOx1iT12InwYrOipktFbxmFIwtNCKHIYFr7tUG1VH4djliKVEU+G
YYf2AXOr8+MQlbsnzjV9GCI0zF85543DM97wQ0UVw2C274nmQ6MJCBU3H7iw
PAyjm0V8GuMmAXR1Jh0cRmCf9wuX0pRJyC3d5u13eQT8m3ba5WZPgnqsYMVj
pxEQvXP0RPjnSdB5KZtc4j4C2IjHep2hSRDg/Elj+xLz8qH9Q6naFJQp237q
jx0BpeOJnNzWKbgwd7toT9UIXHPfbv1AdAbi/3pYRkqMgiiNU2y0eQbk/8hU
mEuOQsHzt2Ibd8zAj4BLrVLSo7BUrdaQdWgGOMUa9Ay5UfDfrAXVV2Yg+Gt1
c7zKKITX2Urwlc1AlNnZqyLao5Aml9DmdXUW9Ivktpq7jkJLh5CB/Zc5UA3n
sQ78NAo6oXat7o1z8BvXu/0MjUKxWqFFQMccJFZu6cv7PAqJj85fThybA5v1
I0FdlaPgcOpDYLvYPAzc/6IlUT8KC2Xm+XoX54FrtLZMu3sUxDPTxPfSFqDy
xIf4S8ujYHXjwF/KiUXYx+0qNbWXDdtsv/xkGy3CDTHzNTVqbJjUMyz/ab0I
Sw/09JL2syFY5sqLZI9F+Hcw4rk2sCGr/qk5JC+C7eCmjoCjbJiXXay/vrAI
D9d59740ZENk48eCP+lLoD6ocbDwKhvKtu+9V8a3DDOGr/Zrv2CDxS7D5HHm
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
HwQ=
         "]]},
       Annotation[#, "Charting`Private`Tag$47012190#1"]& ]}, {}}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{-4.16, 0.},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   PlotRange->{{-4, 4}, {All, All}},
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.02], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.819556911894639*^9, 3.819556924249475*^9}, 
   3.8196258724012737`*^9, 3.819818130437221*^9, 3.8198181826923933`*^9, 
   3.819828869269938*^9, 3.819829080894951*^9, 3.819867052147956*^9, 
   3.819868947144709*^9, 3.81986921138233*^9, 3.819869608833001*^9, 
   3.8198720427680387`*^9, 3.8203431388170233`*^9, 3.820389780919787*^9, 
   3.820426695573061*^9},
 CellLabel->
  "Out[1017]=",ExpressionUUID->"7f066dd6-ca19-470b-9caf-55e669914aee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Fi", "=", 
  RowBox[{"FNIGi", "[", 
   RowBox[{"\[Alpha]", ",", "\[Beta]", ",", 
    RowBox[{"\[Mu]s", "[", 
     RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], ",", " ", 
    RowBox[{"\[Delta]s", "[", 
     RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"u1", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Fi", "[", 
      RowBox[{"X1", "[", 
       RowBox[{"[", "k", "]"}], "]"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", 
       RowBox[{"Length", "[", "X1", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.819556949620345*^9, 3.8195569870042553`*^9}, {
  3.81955715204447*^9, 3.8195571524469423`*^9}, {3.819818195902321*^9, 
  3.819818248230566*^9}},
 CellLabel->
  "In[1018]:=",ExpressionUUID->"81960045-7c86-48bf-8315-d763734344a1"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   RowBox[{
    TagBox["InterpolatingFunction",
     "SummaryHead"], "[", 
    DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
     TemplateBox[{
       PaneSelectorBox[{False -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
               ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
               BaseStyle -> {}, Evaluator -> Automatic, Method -> 
               "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GraphicsBox[{{{{}, {}, 
                 TagBox[{
                   Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                   LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAcN44V8d7EMDMD42i+dd6Pqp7G4UF
SQ/ARPrhjw4Imj5k8K18RXYNwCxOOeJ3mbs+g4tAuXPCC8B+ALHzQdrZPjbS
IIQuFwrAqEOElE949j7ZzulvskcIwEs0OJn5ZxQ/4fGyoCSXBsBcFQjBc3ov
P9rKZPJfwgTAzTNnhL9ySD9mT2TSJ/YCwBpzhwoPKWE/V/pj991IAcD7Zj2i
ybJ0P3C2mHq67v6/fYqHOAR5iD/7xGmQlYn7v6P7IjcX+5g/rSrWwok1+L9w
krlo6iinP0D8EzcQmfS/u6bSNdu1tD+dGlI1czrxv5sj5Hjgd8A/tknD6tAm
679oO5kI7ivJP4AMGaTt+uO/fRm8HFTF0T+80d7ihpXavwYHtObmK9c/93Oi
CfcmyL9DOdI5UkrdP9ypshPbcZc/NZLxTGJ14T+z3wHgbSPQP3XTe20pTuQ/
LThbnFmL3j/2KxwjqcnmP8CuWZjp/eU/Oa66SPjF6D+o6eLeAUftP2AIfZA1
juo/fsW1iDAK8j+zzNyyBOTrPwG/XgXHX/U/I5cTFurs7D+jTDZAy/34P9X2
MW6Uye0/fI0N8fJd/D/2+qr4SGTuPzqxCTBEAwBAm5SxbAXg7j8i8D5ZAs8B
QOkqfB5eN+8/pQh0PdJ7A0BhlDH393HvPzdrwADZTAVATvX/BCGf7z9lpwx/
8f4GQFRM/4SvvO8//zcLb32oCEAIl6yAKdHvP6kSIT5AdgpARK41npXg7z/u
xjbIFCUMQFCmTBd26u8/QsVjMSD4DUDhamPgwvHvPzGdkFU9rA9Ai8ywJV32
7z/G5Lf15qsQQJcDwGVz+e8//B8zsMqTEUCYmPNQtfvvPwBILkg3bBJApA46
kx397z8MFbVPv1YTQMWIpkwh/u8/TgwVEAE9FECUbGj/x/7vP13w9K3LExVA
RwcHKS//7z90eWC7sfwVQNqlETN5/+8/We9LpiDWFkCJxr+Vpv/vP3SPEEpJ
qxdAbqXmTMT/7z+X1GBdjZIYQBZIMIvZ/+8/hwYxTlpqGUBa36uF5v/vP3/d
jK5CVBpAZJSpt+//7z+t3sHH5DkbQKqva4b1/+8/qcx2vg8QHEB4p4sQ+f/v
P61ftyRW+BxAkTTbkfv/7z9+33doJdEdQMnHMBb9/+8/VwTEGxC8HkD0ft0m
/v/vP2ZT6Ye0oh9APLO50f7/7z+hR8fo8DwgQO8rHDn//+8/E7hfRZWxIECg
sr2B///vP+weuBB+HiFAX3pwrf//7z+5EWTNtYwhQDkZUMr//+8/OtDnXw==

                    "]]}, 
                  Annotation[#, 
                   "Charting`Private`Tag$47013593#1"]& ]}}, {}}, {
              DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
               AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
               GridLines -> {None, None}, DisplayFunction -> Identity, 
               PlotRangePadding -> {{
                  Scaled[0.1], 
                  Scaled[0.1]}, {
                  Scaled[0.1], 
                  Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
               All, DisplayFunction -> Identity, AspectRatio -> 1, 
               Axes -> {False, False}, AxesLabel -> {None, None}, 
               AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
               Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameTicks -> {{None, None}, {None, None}}, 
               GridLines -> {None, None}, GridLinesStyle -> Directive[
                 GrayLevel[0.5, 0.4]], ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], 
               Method -> {
                "DefaultBoundaryStyle" -> Automatic, 
                 "DefaultGraphicsInteraction" -> {
                  "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                   "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                 "DefaultMeshStyle" -> AbsolutePointSize[6], 
                 "ScalingFunctions" -> None, 
                 "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
               PlotRange -> {{-4.120877830538319, 8.774824760107068}, {0., 
                0.9999998999999554}}, PlotRangeClipping -> True, 
               PlotRangePadding -> {{
                  Scaled[0.1], 
                  Scaled[0.1]}, {
                  Scaled[0.1], 
                  Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
             GridBox[{{
                RowBox[{
                  TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   RowBox[{"(", "\[NoBreak]", 
                    GridBox[{{
                    RowBox[{"-", "4.120877830538319`"}], 
                    "8.774824760107068`"}}, RowSpacings -> 1, ColumnSpacings -> 
                    1, RowAlignments -> Baseline, ColumnAlignments -> Center],
                     "\[NoBreak]", ")"}], "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"scalar\"", "SummaryItem"]}]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
               ButtonFunction :> (Typeset`open$$ = False), Appearance -> None,
                BaseStyle -> {}, Evaluator -> Automatic, Method -> 
               "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GraphicsBox[{{{{}, {}, 
                 TagBox[{
                   Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                   LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAcN44V8d7EMDMD42i+dd6Pqp7G4UF
SQ/ARPrhjw4Imj5k8K18RXYNwCxOOeJ3mbs+g4tAuXPCC8B+ALHzQdrZPjbS
IIQuFwrAqEOElE949j7ZzulvskcIwEs0OJn5ZxQ/4fGyoCSXBsBcFQjBc3ov
P9rKZPJfwgTAzTNnhL9ySD9mT2TSJ/YCwBpzhwoPKWE/V/pj991IAcD7Zj2i
ybJ0P3C2mHq67v6/fYqHOAR5iD/7xGmQlYn7v6P7IjcX+5g/rSrWwok1+L9w
krlo6iinP0D8EzcQmfS/u6bSNdu1tD+dGlI1czrxv5sj5Hjgd8A/tknD6tAm
679oO5kI7ivJP4AMGaTt+uO/fRm8HFTF0T+80d7ihpXavwYHtObmK9c/93Oi
CfcmyL9DOdI5UkrdP9ypshPbcZc/NZLxTGJ14T+z3wHgbSPQP3XTe20pTuQ/
LThbnFmL3j/2KxwjqcnmP8CuWZjp/eU/Oa66SPjF6D+o6eLeAUftP2AIfZA1
juo/fsW1iDAK8j+zzNyyBOTrPwG/XgXHX/U/I5cTFurs7D+jTDZAy/34P9X2
MW6Uye0/fI0N8fJd/D/2+qr4SGTuPzqxCTBEAwBAm5SxbAXg7j8i8D5ZAs8B
QOkqfB5eN+8/pQh0PdJ7A0BhlDH393HvPzdrwADZTAVATvX/BCGf7z9lpwx/
8f4GQFRM/4SvvO8//zcLb32oCEAIl6yAKdHvP6kSIT5AdgpARK41npXg7z/u
xjbIFCUMQFCmTBd26u8/QsVjMSD4DUDhamPgwvHvPzGdkFU9rA9Ai8ywJV32
7z/G5Lf15qsQQJcDwGVz+e8//B8zsMqTEUCYmPNQtfvvPwBILkg3bBJApA46
kx397z8MFbVPv1YTQMWIpkwh/u8/TgwVEAE9FECUbGj/x/7vP13w9K3LExVA
RwcHKS//7z90eWC7sfwVQNqlETN5/+8/We9LpiDWFkCJxr+Vpv/vP3SPEEpJ
qxdAbqXmTMT/7z+X1GBdjZIYQBZIMIvZ/+8/hwYxTlpqGUBa36uF5v/vP3/d
jK5CVBpAZJSpt+//7z+t3sHH5DkbQKqva4b1/+8/qcx2vg8QHEB4p4sQ+f/v
P61ftyRW+BxAkTTbkfv/7z9+33doJdEdQMnHMBb9/+8/VwTEGxC8HkD0ft0m
/v/vP2ZT6Ye0oh9APLO50f7/7z+hR8fo8DwgQO8rHDn//+8/E7hfRZWxIECg
sr2B///vP+weuBB+HiFAX3pwrf//7z+5EWTNtYwhQDkZUMr//+8/OtDnXw==

                    "]]}, 
                  Annotation[#, 
                   "Charting`Private`Tag$47013593#1"]& ]}}, {}}, {
              DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
               AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
               GridLines -> {None, None}, DisplayFunction -> Identity, 
               PlotRangePadding -> {{
                  Scaled[0.1], 
                  Scaled[0.1]}, {
                  Scaled[0.1], 
                  Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
               All, DisplayFunction -> Identity, AspectRatio -> 1, 
               Axes -> {False, False}, AxesLabel -> {None, None}, 
               AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
               Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameTicks -> {{None, None}, {None, None}}, 
               GridLines -> {None, None}, GridLinesStyle -> Directive[
                 GrayLevel[0.5, 0.4]], ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], 
               Method -> {
                "DefaultBoundaryStyle" -> Automatic, 
                 "DefaultGraphicsInteraction" -> {
                  "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                   "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                 "DefaultMeshStyle" -> AbsolutePointSize[6], 
                 "ScalingFunctions" -> None, 
                 "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
               PlotRange -> {{-4.120877830538319, 8.774824760107068}, {0., 
                0.9999998999999554}}, PlotRangeClipping -> True, 
               PlotRangePadding -> {{
                  Scaled[0.1], 
                  Scaled[0.1]}, {
                  Scaled[0.1], 
                  Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
             GridBox[{{
                RowBox[{
                  TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   RowBox[{"(", "\[NoBreak]", 
                    GridBox[{{
                    RowBox[{"-", "4.120877830538319`"}], 
                    "8.774824760107068`"}}, RowSpacings -> 1, ColumnSpacings -> 
                    1, RowAlignments -> Baseline, ColumnAlignments -> Center],
                     "\[NoBreak]", ")"}], "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"scalar\"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["3", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["False", "SummaryItem"]}]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[Typeset`open$$], ImageSize -> Automatic]},
      "SummaryPanel"],
     DynamicModuleValues:>{}], "]"}],
   InterpolatingFunction[{{-4.120877830538319, 8.774824760107068}}, {
    5, 7, 0, {71}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, CompressedData["
1:eJwBSQK2/SFib1JlAgAAAAEAAABHAAAA4OTjZcd7EMCH/L0xRH4PwE4vtJf5
BA7AFmKq/a6LDMDdlKBjZBILwKTHlskZmQnAbPqML88fCMAzLYOVhKYGwPpf
efs5LQXAwZJvYe+zA8CIxWXHpDoCwFD4Wy1awQDALlakJh+Q/r+8u5DyiZ37
v0whfb70qvi/2oZpil+49b9o7FVWysXyv+yjhERqpu+/CG9d3D/B6b8oOjZ0
Fdzjv4gKHhjW7du/wKDPR4Ej0L8A3ATesWSxv0DLNGOhxL0/kJwbKX070z9Q
Bmr50QXfPxA43GQTaOU/8GwDzT1N6z/oUJUaNJnwP1zrqE7Ji/M/zIW8gl5+
9j9AINC283D5P7C64+qIY/w/IFX3Hh5W/z/Kd4WpWSQBQAJFj0OknQJAPBKZ
3e4WBEB036J3OZAFQKysrBGECQdA5nm2q86CCEAeR8BFGfwJQFYUyt9jdQtA
kOHTea7uDEDIrt0T+WcOQAB8561D4Q9AnKT4I0etEEA6i/1w7GkRQNZxAr6R
JhJAclgHCzfjEkAOPwxY3J8TQKolEaWBXBRASAwW8iYZFUDk8ho/zNUVQIDZ
H4xxkhZAHMAk2RZPF0C4pikmvAsYQFSNLnNhyBhA8nMzwAaFGUCOWjgNrEEa
QCpBPVpR/hpAxidCp/a6G0BiDkf0m3ccQAD1S0FBNB1AnNtQjubwHUA4wlXb
i60eQNSoWigxah9AuMevOmsTIEAHOzLhvXEgQFWutIcQ0CBAoyE3LmMuIUDx
lLnUtYwhQLD+CLQ=
    "], {
    Developer`PackedArrayForm, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 
     14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 
     32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 
     50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 
     68, 69, 70, 71}, CompressedData["
1:eJwVzF1Ik2EYgOG5FSGlW9gGilDOFpRpmGQj3J5Vxgx1uZE/g5zp2iohB+EP
Suo2EaJGS8F0q4zKiUZtOFiZqzBkmY45JG0t/UxGzKHOF3TobNP17uDmOrtT
qhQiWQyJROLjaKZP+nVXEzd0Vs0b7H3C3fdo5U280syNERVbp3MdXM+RgcUF
gZfLiZF74oUk2K2nzdQ5GVBsRM0UcQZMHh+l9TAvglD3kbBNlICyKuxRaW4D
aK6LKUtNUBNr+1XY8QCuHs1PYOl6gDyoSpBKDFDwvosduTsETpMoY2x+BMbj
UtRq7RgUOHhaN9UOtS9HJs4Q01DL3m6wP/sJrfEZ5MrOObB0/6k4kLsIr07I
w1/6PcDxPcxhLvyFb8yAK5vwwg1zKYX+3AfWrHNxjORloHcJLuuurUD6ydX9
FukqWNL6kmLZfhCWVL5wLPrhHctjYMnWgBPS95vsazCkr2nPS0Lwe5nt2ChG
sDleFpxXI8ixz8/e7EMwdanCkPcZQaFie7bXieBtiimbSiAQH5I55rwIqlwt
qqAfQbW0U568gWC8njvt3ERwRyp63LCNwNZx8EN5CEGoLV0+HMa/5sygcQeB
fM+Mr3wXgeLrqVE3NoucyMmMIEigtvtrsI3ndWI9VqlpJIax9LRj/ClsfvhW
HoHtNli/L2FPT6wfRlgfLZUXwL521v3Ywl6RlAn/YYvutcSFsfyBlgs72L1P
BYm72NLAfWPU1lQmI4LdaiNLoqry3dqo5mqpOao9qWgy6n+q4jQd
     "]}, {Automatic}],
   Editable->False,
   SelectWithContents->True,
   Selectable->False], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.8198181937863197`*^9, {3.8198182303992567`*^9, 3.819818249994876*^9}, 
   3.819828870612825*^9, 3.819829082104888*^9, 3.819867052548429*^9, 
   3.8198689483247833`*^9, 3.81986921264038*^9, 3.81986960980899*^9, 
   3.8198720437960033`*^9, 3.8203431400155773`*^9, 3.820389781870351*^9, 
   3.8204266964922132`*^9},
 CellLabel->
  "Out[1018]=",ExpressionUUID->"b2b67273-7684-4efd-b581-8130ab516d41"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{"u1", ",", " ", "Automatic", ",", " ", "\"\<PDF\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.819556999290401*^9, 3.8195570070764513`*^9}},
 CellLabel->
  "In[1020]:=",ExpressionUUID->"c7121882-1879-4d49-8ec6-21479d9eae7b"],

Cell[BoxData[
 FormBox[
  GraphicsBox[{
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.5459999999999999], Thickness[Small]}], {}, 
     {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
      Opacity[0.5459999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0., 0}, {0.05, 0.9652}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{28.65447357886309, 
            49.821907526020816`}, {-114.70548756880592`, 
            117.14591548277645`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.9652]& ,
         TagBoxNote->"0.9652"],
        StyleBox["0.9652`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.9652, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.05, 0}, {0.1, 1.0056}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{49.196907526020816`, 
            70.36434147317854}, {-124.3838409497466, 117.14591548277645`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1.0056]& ,
         TagBoxNote->"1.0056"],
        StyleBox["1.0056`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.0056, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.1, 0}, {0.15, 1.0192}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{69.73934147317854, 
            90.90677542033626}, {-127.64190050372665`, 117.14591548277645`}}],
          
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1.0192]& ,
         TagBoxNote->"1.0192"],
        StyleBox["1.0192`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.0192, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.15, 0}, {0.2, 0.9768}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{90.28177542033626, 
            111.44920936749399`}, {-117.48442071778891`, 
            117.14591548277645`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.9768]& ,
         TagBoxNote->"0.9768"],
        StyleBox["0.9768`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.9768, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.2, 0}, {0.25, 1.0004}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{110.82420936749399`, 
            131.9916433146517}, {-123.13811229675423`, 117.14591548277645`}}],
          
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1.0004]& ,
         TagBoxNote->"1.0004"],
        StyleBox["1.0004`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.0004, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.25, 0}, {0.3, 0.9968}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{131.3666433146517, 
            152.53407726180944`}, {-122.27568476775951`, 
            117.14591548277645`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.9968]& ,
         TagBoxNote->"0.9968"],
        StyleBox["0.9968`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.9968, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.3, 0}, {0.35, 1.0252}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{151.90907726180944`, 
            173.07651120896713`}, {-129.07927971871777`, 
            117.14591548277645`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1.0252]& ,
         TagBoxNote->"1.0252"],
        StyleBox["1.0252`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.0252, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.35, 0}, {0.4, 1.0036}, "RoundingRadius" -> 0]},
           ImageSizeCache->{{172.45151120896713`, 
            193.61894515612488`}, {-123.90471454474954`, 
            117.14591548277645`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1.0036]& ,
         TagBoxNote->"1.0036"],
        StyleBox["1.0036`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.0036, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.4, 0}, {0.45, 1.0132}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{192.99394515612488`, 
            214.16137910328263`}, {-126.20452128873546`, 
            117.14591548277645`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1.0132]& ,
         TagBoxNote->"1.0132"],
        StyleBox["1.0132`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.0132, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.45, 0}, {0.5, 0.9596}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{213.53637910328263`, 
            234.70381305044032`}, {-113.36393363481417`, 
            117.14591548277645`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.9596]& ,
         TagBoxNote->"0.9596"],
        StyleBox["0.9596`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.9596, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.5, 0}, {0.55, 1.0168}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{234.07881305044032`, 
            255.24624699759806`}, {-127.06694881773012`, 
            117.14591548277645`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1.0168]& ,
         TagBoxNote->"1.0168"],
        StyleBox["1.0168`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.0168, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.55, 0}, {0.6, 1.0076}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{254.62124699759806`, 
            275.78868094475575`}, {-124.86296735474366`, 
            117.14591548277645`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1.0076]& ,
         TagBoxNote->"1.0076"],
        StyleBox["1.0076`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.0076, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.6, 0}, {0.65, 0.9796}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{275.16368094475575`, 
            296.3311148919135}, {-118.15519768478478`, 117.14591548277645`}}],
          
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.9796]& ,
         TagBoxNote->"0.9796"],
        StyleBox["0.9796`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.9796, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.65, 0}, {0.7, 0.9908}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{295.7061148919135, 
            316.8735488390712}, {-120.83830555276833`, 117.14591548277645`}}],
          
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.9908]& ,
         TagBoxNote->"0.9908"],
        StyleBox["0.9908`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.9908, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.7, 0}, {0.75, 0.9952}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{316.2485488390712, 
            337.41598278622894`}, {-121.89238364376186`, 
            117.14591548277645`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.9952]& ,
         TagBoxNote->"0.9952"],
        StyleBox["0.9952`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.9952, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.75, 0}, {0.8, 1.014}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{336.79098278622894`, 
            357.9584167333867}, {-126.39617185073428`, 117.14591548277645`}}],
          
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1.014]& ,
         TagBoxNote->"1.014"],
        StyleBox["1.014`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.014, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.8, 0}, {0.85, 0.984}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{357.3334167333867, 
            378.5008506805444}, {-119.20927577577831`, 117.14591548277645`}}],
          
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.984]& ,
         TagBoxNote->"0.984"],
        StyleBox["0.984`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.984, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.85, 0}, {0.9, 1.0144}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{377.8758506805444, 
            399.0432846277021}, {-126.49199713173365`, 117.14591548277645`}}],
          
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1.0144]& ,
         TagBoxNote->"1.0144"],
        StyleBox["1.0144`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.0144, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.9, 0}, {0.95, 1.0268}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{398.4182846277021, 
            419.5857185748598}, {-129.46258084271545`, 117.14591548277645`}}],
          
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1.0268]& ,
         TagBoxNote->"1.0268"],
        StyleBox["1.0268`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.0268, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.95, 0}, {1., 1.0052}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{418.9607185748598, 
            440.12815252201756`}, {-124.28801566874722`, 
            117.14591548277645`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1.0052]& ,
         TagBoxNote->"1.0052"],
        StyleBox["1.0052`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.0052, {}], 
        "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{-0.02, 0},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   PlotRange->{{0., 1.}, {All, All}},
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.02], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.819557137516981*^9, 3.819557246050778*^9, {3.819818232940778*^9, 
   3.819818253982278*^9}, 3.8198288708280354`*^9, 3.819829082356028*^9, 
   3.819868948524501*^9, 3.8198692128525333`*^9, 3.819869610023302*^9, 
   3.819872044963388*^9, 3.82034314021618*^9, 3.8203897820754833`*^9, 
   3.82042669668748*^9},
 CellLabel->
  "Out[1020]=",ExpressionUUID->"bb39e9f0-4194-499d-875d-05302967b9f6"]
}, Open  ]],

Cell["This is extremely slow (see small number of simulations):", "Text",
 CellChangeTimes->{{3.819818263922024*^9, 3.8198182680533743`*^9}, {
  3.819819980220047*^9, 
  3.819819991876176*^9}},ExpressionUUID->"e023f8cb-07cc-49a4-804e-\
5ff7c191555e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"U", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"UniformDistribution", "[", "]"}], ",", "1000"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"N1", "=", 
    RowBox[{"N", "[", 
     RowBox[{"NIGInv", "[", 
      RowBox[{"U", ",", "\[Alpha]", ",", "\[Beta]"}], "]"}], "]"}]}], ";"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8195573387350616`*^9, 3.819557418570524*^9}, {
  3.819557465335994*^9, 3.819557472093195*^9}, {3.819557520280286*^9, 
  3.819557521132452*^9}, {3.819557590997061*^9, 3.81955759110176*^9}, {
  3.819625788618456*^9, 3.819625793446602*^9}, {3.819626529123835*^9, 
  3.8196265306455812`*^9}, {3.819626581117407*^9, 3.8196265835213413`*^9}, {
  3.819626653747211*^9, 3.8196267174884157`*^9}},
 CellLabel->
  "In[1021]:=",ExpressionUUID->"b4698f59-54f2-4130-b4d9-2752df4f8ec0"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"7.397794`", ",", "Null"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.819626700768358*^9, 3.819626735279104*^9, 
  3.819818269282229*^9, 3.8198288779775352`*^9, 3.819829089620701*^9, 
  3.819868955213028*^9, 3.819869219866715*^9, 3.819869617076413*^9, 
  3.820343148454062*^9, 3.820389788976378*^9, 3.820426703662735*^9},
 CellLabel->
  "Out[1022]=",ExpressionUUID->"e870ed9b-447f-419e-9c85-10c5b44c09c7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Histogram", "[", 
    RowBox[{"N1", ",", " ", "Automatic", ",", " ", "\"\<PDF\>\""}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"fNIG", "[", 
        RowBox[{"x", ",", " ", "\[Alpha]", ",", " ", "\[Beta]", ",", " ", 
         RowBox[{"\[Mu]s", "[", 
          RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], ",", " ", 
         RowBox[{"\[Delta]s", "[", 
          RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}]}], "]"}], ",", 
       RowBox[{"NIGPDF", "[", 
        RowBox[{"x", ",", "\[Alpha]", ",", "\[Beta]"}], "]"}]}], "}"}], ",", 
     " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.819557480182271*^9, 3.819557544430017*^9}, {
  3.819557583488448*^9, 3.819557616188189*^9}},
 CellLabel->
  "In[1023]:=",ExpressionUUID->"a4ef5bba-5ee2-458b-ad59-3ef4d7af73ce"],

Cell[BoxData[
 FormBox[
  GraphicsBox[{{
     {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
      Opacity[0.5529999999999999], Thickness[Small]}], {}, 
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.5529999999999999], Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-3.5, 0}, {-3., 0.002}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{28.654473578863133`, 50.90308826008177}, {
             115.3593515083408, 117.14591548277647`}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 0.002]& ,
          TagBoxNote->"0.002"],
         StyleBox["0.002`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.002, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-3., 0}, {-2.5, 0.004}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{50.27808826008177, 72.52670294130043}, {
             114.19778753390511`, 117.14591548277647`}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 0.004]& ,
          TagBoxNote->"0.004"],
         StyleBox["0.004`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.004, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-2.5, 0}, {-2., 0.012}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{71.90170294130043, 94.15031762251908}, {
             109.55153163616241`, 117.14591548277647`}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 0.012]& ,
          TagBoxNote->"0.012"],
         StyleBox["0.012`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.012, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-2., 0}, {-1.5, 0.054}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{93.52531762251908, 115.77393230373774`}, {
             85.15868817301319, 117.14591548277647`}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 0.054]& ,
          TagBoxNote->"0.054"],
         StyleBox["0.054`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.054, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1.5, 0}, {-1., 0.24}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{115.14893230373774`, 
             137.3975469849564}, {-22.86676144950482, 117.14591548277647`}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 0.24]& ,
          TagBoxNote->"0.24"],
         StyleBox["0.24`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.24, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1., 0}, {-0.5, 0.332}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{136.7725469849564, 
             159.02116166617503`}, {-76.29870427354598, 117.14591548277647`}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 0.332]& ,
          TagBoxNote->"0.332"],
         StyleBox["0.332`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.332, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.5, 0}, {0., 0.392}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{158.39616166617503`, 
             180.6447763473937}, {-111.14562350661632`, 117.14591548277647`}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 0.392]& ,
          TagBoxNote->"0.392"],
         StyleBox["0.392`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.392, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0., 0}, {0.5, 0.354}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{180.0197763473937, 
             202.26839102861237`}, {-89.07590799233841, 117.14591548277647`}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 0.354]& ,
          TagBoxNote->"0.354"],
         StyleBox["0.354`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.354, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.5, 0}, {1., 0.282}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{201.64339102861237`, 
             223.892005709831}, {-47.25960491265403, 117.14591548277647`}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 0.282]& ,
          TagBoxNote->"0.282"],
         StyleBox["0.282`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.282, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1., 0}, {1.5, 0.158}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{223.267005709831, 245.51562039104965`}, {
             24.757361502357952`, 117.14591548277647`}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 0.158]& ,
          TagBoxNote->"0.158"],
         StyleBox["0.158`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.158, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1.5, 0}, {2., 0.086}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{244.89062039104965`, 267.1392350722683}, {
             66.57366458204234, 117.14591548277647`}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 0.086]& ,
          TagBoxNote->"0.086"],
         StyleBox["0.086`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.086, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{2., 0}, {2.5, 0.038}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{266.5142350722683, 288.762849753487}, {
             94.4511999684986, 117.14591548277647`}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 0.038]& ,
          TagBoxNote->"0.038"],
         StyleBox["0.038`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.038, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{2.5, 0}, {3., 0.03}, "RoundingRadius" -> 0]},
            ImageSizeCache->{{288.137849753487, 310.38646443470566`}, {
             99.09745586624132, 117.14591548277647`}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 0.03]& ,
          TagBoxNote->"0.03"],
         StyleBox["0.03`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.03, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{3., 0}, {3.5, 0.01}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{309.76146443470566`, 332.01007911592427`}, {
             110.71309561059809`, 117.14591548277647`}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 0.01]& ,
          TagBoxNote->"0.01"],
         StyleBox["0.01`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.01, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{3.5, 0}, {4., 0.002}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{331.38507911592427`, 353.63369379714294`}, {
             115.3593515083408, 117.14591548277647`}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 0.002]& ,
          TagBoxNote->"0.002"],
         StyleBox["0.002`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.002, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{4., 0}, {4.5, 0.002}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{353.00869379714294`, 375.2573084783616}, {
             115.3593515083408, 117.14591548277647`}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 0.002]& ,
          TagBoxNote->"0.002"],
         StyleBox["0.002`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.002, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{5.5, 0}, {6., 0.002}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{417.8795378407989, 440.12815252201756`}, {
             115.3593515083408, 117.14591548277647`}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 0.002]& ,
          TagBoxNote->"0.002"],
         StyleBox["0.002`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.002, {}], 
         "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}}}, {{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
         "]]},
       Annotation[#, "Charting`Private`Tag$47092455#1"]& ], 
      TagBox[
       {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
         "]]},
       Annotation[#, "Charting`Private`Tag$47092455#2"]& ]}, {}}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{-3.69, 0},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   PlotRange->{{-3.5, 6.}, {All, All}},
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.02], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.8195575419424*^9, 3.819557544695973*^9}, 
   3.819557585198186*^9, {3.819557691567587*^9, 3.819557692013756*^9}, 
   3.8196265187997513`*^9, 3.819626556723386*^9, {3.819626713256447*^9, 
   3.819626735910104*^9}, 3.819818276924736*^9, 3.819828878762555*^9, 
   3.8198290905511217`*^9, 3.819868955938429*^9, 3.8198692206391983`*^9, 
   3.8198696176297417`*^9, 3.820343149106455*^9, 3.8203897895529747`*^9, 
   3.820426704234022*^9},
 CellLabel->
  "Out[1023]=",ExpressionUUID->"b1b3fa76-4186-46aa-8037-d005034e6427"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"F2NIG2", "[", 
    RowBox[{"1", ",", "1", ",", "\[Alpha]", ",", "\[Beta]", ",", 
     RowBox[{"\[Mu]s", "[", 
      RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], ",", "\[Delta]", ",", 
     RowBox[{
      RowBox[{"\[Delta]s", "[", 
       RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], "-", "\[Delta]"}]}], 
    "]"}], ",", 
   RowBox[{"N", "[", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"Length", "[", "X1", "]"}]], 
     RowBox[{"Length", "[", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"X1", ",", "X2"}], "}"}], "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
           "#1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "<", 
           "1"}], "&&", 
          RowBox[{
           RowBox[{
           "#1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "<", 
           "1"}]}], "&"}]}], "]"}], "]"}]}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.819557644198098*^9, 3.8195576501898203`*^9}, {
   3.819557697920245*^9, 3.819557755678751*^9}, {3.819557897310877*^9, 
   3.819557900098466*^9}, 3.819557999216592*^9, {3.819818311195569*^9, 
   3.8198183172814837`*^9}},
 CellLabel->
  "In[1024]:=",ExpressionUUID->"41f9efb9-b013-4792-93bb-fd537fb47b68"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"0.7483239432184009`", ",", "0.74626`"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.819557744060224*^9, 3.8195577665096292`*^9}, 
   3.819557904853499*^9, 3.819558005335061*^9, 3.8196267398490257`*^9, {
   3.819818315025856*^9, 3.819818319266361*^9}, 3.819828880555184*^9, 
   3.819829092311578*^9, 3.81986895759566*^9, 3.8198692223225517`*^9, 
   3.819869619010277*^9, 3.820343150564567*^9, 3.8203897909177227`*^9, 
   3.820426705505424*^9},
 CellLabel->
  "Out[1024]=",ExpressionUUID->"fe17528c-5b80-4829-9c9a-25ff8d2de306"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fit simulated data", "Section",
 CellChangeTimes->{{3.8198691436010523`*^9, 
  3.819869146771007*^9}},ExpressionUUID->"373e1f46-7ecb-4f13-b845-\
c64820ed83d9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Length", "[", "X1", "]"}], ",", " ", 
   RowBox[{"Length", "[", "X2", "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.819869179616827*^9, 3.819869187955839*^9}},
 CellLabel->
  "In[1025]:=",ExpressionUUID->"6e53a1ae-d4f1-4f5c-b021-8c27fa1c385b"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"50000", ",", "50000"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.819869222401886*^9, 3.81986922254244*^9}, 
   3.819869619062015*^9, 3.819872060731904*^9, 3.820343150591064*^9, 
   3.820389790951604*^9, 3.820426705537429*^9},
 CellLabel->
  "Out[1025]=",ExpressionUUID->"bf638138-0099-4264-9ec5-43e2e3c5b5af"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"x1", "=", "X1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x2", "=", "X2"}], ";"}]}], "Input",
 CellChangeTimes->{{3.819869219159625*^9, 3.8198692286225147`*^9}, {
  3.819872639444668*^9, 3.819872642139278*^9}},
 CellLabel->
  "In[1026]:=",ExpressionUUID->"6a4c5179-84c0-4496-9d2e-b1369ee09754"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rs", "=", 
  RowBox[{"SpearmanRho", "[", 
   RowBox[{"x1", ",", "x2"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8198692432400703`*^9, 3.8198692462579613`*^9}, {
  3.819869427122341*^9, 3.819869427671082*^9}},
 CellLabel->
  "In[1028]:=",ExpressionUUID->"babe3c93-6d5c-49c4-af20-c9039bced884"],

Cell[BoxData[
 FormBox["0.3736061522528345`", TraditionalForm]], "Output",
 CellChangeTimes->{3.819869246527899*^9, 3.819869428070305*^9, 
  3.819869619139896*^9, 3.81987221481876*^9, 3.819872643204226*^9, 
  3.820343150622883*^9, 3.820389790976981*^9, 3.820426705572928*^9},
 CellLabel->
  "Out[1028]=",ExpressionUUID->"1f15b8dd-4fb6-4a7b-b4b4-32b80553abd5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"QDemp", "[", 
    RowBox[{"q", ",", "x1", ",", " ", "x2"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"q", ",", " ", 
     RowBox[{"{", 
      RowBox[{"0.05", ",", " ", "0.1", ",", " ", "0.9", ",", " ", "0.95"}], 
      "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.819869248319642*^9, 3.819869280075378*^9}},
 CellLabel->
  "In[1029]:=",ExpressionUUID->"a779f639-0d7d-48e5-823f-200678c877df"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
   "0.1724`", ",", "0.2508`", ",", "0.29480000000000006`", ",", 
    "0.2235999999999998`"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.8198692820066233`*^9, 3.819869619176002*^9, 
  3.8198722159966373`*^9, 3.8198726441493387`*^9, 3.820343150945354*^9, 
  3.8203897913000593`*^9, 3.82042670588595*^9},
 CellLabel->
  "Out[1029]=",ExpressionUUID->"b26350eb-5010-4ccc-8438-93c1075b76bb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[Alpha]", ",", "\[Beta]", ",", "\[Mu]", ",", "\[Delta]"}], 
  "}"}]], "Input",
 CellChangeTimes->{{3.819869292108171*^9, 3.8198692954174547`*^9}},
 CellLabel->
  "In[1030]:=",ExpressionUUID->"0c44ccd4-6f54-4e42-b8c7-db8ac79513eb"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"5", ",", "3", ",", "0", ",", "1"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.819869295627146*^9, 3.819869619209882*^9, 
  3.8198722168518267`*^9, 3.8203431509507837`*^9, 3.820389791306581*^9, 
  3.820426705891316*^9},
 CellLabel->
  "Out[1030]=",ExpressionUUID->"a6e17b7d-58ed-4e8f-bb2d-e72c97bca25a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"\[Alpha]", ",", "\[Beta]", ",", "\[Mu]", ",", "\[Delta]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8198693084084883`*^9, 3.819869312429537*^9}},
 CellLabel->
  "In[1031]:=",ExpressionUUID->"002241fe-80bb-4037-8029-d6c7963b4f14"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Rho", "[", 
   RowBox[{"5", ",", "3", ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.819869317997377*^9, 3.819869318279188*^9}, {
  3.81986939507613*^9, 3.819869405077971*^9}, {3.8198696201040363`*^9, 
  3.8198696202359753`*^9}, {3.819869763910426*^9, 3.819869764980914*^9}},
 CellLabel->
  "In[1032]:=",ExpressionUUID->"0d944b05-d876-45aa-9387-c1b2c135fdcd"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"1.463704`", ",", "0.37341890847620185`"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.819869408398972*^9, {3.819869622435955*^9, 3.819869624706223*^9}, 
   3.8198697674128923`*^9, 3.819869907291913*^9, 3.819872219516938*^9, 
   3.819872651726988*^9, 3.82034315226845*^9, 3.820389792624607*^9, 
   3.820426707125448*^9},
 CellLabel->
  "Out[1032]=",ExpressionUUID->"e01205cb-50eb-4f70-87b5-c6359f85b07e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Delta]s", "[", 
   RowBox[{"5", ",", "3"}], "]"}], "-", "1"}]], "Input",
 CellChangeTimes->{{3.819869490230123*^9, 3.819869514877905*^9}, {
  3.819869629442006*^9, 3.819869629570325*^9}},
 CellLabel->
  "In[1033]:=",ExpressionUUID->"05834249-285e-4fec-a47a-4d738167db66"],

Cell[BoxData[
 FormBox["1.56`", TraditionalForm]], "Output",
 CellChangeTimes->{{3.819869507679183*^9, 3.81986952559763*^9}, {
   3.819869622480096*^9, 3.8198696298601923`*^9}, 3.819872223674141*^9, 
   3.819872651763542*^9, 3.820343152324642*^9, 3.8203897926545362`*^9, 
   3.8204267071658077`*^9},
 CellLabel->
  "Out[1033]=",ExpressionUUID->"87342d50-a742-483e-8792-c5af3cdb01f8"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Timing", "[", 
   RowBox[{"NMinimize", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"rs", "-", 
          RowBox[{"Rho", "[", 
           RowBox[{"\[Alpha]", ",", "3", ",", "1"}], "]"}]}], ")"}], "^", 
        "2"}], ",", 
       RowBox[{"4", "<", " ", "\[Alpha]", "<", "6"}]}], "}"}], ",", " ", 
     "\[Alpha]", ",", " ", 
     RowBox[{"Method", "\[Rule]", "\"\<SimulatedAnnealing\>\""}]}], "]"}], 
   "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.819869419243043*^9, 3.81986946729214*^9}, {
  3.81986949998383*^9, 3.81986951244518*^9}, {3.819869589437641*^9, 
  3.8198695895127277`*^9}, {3.819869633129355*^9, 3.8198696334165688`*^9}, {
  3.819871636634088*^9, 3.819871651405284*^9}, {3.819871715127633*^9, 
  3.819871723957344*^9}},
 CellLabel->
  "In[1034]:=",ExpressionUUID->"c863a848-a83a-4707-b89f-31cb1a7adf16"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"sol", "=", 
   RowBox[{"NMinimize", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"rs", "-", 
          FractionBox[
           RowBox[{"6", " ", 
            RowBox[{"ArcSin", "[", 
             FractionBox["1", 
              RowBox[{"2", " ", 
               RowBox[{"\[Delta]s", "[", 
                RowBox[{"\[Alpha]", ",", "3"}], "]"}]}]], "]"}]}], "\[Pi]"]}],
          ")"}], "^", "2"}], ",", 
       RowBox[{"4", "<", " ", "\[Alpha]", "<", "6"}]}], "}"}], ",", " ", 
     "\[Alpha]", ",", " ", 
     RowBox[{"Method", "\[Rule]", "\"\<SimulatedAnnealing\>\""}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.819869419243043*^9, 3.81986946729214*^9}, {
  3.81986949998383*^9, 3.81986951244518*^9}, {3.819869589437641*^9, 
  3.8198695895127277`*^9}, {3.819869633129355*^9, 3.8198696334165688`*^9}, {
  3.819871636634088*^9, 3.819871651405284*^9}, {3.819871715127633*^9, 
  3.819871723957344*^9}, {3.819872006381109*^9, 3.8198720122971077`*^9}, {
  3.81987230595779*^9, 3.819872306408276*^9}},
 CellLabel->
  "In[1035]:=",ExpressionUUID->"ef4f73b6-673e-4492-96d9-05c4e7964d3d"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"0.05278`", ",", 
    RowBox[{"{", 
     RowBox[{"4.327446930211863`*^-17", ",", 
      RowBox[{"{", 
       RowBox[{"\[Alpha]", "\[Rule]", "5.008980525567191`"}], "}"}]}], 
     "}"}]}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.819872226367463*^9, 3.819872306705467*^9, 
  3.8198726540089207`*^9, 3.820343152383314*^9, 3.820389792712818*^9, 
  3.820426707200403*^9},
 CellLabel->
  "Out[1035]=",ExpressionUUID->"e580b366-7801-436c-8ef4-1e574f737b3e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Alpha]0", "=", 
  RowBox[{"\[Alpha]", "/.", 
   RowBox[{"sol", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.819872311514243*^9, 3.819872319580711*^9}, {
  3.82033622506316*^9, 3.8203362259162416`*^9}},
 CellLabel->
  "In[1036]:=",ExpressionUUID->"6bfd9f28-0dcf-4efa-a545-3b0d7d2b00e0"],

Cell[BoxData[
 FormBox["5.008980525567191`", TraditionalForm]], "Output",
 CellChangeTimes->{{3.819872314485279*^9, 3.819872319900242*^9}, 
   3.8198726566972103`*^9, 3.8203431523894157`*^9, 3.820389792719199*^9, 
   3.820426707206142*^9},
 CellLabel->
  "Out[1036]=",ExpressionUUID->"62659655-ada2-422e-86c6-23434be3a03d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"rs", ",", 
   RowBox[{"Rho", "[", 
    RowBox[{"\[Alpha]0", ",", "3", ",", "1"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.819872274498136*^9, 3.819872286516788*^9}, {
  3.81987232305149*^9, 3.819872324217112*^9}},
 CellLabel->
  "In[1037]:=",ExpressionUUID->"99e5a5f1-59da-4284-a01e-810a1ab173c0"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"0.3736061522528345`", ",", "0.3716192062987682`"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.819872280766699*^9, 3.819872288435577*^9}, 
   3.819872325721187*^9, 3.819872658904711*^9, 3.820343153710957*^9, 
   3.820389793960883*^9, 3.820426708410364*^9},
 CellLabel->
  "Out[1037]=",ExpressionUUID->"f77464b4-c478-4037-a0af-66e93c9f026f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Timing", "[", 
   RowBox[{"NMinimize", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"rs", "-", 
          RowBox[{"Rho", "[", 
           RowBox[{"\[Alpha]", ",", "3", ",", "1"}], "]"}]}], ")"}], "^", 
        "2"}], ",", 
       RowBox[{
        RowBox[{"\[Alpha]0", "-", "0.1"}], "<", " ", "\[Alpha]", "<", 
        RowBox[{"\[Alpha]0", "+", "1"}]}]}], "}"}], ",", " ", "\[Alpha]", ",",
      " ", 
     RowBox[{"Method", "\[Rule]", "\"\<SimulatedAnnealing\>\""}], ",", " ", 
     RowBox[{"AccuracyGoal", "\[Rule]", "1"}], ",", 
     RowBox[{"PrecisionGoal", "\[Rule]", "1"}]}], "]"}], "]"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.819869419243043*^9, 3.81986946729214*^9}, {
  3.81986949998383*^9, 3.81986951244518*^9}, {3.819869589437641*^9, 
  3.8198695895127277`*^9}, {3.819869633129355*^9, 3.8198696334165688`*^9}, {
  3.819871636634088*^9, 3.819871651405284*^9}, {3.819871715127633*^9, 
  3.819871723957344*^9}, {3.819872327023513*^9, 3.819872361510931*^9}, {
  3.8198724342761183`*^9, 3.81987243597495*^9}},
 CellLabel->
  "In[1038]:=",ExpressionUUID->"77374d35-f3f3-41a0-bcac-149260732ed7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"rs", "-", 
        FractionBox[
         RowBox[{"6", " ", 
          RowBox[{"ArcSin", "[", 
           FractionBox["1", 
            RowBox[{"2", " ", 
             RowBox[{"\[Delta]s", "[", 
              RowBox[{"\[Alpha]", ",", "3"}], "]"}]}]], "]"}]}], "\[Pi]"]}], 
       ")"}], "^", "2"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "4", ",", "8"}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Alpha]", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"rs", "-", 
            RowBox[{"Rho", "[", 
             RowBox[{"\[Alpha]", ",", "3", ",", "1"}], "]"}]}], ")"}], "^", 
          "2"}]}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"\[Alpha]", ",", " ", "4", ",", " ", "8", ",", " ", "0.25"}], 
        "}"}]}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.8198719628387127`*^9, 3.819872000888899*^9}, {
  3.81987238492877*^9, 3.819872404312426*^9}},
 CellLabel->
  "In[1039]:=",ExpressionUUID->"a24da88e-672e-482e-9d10-2461ecfd87fb"],

Cell[BoxData[
 FormBox[
  GraphicsBox[{{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
4d8/Bp706O03S2LB/wEmkykO
         "]]},
       Annotation[#, "Charting`Private`Tag$47102225#1"]& ]}, {}}, {{}, 
     {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6], PointBox[{{4., 0.21888768053344518`}, {4.25, 
       0.07091374139030314}, {4.5, 0.015650452785653007`}, {4.75, 
       0.0034577156032453583`}, {5., 3.5060231888323205`*^-8}, {5.25, 
       0.0019148417729563515`}, {5.5, 0.006097900142469839}, {5.75, 
       0.011052539082645429`}, {6., 0.015640926953228097`}, {6.25, 
       0.0208515305459245}, {6.5, 0.025358732892726183`}, {6.75, 
       0.029536084718519155`}, {7., 0.03357698235109683}, {7.25, 
       0.0382045268891324}, {7.5, 0.042095628804422205`}, {7.75, 
       0.04558224224478857}, {8., 0.0487155429816757}}]}, {{}, {}}}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{4., 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, 
     "DefaultGraphicsInteraction" -> {
      "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
       "Effects" -> {
        "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
         "Droplines" -> {
          "freeformCursorMode" -> True, 
           "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
     "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{4, 8}, {0., 0.106884249186393}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.819871989233481*^9, 3.819872002194902*^9}, 
   3.819872241536462*^9, 3.8198724281001177`*^9, 3.819872682228159*^9, 
   3.8203431742618713`*^9, 3.8203898136481857`*^9, 3.820426729132567*^9},
 CellLabel->
  "Out[1039]=",ExpressionUUID->"d3d6a208-95ba-4e83-af03-2ab36a0b54ec"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"\[Alpha]", ",", "\[Beta]", ",", "\[Delta]"}], "]"}]], "Input",
 CellChangeTimes->{{3.819820272343604*^9, 3.819820275197219*^9}},
 CellLabel->
  "In[1040]:=",ExpressionUUID->"3e4c752e-145a-4b16-8482-8d75249c5c18"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hatqd", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"QDemp", "[", 
     RowBox[{"q", ",", " ", "x1", ",", " ", "x2"}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"q", ",", 
      RowBox[{"{", 
       RowBox[{"0.05", ",", " ", "0.1", ",", " ", "0.9", ",", " ", "0.95"}], 
       "}"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.819820110632003*^9, 3.8198201517443457`*^9}, {
  3.8198726118802834`*^9, 3.819872613709041*^9}},
 CellLabel->
  "In[1041]:=",ExpressionUUID->"835e9a08-cf43-4ae4-a1af-cf4a5b04489b"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
   "0.1724`", ",", "0.2508`", ",", "0.29480000000000006`", ",", 
    "0.2235999999999998`"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.819820144003454*^9, 3.819820152025132*^9}, 
   3.8198288811626387`*^9, 3.8198290927148438`*^9, 3.819868974022751*^9, {
   3.81987260910463*^9, 3.819872613939415*^9}, 3.819872682800681*^9, 
   3.82034317467531*^9, 3.820389814035397*^9, 3.820426729514154*^9},
 CellLabel->
  "Out[1041]=",ExpressionUUID->"f9b65d2f-c799-4e3b-ba0f-8cc5bd0263a8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"target", "=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"SpearmanRho", "[", 
       RowBox[{"x1", ",", " ", "x2"}], "]"}], "}"}], ",", " ", "hatqd"}], 
    "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.819820168440001*^9, 3.819820206296959*^9}, {
  3.8198726174717083`*^9, 3.819872619037015*^9}},
 CellLabel->
  "In[1042]:=",ExpressionUUID->"054af96b-23fa-4a04-ba78-dae6fc104a7c"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
   "0.3736061522528345`", ",", "0.1724`", ",", "0.2508`", ",", 
    "0.29480000000000006`", ",", "0.2235999999999998`"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.819820193076612*^9, 3.819820206552484*^9}, 
   3.81982888127349*^9, 3.8198290927208*^9, 3.8198689747243443`*^9, 
   3.8198726196723137`*^9, 3.81987268284853*^9, 3.820343174698163*^9, 
   3.820389814059792*^9, 3.820426729537591*^9},
 CellLabel->
  "Out[1042]=",ExpressionUUID->"6aed6bf7-56fc-4436-b05d-0aba5b93ebd5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"HoldForm", "[", 
       FractionBox[
        RowBox[{"6", " ", 
         RowBox[{"ArcSin", "[", 
          FractionBox["\[Delta]", 
           RowBox[{"2", " ", 
            RowBox[{"\[Delta]s", "[", 
             RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}]}]], "]"}]}], 
        "\[Pi]"], "]"}], "}"}], ",", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"HoldForm", "[", 
         RowBox[{"QD", "[", 
          RowBox[{
          "q0", ",", " ", "\[Alpha]", ",", "\[Beta]", ",", "\[Delta]", ",", 
           "F1"}], "]"}], "]"}], "/.", 
        RowBox[{"q0", "\[Rule]", "q"}]}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"q", ",", 
         RowBox[{"{", 
          RowBox[{"0.05", ",", "0.1", ",", " ", "0.9", ",", " ", "0.95"}], 
          "}"}]}], "}"}]}], "]"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8198202684377403`*^9, 3.819820376514683*^9}, {
  3.8198204374076233`*^9, 3.819820438862364*^9}, {3.819820542594532*^9, 
  3.819820552730052*^9}, {3.819877154499302*^9, 3.819877160354188*^9}, {
  3.819878080717407*^9, 3.8198780822822*^9}},
 CellLabel->
  "In[1043]:=",ExpressionUUID->"8e1701a7-9cfd-412e-b135-97d312961dcf"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    TagBox[
     FractionBox[
      RowBox[{"6", " ", 
       RowBox[{
        SuperscriptBox["sin", 
         RowBox[{"-", "1"}]], "(", 
        FractionBox["\[Delta]", 
         RowBox[{"2", " ", 
          RowBox[{"\[Delta]s", "(", 
           RowBox[{"\[Alpha]", ",", "\[Beta]"}], ")"}]}]], ")"}]}], "\[Pi]"],
     HoldForm], ",", 
    TagBox[
     RowBox[{"QD", "(", 
      RowBox[{
      "0.05`", ",", "\[Alpha]", ",", "\[Beta]", ",", "\[Delta]", ",", "F1"}], 
      ")"}],
     HoldForm], ",", 
    TagBox[
     RowBox[{"QD", "(", 
      RowBox[{
      "0.1`", ",", "\[Alpha]", ",", "\[Beta]", ",", "\[Delta]", ",", "F1"}], 
      ")"}],
     HoldForm], ",", 
    TagBox[
     RowBox[{"QD", "(", 
      RowBox[{
      "0.9`", ",", "\[Alpha]", ",", "\[Beta]", ",", "\[Delta]", ",", "F1"}], 
      ")"}],
     HoldForm], ",", 
    TagBox[
     RowBox[{"QD", "(", 
      RowBox[{
      "0.95`", ",", "\[Alpha]", ",", "\[Beta]", ",", "\[Delta]", ",", "F1"}], 
      ")"}],
     HoldForm]}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.8198203768669024`*^9, 3.819820440530354*^9, 
  3.819820552998172*^9, 3.819828881484148*^9, 3.819829092824017*^9, 
  3.819868977506586*^9, 3.8198771301045313`*^9, 3.819877160635502*^9, 
  3.819878083122364*^9, 3.8203431747039757`*^9, 3.8203898140689983`*^9, 
  3.8204267295467987`*^9},
 CellLabel->
  "Out[1043]=",ExpressionUUID->"69745756-914c-43cd-bc3d-d09c6e0b9ac5"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "obj", "]"}]], "Input",
 CellChangeTimes->{{3.81987825937953*^9, 3.819878260906391*^9}},
 CellLabel->
  "In[1044]:=",ExpressionUUID->"6175b15b-6317-4835-9695-48c15f55235e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"obj", "[", 
   RowBox[{
    RowBox[{"\[Alpha]_", "?", "NumericQ"}], ",", 
    RowBox[{"\[Beta]_", "?", "NumericQ"}], ",", 
    RowBox[{"\[Delta]_", "?", "NumericQ"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"F1", ",", "f", ",", "q0", ",", "q"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"\[Delta]s", "[", 
         RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], "-", "\[Delta]"}], "<", 
       "0"}], ",", 
      RowBox[{"\[Delta]", "-", 
       RowBox[{"\[Delta]s", "[", 
        RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"F1", "=", 
        RowBox[{"FNIGi", "[", 
         RowBox[{"\[Alpha]", ",", "\[Beta]", ",", 
          RowBox[{"\[Mu]s", "[", 
           RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], ",", " ", 
          RowBox[{
           RowBox[{"\[Delta]s", "[", 
            RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], "-", "\[Delta]"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"f", "=", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", 
            FractionBox[
             RowBox[{"6", " ", 
              RowBox[{"ArcSin", "[", 
               FractionBox["\[Delta]", 
                RowBox[{"2", " ", 
                 RowBox[{"\[Delta]s", "[", 
                  RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}]}]], "]"}]}], 
             "\[Pi]"], "}"}], ",", " ", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"QD", "[", 
               RowBox[{
               "q0", ",", " ", "\[Alpha]", ",", "\[Beta]", ",", "\[Delta]", 
                ",", "F1"}], "]"}], "/.", 
              RowBox[{"q0", "\[Rule]", "q"}]}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"q", ",", 
               RowBox[{"{", 
                RowBox[{
                "0.05", ",", "0.1", ",", " ", "0.9", ",", " ", "0.95"}], 
                "}"}]}], "}"}]}], "]"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"Total", "[", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"target", "-", "f"}], ")"}], "2"], "]"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",\

 CellChangeTimes->{
  3.819877135350144*^9, {3.819877177237286*^9, 3.8198771777314157`*^9}, {
   3.819877915045517*^9, 3.819877915703601*^9}, {3.819878090002882*^9, 
   3.819878110603818*^9}, {3.819878147060523*^9, 3.8198782854945087`*^9}, {
   3.819878351077882*^9, 3.819878352952647*^9}, {3.8198785151079082`*^9, 
   3.819878609217183*^9}, {3.819879487297781*^9, 3.819879523788451*^9}, {
   3.819883284743881*^9, 3.81988328600276*^9}, {3.819883509732986*^9, 
   3.819883533794332*^9}},
 CellLabel->
  "In[1045]:=",ExpressionUUID->"4e429732-3ece-45c6-a8df-fcc0c244bb52"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"sol", "=", 
   RowBox[{"NMinimize", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"obj", "[", 
        RowBox[{"\[Alpha]", ",", "\[Beta]", ",", "\[Delta]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"\[Alpha]", ">", "3"}], " ", "&&", 
        RowBox[{
         RowBox[{"Abs", "[", "\[Beta]", "]"}], "<", "\[Alpha]"}], "&&", 
        RowBox[{"0", "<", " ", "\[Delta]", "<", 
         RowBox[{"Re", "[", 
          RowBox[{"\[Delta]s", "[", 
           RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], "]"}]}]}]}], "}"}], 
     ",", " ", 
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "\[Beta]", ",", "\[Delta]"}], "}"}], ",", " ", 
     
     RowBox[{"Method", "\[Rule]", "\"\<SimulatedAnnealing\>\""}], ",", " ", 
     RowBox[{"PrecisionGoal", "\[Rule]", "1"}], ",", " ", 
     RowBox[{"AccuracyGoal", "\[Rule]", "1"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.819869419243043*^9, 3.81986946729214*^9}, {
  3.81986949998383*^9, 3.81986951244518*^9}, {3.819869589437641*^9, 
  3.8198695895127277`*^9}, {3.819869633129355*^9, 3.8198696334165688`*^9}, {
  3.819871636634088*^9, 3.819871651405284*^9}, {3.819871715127633*^9, 
  3.819871723957344*^9}, {3.819872006381109*^9, 3.8198720122971077`*^9}, {
  3.81987230595779*^9, 3.819872306408276*^9}, {3.8198771706362753`*^9, 
  3.8198772636893997`*^9}, {3.819877707869554*^9, 3.819877728206834*^9}, {
  3.819877904578409*^9, 3.819877906829452*^9}, {3.819878268919306*^9, 
  3.819878271250824*^9}, {3.819878355494495*^9, 3.819878357441977*^9}, {
  3.819878738913653*^9, 3.819878745350308*^9}, {3.819879157213667*^9, 
  3.819879159587221*^9}, {3.819879202695931*^9, 3.819879205088241*^9}},
 CellLabel->
  "In[1046]:=",ExpressionUUID->"639d4592-553c-4bff-96a8-157e7d2089dd"],

Cell[BoxData[
 FormBox["$Aborted", TraditionalForm]], "Output",
 CellChangeTimes->{{3.819877204091794*^9, 3.8198772642039413`*^9}, 
   3.819877713284824*^9, 3.81987806324444*^9, 3.819878226021531*^9, {
   3.8198782752152452`*^9, 3.819878290835848*^9}, 3.8198783578872643`*^9, 
   3.819878617973057*^9, 3.819878746383451*^9, 3.8198788901762257`*^9, {
   3.819879194835821*^9, 3.8198791983877907`*^9}, 3.819879346641713*^9, 
   3.8198804704342203`*^9, 3.820343234519466*^9, 3.8203898828545713`*^9, 
   3.820426732979084*^9},
 CellLabel->
  "Out[1046]=",ExpressionUUID->"9d42e1cf-8e89-4c55-99f7-3b49f755eb30"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"sol", "=", 
   RowBox[{"NMinimize", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"obj", "[", 
        RowBox[{"\[Alpha]", ",", "\[Beta]", ",", "\[Delta]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"\[Alpha]", ">", "3"}], " ", "&&", 
        RowBox[{
         RowBox[{"Abs", "[", "\[Beta]", "]"}], "<", "\[Alpha]"}], "&&", 
        RowBox[{"0", "<", " ", "\[Delta]", "<", 
         RowBox[{"Re", "[", 
          RowBox[{"\[Delta]s", "[", 
           RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], "]"}]}]}]}], "}"}], 
     ",", " ", 
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "\[Beta]", ",", "\[Delta]"}], "}"}], ",", " ", 
     
     RowBox[{"Method", "\[Rule]", "\"\<SimulatedAnnealing\>\""}], ",", " ", 
     RowBox[{"PrecisionGoal", "\[Rule]", "1"}], ",", " ", 
     RowBox[{"AccuracyGoal", "\[Rule]", "1"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.819869419243043*^9, 3.81986946729214*^9}, {
   3.81986949998383*^9, 3.81986951244518*^9}, {3.819869589437641*^9, 
   3.8198695895127277`*^9}, {3.819869633129355*^9, 3.8198696334165688`*^9}, {
   3.819871636634088*^9, 3.819871651405284*^9}, {3.819871715127633*^9, 
   3.819871723957344*^9}, {3.819872006381109*^9, 3.8198720122971077`*^9}, {
   3.81987230595779*^9, 3.819872306408276*^9}, {3.8198771706362753`*^9, 
   3.8198772636893997`*^9}, {3.819877707869554*^9, 3.819877728206834*^9}, {
   3.819877904578409*^9, 3.819877906829452*^9}, {3.819878268919306*^9, 
   3.819878271250824*^9}, {3.819878355494495*^9, 3.819878357441977*^9}, {
   3.819878738913653*^9, 3.819878745350308*^9}, {3.819879157213667*^9, 
   3.819879159587221*^9}, {3.819879202695931*^9, 3.819879205088241*^9}, 
   3.8198835429178553`*^9},
 CellLabel->
  "In[826]:=",ExpressionUUID->"6f87417c-1783-49b5-ba1e-08b72910dcee"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"1026.486311`", ",", 
    RowBox[{"{", 
     RowBox[{"0.03804132448603885`", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Alpha]", "\[Rule]", "3.634850896624407`"}], ",", 
        RowBox[{"\[Beta]", "\[Rule]", "0.5830676604377677`"}], ",", 
        RowBox[{"\[Delta]", "\[Rule]", "1.381099702497392`"}]}], "}"}]}], 
     "}"}]}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.8198845705675087`*^9},
 CellLabel->
  "Out[826]=",ExpressionUUID->"29a99057-068f-48cb-ae66-a6305a1b2bd5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"sol", "=", 
   RowBox[{"NMinimize", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"obj", "[", 
        RowBox[{"\[Alpha]", ",", "\[Beta]", ",", "\[Delta]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"\[Alpha]", ">", "3"}], " ", "&&", 
        RowBox[{
         RowBox[{"Abs", "[", "\[Beta]", "]"}], "<", "\[Alpha]"}], "&&", 
        RowBox[{"0", "<", " ", "\[Delta]", "<", 
         RowBox[{"Re", "[", 
          RowBox[{"\[Delta]s", "[", 
           RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], "]"}]}]}]}], "}"}], 
     ",", " ", 
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "\[Beta]", ",", "\[Delta]"}], "}"}], ",", " ", 
     
     RowBox[{"Method", "\[Rule]", "\"\<SimulatedAnnealing\>\""}], ",", " ", 
     RowBox[{"PrecisionGoal", "\[Rule]", "2"}], ",", " ", 
     RowBox[{"AccuracyGoal", "\[Rule]", "2"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.819869419243043*^9, 3.81986946729214*^9}, {
   3.81986949998383*^9, 3.81986951244518*^9}, {3.819869589437641*^9, 
   3.8198695895127277`*^9}, {3.819869633129355*^9, 3.8198696334165688`*^9}, {
   3.819871636634088*^9, 3.819871651405284*^9}, {3.819871715127633*^9, 
   3.819871723957344*^9}, {3.819872006381109*^9, 3.8198720122971077`*^9}, {
   3.81987230595779*^9, 3.819872306408276*^9}, {3.8198771706362753`*^9, 
   3.8198772636893997`*^9}, {3.819877707869554*^9, 3.819877728206834*^9}, {
   3.819877904578409*^9, 3.819877906829452*^9}, {3.819878268919306*^9, 
   3.819878271250824*^9}, {3.819878355494495*^9, 3.819878357441977*^9}, {
   3.819878738913653*^9, 3.819878745350308*^9}, {3.819879157213667*^9, 
   3.819879159587221*^9}, {3.819879202695931*^9, 3.819879205088241*^9}, 
   3.8198835429178553`*^9, {3.819884665306184*^9, 3.819884669015758*^9}},
 CellLabel->
  "In[828]:=",ExpressionUUID->"9a54f475-124b-4226-9788-f476be71c86f"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"1329.88414`", ",", 
    RowBox[{"{", 
     RowBox[{"0.00328920848225222`", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Alpha]", "\[Rule]", "5.418241604910933`"}], ",", 
        RowBox[{"\[Beta]", "\[Rule]", "3.503914157310485`"}], ",", 
        RowBox[{"\[Delta]", "\[Rule]", "0.9366754037241805`"}]}], "}"}]}], 
     "}"}]}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.819886000434873*^9},
 CellLabel->
  "Out[828]=",ExpressionUUID->"d24ed185-3cc2-48d4-b3f7-e0381f2fb50c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"obj", "[", 
  RowBox[{"5", ",", "3", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.819883258885441*^9, 3.819883271687746*^9}},
 CellLabel->
  "In[827]:=",ExpressionUUID->"752ea0f1-ef0f-493a-aee5-574a943a75d2"],

Cell[BoxData[
 FormBox["0.005242646659193443`", TraditionalForm]], "Output",
 CellChangeTimes->{3.819883273819962*^9, 3.8198846569261017`*^9},
 CellLabel->
  "Out[827]=",ExpressionUUID->"64d13831-ea24-4638-b740-65cb39370572"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"obj", "[", 
  RowBox[{"5.41824", ",", " ", "3.50391", ",", " ", "0.936675"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.819886438537431*^9, 3.819886449527512*^9}},
 CellLabel->
  "In[830]:=",ExpressionUUID->"2118bf66-d71c-40c9-8615-31fbfb5ae8a7"],

Cell[BoxData[
 FormBox["0.00328921289483892`", TraditionalForm]], "Output",
 CellChangeTimes->{3.819886451707138*^9},
 CellLabel->
  "Out[830]=",ExpressionUUID->"24cc0c5b-4ce9-469a-acd3-27b1a18c315a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Read BTC data", "Section",
 CellChangeTimes->{{3.817307884330234*^9, 
  3.817307892131558*^9}},ExpressionUUID->"f349ef4d-9fae-4390-8a6c-\
549d47e48bec"],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", " ", 
     "\"\<../processed_data/btc_future_crix.csv\>\""}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.817307893877008*^9, 3.817307941696968*^9}},
 CellLabel->
  "In[1047]:=",ExpressionUUID->"f2d9ca35-f74d-4d22-bcca-4fbee5a1a8be"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "data", "]"}]], "Input",
 CellChangeTimes->{{3.817307960772913*^9, 3.817307964160355*^9}},
 CellLabel->
  "In[1048]:=",ExpressionUUID->"7a956f51-31be-4dcd-853c-03c37eb1cb77"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"646", ",", "14"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.8173079644020643`*^9, 3.8175362971592817`*^9, 
  3.817549699290793*^9, 3.817658167050351*^9, 3.8177495219215593`*^9, 
  3.817751366356125*^9, 3.817837139167128*^9, 3.817918641554822*^9, 
  3.817922900535781*^9, 3.8179658238371973`*^9, 3.819126661903426*^9, 
  3.8191269516938763`*^9, 3.819181030942256*^9, 3.819285704442162*^9, 
  3.8192981318850937`*^9, 3.8198200023750973`*^9, 3.8198288808865957`*^9, 
  3.819829092603409*^9, 3.819868970304118*^9, 3.819886484440531*^9, 
  3.820300978882225*^9, 3.820343238200314*^9, 3.820389617067821*^9, 
  3.820389888021693*^9, 3.820426738269581*^9},
 CellLabel->
  "Out[1048]=",ExpressionUUID->"e4943532-1059-47f7-92ae-45d5af48ca1c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "[", 
  RowBox[{"[", 
   RowBox[{
    RowBox[{"1", ";;", "10"}], ",", 
    RowBox[{"12", ";;", "13"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.817307966339432*^9, 3.817307988102242*^9}},
 CellLabel->
  "In[1049]:=",ExpressionUUID->"0f4d6c08-10e5-4f89-b133-4958cea8517f"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"\<\"return_btc\"\>", "\<\"return_brr\"\>"},
     {
      RowBox[{"-", "0.022642476749759777`"}], 
      RowBox[{"-", "0.05645189302836185`"}]},
     {
      RowBox[{"-", "0.06675155564393763`"}], 
      RowBox[{"-", "0.04096177605691657`"}]},
     {
      RowBox[{"-", "0.05227448825204289`"}], 
      RowBox[{"-", "0.04636523758895043`"}]},
     {"0.020075956572689225`", "0.012073475424192001`"},
     {"0.017473276435374302`", "0.023397685975360964`"},
     {"0.025251668230967125`", "0.010991211063896123`"},
     {
      RowBox[{"-", "0.025251668230966987`"}], 
      RowBox[{"-", "0.012726964298472882`"}]},
     {"0.016471980578921276`", "0.006092311035717556`"},
     {
      RowBox[{"-", "0.04277812201280418`"}], 
      RowBox[{"-", "0.03138328534045941`"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.817307988351593*^9, 3.8175362972012587`*^9, 
  3.817549699296836*^9, 3.8176581677356777`*^9, 3.817749521928862*^9, 
  3.8177513671145*^9, 3.817837139807868*^9, 3.8179186421775923`*^9, 
  3.817922900614204*^9, 3.817965823953594*^9, 3.819126661966269*^9, 
  3.8191269517128887`*^9, 3.8191810309607973`*^9, 3.819285706010583*^9, 
  3.819298132578781*^9, 3.819820003438251*^9, 3.81982888093943*^9, 
  3.819829092654868*^9, 3.819868970988266*^9, 3.819886485090613*^9, 
  3.8203009789405212`*^9, 3.820343238228162*^9, 3.820389617944972*^9, 
  3.820389888680316*^9, 3.820426738779397*^9},
 CellLabel->
  "Out[1049]=",ExpressionUUID->"871befba-30ba-4e96-b5f3-b1d9429bb3e6"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rbtc", "=", 
   RowBox[{"data", "\[LeftDoubleBracket]", 
    RowBox[{
     RowBox[{"2", ";;", "All"}], ",", "12"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"rbrr", "=", 
   RowBox[{"data", "\[LeftDoubleBracket]", 
    RowBox[{
     RowBox[{"2", ";;", "All"}], ",", "13"}], "\[RightDoubleBracket]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.817307995211961*^9, 3.8173080144467363`*^9}, 
   3.819820007002603*^9},
 CellLabel->
  "In[1050]:=",ExpressionUUID->"9b6d5b04-1606-4aeb-8055-569ecd6bc680"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Correlation", "[", 
    RowBox[{"rbrr", ",", "rbtc"}], "]"}], ",", " ", 
   RowBox[{"SpearmanRho", "[", 
    RowBox[{"rbrr", ",", " ", "rbtc"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.817308018050996*^9, 3.817308024286374*^9}, {
  3.8198200107435837`*^9, 3.819820022500392*^9}},
 CellLabel->
  "In[1052]:=",ExpressionUUID->"9b91093d-e1cf-433a-92e3-f0b4a0c17854"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"0.7882859941791315`", ",", "0.7337232561981398`"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.817308024657382*^9, 3.8175362972608547`*^9, 3.817549699330933*^9, 
   3.817658170333873*^9, 3.817749521947167*^9, 3.8177513688742313`*^9, 
   3.8178371420277357`*^9, 3.817918644035656*^9, 3.817922900708583*^9, 
   3.817965824074991*^9, 3.819126662034664*^9, 3.819126951722559*^9, 
   3.819181030987138*^9, 3.8192857076412973`*^9, 3.819298135127633*^9, {
   3.819820008594626*^9, 3.819820022948525*^9}, 3.819828881074596*^9, 
   3.819829092663938*^9, 3.819868973294613*^9, 3.8198864874299393`*^9, 
   3.8203432382381563`*^9, 3.8203898917676573`*^9, 3.820426741296323*^9},
 CellLabel->
  "Out[1052]=",ExpressionUUID->"dfbd6caa-27b7-47b4-9804-49b74f9d0bdd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hatqd", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"QDemp", "[", 
     RowBox[{"q", ",", " ", "rbrr", ",", " ", "rbtc"}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"q", ",", 
      RowBox[{"{", 
       RowBox[{"0.05", ",", " ", "0.1", ",", " ", "0.9", ",", " ", "0.95"}], 
       "}"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.819820110632003*^9, 3.8198201517443457`*^9}},
 CellLabel->
  "In[1053]:=",ExpressionUUID->"a1fa7f09-dcca-486d-81f1-8ed99609f438"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
   "0.5581395348837209`", ",", "0.6356589147286822`", ",", 
    "0.62015503875969`", ",", "0.5891472868217049`"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.819820144003454*^9, 3.819820152025132*^9}, 
   3.8198288811626387`*^9, 3.8198290927148438`*^9, 3.819868974022751*^9, 
   3.819886488291082*^9, 3.820343238262498*^9, 3.820389892581545*^9, 
   3.820426741947304*^9},
 CellLabel->
  "Out[1053]=",ExpressionUUID->"ae41baf9-9c92-48ad-8a96-8f497393e2e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"target", "=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"SpearmanRho", "[", 
       RowBox[{"rbrr", ",", " ", "rbtc"}], "]"}], "}"}], ",", " ", "hatqd"}], 
    "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.819820168440001*^9, 3.819820206296959*^9}, {
  3.8198726174717083`*^9, 3.819872619037015*^9}, {3.819886536378523*^9, 
  3.819886539687598*^9}},
 CellLabel->
  "In[1054]:=",ExpressionUUID->"baff8770-daef-4c2c-9373-2f098688ad98"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
   "0.7337232561981398`", ",", "0.5581395348837209`", ",", 
    "0.6356589147286822`", ",", "0.62015503875969`", ",", 
    "0.5891472868217049`"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.819820193076612*^9, 3.819820206552484*^9}, 
   3.81982888127349*^9, 3.8198290927208*^9, 3.8198689747243443`*^9, 
   3.8198726196723137`*^9, 3.81987268284853*^9, 3.819886543158595*^9, 
   3.820343238267941*^9, 3.820389893330612*^9, 3.820426745303421*^9},
 CellLabel->
  "Out[1054]=",ExpressionUUID->"54e3956d-e624-48f9-a138-a56ad893dcf9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"HoldForm", "[", 
       FractionBox[
        RowBox[{"6", " ", 
         RowBox[{"ArcSin", "[", 
          FractionBox["\[Delta]", 
           RowBox[{"2", " ", 
            RowBox[{"\[Delta]s", "[", 
             RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}]}]], "]"}]}], 
        "\[Pi]"], "]"}], "}"}], ",", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"HoldForm", "[", 
         RowBox[{"QD", "[", 
          RowBox[{
          "q0", ",", " ", "\[Alpha]", ",", "\[Beta]", ",", "\[Delta]", ",", 
           "F1"}], "]"}], "]"}], "/.", 
        RowBox[{"q0", "\[Rule]", "q"}]}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"q", ",", 
         RowBox[{"{", 
          RowBox[{"0.05", ",", "0.1", ",", " ", "0.9", ",", " ", "0.95"}], 
          "}"}]}], "}"}]}], "]"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8198202684377403`*^9, 3.819820376514683*^9}, {
  3.8198204374076233`*^9, 3.819820438862364*^9}, {3.819820542594532*^9, 
  3.819820552730052*^9}, {3.819877154499302*^9, 3.819877160354188*^9}, {
  3.819878080717407*^9, 3.8198780822822*^9}},
 CellLabel->
  "In[1055]:=",ExpressionUUID->"02df70e8-21e1-48c8-a310-4e5cca9c656b"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    TagBox[
     FractionBox[
      RowBox[{"6", " ", 
       RowBox[{
        SuperscriptBox["sin", 
         RowBox[{"-", "1"}]], "(", 
        FractionBox["\[Delta]", 
         RowBox[{"2", " ", 
          RowBox[{"\[Delta]s", "(", 
           RowBox[{"\[Alpha]", ",", "\[Beta]"}], ")"}]}]], ")"}]}], "\[Pi]"],
     HoldForm], ",", 
    TagBox[
     RowBox[{"QD", "(", 
      RowBox[{
      "0.05`", ",", "\[Alpha]", ",", "\[Beta]", ",", "\[Delta]", ",", "F1"}], 
      ")"}],
     HoldForm], ",", 
    TagBox[
     RowBox[{"QD", "(", 
      RowBox[{
      "0.1`", ",", "\[Alpha]", ",", "\[Beta]", ",", "\[Delta]", ",", "F1"}], 
      ")"}],
     HoldForm], ",", 
    TagBox[
     RowBox[{"QD", "(", 
      RowBox[{
      "0.9`", ",", "\[Alpha]", ",", "\[Beta]", ",", "\[Delta]", ",", "F1"}], 
      ")"}],
     HoldForm], ",", 
    TagBox[
     RowBox[{"QD", "(", 
      RowBox[{
      "0.95`", ",", "\[Alpha]", ",", "\[Beta]", ",", "\[Delta]", ",", "F1"}], 
      ")"}],
     HoldForm]}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.8198203768669024`*^9, 3.819820440530354*^9, 
  3.819820552998172*^9, 3.819828881484148*^9, 3.819829092824017*^9, 
  3.819868977506586*^9, 3.8198771301045313`*^9, 3.819877160635502*^9, 
  3.819878083122364*^9, 3.819886551044384*^9, 3.8203432382747107`*^9, 
  3.8203898941212387`*^9, 3.8204267460804157`*^9},
 CellLabel->
  "Out[1055]=",ExpressionUUID->"3a634a92-9d12-4a91-971f-49166a5365f7"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "obj", "]"}]], "Input",
 CellChangeTimes->{{3.81987825937953*^9, 3.819878260906391*^9}},
 CellLabel->
  "In[1065]:=",ExpressionUUID->"7c40c99e-47fb-4deb-be22-0cc0a6f2ea63"],

Cell[BoxData[
 RowBox[{
  RowBox[{"obj", "[", 
   RowBox[{
    RowBox[{"\[Alpha]_", "?", "NumericQ"}], ",", 
    RowBox[{"\[Beta]_", "?", "NumericQ"}], ",", 
    RowBox[{"\[Delta]_", "?", "NumericQ"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"F1", ",", "f", ",", "q0", ",", "q"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"\[Delta]s", "[", 
         RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], "-", "\[Delta]"}], "<", 
       "0"}], ",", 
      RowBox[{"\[Delta]", "-", 
       RowBox[{"\[Delta]s", "[", 
        RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"F1", "=", 
        RowBox[{"FNIGi", "[", 
         RowBox[{"\[Alpha]", ",", "\[Beta]", ",", 
          RowBox[{"\[Mu]s", "[", 
           RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], ",", " ", 
          RowBox[{
           RowBox[{"\[Delta]s", "[", 
            RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], "-", "\[Delta]"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"f", "=", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", 
            FractionBox[
             RowBox[{"6", " ", 
              RowBox[{"ArcSin", "[", 
               FractionBox["\[Delta]", 
                RowBox[{"2", " ", 
                 RowBox[{"\[Delta]s", "[", 
                  RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}]}]], "]"}]}], 
             "\[Pi]"], "}"}], ",", " ", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"QD", "[", 
               RowBox[{
               "q0", ",", " ", "\[Alpha]", ",", "\[Beta]", ",", "\[Delta]", 
                ",", "F1"}], "]"}], "/.", 
              RowBox[{"q0", "\[Rule]", "q"}]}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"q", ",", 
               RowBox[{"{", 
                RowBox[{
                "0.05", ",", "0.1", ",", " ", "0.9", ",", " ", "0.95"}], 
                "}"}]}], "}"}]}], "]"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"Total", "[", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"target", "-", "f"}], ")"}], "2"], "]"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",\

 CellChangeTimes->{
  3.819877135350144*^9, {3.819877177237286*^9, 3.8198771777314157`*^9}, {
   3.819877915045517*^9, 3.819877915703601*^9}, {3.819878090002882*^9, 
   3.819878110603818*^9}, {3.819878147060523*^9, 3.8198782854945087`*^9}, {
   3.819878351077882*^9, 3.819878352952647*^9}, {3.8198785151079082`*^9, 
   3.819878609217183*^9}, {3.819879487297781*^9, 3.819879523788451*^9}, {
   3.819883284743881*^9, 3.81988328600276*^9}, {3.819883509732986*^9, 
   3.819883533794332*^9}},
 CellLabel->
  "In[1066]:=",ExpressionUUID->"d305c994-c026-4e5b-83d0-9f02246d4c33"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"sol", "=", 
   RowBox[{"NMinimize", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"obj", "[", 
        RowBox[{"\[Alpha]", ",", "\[Beta]", ",", "\[Delta]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"\[Alpha]", ">", "3"}], " ", "&&", 
        RowBox[{
         RowBox[{"Abs", "[", "\[Beta]", "]"}], "<", "\[Alpha]"}], "&&", 
        RowBox[{"0", "<", " ", "\[Delta]", "<", 
         RowBox[{"Re", "[", 
          RowBox[{"\[Delta]s", "[", 
           RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], "]"}]}]}]}], "}"}], 
     ",", " ", 
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "\[Beta]", ",", "\[Delta]"}], "}"}], ",", " ", 
     
     RowBox[{"Method", "\[Rule]", "\"\<SimulatedAnnealing\>\""}], ",", " ", 
     RowBox[{"PrecisionGoal", "\[Rule]", "1"}], ",", " ", 
     RowBox[{"AccuracyGoal", "\[Rule]", "1"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.819869419243043*^9, 3.81986946729214*^9}, {
   3.81986949998383*^9, 3.81986951244518*^9}, {3.819869589437641*^9, 
   3.8198695895127277`*^9}, {3.819869633129355*^9, 3.8198696334165688`*^9}, {
   3.819871636634088*^9, 3.819871651405284*^9}, {3.819871715127633*^9, 
   3.819871723957344*^9}, {3.819872006381109*^9, 3.8198720122971077`*^9}, {
   3.81987230595779*^9, 3.819872306408276*^9}, {3.8198771706362753`*^9, 
   3.8198772636893997`*^9}, {3.819877707869554*^9, 3.819877728206834*^9}, {
   3.819877904578409*^9, 3.819877906829452*^9}, {3.819878268919306*^9, 
   3.819878271250824*^9}, {3.819878355494495*^9, 3.819878357441977*^9}, {
   3.819878738913653*^9, 3.819878745350308*^9}, {3.819879157213667*^9, 
   3.819879159587221*^9}, {3.819879202695931*^9, 3.819879205088241*^9}, 
   3.8198835429178553`*^9, {3.819884665306184*^9, 3.819884669015758*^9}, {
   3.8203955317879953`*^9, 3.8203955335849752`*^9}},
 CellLabel->
  "In[755]:=",ExpressionUUID->"f58c4538-7986-4e37-8261-e352570ace8b"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"971.181152`", ",", 
    RowBox[{"{", 
     RowBox[{"0.10529525079378038`", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Alpha]", "\[Rule]", "3.08360063513786`"}], ",", 
        RowBox[{"\[Beta]", "\[Rule]", 
         RowBox[{"-", "1.3513710952000677`"}]}], ",", 
        RowBox[{"\[Delta]", "\[Rule]", "1.8359291263027313`"}]}], "}"}]}], 
     "}"}]}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.8198875434715242`*^9, 3.820344254361944*^9, 
  3.8203965103991737`*^9},
 CellLabel->
  "Out[755]=",ExpressionUUID->"8859842f-878f-46a9-802f-16ef40b23e20"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"sol", "=", 
   RowBox[{"NMinimize", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"obj", "[", 
        RowBox[{"\[Alpha]", ",", "\[Beta]", ",", "\[Delta]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"\[Alpha]", ">", "3"}], " ", "&&", 
        RowBox[{
         RowBox[{"Abs", "[", "\[Beta]", "]"}], "<", "\[Alpha]"}], "&&", 
        RowBox[{"0", "<", " ", "\[Delta]", "<", 
         RowBox[{"Re", "[", 
          RowBox[{"\[Delta]s", "[", 
           RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], "]"}]}]}]}], "}"}], 
     ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Alpha]", ",", "3", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Beta]", ",", "0", ",", "0.5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Delta]", ",", "0", ",", "4"}], "}"}]}], "}"}], ",", " ", 
     RowBox[{"Method", "\[Rule]", "\"\<SimulatedAnnealing\>\""}], ",", " ", 
     RowBox[{"PrecisionGoal", "\[Rule]", "1"}], ",", " ", 
     RowBox[{"AccuracyGoal", "\[Rule]", "1"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.819869419243043*^9, 3.81986946729214*^9}, {
   3.81986949998383*^9, 3.81986951244518*^9}, {3.819869589437641*^9, 
   3.8198695895127277`*^9}, {3.819869633129355*^9, 3.8198696334165688`*^9}, {
   3.819871636634088*^9, 3.819871651405284*^9}, {3.819871715127633*^9, 
   3.819871723957344*^9}, {3.819872006381109*^9, 3.8198720122971077`*^9}, {
   3.81987230595779*^9, 3.819872306408276*^9}, {3.8198771706362753`*^9, 
   3.8198772636893997`*^9}, {3.819877707869554*^9, 3.819877728206834*^9}, {
   3.819877904578409*^9, 3.819877906829452*^9}, {3.819878268919306*^9, 
   3.819878271250824*^9}, {3.819878355494495*^9, 3.819878357441977*^9}, {
   3.819878738913653*^9, 3.819878745350308*^9}, {3.819879157213667*^9, 
   3.819879159587221*^9}, {3.819879202695931*^9, 3.819879205088241*^9}, 
   3.8198835429178553`*^9, {3.819884665306184*^9, 3.819884669015758*^9}, {
   3.8203955317879953`*^9, 3.8203955335849752`*^9}, 3.820396577820778*^9, {
   3.82039662206639*^9, 3.820396651446649*^9}, {3.8203969619195013`*^9, 
   3.8203969670088863`*^9}},
 CellLabel->
  "In[761]:=",ExpressionUUID->"59c14848-be49-4d3c-81f2-d8f014078c55"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"1192.24602`", ",", 
    RowBox[{"{", 
     RowBox[{"0.09577856858228584`", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Alpha]", "\[Rule]", "3.5895350750183965`"}], ",", 
        RowBox[{"\[Beta]", "\[Rule]", "0.12887162130446161`"}], ",", 
        RowBox[{"\[Delta]", "\[Rule]", "2.981352335777462`"}]}], "}"}]}], 
     "}"}]}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.820396631468611*^9, 3.820396802133223*^9, 
  3.820398162065096*^9},
 CellLabel->
  "Out[761]=",ExpressionUUID->"f0aab1ca-9917-4a3a-8e4f-319a69042bcd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Delta]s", "[", 
    RowBox[{"\[Alpha]", ",", " ", "\[Beta]"}], "]"}], "-", "\[Delta]"}], "/.", 
  RowBox[{"sol", "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.820396893473432*^9, 3.820396919748259*^9}},
 CellLabel->
  "In[762]:=",ExpressionUUID->"a62d4126-2b40-46be-8616-db0ff3c40fce"],

Cell[BoxData[
 FormBox["0.601244845516018`", TraditionalForm]], "Output",
 CellChangeTimes->{{3.820396894072895*^9, 3.8203969199859667`*^9}, 
   3.8203983601194773`*^9},
 CellLabel->
  "Out[762]=",ExpressionUUID->"18feb2be-97b5-4548-b73d-75740484b103"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"sol", "=", 
   RowBox[{"FindMinimum", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"obj", "[", 
        RowBox[{"\[Alpha]", ",", "\[Beta]", ",", "\[Delta]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"\[Alpha]", ">", "3"}], " ", "&&", 
        RowBox[{
         RowBox[{"Abs", "[", "\[Beta]", "]"}], "<", "\[Alpha]"}], "&&", 
        RowBox[{"0", "<", " ", "\[Delta]", "<", 
         RowBox[{"Re", "[", 
          RowBox[{"\[Delta]s", "[", 
           RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], "]"}]}]}]}], "}"}], 
     ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Alpha]", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Beta]", ",", "0.75"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Delta]", ",", "2.25"}], "}"}]}], "}"}], ",", 
     RowBox[{"PrecisionGoal", "\[Rule]", "1"}], ",", " ", 
     RowBox[{"AccuracyGoal", "\[Rule]", "1"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.819869419243043*^9, 3.81986946729214*^9}, {
   3.81986949998383*^9, 3.81986951244518*^9}, {3.819869589437641*^9, 
   3.8198695895127277`*^9}, {3.819869633129355*^9, 3.8198696334165688`*^9}, {
   3.819871636634088*^9, 3.819871651405284*^9}, {3.819871715127633*^9, 
   3.819871723957344*^9}, {3.819872006381109*^9, 3.8198720122971077`*^9}, {
   3.81987230595779*^9, 3.819872306408276*^9}, {3.8198771706362753`*^9, 
   3.8198772636893997`*^9}, {3.819877707869554*^9, 3.819877728206834*^9}, {
   3.819877904578409*^9, 3.819877906829452*^9}, {3.819878268919306*^9, 
   3.819878271250824*^9}, {3.819878355494495*^9, 3.819878357441977*^9}, {
   3.819878738913653*^9, 3.819878745350308*^9}, {3.819879157213667*^9, 
   3.819879159587221*^9}, {3.819879202695931*^9, 3.819879205088241*^9}, 
   3.8198835429178553`*^9, {3.819884665306184*^9, 3.819884669015758*^9}, {
   3.8203955317879953`*^9, 3.8203955335849752`*^9}, {3.8203957256762037`*^9, 
   3.820395781479329*^9}, {3.82039665581002*^9, 3.8203966560739527`*^9}, {
   3.820420098913074*^9, 3.8204201304453373`*^9}},
 CellLabel->
  "In[787]:=",ExpressionUUID->"53e42125-dc4c-48ab-a375-60b727602b9c"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"365.71559`", ",", 
    RowBox[{"{", 
     RowBox[{"0.08972124939035646`", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Alpha]", "\[Rule]", "3.0006291435674557`"}], ",", 
        RowBox[{"\[Beta]", "\[Rule]", "0.7408516819877314`"}], ",", 
        RowBox[{"\[Delta]", "\[Rule]", "2.254276793897798`"}]}], "}"}]}], 
     "}"}]}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.820399666043885*^9, 3.820420493592959*^9},
 CellLabel->
  "Out[787]=",ExpressionUUID->"09a41c4f-0240-4263-906a-616fbec22fe7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Delta]s", "[", 
    RowBox[{"\[Alpha]", ",", " ", "\[Beta]"}], "]"}], "-", "\[Delta]"}], "/.", 
  RowBox[{"sol", "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.820396893473432*^9, 3.820396919748259*^9}},
 CellLabel->
  "In[776]:=",ExpressionUUID->"3988b05b-0e23-4152-8a4b-bbf0d3334dd8"],

Cell[BoxData[
 FormBox["0.47623891134143737`", TraditionalForm]], "Output",
 CellChangeTimes->{3.8204199417639914`*^9},
 CellLabel->
  "Out[776]=",ExpressionUUID->"6c7c53c9-1a83-43e4-8d52-90d5231a8d1f"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Alpha]0", "=", 
   RowBox[{"\[Alpha]", "/.", "\[VeryThinSpace]", 
    RowBox[{"sol", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Beta]0", "=", 
   RowBox[{"\[Beta]", "/.", "\[VeryThinSpace]", 
    RowBox[{"sol", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Delta]0", "=", 
   RowBox[{"\[Delta]", "/.", "\[VeryThinSpace]", 
    RowBox[{"sol", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}],
   ";"}]}], "Input",
 CellChangeTimes->{{3.819888263770653*^9, 3.819888288638391*^9}},
 CellLabel->
  "In[777]:=",ExpressionUUID->"3cbb584a-fc58-47a5-94e1-56a814b8fc56"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Alpha]0", "=", "3.1354"}], ";", " ", 
  RowBox[{"\[Beta]0", "=", "0.121548"}], ";", " ", 
  RowBox[{"\[Delta]0", "=", "2.53221"}], ";"}]], "Input",
 CellChangeTimes->{{3.82038992589395*^9, 3.820389940812253*^9}, {
  3.820390124026164*^9, 3.8203901245470324`*^9}},
 CellLabel->
  "In[733]:=",ExpressionUUID->"4e071853-a5e2-4d89-aab9-93491207bd8c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Alpha]0", "=", "3.0836"}], ";", " ", 
  RowBox[{"\[Beta]0", "=", 
   RowBox[{"-", "1.35137"}]}], ";", " ", 
  RowBox[{"\[Delta]0", "=", "1.83593"}], ";"}]], "Input",
 CellChangeTimes->{{3.820390314214161*^9, 3.820390325514948*^9}},
 CellLabel->
  "In[739]:=",ExpressionUUID->"a6410b44-460a-47e2-81f4-7b1e306f6592"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"obj", "[", 
  RowBox[{"\[Alpha]0", ",", "\[Beta]0", ",", "\[Delta]0"}], "]"}]], "Input",
 CellChangeTimes->{{3.819889116893527*^9, 3.819889124112977*^9}, 
   3.820346096752295*^9},
 CellLabel->
  "In[780]:=",ExpressionUUID->"190b1409-9f36-4a31-b8cc-09701e1a8a8b"],

Cell[BoxData[
 FormBox["0.08972103263532721`", TraditionalForm]], "Output",
 CellChangeTimes->{
  3.819889126320107*^9, 3.820344254416897*^9, {3.82034608436735*^9, 
   3.8203460994447927`*^9}, 3.82034613780324*^9, 3.820389944150326*^9, 
   3.820390127660857*^9, 3.820390328927739*^9, 3.820419946991563*^9},
 CellLabel->
  "Out[780]=",ExpressionUUID->"543a801f-f600-4b65-8011-459cfb84f59e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Rho", "[", 
    RowBox[{"\[Alpha]0", ",", "\[Beta]0", ",", "\[Delta]0"}], "]"}], ",", 
   FractionBox[
    RowBox[{"6", " ", 
     RowBox[{"ArcSin", "[", 
      FractionBox["\[Delta]0", 
       RowBox[{"2", " ", 
        RowBox[{"\[Delta]s", "[", 
         RowBox[{"\[Alpha]0", ",", "\[Beta]0"}], "]"}]}]], "]"}]}], "\[Pi]"], 
   ",", 
   RowBox[{"SpearmanRho", "[", 
    RowBox[{"rbrr", ",", "rbtc"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.819889271883568*^9, 3.819889324347828*^9}},
 CellLabel->
  "In[789]:=",ExpressionUUID->"4cf40b22-5722-4315-a645-830149f9ad8d"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
   "0.8149710572212725`", ",", "0.8126895282035468`", ",", 
    "0.7337232561981398`"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.8198892791296177`*^9, 3.819889326293769*^9}, 
   3.820344254423551*^9, 3.820346104233005*^9, 3.8203461392485332`*^9, 
   3.820389946406475*^9, 3.820390332029562*^9, 3.8203983763165293`*^9, 
   3.820419948415512*^9, 3.8204205785044613`*^9},
 CellLabel->
  "Out[789]=",ExpressionUUID->"fbcb2d0f-3e90-4bd9-981a-9a07195b18cd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Delta]s", "[", 
   RowBox[{"\[Alpha]0", ",", "\[Beta]0"}], "]"}], "-", "\[Delta]0"}]], "Input",\

 CellChangeTimes->{{3.8198885709921722`*^9, 3.819888592090438*^9}, {
  3.819888674689439*^9, 3.819888688580926*^9}, {3.820390343431923*^9, 
  3.82039037530416*^9}},
 CellLabel->
  "In[782]:=",ExpressionUUID->"bd7004c4-bd44-4985-8cca-d7c29434a67b"],

Cell[BoxData[
 FormBox["0.47623891134143737`", TraditionalForm]], "Output",
 CellChangeTimes->{{3.819888576524064*^9, 3.819888592343099*^9}, {
   3.819888675421989*^9, 3.819888688849678*^9}, 3.8203442544318657`*^9, 
   3.820346144717101*^9, 3.820389946450037*^9, {3.820390333277194*^9, 
   3.820390384329314*^9}, 3.820398379916505*^9, 3.820419948448938*^9},
 CellLabel->
  "Out[782]=",ExpressionUUID->"ac6aecab-3c4d-45f1-9f2a-786d8d2fb9ea"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Timing", "[", 
   RowBox[{"t1", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Alpha]", ",", 
        RowBox[{"obj", "[", 
         RowBox[{"\[Alpha]", ",", " ", "\[Beta]0", ",", "\[Delta]0"}], 
         "]"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"\[Alpha]", ",", "2.6", ",", "5", ",", " ", "0.1"}], "}"}]}], 
     "]"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.819888260046826*^9, 3.819888260691946*^9}, {
   3.819888292067772*^9, 3.81988836177166*^9}, {3.819888519196604*^9, 
   3.8198885281975937`*^9}, 3.819888701889473*^9},
 CellLabel->
  "In[783]:=",ExpressionUUID->"0067afc6-46d6-4437-9961-3d3eabd4acc1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Timing", "[", 
   RowBox[{"t2", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Beta]", ",", 
        RowBox[{"obj", "[", 
         RowBox[{"\[Alpha]0", ",", "\[Beta]", ",", "\[Delta]0"}], "]"}]}], 
       "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"\[Beta]", ",", 
        RowBox[{"-", "1"}], ",", "1", ",", " ", "0.1"}], "}"}]}], "]"}]}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.819888260046826*^9, 3.819888260691946*^9}, {
  3.819888292067772*^9, 3.81988836177166*^9}, {3.819888519196604*^9, 
  3.8198885281975937`*^9}, {3.819888701889473*^9, 3.81988873932089*^9}},
 CellLabel->
  "In[784]:=",ExpressionUUID->"8fc9eb42-5473-43fa-8348-885844c52033"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Timing", "[", 
   RowBox[{"t3", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Delta]", ",", 
        RowBox[{"obj", "[", 
         RowBox[{"\[Alpha]0", ",", "\[Beta]0", ",", "\[Delta]"}], "]"}]}], 
       "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"\[Delta]", ",", "0.1", ",", "3.1", ",", " ", "0.25"}], 
       "}"}]}], "]"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.819888260046826*^9, 3.819888260691946*^9}, {
  3.819888292067772*^9, 3.81988836177166*^9}, {3.819888519196604*^9, 
  3.8198885281975937`*^9}, {3.819888701889473*^9, 3.819888779163266*^9}, {
  3.8198888443216343`*^9, 3.819888876071719*^9}},
 CellLabel->
  "In[785]:=",ExpressionUUID->"80f6e87e-b09d-400c-b987-ca4a99346f0e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"t1", ",", " ", 
     RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}], ",", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"t2", ",", " ", 
     RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}], ",", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"t3", ",", " ", 
     RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.8198884974135017`*^9, 3.819888499219454*^9}, {
  3.819888531301403*^9, 3.819888533614695*^9}, {3.8198887816628942`*^9, 
  3.8198887924368353`*^9}},
 CellLabel->
  "In[786]:=",ExpressionUUID->"c9842d0f-b88a-43d6-b61b-9015246d8f8e"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    GraphicsBox[{{}, {{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQffYMCLA4nHwYellM7an9rJkgwOog/ODwBda0m/bp
aSDA5uCzTf7p+z3n7E2MQYDd4ef++n2CCgftGcCAw8H0vlH69u/b7CHmcTgc
OvzZvSFtP9Q8TofH75KKBd4eg5rH5dDpwHeLRxRmHrfDbvXHfHlhl6Dm8Tj8
Wc5/7ELoVah5PA5NZxbeNeK/ATWP1+HKnnPyO7puQc3jc9BdfoWD4cIdqHn8
DrN2v/fa/PQe1DwBh0h/VpFDGQ/swcrTBBwu7d/5X9XnIdR8AQe1d4Y1YvKP
oPoFHY5cT3OLePwIap+gA0tozZqCWY+h5gk5CDr/0Nng+gRqnpCDqmy9gvWz
J1DzhBxqnaRPCNQ+hZon7BBi+5hfkPsZ1Dxhhzs7P7kzTnwGNU/EYWf0bI4J
/M/tAVwiqQk=
         "]]}}, {{}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{2.5500000000000007`, 0},
     DisplayFunction->Identity,
     Frame->{{False, False}, {False, False}},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     Method->{
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}},
     PlotRange->{{2.5500000000000007`, 5.}, {0, 0.7206497352698228}},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}], ",", 
    GraphicsBox[{{}, {{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQEf9occdft2c8U5+7NnQODN/tn5r27GZh+2nzUT
BF7uT5t1M2vKsl32aWDwbH9MyrMIL8+d9sZg8Hj/qzU/doam7rOHmPdgfwhX
WsT5zEP2M8D6b+5/3nU2VNznqL0RWP3l/VpLlTgeTzkOlT+5X7vqi8Jtk5NQ
/s79hzW3bb+pdcoe5kI17bVzwypO2S+AyNsHP2XXPigL45+0L11XeL9P8qS9
CcR8+wrnjydvZRy3nwOx337OAjfhXq6jMPfZLw1hnMDBdQiq/rG9jN+0oLNe
e+0zIP6zf7PrEQfDtu0w/9v/+fBRUf/jDvtzkPCx1/jMHGV6/BDUvA/2xasa
bm+2OmcPAGFnoEo=
         "]]}}, {{}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{0, 0},
     DisplayFunction->Identity,
     Frame->{{False, False}, {False, False}},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     Method->{
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}},
     PlotRange->{{-1., 1.}, {0, 0.23952793622224056`}},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}], ",", 
    GraphicsBox[{{}, {{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        LineBox[{{0.1, 1.2433074297633953`}, {0.35, 1.141449615643801}, {0.6, 
         1.033171379757215}, {0.85, 0.917445372775522}, {1.1, 
         0.7929514831864692}, {1.35, 0.6579275344939238}, {1.6, 
         0.5099519052564632}, {1.85, 0.34586315121980904`}, {2.1, 
         0.1661344179321663}, {2.35, 0.13294817443520493`}, {2.6, 
         0.4473856644343776}, {2.85, 0.11935312311143997`}, {3.1, 
         0.36935312311144}}]}}, {{}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{0, 0},
     DisplayFunction->Identity,
     Frame->{{False, False}, {False, False}},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     Method->{
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}},
     PlotRange->{{0, 3.1}, {0, 1.2433074297633953`}},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.8198884994763803`*^9, 3.819888576490025*^9, 
  3.8198890809011717`*^9, 3.820344361743124*^9, 3.820346260522196*^9, 
  3.820390069420177*^9, 3.8203902744656353`*^9, 3.8203904042329683`*^9, 
  3.820390531796235*^9, 3.820398495594206*^9, 3.820420066059286*^9},
 CellLabel->
  "Out[786]=",ExpressionUUID->"e92592b1-52c3-4c9a-85a2-73960e1a0cc3"]
}, Open  ]],

Cell["Optimise with matching Spearman\[CloseCurlyQuote]s rho constraint", \
"Text",
 CellChangeTimes->{{3.8204202218900023`*^9, 
  3.820420236615552*^9}},ExpressionUUID->"6fb25aae-109e-48c7-9100-\
835ee2119f1e"],

Cell[BoxData[
 RowBox[{"Clear", "[", "FNIGi", "]"}]], "Input",
 CellChangeTimes->{{3.81982367365982*^9, 3.819823676316717*^9}},
 CellLabel->
  "In[1209]:=",ExpressionUUID->"586b9730-3441-4076-bda4-0b09fab54e74"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FNIGi", "[", 
   RowBox[{
    RowBox[{"\[Alpha]_", "?", "NumericQ"}], ",", 
    RowBox[{"\[Beta]_", "?", "NumericQ"}], ",", 
    RowBox[{"\[Mu]_", "?", "NumericQ"}], ",", 
    RowBox[{"\[Delta]_", "?", "NumericQ"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "r", ",", "x"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"a", "=", 
      RowBox[{"InvFNIG", "[", 
       RowBox[{
       "0.0000001", ",", "\[Alpha]", ",", "\[Beta]", ",", "\[Mu]", ",", 
        "\[Delta]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"b", "=", " ", 
      RowBox[{"InvFNIG", "[", 
       RowBox[{
       "0.9999999", ",", "\[Alpha]", ",", "\[Beta]", ",", "\[Mu]", ",", 
        "\[Delta]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"r", "=", 
      RowBox[{"Range", "[", 
       RowBox[{"a", ",", "b", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"b", "-", "a"}], ")"}], "/", "70"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"FNIG", "[", 
           RowBox[{
           "x", ",", "\[Alpha]", ",", "\[Beta]", ",", "\[Mu]", ",", 
            "\[Delta]"}], "]"}]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"x", ",", " ", "r"}], "}"}]}], "]"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.819737536751947*^9, 3.8197377262940187`*^9}, {
  3.819737798997216*^9, 3.819737802324263*^9}, {3.819737878204465*^9, 
  3.81973801159448*^9}, {3.8197382208969717`*^9, 3.819738221719878*^9}, {
  3.8197382643743277`*^9, 3.819738320767379*^9}, {3.819738357569353*^9, 
  3.8197383719819613`*^9}, {3.819739072702215*^9, 3.819739127567222*^9}, {
  3.819802682812738*^9, 3.819802682902944*^9}, {3.819802739403582*^9, 
  3.8198027394978437`*^9}, {3.819817964240465*^9, 3.81981803163913*^9}, {
  3.8198180739792337`*^9, 3.8198180743382483`*^9}, {3.819823581440063*^9, 
  3.81982358562927*^9}, {3.820469169510075*^9, 3.8204691811647577`*^9}, {
  3.8204698502043457`*^9, 3.820469850561925*^9}, {3.820469888789171*^9, 
  3.820469912730139*^9}},
 CellLabel->
  "In[1210]:=",ExpressionUUID->"200b7ab6-54bd-47d2-a312-14875ff733c2"],

Cell[BoxData[
 RowBox[{"Clear", "[", "obj", "]"}]], "Input",
 CellChangeTimes->{{3.81987825937953*^9, 3.819878260906391*^9}},
 CellLabel->
  "In[1211]:=",ExpressionUUID->"d696b770-7d83-45e7-ab3f-563bfbf2b387"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"const", "=", 
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{
      FractionBox["1", "6"], " ", 
      RowBox[{
      "target", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], " ", 
      "\[Pi]"}], "]"}], " ", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"obj", "[", 
   RowBox[{
    RowBox[{"\[Alpha]_", "?", "NumericQ"}], ",", 
    RowBox[{"\[Beta]_", "?", "NumericQ"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "F1", ",", "f", ",", "q0", ",", "q", ",", "\[Delta]", ",", "\[Beta]0"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Beta]", "\[LessEqual]", 
         RowBox[{"-", "\[Alpha]"}]}], "||", 
        RowBox[{"\[Beta]", "\[GreaterEqual]", "\[Alpha]"}]}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{"1", ",", "Module"}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Delta]", "=", 
      RowBox[{"const", " ", 
       RowBox[{"\[Delta]s", "[", 
        RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"F1", "=", 
      RowBox[{"FNIGi", "[", 
       RowBox[{"\[Alpha]", ",", "\[Beta]", ",", 
        RowBox[{"\[Mu]s", "[", 
         RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{"\[Delta]s", "[", 
          RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], "-", "\[Delta]"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"f", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"QD", "[", 
          RowBox[{
          "q0", ",", " ", "\[Alpha]", ",", "\[Beta]", ",", "\[Delta]", ",", 
           "F1"}], "]"}], "/.", 
         RowBox[{"q0", "\[Rule]", "q"}]}], ",", " ", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"q", ",", 
             RowBox[{"{", 
              RowBox[{"0.05", ",", "0.95"}], "}"}]}], "}"}], "]"}], ";"}], 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"q", ",", 
          RowBox[{"{", 
           RowBox[{"0.05", ",", "0.1", ",", " ", "0.9", ",", " ", "0.95"}], 
           "}"}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"Total", "[", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"target", "\[LeftDoubleBracket]", 
            RowBox[{"{", 
             RowBox[{"2", ",", "5"}], "}"}], "\[RightDoubleBracket]"}], "-", 
           "f"}], ")"}], "2"], "]"}], "]"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"Total", "[", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"target", "\[LeftDoubleBracket]", 
           RowBox[{"2", ";;"}], "\[RightDoubleBracket]"}], "-", "f"}], ")"}], 
        "2"], "]"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{
  3.819877135350144*^9, {3.819877177237286*^9, 3.8198771777314157`*^9}, {
   3.819877915045517*^9, 3.819877915703601*^9}, {3.819878090002882*^9, 
   3.819878110603818*^9}, {3.819878147060523*^9, 3.8198782854945087`*^9}, {
   3.819878351077882*^9, 3.819878352952647*^9}, {3.8198785151079082`*^9, 
   3.819878609217183*^9}, {3.819879487297781*^9, 3.819879523788451*^9}, {
   3.819883284743881*^9, 3.81988328600276*^9}, {3.819883509732986*^9, 
   3.819883533794332*^9}, {3.82042021509092*^9, 3.820420256795313*^9}, {
   3.820420295861788*^9, 3.820420342167698*^9}, {3.8204250044257393`*^9, 
   3.820425011361492*^9}, {3.820425165110183*^9, 3.820425173180677*^9}, {
   3.82042566738299*^9, 3.8204256793581867`*^9}, {3.820425712789608*^9, 
   3.82042571505931*^9}, {3.820425752246106*^9, 3.820425803601448*^9}, {
   3.820425970607532*^9, 3.820425994766848*^9}, {3.8204260313786716`*^9, 
   3.8204260811564283`*^9}, 3.820426122923438*^9, {3.820426443680822*^9, 
   3.8204264560604067`*^9}, 3.820426501580009*^9, {3.820426772961336*^9, 
   3.820426778137247*^9}, {3.820468860560144*^9, 3.820468889396406*^9}, {
   3.820468933449623*^9, 3.82046896590606*^9}, {3.820469997722629*^9, 
   3.820470012560931*^9}, {3.8204701023065157`*^9, 3.820470109098398*^9}, {
   3.820470223435338*^9, 3.8204702246600227`*^9}, {3.8204731503807697`*^9, 
   3.820473169472796*^9}},
 CellLabel->
  "In[1212]:=",ExpressionUUID->"dc8f84d2-b87c-4494-960e-6540ea1cce82"],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"\[Alpha]", ",", "\[Beta]", ",", "\[Mu]", ",", "\[Delta]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.820469275678278*^9, 3.820469282176633*^9}},
 CellLabel->
  "In[1214]:=",ExpressionUUID->"8d1b2e01-950d-4631-9087-a389b34526b3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TimeConstrained", "[", 
  RowBox[{
   RowBox[{"Timing", "[", 
    RowBox[{"sol", "=", 
     RowBox[{"NMinimize", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"obj", "[", 
          RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"\[Alpha]", ">", "0"}], " ", "&&", 
          RowBox[{
           RowBox[{"Abs", "[", "\[Beta]", "]"}], "<", "\[Alpha]"}]}]}], "}"}],
        ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Alpha]", ",", "0.1", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Beta]", ",", 
           RowBox[{"-", "0.1"}], ",", "0.1"}], "}"}]}], "}"}], ",", " ", 
       RowBox[{"Method", "->", "\"\<NelderMead\>\""}], ",", " ", 
       RowBox[{"PrecisionGoal", "\[Rule]", "1"}], ",", " ", 
       RowBox[{"AccuracyGoal", "\[Rule]", "1"}]}], "]"}]}], "]"}], ",", 
   "1800"}], "]"}]], "Input",
 CellChangeTimes->{{3.819869419243043*^9, 3.81986946729214*^9}, {
   3.81986949998383*^9, 3.81986951244518*^9}, {3.819869589437641*^9, 
   3.8198695895127277`*^9}, {3.819869633129355*^9, 3.8198696334165688`*^9}, {
   3.819871636634088*^9, 3.819871651405284*^9}, {3.819871715127633*^9, 
   3.819871723957344*^9}, {3.819872006381109*^9, 3.8198720122971077`*^9}, {
   3.81987230595779*^9, 3.819872306408276*^9}, {3.8198771706362753`*^9, 
   3.8198772636893997`*^9}, {3.819877707869554*^9, 3.819877728206834*^9}, {
   3.819877904578409*^9, 3.819877906829452*^9}, {3.819878268919306*^9, 
   3.819878271250824*^9}, {3.819878355494495*^9, 3.819878357441977*^9}, {
   3.819878738913653*^9, 3.819878745350308*^9}, {3.819879157213667*^9, 
   3.819879159587221*^9}, {3.819879202695931*^9, 3.819879205088241*^9}, 
   3.8198835429178553`*^9, {3.819884665306184*^9, 3.819884669015758*^9}, {
   3.8203955317879953`*^9, 3.8203955335849752`*^9}, 3.820396577820778*^9, {
   3.82039662206639*^9, 3.820396651446649*^9}, {3.8203969619195013`*^9, 
   3.8203969670088863`*^9}, {3.820420728805439*^9, 3.820420738823867*^9}, {
   3.8204228937458773`*^9, 3.820422899420824*^9}, {3.820423595873807*^9, 
   3.820423596113111*^9}, {3.82042472817459*^9, 3.820424740586669*^9}, {
   3.820426494242612*^9, 3.8204264960820208`*^9}, {3.820429393144456*^9, 
   3.820429404889976*^9}, {3.820468845048854*^9, 3.820468845361607*^9}, {
   3.820474100833984*^9, 3.820474104591846*^9}, {3.8204754613356447`*^9, 
   3.82047547500404*^9}, {3.820481275202819*^9, 3.820481279700885*^9}, {
   3.8204844756003923`*^9, 3.820484505204568*^9}, {3.820486346835207*^9, 
   3.82048638663181*^9}},
 CellLabel->
  "In[1233]:=",ExpressionUUID->"dc26a12b-f018-402c-9b5b-e0fd2fa20c9c"],

Cell[BoxData[
 FormBox["$Aborted", TraditionalForm]], "Output",
 CellChangeTimes->{3.820479174624826*^9, 3.820484468804337*^9, 
  3.8204863082279673`*^9, 3.8204869557316093`*^9, 3.820487374262465*^9},
 CellLabel->
  "Out[1233]=",ExpressionUUID->"8912654f-aba9-47df-9f2b-73a6e7609b89"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Timing", "[", 
   RowBox[{"sol", "=", 
    RowBox[{"FindMinimum", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"obj", "[", 
         RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"\[Alpha]", ">", "1"}], " ", "&&", 
         RowBox[{
          RowBox[{"Abs", "[", "\[Beta]", "]"}], "<", "\[Alpha]"}]}]}], "}"}], 
      ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Alpha]", ",", "0.1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Beta]", ",", "0."}], "}"}]}], "}"}], ",", 
      RowBox[{"PrecisionGoal", "\[Rule]", "1"}], ",", " ", 
      RowBox[{"AccuracyGoal", "\[Rule]", "1"}]}], "]"}]}], "]"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.819869419243043*^9, 3.81986946729214*^9}, {
   3.81986949998383*^9, 3.81986951244518*^9}, {3.819869589437641*^9, 
   3.8198695895127277`*^9}, {3.819869633129355*^9, 3.8198696334165688`*^9}, {
   3.819871636634088*^9, 3.819871651405284*^9}, {3.819871715127633*^9, 
   3.819871723957344*^9}, {3.819872006381109*^9, 3.8198720122971077`*^9}, {
   3.81987230595779*^9, 3.819872306408276*^9}, {3.8198771706362753`*^9, 
   3.8198772636893997`*^9}, {3.819877707869554*^9, 3.819877728206834*^9}, {
   3.819877904578409*^9, 3.819877906829452*^9}, {3.819878268919306*^9, 
   3.819878271250824*^9}, {3.819878355494495*^9, 3.819878357441977*^9}, {
   3.819878738913653*^9, 3.819878745350308*^9}, {3.819879157213667*^9, 
   3.819879159587221*^9}, {3.819879202695931*^9, 3.819879205088241*^9}, 
   3.8198835429178553`*^9, {3.819884665306184*^9, 3.819884669015758*^9}, {
   3.8203955317879953`*^9, 3.8203955335849752`*^9}, {3.8203957256762037`*^9, 
   3.820395781479329*^9}, {3.82039665581002*^9, 3.8203966560739527`*^9}, {
   3.820420098913074*^9, 3.8204201304453373`*^9}, {3.8204207515634336`*^9, 
   3.820420759815172*^9}, {3.820423577315569*^9, 3.820423577547017*^9}, {
   3.820429482918847*^9, 3.8204294988319683`*^9}, 
   3.820468849873135*^9},ExpressionUUID->"04a78604-f315-4e1a-95fc-\
30aa1eb0ecf5"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"701.434413`", ",", 
    RowBox[{"{", 
     RowBox[{"0.0698848655645295`", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Alpha]", "\[Rule]", "1.0001156249879326`"}], ",", 
        RowBox[{"\[Beta]", "\[Rule]", "0.3947501087341165`"}]}], "}"}]}], 
     "}"}]}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.8204216298592167`*^9, 3.820421814779814*^9, 
  3.820423590859735*^9, 3.82043071163026*^9},
 CellLabel->
  "Out[1088]=",ExpressionUUID->"59b7f8e7-082e-41c0-879c-e01a5bed1e2b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Alpha]0", "=", 
   RowBox[{"\[Alpha]", "/.", "\[VeryThinSpace]", 
    RowBox[{"sol", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Beta]0", "=", 
   RowBox[{"\[Beta]", "/.", "\[VeryThinSpace]", 
    RowBox[{"sol", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]0", "=", "0.772993"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Beta]0", "=", "0.0293319"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[Delta]0", "=", 
  RowBox[{
   RowBox[{"Sin", "[", 
    RowBox[{
     FractionBox["1", "6"], " ", 
     RowBox[{"target", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
      " ", "\[Pi]"}], "]"}], " ", "2", " ", 
   RowBox[{"\[Delta]s", "[", 
    RowBox[{"\[Alpha]0", ",", "\[Beta]0"}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.819888263770653*^9, 3.819888288638391*^9}, {
   3.820421934953864*^9, 3.820421937977207*^9}, 3.820429097858739*^9, {
   3.820431462612702*^9, 3.820431477967952*^9}, {3.82046878092946*^9, 
   3.820468813501122*^9}, 3.820486954135228*^9},
 CellLabel->
  "In[1234]:=",ExpressionUUID->"b62b6233-09a0-4fe9-997f-29211ac666b9"],

Cell[BoxData[
 FormBox["0.5781781662995144`", TraditionalForm]], "Output",
 CellChangeTimes->{3.8204869574319973`*^9, 3.820487376571459*^9},
 CellLabel->
  "Out[1238]=",ExpressionUUID->"62b852a5-9e47-40b2-87a2-eea8e6feca40"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"obj", "[", 
  RowBox[{"\[Alpha]0", ",", "\[Beta]0"}], "]"}]], "Input",
 CellChangeTimes->{{3.819889116893527*^9, 3.819889124112977*^9}, 
   3.820346096752295*^9, {3.820421960837098*^9, 3.820421961171526*^9}},
 CellLabel->
  "In[1239]:=",ExpressionUUID->"d2af8deb-6e4f-402d-80cc-0fa2d447f652"],

Cell[BoxData[
 FormBox["0.03951569034112291`", TraditionalForm]], "Output",
 CellChangeTimes->{
  3.819889126320107*^9, 3.820344254416897*^9, {3.82034608436735*^9, 
   3.8203460994447927`*^9}, 3.82034613780324*^9, 3.820389944150326*^9, 
   3.820390127660857*^9, 3.820390328927739*^9, 3.820419946991563*^9, {
   3.820421958116744*^9, 3.820421963683875*^9}, 3.820423388353094*^9, 
   3.820423731357815*^9, 3.82042910184965*^9, 3.8204314819372377`*^9, 
   3.820468817247161*^9, 3.820486409090498*^9, 3.8204873808056793`*^9},
 CellLabel->
  "Out[1239]=",ExpressionUUID->"15a3cf6a-f953-47de-af82-84ff13e6a211"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Rho", "[", 
    RowBox[{"\[Alpha]0", ",", "\[Beta]0", ",", "\[Delta]0"}], "]"}], ",", 
   FractionBox[
    RowBox[{"6", " ", 
     RowBox[{"ArcSin", "[", 
      FractionBox["\[Delta]0", 
       RowBox[{"2", " ", 
        RowBox[{"\[Delta]s", "[", 
         RowBox[{"\[Alpha]0", ",", "\[Beta]0"}], "]"}]}]], "]"}]}], "\[Pi]"], 
   ",", 
   RowBox[{"SpearmanRho", "[", 
    RowBox[{"rbrr", ",", "rbtc"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.819889271883568*^9, 3.819889324347828*^9}, {
  3.820468817298415*^9, 3.8204688189775457`*^9}},
 CellLabel->
  "In[1240]:=",ExpressionUUID->"75ae374c-d04f-46f9-a38a-2a4d30cfeb95"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
   "0.7470283023615991`", ",", "0.7337232561981398`", ",", 
    "0.7337232561981398`"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.8198892791296177`*^9, 3.819889326293769*^9}, 
   3.820344254423551*^9, 3.820346104233005*^9, 3.8203461392485332`*^9, 
   3.820389946406475*^9, 3.820390332029562*^9, 3.8203983763165293`*^9, 
   3.820419948415512*^9, 3.8204205785044613`*^9, 3.820421966021801*^9, 
   3.820423392570719*^9, 3.8204237329224653`*^9, 3.820429104329658*^9, 
   3.8204314842985497`*^9, 3.820468821491661*^9, 3.820486411042666*^9, 
   3.8204873827168427`*^9},
 CellLabel->
  "Out[1240]=",ExpressionUUID->"c35a6327-2006-419e-8884-d1f2a7f95561"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Delta]s", "[", 
   RowBox[{"\[Alpha]0", ",", "\[Beta]0"}], "]"}], "-", "\[Delta]0"}]], "Input",\

 CellChangeTimes->{{3.8198885709921722`*^9, 3.819888592090438*^9}, {
  3.819888674689439*^9, 3.819888688580926*^9}, {3.820390343431923*^9, 
  3.82039037530416*^9}},
 CellLabel->
  "In[1241]:=",ExpressionUUID->"6f39a328-1f0d-403b-a68e-6980948de77a"],

Cell[BoxData[
 FormBox["0.19314589767413692`", TraditionalForm]], "Output",
 CellChangeTimes->{{3.819888576524064*^9, 3.819888592343099*^9}, {
   3.819888675421989*^9, 3.819888688849678*^9}, 3.8203442544318657`*^9, 
   3.820346144717101*^9, 3.820389946450037*^9, {3.820390333277194*^9, 
   3.820390384329314*^9}, 3.820398379916505*^9, 3.820419948448938*^9, 
   3.8204219695596867`*^9, 3.820423393786398*^9, 3.8204237329667397`*^9, 
   3.820429104991053*^9, 3.820431488463257*^9, 3.8204688245207167`*^9, 
   3.8204873827638407`*^9},
 CellLabel->
  "Out[1241]=",ExpressionUUID->"24aae452-7a58-486d-b082-2595b86a1476"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Timing", "[", 
   RowBox[{"t1", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Alpha]", ",", 
        RowBox[{"obj", "[", 
         RowBox[{"\[Alpha]", ",", " ", "\[Beta]0"}], "]"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"\[Alpha]", ",", "0.5", ",", "1.2", ",", " ", "0.025"}], 
       "}"}]}], "]"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.819888260046826*^9, 3.819888260691946*^9}, {
   3.819888292067772*^9, 3.81988836177166*^9}, {3.819888519196604*^9, 
   3.8198885281975937`*^9}, 3.819888701889473*^9, {3.8204219756240387`*^9, 
   3.820421975777117*^9}, {3.820422282414357*^9, 3.820422282571381*^9}, {
   3.8204237933415823`*^9, 3.8204237999840927`*^9}, {3.820424300810066*^9, 
   3.820424302953313*^9}, {3.8204292154922037`*^9, 3.820429232937251*^9}, {
   3.82048746476044*^9, 3.820487467409329*^9}, 3.82048756015766*^9},
 CellLabel->
  "In[1295]:=",ExpressionUUID->"56cf857a-6558-49e3-8cb0-ee481c6bd4c5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Timing", "[", 
   RowBox[{"t2", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Beta]", ",", 
        RowBox[{"obj", "[", 
         RowBox[{"\[Alpha]0", ",", "\[Beta]"}], "]"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"\[Beta]", ",", 
        RowBox[{"-", ".3"}], ",", ".3", ",", " ", "0.025"}], "}"}]}], "]"}]}],
    "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.819888260046826*^9, 3.819888260691946*^9}, {
   3.819888292067772*^9, 3.81988836177166*^9}, {3.819888519196604*^9, 
   3.8198885281975937`*^9}, {3.819888701889473*^9, 3.81988873932089*^9}, {
   3.820421978284136*^9, 3.8204219784085217`*^9}, {3.820422288691728*^9, 
   3.820422290714777*^9}, {3.820424553793888*^9, 3.820424554258647*^9}, {
   3.820429225017633*^9, 3.8204292263272057`*^9}, {3.820487471259438*^9, 
   3.8204874738671093`*^9}, 3.8204875643031816`*^9},
 CellLabel->
  "In[1296]:=",ExpressionUUID->"8d1703d6-a419-480d-83dc-362ca550b467"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"t1", ",", " ", 
     RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}], ",", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"t2", ",", " ", 
     RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.8198884974135017`*^9, 3.819888499219454*^9}, {
  3.819888531301403*^9, 3.819888533614695*^9}, {3.8198887816628942`*^9, 
  3.8198887924368353`*^9}, {3.8204219873340607`*^9, 3.820421989328868*^9}},
 CellLabel->
  "In[1297]:=",ExpressionUUID->"b7989760-57ce-4077-93ac-d063c98da8bd"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    GraphicsBox[{{}, {{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBWIQDQEP7E2NMjyPLVttf/YMCDywD3m85JLQs7X2s2aC
wEP7L5d3+/ZorLdPA4NH9hUOv76cF9pgbwwGj+37T8blW/RvsIeY98RecZVZ
5+SFG6DmPbFvPCJuwi+wAWreU/ufcjWnDp1fCzXvmf2uS3fU3c6ugpr33L41
T+vSriPLoea9sJ83+9WBv6lLoea9sN8/5aDffL0lUPNe2p/fytscbL4Eat4r
+/W/WdLyLZfam4DNe22/tmBvZPn5ZVDz3tiHiu88xbhqBdS8N/ZzXq+/rjB7
FdS8t/YLmA8+yetdAzXvnX3aZwcp78p1UPPe218MuvvriB7Mvx/sWXfe375R
diNU/Qd7tiQnQ2uuTVDzP9gfXXCq9PeXTVD9H+17Z3aesLq3GWrfR/t5R3gj
vx3dAjXvk72a2pZ7n1dvhZr3yT6tJUnwev82qHmf7HcEV8uYFG6HmvfZ/siy
/8Vz/XfYAwBTMN6J
         "]]}}, {{}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{0.4854166666666669, 0},
     DisplayFunction->Identity,
     Frame->{{False, False}, {False, False}},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     Method->{
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}},
     PlotRange->{{0.4854166666666669, 1.2000000000000002`}, {
       0, 0.09496482927320488}},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}], ",", 
    GraphicsBox[{{}, {{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQbQwGl/dn7dTRtpu6y34mGFzcv4mtZuYn9e32DGBw
Yb/+0llPjSZssT8DAftPMFv9Ue7cBFV/cv+smoWG82ZssE8Dg2P7n7oWmKi3
rrU3Apt/eH/Tm0kXzNeusv/3HwT27/fsny55WHel/Qyw/p373zLMe6z0cgVU
/eb9OsvZLhlrwORX7p9z44v7a9mV9hMgFu5ftNTLmS9sBdR9E2wkvRZtEry3
zH4BRN4+8GTk1ls2S6H8lfZLps78Ntlsib0JxHz7mepvcmeFLbGfA7Hf/nK7
94HW6UvtmcDmHbD3TpRQnThnOVT9Yfu2v7ZBLSqr7DMg/rMXOh/q+Vhjrf0s
iP/t9zI82Z8buMH+HCR87EsjzF6yim6yZ4SEn738nMkJB4M228+GhK+9/361
H3OB7jCFhL99+JqEKYHFG+0BAHW+AA==
         "]]}}, {{}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{0, 0},
     DisplayFunction->Identity,
     Frame->{{False, False}, {False, False}},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     Method->{
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}},
     PlotRange->{{-0.3, 0.3000000000000001}, {0, 0.10383976511068274`}},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.8198884994763803`*^9, 3.819888576490025*^9, 
  3.8198890809011717`*^9, 3.820344361743124*^9, 3.820346260522196*^9, 
  3.820390069420177*^9, 3.8203902744656353`*^9, 3.8203904042329683`*^9, 
  3.820390531796235*^9, 3.820398495594206*^9, 3.820420066059286*^9, 
  3.8204220673122272`*^9, 3.820422407076888*^9, 3.8204235123733253`*^9, 
  3.820423953836478*^9, 3.820424476034667*^9, 3.820424620625716*^9, 
  3.820429291866658*^9, 3.820468882299107*^9, 3.8204874403425903`*^9, 
  3.820487548822914*^9, 3.8204876973361197`*^9},
 CellLabel->
  "Out[1297]=",ExpressionUUID->"569202f7-c158-4622-92e4-d8245cccd403"]
}, Open  ]],

Cell[BoxData["s"], "Input",
 CellChangeTimes->{
  3.8204878451348257`*^9},ExpressionUUID->"45f940b1-d3a1-4aff-8999-\
5cb580fc8f54"],

Cell[CellGroupData[{

Cell[BoxData["target"], "Input",
 CellChangeTimes->{{3.819889653688262*^9, 3.81988965586908*^9}},
 CellLabel->
  "In[1245]:=",ExpressionUUID->"a38d8235-6b81-4bf9-89c3-9d20feb6cb15"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
   "0.7337232561981398`", ",", "0.5581395348837209`", ",", 
    "0.6356589147286822`", ",", "0.62015503875969`", ",", 
    "0.5891472868217049`"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.8198896561146193`*^9, 3.8203443617951612`*^9, 
  3.820346260559857*^9, 3.820420715393854*^9, 3.820421911889205*^9, 
  3.820487440397785*^9},
 CellLabel->
  "Out[1245]=",ExpressionUUID->"77b59f70-61c2-468a-929e-b384012019a3"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"F1", "=", 
   RowBox[{"FNIGi", "[", 
    RowBox[{"\[Alpha]0", ",", "\[Beta]0", ",", 
     RowBox[{"\[Mu]s", "[", 
      RowBox[{"\[Alpha]0", ",", "\[Beta]0"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"\[Delta]s", "[", 
       RowBox[{"\[Alpha]0", ",", "\[Beta]0"}], "]"}], "-", "\[Delta]0"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8198896828826733`*^9, 3.819889725354713*^9}, 
   3.820487135413555*^9},
 CellLabel->
  "In[1246]:=",ExpressionUUID->"34dfe514-e1e7-4223-bf7d-0f599755e35c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReleaseHold", "[", 
  RowBox[{"f", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Alpha]", "\[Rule]", "\[Alpha]0"}], ",", " ", 
     RowBox[{"\[Beta]", "\[Rule]", "\[Beta]0"}], ",", " ", 
     RowBox[{"\[Delta]", "\[Rule]", "\[Delta]0"}]}], "}"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.8198896575062237`*^9, 3.819889672403754*^9}},
 CellLabel->
  "In[1247]:=",ExpressionUUID->"6e02ea7b-dc0d-4105-b6d8-6c0628520aea"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
   "0.7337232561981398`", ",", "0.587158634263536`", ",", 
    "0.6099824988733435`", ",", "0.615578212848117`", ",", 
    "0.5954047613696994`"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.8198896577932158`*^9, 3.819889673010844*^9}, {
   3.819889722430011*^9, 3.819889729276238*^9}, 3.8203443639113092`*^9, 
   3.820487443173411*^9},
 CellLabel->
  "Out[1247]=",ExpressionUUID->"4c4eff13-078b-45a2-82ae-aa8e00079ec8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rbrr", ",", "rbtc"}], "}"}], "\[Transpose]"}], ",", 
    RowBox[{"PlotMarkers", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "5"}], "}"}]}], ",", 
    RowBox[{"PlotTheme", "\[Rule]", "\"\<Classic\>\""}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"FontSize", "\[Rule]", "12"}], "}"}]}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<BRR\>\"", ",", " ", "\"\<BTCF\>\""}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.817308027175983*^9, 3.817308034106001*^9}, {
  3.8175479853845167`*^9, 3.81754804117947*^9}, {3.819891628200964*^9, 
  3.819891658198626*^9}},
 CellLabel->
  "In[1248]:=",ExpressionUUID->"4f8dae72-7180-4c48-ac71-8930c88ae710"],

Cell[BoxData[
 FormBox[
  GraphicsBox[{{}, 
    {RGBColor[0.24720000000000014`, 0.24, 0.6], AbsoluteThickness[1], 
     StyleBox[GeometricTransformationBox[InsetBox[
        FormBox[
         StyleBox[
          GraphicsBox[
           {EdgeForm[None], DiskBox[{0, 0}]}],
          StripOnInput->False,
          GraphicsBoxOptions->{DefaultBaseStyle->Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            AbsoluteThickness[1], FontSize -> 12]}],
         TraditionalForm], {0., 0.}, Automatic, Offset[5]], CompressedData["
1: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
       "]],
      FontSize->12]}, {{}, {}}},
   AspectRatio->1,
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"BRR\"", TraditionalForm], 
     FormBox["\"BTCF\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   AxesStyle->Directive[
     GrayLevel[0], 
     AbsoluteThickness[0.2]],
   BaseStyle->{FontSize -> 12},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameStyle->Directive[
     GrayLevel[0], 
     AbsoluteThickness[0.2]],
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   FrameTicksStyle->GrayLevel[0],
   GridLines->{None, None},
   GridLinesStyle->Automatic,
   LabelStyle->{FontFamily -> "Times"},
   Method->{
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}},
   PlotRange->{{-0.11914798729512568`, 
    0.11985501735770551`}, {-0.11602005107451316`, 0.118884592466263}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic},
   TicksStyle->GrayLevel[0]], TraditionalForm]], "Output",
 CellChangeTimes->{3.819891658669364*^9, 3.820344364102673*^9, 
  3.8204314933742867`*^9, 3.8204874432537823`*^9},
 CellLabel->
  "Out[1248]=",ExpressionUUID->"35fa7b1d-512f-4ecb-aac5-957638533e0f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], " ", "<>", 
    "\"\<../latex/_pics/scatter.pdf\>\""}], ",", " ", "p"}], "]"}]], "Input",
 CellChangeTimes->{{3.8198916843732233`*^9, 3.819891698202551*^9}},
 CellLabel->
  "In[1249]:=",ExpressionUUID->"a060ba62-e7a3-44b5-8477-e765a919a097"],

Cell[BoxData[
 FormBox["\<\"/Users/nat/Documents/GitHub/optimal_hedging_ratio_copula/_\
mathematica/../latex/_pics/scatter.pdf\"\>", TraditionalForm]], "Output",
 CellChangeTimes->{3.819891700197101*^9, 3.820344365210932*^9, 
  3.820487443509822*^9},
 CellLabel->
  "Out[1249]=",ExpressionUUID->"ca66263a-da66-456d-b158-b9ffc7bd4494"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "=", 
  RowBox[{"Histogram", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"rbrr", ",", "rbtc"}], "}"}], ",", " ", "Automatic", ",", " ", 
    "\"\<PDF\>\"", ",", 
    RowBox[{"ChartLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<BRR\>\"", ",", " ", "\"\<BTCF\>\""}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.817548266700173*^9, 3.8175483334365587`*^9}, {
  3.817548377441679*^9, 3.817548404044174*^9}},
 CellLabel->
  "In[1250]:=",ExpressionUUID->"361e56e4-0d88-4087-b1fb-7594fa8e37e7"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
    GraphicsBox[{{
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.518]]], 
        RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], {{{{}, {
           Directive[
            Opacity[0.5], 
            Directive[
             EdgeForm[
              Directive[
               Thickness[Small], 
               Opacity[0.518]]], 
             RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
            Directive[
             RGBColor[0.97858, 0.678934, 0.157834]]], {{{
              RectangleBox[{-0.25, 0.}, 
               NCache[{-0.24, 
                 Rational[20, 129]}, {-0.24, 0.15503875968992248`}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{-0.17, 0.}, 
               NCache[{-0.16, 
                 Rational[20, 129]}, {-0.16, 0.15503875968992248`}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{-0.16, 0.}, 
               NCache[{-0.15, 
                 Rational[20, 129]}, {-0.15, 0.15503875968992248`}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{-0.14, 0.}, 
               NCache[{-0.13, 
                 Rational[20, 129]}, {-0.13, 0.15503875968992248`}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{-0.13, 0.}, 
               NCache[{-0.12, 
                 Rational[40, 129]}, {-0.12, 0.31007751937984496`}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{-0.12, 0.}, 
               NCache[{-0.11, 
                 Rational[80, 129]}, {-0.11, 0.6201550387596899}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{-0.11, 0.}, 
               NCache[{-0.1, 
                 Rational[20, 129]}, {-0.1, 0.15503875968992248`}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{-0.1, 0.}, 
               NCache[{-0.09, 
                 Rational[140, 129]}, {-0.09, 1.0852713178294573`}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{-0.09, 0.}, 
               NCache[{-0.08, 
                 Rational[140, 129]}, {-0.08, 1.0852713178294573`}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{-0.08, 0.}, 
               NCache[{-0.07, 
                 Rational[140, 129]}, {-0.07, 1.0852713178294573`}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{-0.07, 0.}, 
               NCache[{-0.06, 
                 Rational[60, 43]}, {-0.06, 1.3953488372093024`}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{-0.06, 0.}, 
               NCache[{-0.05, 
                 Rational[320, 129]}, {-0.05, 2.4806201550387597`}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{-0.05, 0.}, 
               NCache[{-0.04, 
                 Rational[160, 43]}, {-0.04, 3.7209302325581395`}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{-0.04, 0.}, 
               NCache[{-0.03, 
                 Rational[620, 129]}, {-0.03, 4.8062015503875966`}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{-0.03, 0.}, 
               NCache[{-0.02, 
                 Rational[500, 129]}, {-0.02, 3.875968992248062}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{-0.02, 0.}, 
               NCache[{-0.01, 
                 Rational[1300, 129]}, {-0.01, 10.077519379844961`}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{-0.01, 0.}, 
               NCache[{0., 
                 Rational[780, 43]}, {0., 18.13953488372093}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{0., 0.}, 
               NCache[{0.01, 
                 Rational[700, 43]}, {0.01, 16.27906976744186}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{0.01, 0.}, 
               NCache[{0.02, 
                 Rational[460, 43]}, {0.02, 10.69767441860465}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{0.02, 0.}, 
               NCache[{0.03, 
                 Rational[260, 43]}, {0.03, 6.046511627906977}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{0.03, 0.}, 
               NCache[{0.04, 
                 Rational[740, 129]}, {0.04, 5.736434108527132}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{0.04, 0.}, 
               NCache[{0.05, 
                 Rational[160, 43]}, {0.05, 3.7209302325581395`}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{0.05, 0.}, 
               NCache[{0.06, 
                 Rational[260, 129]}, {0.06, 2.0155038759689923`}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{0.06, 0.}, 
               NCache[{0.07, 
                 Rational[260, 129]}, {0.07, 2.0155038759689923`}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{0.07, 0.}, 
               NCache[{0.08, 
                 Rational[40, 43]}, {0.08, 0.9302325581395349}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{0.08, 0.}, 
               NCache[{0.09, 
                 Rational[20, 43]}, {0.09, 0.46511627906976744`}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{0.1, 0.}, 
               NCache[{0.11, 
                 Rational[140, 129]}, {0.11, 1.0852713178294573`}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{0.11, 0.}, 
               NCache[{0.12, 
                 Rational[80, 129]}, {0.12, 0.6201550387596899}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{0.12, 0.}, 
               NCache[{0.13, 
                 Rational[40, 129]}, {0.13, 0.31007751937984496`}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{0.13, 0.}, 
               NCache[{0.14, 
                 Rational[40, 129]}, {0.14, 0.31007751937984496`}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{0.17, 0.}, 
               NCache[{0.18, 
                 Rational[20, 129]}, {0.18, 0.15503875968992248`}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{0.2, 0.}, 
               NCache[{0.21, 
                 Rational[20, 129]}, {0.21, 0.15503875968992248`}], 
               "RoundingRadius" -> 0]}}}}, {}, {}}}, {{{}, {
           Directive[
            Opacity[0.5], 
            Directive[
             EdgeForm[
              Directive[
               Thickness[Small], 
               Opacity[0.518]]], 
             RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798]]], {{{
              RectangleBox[{-0.27, 0.}, 
               NCache[{-0.26, 
                 Rational[20, 129]}, {-0.26, 0.15503875968992248`}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{-0.25, 0.}, 
               NCache[{-0.24, 
                 Rational[20, 129]}, {-0.24, 0.15503875968992248`}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{-0.16, 0.}, 
               NCache[{-0.15, 
                 Rational[20, 43]}, {-0.15, 0.46511627906976744`}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{-0.15, 0.}, 
               NCache[{-0.14, 
                 Rational[20, 129]}, {-0.14, 0.15503875968992248`}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{-0.14, 0.}, 
               NCache[{-0.13, 
                 Rational[40, 129]}, {-0.13, 0.31007751937984496`}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{-0.13, 0.}, 
               NCache[{-0.12, 
                 Rational[80, 129]}, {-0.12, 0.6201550387596899}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{-0.12, 0.}, 
               NCache[{-0.11, 
                 Rational[20, 43]}, {-0.11, 0.46511627906976744`}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{-0.11, 0.}, 
               NCache[{-0.1, 
                 Rational[20, 129]}, {-0.1, 0.15503875968992248`}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{-0.1, 0.}, 
               NCache[{-0.09, 
                 Rational[80, 129]}, {-0.09, 0.6201550387596899}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{-0.09, 0.}, 
               NCache[{-0.08, 
                 Rational[40, 43]}, {-0.08, 0.9302325581395349}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{-0.08, 0.}, 
               NCache[{-0.07, 
                 Rational[160, 129]}, {-0.07, 1.2403100775193798`}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{-0.07, 0.}, 
               NCache[{-0.06, 
                 Rational[280, 129]}, {-0.06, 2.1705426356589146`}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{-0.06, 0.}, 
               NCache[{-0.05, 
                 Rational[260, 129]}, {-0.05, 2.0155038759689923`}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{-0.05, 0.}, 
               NCache[{-0.04, 
                 Rational[100, 43]}, {-0.04, 2.3255813953488373`}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{-0.04, 0.}, 
               NCache[{-0.03, 
                 Rational[500, 129]}, {-0.03, 3.875968992248062}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{-0.03, 0.}, 
               NCache[{-0.02, 
                 Rational[1000, 129]}, {-0.02, 7.751937984496124}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{-0.02, 0.}, 
               NCache[{-0.01, 
                 Rational[1480, 129]}, {-0.01, 11.472868217054264`}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{-0.01, 0.}, 
               NCache[{0., 
                 Rational[620, 43]}, {0., 14.418604651162791`}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{0., 0.}, 
               NCache[{0.01, 
                 Rational[680, 43]}, {0.01, 15.813953488372093`}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{0.01, 0.}, 
               NCache[{0.02, 
                 Rational[1340, 129]}, {0.02, 10.387596899224807`}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{0.02, 0.}, 
               NCache[{0.03, 
                 Rational[20, 3]}, {0.03, 6.666666666666667}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{0.03, 0.}, 
               NCache[{0.04, 
                 Rational[800, 129]}, {0.04, 6.2015503875969}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{0.04, 0.}, 
               NCache[{0.05, 
                 Rational[260, 129]}, {0.05, 2.0155038759689923`}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{0.05, 0.}, 
               NCache[{0.06, 
                 Rational[100, 43]}, {0.06, 2.3255813953488373`}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{0.06, 0.}, 
               NCache[{0.07, 
                 Rational[80, 43]}, {0.07, 1.8604651162790697`}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{0.07, 0.}, 
               NCache[{0.08, 
                 Rational[160, 129]}, {0.08, 1.2403100775193798`}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{0.08, 0.}, 
               NCache[{0.09, 
                 Rational[140, 129]}, {0.09, 1.0852713178294573`}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{0.09, 0.}, 
               NCache[{0.1, 
                 Rational[20, 43]}, {0.1, 0.46511627906976744`}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{0.1, 0.}, 
               NCache[{0.11, 
                 Rational[80, 129]}, {0.11, 0.6201550387596899}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{0.11, 0.}, 
               NCache[{0.12, 
                 Rational[20, 43]}, {0.12, 0.46511627906976744`}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{0.12, 0.}, 
               NCache[{0.13, 
                 Rational[40, 129]}, {0.13, 0.31007751937984496`}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{0.13, 0.}, 
               NCache[{0.14, 
                 Rational[20, 129]}, {0.14, 0.15503875968992248`}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{0.14, 0.}, 
               NCache[{0.15, 
                 Rational[40, 129]}, {0.15, 0.31007751937984496`}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{0.15, 0.}, 
               NCache[{0.16, 
                 Rational[20, 43]}, {0.16, 0.46511627906976744`}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{0.19, 0.}, 
               NCache[{0.2, 
                 Rational[20, 129]}, {0.2, 0.15503875968992248`}], 
               "RoundingRadius" -> 0]}}, {{
              RectangleBox[{0.22, 0.}, 
               NCache[{0.23, 
                 Rational[20, 129]}, {0.23, 0.15503875968992248`}], 
               "RoundingRadius" -> 
               0]}}}}, {}, {}}}}}, {{{{{}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {}}}, {{{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {}}}}}, {
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
      Axes -> {True, True}, AxesLabel -> {None, None}, 
      AxesOrigin -> {-0.1248, 0.}, FrameLabel -> {{None, None}, {None, None}},
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], PlotRange -> NCache[{{
          Rational[-3, 25], 
          Rational[3, 25]}, {All, All}}, {{-0.12, 0.12}, {All, All}}], 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    FormBox[
     FormBox[
      TemplateBox[{"\"BRR\"", "\"BTCF\""}, "SwatchLegend", 
       DisplayFunction -> (FormBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.518]]], 
                    RGBColor[0.97858, 0.678934, 0.157834]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.518]]], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False], TraditionalForm]& ), 
       InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.518`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.97858, 0.678934, 0.157834], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6523866666666667, 0.45262266666666673`, 
                    0.10522266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.97858`", ",", "0.678934`", ",", "0.157834`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.97858, 0.678934, 0.157834]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.97858, 0.678934, 0.157834], Editable -> False, 
                    Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.518`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.518`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.518`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.518`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.518`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.518`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.518`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.518`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.518`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.518`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.518`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.518`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.518`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.518`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.518`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.518`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.518`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.518`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.518`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.518`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.518`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.518`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.518`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.518`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.518`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.518`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.518`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.518`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.518`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.518`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.518`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.518`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.518`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.518`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.518`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.518`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.518`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.518`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.518`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.518`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.518`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.518`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.518`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.518`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.518`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.518`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.518`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.518`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.518`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.518`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.518`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}]}], "}"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{#, ",", #2}], "}"}], ",", 
                RowBox[{"{", "}"}]}], "}"}], ",", 
            RowBox[{"LegendMarkers", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"Automatic", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", "}"}]}], ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
       Editable -> True], TraditionalForm], TraditionalForm]},
   "Legended",
   DisplayFunction->(FormBox[
     GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}], TraditionalForm]& ),
   Editable->True,
   InterpretationFunction->(FormBox[
     RowBox[{"Legended", "(", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], ")"}], TraditionalForm]& )], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.81754827301064*^9, 3.817548290427643*^9}, {
   3.817548383415271*^9, 3.8175484081188803`*^9}, 3.817549699868691*^9, 
   3.8176581749085293`*^9, 3.817749522800441*^9, 3.817751372372219*^9, 
   3.8178371444944773`*^9, 3.8179186470908937`*^9, 3.817922901678548*^9, 
   3.817965824556335*^9, 3.819126662426482*^9, 3.819126951919509*^9, 
   3.8191810311893578`*^9, 3.819285712031279*^9, 3.819298138354006*^9, 
   3.819820030104546*^9, 3.819889954593893*^9, 3.820344365850149*^9, 
   3.8204874437166443`*^9},
 CellLabel->
  "Out[1250]=",ExpressionUUID->"983a2ebe-9f17-4f37-8500-c7d4ffbfc97a"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Drbrr", "=", 
   RowBox[{"EmpiricalDistribution", "[", "rbrr", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Drbtc", "=", 
   RowBox[{"EmpiricalDistribution", "[", "rbtc", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.819298145893786*^9, 3.819298169116643*^9}},
 CellLabel->
  "In[1251]:=",ExpressionUUID->"61aae8dc-9d0c-4351-883f-0eb3ab38d832"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"p1", "=", 
    RowBox[{"Show", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Histogram", "[", 
       RowBox[{"rbrr", ",", " ", "Automatic", ",", " ", "\"\<PDF\>\""}], 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"PDF", "[", 
         RowBox[{
          RowBox[{"SmoothKernelDistribution", "[", "rbrr", "]"}], ",", " ", 
          "x"}], "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"-", "0.12"}], ",", " ", "0.12"}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], 
     "\[IndentingNewLine]", "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"p2", "=", 
    RowBox[{"Show", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Histogram", "[", 
       RowBox[{"rbtc", ",", " ", "Automatic", ",", " ", "\"\<PDF\>\""}], 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"PDF", "[", 
         RowBox[{
          RowBox[{"SmoothKernelDistribution", "[", "rbtc", "]"}], ",", " ", 
          "x"}], "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"-", "0.12"}], ",", " ", "0.12"}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], 
     "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "}"}]], "Input",\

 CellChangeTimes->{{3.819298173608347*^9, 3.819298292114149*^9}},
 CellLabel->
  "In[1253]:=",ExpressionUUID->"832df029-35d0-4dba-8327-19e2189d93eb"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    GraphicsBox[{{
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.518], Thickness[Small]}], {}, 
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.518], Thickness[Small]}], 
         RectangleBox[{-0.25, 0}, {-0.24, 0.15503875968992248},
          RoundingRadius->0], 
         RectangleBox[{-0.17, 0}, {-0.16, 0.15503875968992248},
          RoundingRadius->0], 
         RectangleBox[{-0.16, 0}, {-0.15, 0.15503875968992248},
          RoundingRadius->0], 
         RectangleBox[{-0.14, 0}, {-0.13, 0.15503875968992248},
          RoundingRadius->0], 
         RectangleBox[{-0.13, 0}, {-0.12, 0.31007751937984496},
          RoundingRadius->0], 
         RectangleBox[{-0.12, 0}, {-0.11, 0.6201550387596899},
          RoundingRadius->0], 
         RectangleBox[{-0.11, 0}, {-0.1, 0.15503875968992248},
          RoundingRadius->0], 
         RectangleBox[{-0.1, 0}, {-0.09, 1.0852713178294573},
          RoundingRadius->0], 
         RectangleBox[{-0.09, 0}, {-0.08, 1.0852713178294573},
          RoundingRadius->0], 
         RectangleBox[{-0.08, 0}, {-0.07, 1.0852713178294573},
          RoundingRadius->0], 
         RectangleBox[{-0.07, 0}, {-0.06, 1.3953488372093024},
          RoundingRadius->0], 
         RectangleBox[{-0.06, 0}, {-0.05, 2.4806201550387597},
          RoundingRadius->0], 
         RectangleBox[{-0.05, 0}, {-0.04, 3.7209302325581395},
          RoundingRadius->0], 
         RectangleBox[{-0.04, 0}, {-0.03, 4.8062015503875966},
          RoundingRadius->0], 
         RectangleBox[{-0.03, 0}, {-0.02, 3.875968992248062},
          RoundingRadius->0], 
         RectangleBox[{-0.02, 0}, {-0.01, 10.077519379844961},
          RoundingRadius->0], 
         RectangleBox[{-0.01, 0}, {0., 18.13953488372093},
          RoundingRadius->0], 
         RectangleBox[{0., 0}, {0.01, 16.27906976744186},
          RoundingRadius->0], 
         RectangleBox[{0.01, 0}, {0.02, 10.69767441860465},
          RoundingRadius->0], 
         RectangleBox[{0.02, 0}, {0.03, 6.046511627906977},
          RoundingRadius->0], 
         RectangleBox[{0.03, 0}, {0.04, 5.736434108527132},
          RoundingRadius->0], 
         RectangleBox[{0.04, 0}, {0.05, 3.7209302325581395},
          RoundingRadius->0], 
         RectangleBox[{0.05, 0}, {0.06, 2.0155038759689923},
          RoundingRadius->0], 
         RectangleBox[{0.06, 0}, {0.07, 2.0155038759689923},
          RoundingRadius->0], 
         RectangleBox[{0.07, 0}, {0.08, 0.9302325581395349},
          RoundingRadius->0], 
         RectangleBox[{0.08, 0}, {0.09, 0.46511627906976744},
          RoundingRadius->0], 
         RectangleBox[{0.1, 0}, {0.11, 1.0852713178294573},
          RoundingRadius->0], 
         RectangleBox[{0.11, 0}, {0.12, 0.6201550387596899},
          RoundingRadius->0], 
         RectangleBox[{0.12, 0}, {0.13, 0.31007751937984496},
          RoundingRadius->0], 
         RectangleBox[{0.13, 0}, {0.14, 0.31007751937984496},
          RoundingRadius->0], 
         RectangleBox[{0.17, 0}, {0.18, 0.15503875968992248},
          RoundingRadius->0], 
         RectangleBox[{0.2, 0}, {0.21, 0.15503875968992248},
          
          RoundingRadius->
           0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, \
{{{}, {}, 
        TagBox[
         {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
          LineBox[CompressedData["
1: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
EpI/lkf3wf8A/j/kHg==
           "]]},
         Annotation[#, "Charting`Private`Tag$75695771#1"]& ]}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-0.1248, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->NCache[{{
         Rational[-3, 25], 
         Rational[3, 25]}, {All, All}}, {{-0.12, 0.12}, {All, All}}],
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}], ",", 
    GraphicsBox[{{
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.518], Thickness[Small]}], {}, 
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.518], Thickness[Small]}], 
         RectangleBox[{-0.27, 0}, {-0.26, 0.15503875968992248},
          RoundingRadius->0], 
         RectangleBox[{-0.25, 0}, {-0.24, 0.15503875968992248},
          RoundingRadius->0], 
         RectangleBox[{-0.16, 0}, {-0.15, 0.46511627906976744},
          RoundingRadius->0], 
         RectangleBox[{-0.15, 0}, {-0.14, 0.15503875968992248},
          RoundingRadius->0], 
         RectangleBox[{-0.14, 0}, {-0.13, 0.31007751937984496},
          RoundingRadius->0], 
         RectangleBox[{-0.13, 0}, {-0.12, 0.6201550387596899},
          RoundingRadius->0], 
         RectangleBox[{-0.12, 0}, {-0.11, 0.46511627906976744},
          RoundingRadius->0], 
         RectangleBox[{-0.11, 0}, {-0.1, 0.15503875968992248},
          RoundingRadius->0], 
         RectangleBox[{-0.1, 0}, {-0.09, 0.6201550387596899},
          RoundingRadius->0], 
         RectangleBox[{-0.09, 0}, {-0.08, 0.9302325581395349},
          RoundingRadius->0], 
         RectangleBox[{-0.08, 0}, {-0.07, 1.2403100775193798},
          RoundingRadius->0], 
         RectangleBox[{-0.07, 0}, {-0.06, 2.1705426356589146},
          RoundingRadius->0], 
         RectangleBox[{-0.06, 0}, {-0.05, 2.0155038759689923},
          RoundingRadius->0], 
         RectangleBox[{-0.05, 0}, {-0.04, 2.3255813953488373},
          RoundingRadius->0], 
         RectangleBox[{-0.04, 0}, {-0.03, 3.875968992248062},
          RoundingRadius->0], 
         RectangleBox[{-0.03, 0}, {-0.02, 7.751937984496124},
          RoundingRadius->0], 
         RectangleBox[{-0.02, 0}, {-0.01, 11.472868217054264},
          RoundingRadius->0], 
         RectangleBox[{-0.01, 0}, {0., 14.418604651162791},
          RoundingRadius->0], 
         RectangleBox[{0., 0}, {0.01, 15.813953488372093},
          RoundingRadius->0], 
         RectangleBox[{0.01, 0}, {0.02, 10.387596899224807},
          RoundingRadius->0], 
         RectangleBox[{0.02, 0}, {0.03, 6.666666666666667},
          RoundingRadius->0], 
         RectangleBox[{0.03, 0}, {0.04, 6.2015503875969},
          RoundingRadius->0], 
         RectangleBox[{0.04, 0}, {0.05, 2.0155038759689923},
          RoundingRadius->0], 
         RectangleBox[{0.05, 0}, {0.06, 2.3255813953488373},
          RoundingRadius->0], 
         RectangleBox[{0.06, 0}, {0.07, 1.8604651162790697},
          RoundingRadius->0], 
         RectangleBox[{0.07, 0}, {0.08, 1.2403100775193798},
          RoundingRadius->0], 
         RectangleBox[{0.08, 0}, {0.09, 1.0852713178294573},
          RoundingRadius->0], 
         RectangleBox[{0.09, 0}, {0.1, 0.46511627906976744},
          RoundingRadius->0], 
         RectangleBox[{0.1, 0}, {0.11, 0.6201550387596899},
          RoundingRadius->0], 
         RectangleBox[{0.11, 0}, {0.12, 0.46511627906976744},
          RoundingRadius->0], 
         RectangleBox[{0.12, 0}, {0.13, 0.31007751937984496},
          RoundingRadius->0], 
         RectangleBox[{0.13, 0}, {0.14, 0.15503875968992248},
          RoundingRadius->0], 
         RectangleBox[{0.14, 0}, {0.15, 0.31007751937984496},
          RoundingRadius->0], 
         RectangleBox[{0.15, 0}, {0.16, 0.46511627906976744},
          RoundingRadius->0], 
         RectangleBox[{0.19, 0}, {0.2, 0.15503875968992248},
          RoundingRadius->0], 
         RectangleBox[{0.22, 0}, {0.23, 0.15503875968992248},
          
          RoundingRadius->
           0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}}, {{{}, {}, 
        TagBox[
         {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
          LineBox[CompressedData["
1:eJwtm2k4Ve/Xx81zpkyVUCQZTpFK+Fl3ESlSpsiQDCUVkVmmSEhlioqQzBmP
Yzjn4KY5GsxThEPKPGWe/p7rel7t63Ptve97re/6rr3XfrH32LoYOjDQ0dGd
ZaSj+7/jxzq/9guVNdji6UNWoQAapJwVGQkorcEVtTfDvrvQwLONtPqmsAZv
H9dnfnCFBtIjExIsmTW44SQv45IWDR7w2tygxNRgjen4jS5OGpy+rEUneaMG
G9QyfgsLH4D6NS7Zf7trcDzj4ZTf1/ohPSxXfc+OGkx98+xkjXE/+PJqG5wT
qMGDRhvDCSf6QVYq0D2HowYrZnw5eHpXPzw8O1NjuViN/6IeOlJyH+i9aDP6
0FiNf24Gc/82+wU/jqX4J4RUY8ZtFhcTvv+EMxoSxRYB1Zgv4+eQQ/pPeK+V
TpPwqcZCapZuRzx/AuVCls4b52qseN3qUevun5B1o5Cv1rwaXyAuNOxw64aA
1JrMkYPV2HMgxqlzdxcsZ6LOQtlqfEnHQeP8XCe457/lcN9XjaFAhf/z505w
In902dhZjekjvF9aeXeCacv349tZqnFj1i4ejp4OILD2fVPvqcK3aFdmbV+3
Q+62K3QMHVX4z6ibQ1JgO0gJDCp9aqrCKzELv+5btcPOPX8SL3yqwuL9602X
drQDi9rUlavEKnzjLlclU0wbBJ9wjZcrqMIBktGKU85tsKYz93E6uwpH129/
06XXBrPGi3J+L6twuciulEK2NvjlvDn/JLwK3/8y/rsoqhXMPYJlTEKqsJrk
2eju263Q6sdosTOgCs/ezVVlNmmF+nDW2ow7VfjyoatPLu1uhfJ0nkiydRU+
ntinwlzYAo/bxcUGlauweroyi+JkM0Rz07HTH6rC6M3ixGh3M8Rp98+JyVVh
XRKlLeNTMzwrT/tyaU8VNv2IMkVeNcOLySCSt2gVtvjB+Kj5UTMkS19JTRCu
wjadH92jfJvhVcIej+ZtW3qN6mnRGTdDxnd6m2m2KuwxxyNPQc2QxUI7w81U
hX3Xmre7KzRDjsbbI/KbVNxc0Z9Dv6cZ8jzTJc6sUPGLafVAdsFmyC+8x+k4
T8V2B56b8LE3Q9Gw7cL9aSpWsJ2X27HeBCRTya91w1Rc21LQKfO7CcofM1b0
DVBxBBdH0aGuJiB/HHy13kPFRqeu3lf51gQ1RzO8jrdQ8XC5mNLpsiaodQ61
vfidigunfNnO5zbB2yx7fY8vVOwl0/Hr4ssmeP9LSyXuPRXDlcNll2Oa4JPQ
PskSTMUcL548vHa/CerPMXP/oFCxytSVbw/9muBr2O+l8TIqfi10TfOwVxN8
r/kwyFFCxTwaN8ndbk3QuJD5XSafin0dXA/ec26CZkIYWTubin9HeWYecGqC
tqtXM+zTqfgCyW9Xk0MTdLdL+6Y9o2IZxjBWCasm6OFmdaiJo+I42Yf+n8ya
oE/7j0HPYyrevBA952zcBLSAT6orEVR8w+fpdaHzTTBUnr1P5D4Vt6e96Ks+
2wTDkw94jwZR8YnPqSYOOk3wV9px1ciPivOnMhq4NJtg1Pr0sKsnFQsL550g
aTTBRIJM0xNXKlY/vp4jAU0w/Z2tquAmFddPPJnxO9kEsywjWQ3XqNg8fa9q
x6kmWPDMvctqvaUf5+mGR3pNQHdRVibwDBWX9MZOrJg3AcMTju0vT1Exit13
1HQrH+ZPo+sURMU/tCsDSmyagG2z/m+nGhVbrZ75xGXfBBzH3rQsHKXi8aJe
HsdrTcDl8rBGQImK/exvm73b0os7+0auksJWPXYwvhLb0pO372z8eRkq1pxf
iX3r3QTbheUDnSWpWK1zj0pJSBMIGXA5RYlRsRL1dG/q4yYQeTBunLeDiuVT
XO49ft4Eoov5ssM8VCxuX/31RlETSHcotFutUTD9tNkV6Z9bfjJ/rh2/SMGn
L4RL/Nrym14PU0X9LAU/IVb0PZ3eqof17f30kxTcvv1Piv5qE7gN/Ew8NkLB
oh5C1swszcBsr8PmPETBXbXpJur8W/01TPTO6KPghqvCr4WkmqFmLMKcr52C
i4h0Gg06zXDBef6LThMFvzLzeJhp3gxD0zaqAV8pOG5jpDPwRjNwLBzbNfaW
gr3OtNxRftIMJnTDPe+LKFiLlpn7sr0Z/t67oL+aR8FHw3cuev1tBl/m6mrF
LAqWIzzRMlxphm3hMgTHVxQs1soYK8/VAmkc8SkpyRQcSy+m+E68BQ4/2uRu
S6TgVYIzMlRpgY88NwI54yjYzrLGYOB8C4wLnLTxjqBg5Qpr583gFgg9kDIo
Z0fB3nv7/3ppt4JwPruxrTUF9xscWmK53Ap5BI/3z8wpWNc/iDXBqxUaD+tl
Mp+n4EODe499LG6FXRorV/vUKdhfvCq6RK4NiIamo7FCFMz7bFIzfE87nGqr
u/SFj4L3/jHeqYnaofOiQsMmFwWf3d6ssWzTDhuWTPk3GSmYFpdgFJnbDmeu
EW9pT5Mx31Nx/3zVDhjw455Z/kLGnomKjdOWnSDkdzn483sy3sl+SLIkrBP0
fIv5EjEZJ7+Q0LlY2gmV3oZKymVknFZN/+Q1VxdEeyTccU4j4xzG92LquAs0
XMQWaJ5kfF052W9B7ie8sCWsNkiS8bD4eWZ6/V9gqHuOOcW/Er+8gLsOvaQB
j++6/gfvSrznh1vQwUoafM3LTxi/U4kz9aT3E1pooM3FKaPmVIkLdB65y7EP
gtqPT2c6TStx84zvjJ3nIEiZnIjmP1SJR9Jvqy4bDsGijfKuB7QKfKV+LfwA
9zCQYgbtCnsr8F3u2JKRA8Pg9jY2v62zAscY7u/OPTUM45Iz/0n9qMCm9r2K
zP7D0D9cYFNHrcDBu4Tfbx8bhvqb+7NW4yvwt4jIv4c+/YFk752Kt3UqsK6T
R8xBzxFY21f0/ODJCiwdGsK5K24ELFs0GabUK7C40mbTZuEIiBJutdxSqsC8
jxesvwyPQPIg9rixuwLPnvrtbWk6CsnnHChX58qxgKZ68oLSGCRLFWtapZbj
Fc8fQvu+j8Nak1a+6ItyvHtCfkxteBwsA7sEeuLLMbKLxIYb4yDazTB8KbIc
hxmccgwiTEDyE5NwM49yzCdDJf98vMUrK1+Nzpbj+q6gfW0wCWvZT45s1y7H
qqFsRY4mk2BpIpXSjMpxHiFaZc1pEkSL9V0uHC3HD0NSz0omTEKyQxqfwZ5y
XHGfTTVvdIsbT5meWSzD65oHLv4NmoKozw5ae2fLsLjny5tmcVPgX3tfaWW8
DGvk8N37nDkF1sUfuPNoZTiIayU/p34KJKJPfWL/XoYFfw4aMbBMQ6bBKZUv
GWVYbPKyH2hNQ4KOg/Sr1DIceNtAglVvGsLgvoDPizI8MKvx4bvRNDge/DAt
E12G2UZTD/25Mg2yPKdyw/3KcK7NV30rv2nYyeqQaONZhg0DhNsowdPAuRl6
X8W1DC8n2VqKhE/D+OT7K3+vluEzHUtOLfHTUPhda+dpwzI8qr8vXLdwGlI+
2rNJ6JfhsuYHmu6kaXhSE7qwqFOG+Qe1T0eQp+F24fvm7P/K8FfGDxdK302D
0mOth6wHyvCJU3X2rJ3TsDfM3qdPsgynmgRdF+2dhu0BodcqxMrwmgM4K9Km
4d+t95rXBMpwRVi1l8X4NJTra6193CRhU8eXblab05B1yn40ZYWE9/jOCF9n
nIHE/0I7PedJePzhqWp31hnwVnhPkh4j4XtFE6xRPDOguk3rVlg7CRcs/PeS
Ij4D+Kvmr1MFJNx8x6Lk238zcHShLtQzh4Tfgt6rWTQDheJILvs1CRM5/4sR
1pqBFDd1b7YXJBzzWsz1ypkZCBA5wt8QRsLnWwYOzZvOgIa9tPZ5GxI+tzU/
KLrMQPmjjPEgCxJWMSWp7HObAULF3rgS061406zfinjMgBiHeD+/PgnPHy5t
2/SdgY0iYd+24yScZGG59i1sBqpX2QovbSfhE7/CjQzSZkB53wPjh9wkLDK2
dPXp6xnIP8e8SmUn4alFR9+fWTOQ/Ir+9G66rfv5dF9dK5gBgYbASf3VUuwm
RiYVFM9A1L/1+ICFUnxa7sDnudIZuKuzMtA3XorntdinAikz8O+2dzjv31Lc
cMGH4WP1DNx8sUA4MViKa09rDU3UzYDlxKxfelcp1uueeAj1M6AeNybo8LEU
O6yjn7TuGSBVXa96WleK5T4KFnH2zYD88B/bj1WleObx6D3lwRkQPT5UtL+0
FPtLxMuGjc1AvK2tqVlhKdYacdwonJoBrqj+tfDcUsxB/K+5Y24GQsusX5Mz
SnGjL38W3dIMrP3q0R1NLcUXFw5eMl6bAXc2i+mdSaU4cqkzaYZ+FsYVuxLO
JpTiqpXg3sess9AT2jaYH1WK92622HzhnwWq7Hd/F59SPMnqfU3jwCy0Nypq
qbiXYsup5T/GB2dh2vMpB71LKa5v93O8cWQWpN9ZJsbal+LMzMDrz07MQqzF
WHGZQSn2MdPOIVvNQgG9gVfAmVK89tXCf95hFj5nE//TOVWKg064Gio6z8L6
nE99p2opjpBNXssJmAXHKLah1X2l+PnazPlnqbMQonQz771EKd7tyirdmj0L
KZ0/bj/aVYrTfouu8hTPQmXA4WOmQqV43yWlxrOVs9AilbguxreVv5DSt7Ta
WZisX3n3h7MUe3x2yPJqmAU2V+vIYpZSnOD7PPBc+yxoVO8TPrlGxM2/6JTW
xmbB3C6il2ORiKejlTlbFmbBnX3idcsMEXNrOg7l0s9BrgnpkMMfItbP/pFw
UXgOBCZPnglvJuJPLimrxJNzcDA+i/fCNyIe3tPcGqE/B2dUOTp2fCbi7n7b
7WfM58C+/9ZL2lsinrXRfs1ybQ4Cw5rs3lQTMdvAgcPv3OdgVMzG/3sOEdsN
VLiVvZkD5g/vNBNfE7HPlSQGN/IcSNzYz2GTQsRPBgJiCZ/mwKRiMmEmjoir
B04Rs2lzUGvgXywQuJXPs1fKlrv+wc/5fs9eHyJWYjzZzCf/DxaStP7Lcifi
2Fs0l0/q/0DuL2f9MSciNjkp+UbJ+h8kBL0YvGRCxJ1jGXvYX/2DWyUVQq/k
iFj9lbY8JswDb4TP07fSROwvK8K6gOaBaKMmMLSHiOtKRwbkjeZhgQfz7Rch
Yt2PUYkvvOYhwPkjVwETEZuPNTN41s5DtFwbA7m3BE+1VSTTLBaAmDk72fik
BLs2DB+mz1+EpecKn+j+FePCgvQemeAVkKvybVCdKsbPkuzuJieugPWvTz/c
R4txSISUKG/hCrzba9v5t78YWzlkWSx2r8DjNwkjjd+KMW966kzc4VWQqt7k
fJVdjO0DEg7G9a/CxT493p/pxXjS3ET48MIqRNK/EBBMKcZeRwQ2mznXYOqU
8u6I+GL8eDzmO/+xNaB8dyS4BhfjF0JRp6oj1sCgv+n8CYtiTBfSO6wiuw73
GMRN/EyL8cNiVovTGutAkrppXnahGO/6pfjjouE67LzOYnvgdDFWPB5W4em7
DkMzqnf4jhTjGIdIWdN36+DLmPF0gHtrPZf4q28NN6Bg38zzXRzFWKFYcLLI
fgP6dTRSTJiL8aWZBI+XnhsQKVKiH7dYhA+Kt+YZP98ACdmdt+2airDaThN1
qY4NOKs/TmK8X4SNeS9efme4CQuRF9azfYtw/sHEiAd2m5D+ufyU3u0izGDQ
UXrWfROWNIPb4y2KML2p0r3DMZuQoSq0tE+pCMt8CrXf92UTDLz9UP3+Iuxq
t6N3T8cmrJT1hzvvLsLUzQITsd+bcF7xzY4KtiK8P/nG64d0dGjVmdfWYqMQ
642W9UWw0qGsfI+8zblCfFuFTjScmw4ZjnbPvh4pxE/DzpiFCdKh9f1I7XRf
ISa3xseHitKhHIfMkPHWQmxkYCnjtJcOGb/m+BpdX4jHPjQyiMrQoTyxNsuu
skK8u5RcEXiYDpkKOgU4RRXi4EcP9+icoUNFDPF1UccLMf3KLeNMDzp0CS2z
Kx4sxG6dp+GkLx1iCbA2bJMqxLRySdm+ADpkuSwzuJu3EL+/07UpEk6H2Kar
mYqGC/CDCa03US/o0JXePzpNcQW4YUQq/L8qOsS1Sz/aI6IA837MbhGqpUOV
ZsTOHYEF2CRdVnz6HR3ibr173dapAPddOlSe3kCHKPV8D+dQAZ5rUBti/UmH
tleqfReczMfRioIXby7Soa9mVg9uDOXj0xdZVnNX6FDYcgCq687HdP6LKX/W
6dCK6lvizU/5+PbnrmFbJnpEqz6d+C4tH2v/OdFtzkePiO9MbFyN8jFbhP+X
PDl6dNPea8cn3XyM1u3//CPQI2nm582iKB97u+oxgxI9eqHdo/VZPh+PmO86
0aJCj4K/2B4QZ8nH0rMlqZHa9Oj8D5fZr5Vv8L3n8Q9C7ekRx+2YN3uL3uBb
k9HvNR3p0XveUnvvzDfYXPMRPeNNeqRiuNAuGfsGH5q47xd8hx6Jt92l+t54
g1MuiZg8DKVHk90RoTJib/Auw0tGxrn0KMfvzX8BAm8wZ8zeOxMF9MhW9NtC
C8cbvPJjNDaMSI9EqyeLDtC/waPcpUTxCnrUbsV7PXAxD3fp+zVXUulR9Ibi
3raJPPw26sZRzjp6dCbV6KfsUB5+NBZ1oPsjParpT9Bvb8zDUrk/eLyb6dGj
4ddCoSF5ODi1O2eKjgFFBUXzcPjkYZnoGg811i3e6c8W7ZyHfwSln3ywbYvP
ma4kmefhaNtNs5ZdDCiynO1X6cE8HBHDQ3imtsXn59uP78vD2i+N7CI0GVDE
6MAPvDMPM+cmPvM9y4DCxah1Dcxb+9WKM1pZbHFlNuXCai7W+Gqncs6OAT0w
jC/tmM7F6x3Zt+AGAwoLu5U5+DMX+0wd7Nzjt8USl1KuN+XiCLaL+7+EMKD7
FO3EqY+5+KnFzN/XjxhQ6KR4xGpJLs6nl75p/ooBhZg239wenrulzxO3958Z
UJD0MWVN5Vx8UJv4S3EXIwqqlVT4ciAXh5H8O6X3M6LAS7zSBuK5uG+vbvOu
w4wo4PGIsAVHLn682feB+Swj8l9IWnXrz8HjldsKunwZke9HunfpUTn40Xtf
bffBLbaZoMrcy8G65a/yUmcYkc9KF6nQKwcz53zmbthkRN6E0iyKbQ72fyjU
sUeUCXkmOEQ2q+Tgm4bEaz+MmdCdq/UXGH5n452lpJdBrUwo/uk3E3J3Nn76
QcoiZYgJkd43mt9uzMZ8nfEiVf+Y0MLejiu/qNmYbd09blGAGXn3DbpSYrNx
4RnxfURTZhRgth7jhrLxuceLiqwjzCj8zKFmWlIWZqe/cJNXihXl+hxufx6T
hQ8vM8i5q7Ci+pyj3ecfZGGrGdJIhx4r4mT9j1bjloX3+l9Z3uXFih6/0519
oZuFaaos1dmNrChO3Y7faDET25cbaOEQNpRCSDB8Z5iJL63z2ZFYOdD3WpNP
crqZ2NbvsRuXBAdaNxRUj4dM7LzMcc9ehQNZesXvc5DPxMHzjK8ErnOgnbWx
SywsmTh3Yv6Xez0HenrhScoZcga2t1rtfRnNiaLcw0ebxDMwz3c/loUj21AV
y+nLqkIZeNsxb4uMC9vQ2DPW1nSuLU5zLza8tQ2dqQ6rvrP8GnO53bpUlLEN
sbHcjxZseY3ZhS4XOm7nRiGJwUfNw17j+19CE0WXuJEvxfde/3g6TtXO+yRy
kxdNnWI+5kNLx7xSkz0s/rzIvunJGF9nOr5HrzT77xEvOvc3w1jzXTq2ryKL
NhXxIkmhH9JZz9PxfqUvrhFzvOirq2TDDe107H6k57zRPT4kduDr9sXUV7hp
KdK49w0/epu4O3ObURp2qfRwIasJIu0w+/qLumk4Xk+mPe28IKp3fzP1CtJw
ZX+3eriDIGq+cFz1qHwapmdHHBefCKIBTpMf1sxpOMGcI/MfTRDR0+2Yu+yS
ij3kmCJCHgqhgMaFpAyVFJz6PHWXw7gw8nElTig0JGHh/Eds0z07kY5plqdN
eAK2u5LTqDsngdIahiJFrGPwhkT5sf/KpVBldO4K344IbMTnm1ttIYNI847+
2lPh2Gd79VTaDRlUckmGzu9DOF4dd68O8pNBeVLZzEOu4Zg+bcgMJcmgl5UZ
vOX1DzAny/snuFsG3etPlb50NwwHGHRMOpkfQPqHEgzT+0Kwsp2pjpGRLDrz
1KStvSwEH9Fojy2xlUXaKwJmnFEh+OgO0188brIIvY+zclcJwSo/TDy+Rssi
JbMYR+2Ye/g/NZPXp77LIuGgqIDRk8E4PmShxfCUHHqXymzioOePjbc/4yk+
II+U7l3rN9+4i18/leZ8fVQepdt/uXGu+C6eFS5jSdCUR8EHHt07JnAXR4s2
r/tZySMoFShm7/HFh/yFOQceySPqR0nOwhveODA2yvDvmDySzb2fkL7bGx84
4qeWuyiPXjz8syfxhxdu6bgu5cSogHzOv1EJOuyF3/990pW1UwEd61a6arjq
gbcpt56+rKmASidO1C1E3sEv6y33N8YroL2Nr/XG1O9gl14FzY0UBRRLZO7s
m3TDJ6Y3rOVzFZCr15fJz4ZuWDqxdS2ZooAO0l8QTdrpirml58bDfyqglEFi
9pOvt/HnLyt/3w0qIO6PAodDA27je7cYfm+MKaBuwZK47vcueIHE1+u+poDI
3e5572RccLHZjq4iJgJ6lqpSlx/ljJ3WJNpGuQjI9EDtZIDxLfxL89A3m90E
dGQyhNmx8iZ+9ufYl6R9BCRQqiN6QfQmTonx4P8nR0BzXpyHVYNuYPqu5XO/
FQmoWf2HruSQE3aQCHjYfoyAzp3/lfHpjiOe+++Jf5IBASkIplOLO67hi/e3
U6JMCIir26H5udo1TPmauOBvQUD1dhObNxiv4mCLNBebawSUK1MiZHLNAf9O
l8q/cIuAwifcFTQa7PHp0Zy/J+8Q0DWiitb+g/Y4X1Fhn7IPAWl7rV3ijbPD
LHFLMu8CCOjo4wOSHCu22MaVYVLwHgFJZ5qOMV6xxVQDrlLH+wTE2lLst0i4
gm9zSfzHHUVAMVb1KtVPrXDXfZ0L5s8JyO2h1JdiO0t82P6CUH4yARmSA8wz
FC3w45MWPzdSCejwn86RxE1z/FfCIe3C6y19BA/7PvxmhjU3nR0ysgjo38lH
HIFJF/HLXm/ZxVwCarv954XbdVO8SL03pVtAQOUpJ+SuHjPBow3CemLFBJTw
NYlqzmyMC13mDnzeYs+V+bP6LYb4zvYfrG4lBHRR5nwPenUBH6vI+72LSECH
2NhXDHzP4dqNK69cSgloxq565zEhPRya/l/gDhIBEbGrmhhRF+tq77B6t8VH
vLrvjo9o4aZHjSLC5QS00Pz4Zcv9kzhBMX+hdosrCJo1lD0IX2p70OpUQUDT
AlPVmn5qWNzHjihQSUB3vl7c5Cs9igdFIbpmi+dDalH/qCLOrt3p7EgmoClP
QyarU7L46Pd/3/22+N9vyQfLJAmMnhw5cWdrvX6jtv1msVxY97xnqVMZAYn2
f3l+w3pOw4ivYp/tVvwbz3/0X1kSBqvmxUTzrXwXJt+PLooehNvGPndPb+m1
hJdLC0yVwUeQMglvtvRhi3HrEzsOIe0rNse29CV/7fN6dfEEJJjdPSWduXX9
bbmLFKompO2orti9VZ+jgl5HW8S1Ibd7/YDgKwLyIL8VHA85DaVJGslcW/Uk
WXHPM/09A9WWgdxML7f8TX+pdbeePvxnqW1k/IKAlLIyS48WG0AE063moqcE
pJLp/WU/xwVoy4+7wBlDQGZeYseV1Q1hrwml8eqWn7x13+cgZyNwXu83ePuA
gBJ3OYnopxkDJZP1x+4QAmrHZYsOTBfBaMH4W+uWf+djLK65HTWD1BQ/vUMe
W36yp+8IcDSHMe30hoe3CciITb888asFhCZOfTm51R9u3bP7MjYsoRGEdFNs
CSg2/9nT4kPWIPpX/fOyFQGVBGgwV9tehuvRdjom5gTkKONGsT9jA1MZjSUM
xlvx8Z2adRq0AT4v18MLelv9tSIs63r3Cijr8peNnCKg7K/Vz/0LbcF7wqiy
caufLfcMtAYa28Edx1BRuUMExOvJxHtvxQ5cBklB92UIyFf8bFiYtgNc7RLU
Vd1BQAR357rwcQe4YqxdEM9HQIOfY9YiY6+C1Q9Pvil2AtJz63R78usaGH/o
6Hq9ooDoPq0WxIQ6ggFi09iYVUBlu8RH4mSvQ6lpqBHd1vPM6fZJqYTG66A7
fC2Od0ABiX1wuPzM0wn6Pc62SHQooGnhubOvuG/BcVJX85UiBZRxU+jBa9It
aNSs5nfLVEDmdcffZl5yhqstaYb3khTQW6cglbwsF4ibvdac/kAB1f8KizUX
d4Vu9bD4Y5cV0EtFgUDbijvwO/5dSjCdAlr6mZlsx+EOw8DZn/dPHhmGHaPY
W7nDn1HDPa1/5RHLz0vzVxk9YBTRXks3yaPboa9u3DDwBOfdIYc3Xsqjkx0E
M/c/3pBT4XHC9rA8Gr6rqxgmHADedclKluflUD330udV+wBgvWO+Z/SkHCpM
y7JxJQZAt8/Eqz5lOeT1njHaUj8QhHbOXs4QkUNMLJe9np8IgkeXVn8q9Mui
eP0d7S5ewTA3oOt+1EUWkXoexYkOhgBt9sHv/rADaGHFk9uTEg6VzdXF2sX7
0eBSdrJ7cgwE1LbXfamRRI+DGm/ylMRAeWQ4g2eRJFJlW1bP+xAD95LSEo6k
SaJo4TO9fZMxsKu6sYYULIk0jo7vPnsiFs7SKfKUakmiF3cOpe4ZjoU9v2SX
h+v3IsPJylffD8bDST7CD+PuPahu8EuWzLsE2N999sRfTgl0LtPnqU17AlD9
DC3b18VRz9UDoc9GEkBac9vRnkFxtDQSfoWNNxFWm+6N/CkSR4emdUT/WiZC
v8goe5auOEpb+xCTvZAID+K3zfSHiKEAwbd3pWWfg4haT8kS627E1eF6w/q/
51DMu/9o7bQoevFsz6WE889BZ9iV8qBLFJXvCj7G4vUcPGJY3wm9EUWTe9Ds
73fP4cHxTR8JY1FkRai5lmn1AnY/PDvbmL0LqetQDKVikuCN8oBWhMNOpCHU
WreamQQtga8Yd5zfiU78njjUQkmC1forb3NUdyLtkD0894aSYHuJnLDt9p3o
PA5v6DuWDOw8vp+UPuxA9scuaiX9SgZn47aW3Qd2oEf7/x3hl08B1vE05kIe
ERS9sC1zBKVAdfHpQKNNYRT7Yb9AnUkK3PGYXlqaFEbP7CxmXQJT4NcGjGt+
F0bpqW8LvzWnQDlfX3NXlDAqF47ZH+GTCr2KNmfFeITRFGMiV5BdGuxz8e68
Iy6EHktU1vI1p8NyUhD4F/Kjfh63tRc/00Ey+fimXRo/UtyUU5H6nQ76ybM1
Z2L5UWtvatHRpXSY1nt285QHP9qZ9CDFQuw1xM+ZsG9X40eZghfvZjq9hh7U
dLLwIx+q4lg4dpwxA3LSNqSSu3gR90rRnbdcGbBxPGGhrp4XXR65XnRWKAM4
OflGh6m8iOFzr7T1gQyQLGBpOpTCi3TufxAMMcgA45mZlPe2vKh5M37ua1IG
OJ8KqLXo5EEj/w4X2ShnwimzvaN17Nzo3+jeN2SNTNAVqYstHduG6Ab4svl1
M+FM52W1zG/bkMi3qZT3VpmgZ/YyKjxmG9LOfPNY5kEmmJqJHDTYsQ1lmEg6
T3dlgk2EacoRRS5UfJbfSXcoE1hX9seZCXKhqhP0V9MnM6HQafmB3zInalHo
szJmzAI6vWTXujpOxMCSpF8pnwWp3DQtfUNOZFPOrxAUmAXy6jdv1oZwoJv5
9Ae6IrLA8dV3pzQnDuSdPi2lFJ8FGSyK14MucKAnj7+LDuVkgXjTvAMS50A1
VyO5TjdvsYmCkAKVHe0SZhjn2ZcNthH25CQOdiS9beaP48FsGHdpeBTxjw0p
MfYP1h3PBndTJVuvX2zozFT1zzvnsiFEko7TiMiGvD/5NHR4ZQO7zXPzI1fY
ULvXTF5qfTYYa86euP+FFbVwSB3Vac0GurFAu9YKVtT40rRusjcb8mO33ZfM
2vpefEft+G8mGz43F7OYh7CiGp4wph7hHND6tcfCS4cVZWbvtBZxyAH1eUYm
0g8WlK6qP4Kdc2CXisRzai0LSvkW6H7NOwdWfdUJ70pY0LO5ocjyhzlw4F/x
R4FEFhQFRRXGxBzwcXjYGW/Pgtw7NPliNnNA5DRai99kRq5Onskq7Llwc6ic
bn6WGTmv5+zv588F5h27Iq3+MCNHSW6Ng9K5EGhcFlDfxIwsXTqdvunlgnvD
yLWMLGakyXrrPfuLXLAiG6qanWdG/McSvO4p5wH7eZHH1pVM6Evj+ttljTxI
ZzhV21zIhIKcHLhddfNAvcx1VjuTCU29VM68bJ0HzjsbTA/GMqGvTC3N6uF5
0DzkL053kwmFNfMQFn/mQUpR6NtrEkxo5VbE0I2QN8AwZ/qsMpIR0TLuXjBp
zoc2a4lxFn0GRGdwZq1Bswi25X57znttE8KnfzXY6BcB98RLnwnDTeCJvZM0
b1oE/IrO5vUamyDWlqwq7lQEwmTuHaFCm6BmMeXtFl0Ekl8Mni1+2ADPa/Hz
Ir1F0G6cvmSwfwMWwGVRSa0YmN1tJ8WW1oASffzyOhTD68BbHMLDaxAwwPjp
k1YxnHjoLc3TugbMIc8SLM8VQ1D6Y+vNojUQ+Fh3JOxKMaw2Ur73XVsDJT0B
964HxfDtmG65369VuGVGng5sLQaTl9nXeX6twGP5FBViVzEsT9tyvfu2AoV0
IUFDv4rhlZZYkWf1Ckzn6PHqjhTDyFj8v97kFXBf7jvIv1EMfqr3AvMtVsD3
BYtLxv4SmEgtaDn6ZxmSnMfK2+VL4KfuFGN15zJUnWzcYFMqgS9zh5Q165dh
Y/T541vqJZClQ4o3KFiGYDWFwqMXSiCC/mTsb89lCO8xmvjsWwLv5F+dYudf
htxilSOrgSUgy7+t6hbzMtSH7vZXuF8CMYveSs1LS8Cl8Icr9kkJTPW8N/zU
twRP/H3lLTJKwO9F0iMKaQkSxF7dmPhWArGCuoyvrJegYvZ+qXhLCcy/32jq
NVqCzo9Oqxc6S+CMIFdtju4S7HBRflhOKwGtIImppGNLkIw/5QUulsARU139
e9uX4LXN5AjfHiLMO07LSH1dBHVGD5+xfUQwMzl3V+rDIrRnrrJ9kCUC+UT+
D6maRWAbY5PxViZCwE5Hz33Fi+DsIXn1lw4RWL/2vZOOXwTVSDNanjMRZC6U
7Ve2XoRW+T7X0DtEaNqv89bQbBFu/XCgt/Ymgt9Gp6Wr4SKkCdyR4LtHhO9v
1mIKtReBJfWRtddTIrizaK3JHFyE5tK33ZpVRMje8UtNh2ERbprqOu2uI4JC
6U21nesLwLz8Y3nhAxFIequqE4sLoKLRK5L3gwh1gSKqcRMLkPJ50ZR3kAjd
vw1V+joXwKlXvqWHvRSeSD0mmBUvAD1rYoPHxVIQLh46MmC9AEvyKmoVlqVg
e0tLVcx8ASYNu/KWrpRCkWyGhoXRAvSk7Ir0u1kK2pl2Om06C1B+NO10cHAp
eL6gmX05tLX+1dwPUW9KoeLL3LOA1XmwiTpz5HtxKdTPhjB9/DcPF4ljGTzl
pdC7S+D2tsl50NpQCI2tLQVGZ2Wd5P55EE8gnnzWVgqFrhft59/OQ+sHKn69
WQqJIRtarsHzUD9mefA3EwnaHbbXIZ95qOPbSJHmIAH/aZn/eF3nodAKBeQK
kKBJbXpF0WYeMkMGJkZ3kKCy/HO4rOk8JOfes5IXJ0GK4ishSb15iJh/r150
gAS39hsqCajMQ9Cuq/nTBBIYpcvWchHmwfMEq6iSMgnUdjOeY5aaB/tHuqsk
DRKwbSddX+CZB41938kUIxJkbgi+6vzzD5TPuhxYMyPBI59JQlPvP5Bz5X3+
nzUJFErie3ya/4FItaF3rSMJ7NVZay0p/2DOuOPoR38SfDccD9sb+Q9yQvtL
m7JJMMu/ejR5/z/gtll4uZJPAklBtumGHf/AXY0rXJK4FZ+wYO4q5z9As8cs
PapIQNp1cJfF9Bx0Xn7CtKOJBB5Sdps7yHPArqZhYrNCgqSs7WZLWnPgNJO0
MKlXBp4/bedktWZBwfrica7ZMvhwZXf1Csc0cLHx3OhZKAO5xP9CG+amYLTk
Y3L+ahm0OKHHr5qmIIf5KJ0+czkI8Wun6z+agr0FAp8eiZTD9ScvjOKZp0Bk
rcmYB8rh0e/K+z4LE8D4Qu82f1Q5fHifKRb7ZwxomkzptOhyONtjzfb34xjU
TlBbiE/LoWNOePa/rDEIOCF3zCi1HJhO3vTQcRyDpb/sG3HEcoh7d9muc2IU
Jo99eijYVQ7pH7VhZWkEutpOZItIV4C00uLFimN/QYBRgHxergL0JKN7iKJ/
4fyh4frwQxWwVp25g5nhL3yOjJxcUq0Ay7nGuNyvf6ASWo50GVTALuv94bNX
/kBCrv375z4VYMoQISP8dBia24+2NwVUgJOF8QujgGHgZmL/yx5aAQEkca7o
a8MQZl3A6fu4ArKvlk+xqQ6Dx/YFw0uvK7bmz8HylV+/wdj/wcDObxXw29DF
/6Dab4jOM58zbK4Aru3jhSEyv+Frhxzzw44KONzi2N8h+Bu0lBplVgcqINjI
VjNoegiCLqerHv5TATnb+9xbe4egKspd78Z4BfxosciSaRiCw39Ebv9cqIA9
xibsTZlD4CwwFrx9bSt/gWbVfXFDkHeiOu4sfSVMnC4aiQ4Zgr3JVyqonJVQ
fy+fyfzqEPBfyNtIkqiE+wtZqiNyQ3Au4C5v675KuBO377T+7iGIfHNuL5dc
JdgeyjAp4R4Cepa5U3ePVMJJp1e3fWYGQf3wh4sk1Uo4zCoR0EsbBG+bxOvj
W6ruzUh5eKJ1EKYpao8sz1SCMIOWJxt1EOT/bkuNN6iEfF3Dl/8VD4KjYH/x
V+NKOBFj894tcxD6XUJb1S9Xwk0Jf/7eJ4PwQ+rbrt3ulfBWo7ywxH4QQiVO
eKx5V4Jm/129lEuDoCJa9v2nfyV8CNYcjTw/COPCB2So9ypBR5Ij3Et7ENK2
vwx+8aASvrxv3GevPgjGPHw/faIqwTcrb+cFpUFg57yvbB5TCdcmIo9ekRuE
GpblRyoJlWCsfMPQVWoQ3Bhu/RFO2trP76xz8O5BkN7oR4uplaD4Vi4yRmgQ
fi4bv2jPqAQxdq6sVzyDoDWjrv+0sBJWEr721tEPglA/Vyn/20ooJurrMwzT
oP5nENfsx0pIXVa4zt9Hg8COfw5NDZUQhbjv7+2kgXKLIy5urASfB5NpSk00
+Pu9RyS6rRJ45gQ+czXQILn+vJtLdyWkXNO6mv2RBhc+vm8411cJCj13mE6+
pQGlOj9g20glnPnQjLzINHAmS3SOT1RC13GGPr4yGkiWxSt+nd3Kt1DRP7+Y
BlH5d4ci17bqnxhNHsimAcqZ/s+JngwCXLUX776mwfxr+0RdFjKkB03NC6XS
wDpJ7wwbLxnw9XNKegk04E+sff1HgAwGv/wbh2No8ClWef3jDjL0GhY4Bz+i
wd3HOaZZYmT4qTnkqx5Jg0ORosX3JcmQp8dblf2ABkP3o9kdZMjgbaK+zn+f
Bs+Dmey0FMigbe2oEXCPBgw+44KMx8gw6FJba+xPg3J3GxeaGhlKvMfpa31p
cON26+c6RIbAYBFNOW8atF6r8gs6QwbRuNsf6O/QINzuUNtlAzKMJiWz3LpN
A/XLGQQwJgM547NO5y0aTF8SCRczJ8ODgn/hmjdokGkaNbBuRQaTcon6Qkca
XDKkU+u1JYMk1uPceZUG3Ofc46uukeGW2lqajz0N3ur+nUi6SQbDrh0Xx2xp
4HnKUsfPlQzHvI5ts7pCg9PK8gVLoWRomCz4LWlBg3G+r95zb7bON/HJ152j
Ae87kh6lmAybHbPbffW36u/+UiK4jAyffrWsKult6dfu/Jkbk+Hi+NOGDF0a
cCbxicg2b+nFuvNGuBYNCHorY9PtZEDcq4YnNGlguE7DFT/JwCbYo7pyggYv
LpOunfpNhmd7UzhuAg1qeF+qcY2SweZA4KyUBg1odfd5WibJcOCQTXevOg1Y
7jgPPp8jw8a1ElE/NRrISl2ssFkig91K8rn64zQ41wYP96+T4XNUeNAOFRq4
hclcnqSngIK4O9Hx6Jb//i6z3OWkwKLmWSHWwzQ4U5BsmihGgchHy72a8lt+
tL4vay1JgSnx3zxxsjSI5XHekJKhgDGx8QRNZqu+tabNY/IUIGtV3VHcT4Nu
V8giKlJArCM7M2gfDTb2yvj6HKVAyPW4jh+SNNjbynsOqVHgoQEv+dceGmjf
X97Diijg0SfScUqcBteP0ua/aVHAxmXPfL7olt//1H+J16XA2c0D2wV20qD4
WelLi3MUOPJESdFPmAZLK6GnRi5SgL1I85Yu/5Z/8P6nTDcoQJx0+P2blQb5
t3mvN7hQIDnAmVGfmQaNe5bVY90pEMbttYfEQIN/zQO85j4UuJ0SCLvoaCAS
Wj8kHkCBS4Rwq3vrA6B+pLRy+B4FNibqrkevDIDNcFJUwQMKfNuurvFpYQBy
Tt9SVouhwI3Lh/4oTw3A12UTNoYECqjez6PeGBuA6TyNns8vtuJ7IxWd/mcA
VLbxhppmUCB7QeQ4b/8AfGoitrhWUGDoEf3DscYBGL605JbTS4Fb3zmjNAsG
4NqTVekOGgWO9bEOfMsegL/vNrqZ/1KAfprxqFn6AIzKM2vazVLgKd9a383E
AZjc4NsuxkqFauPxwwnBA7CYLlcad4gKmWfvsUacGwDvDsK1t0eosEhNpfXr
DMAKp9KuGVUqnJavrlY5MQBr7ioh505RYZxr6c7fwwNAp3PKiP0SFSyD2YWX
RQa25mnruYAQKpjp9w5k9/RDhLhtdkE4FTo+HqPubusHDmMHi55HVLiIYuPj
vvUDV/WNd8efUcHksI5OYE0/8D7xjvuXT4VD5uilSGo/7Dgce9ipnQqjRR9S
eqz7Qdbvwx2TA1UgV8MmI0npg6fHWaxaratBxO/zht7pHijnGTdUta+GzpQD
CuvHe6D9d9PptOvV8PxtpEWBXA+IxL5UvuleDcIc+pXbeHogeVSZiymyGgSe
N7l+b/sJ6Ul21MNl1bCX0sv+3eYnFK7X7ojjrIGk4UNFbre6t97TWTzLvDXg
kL37Z7tVN0znRjFfFqqBQ44crGrnukHR1GxGdk8NfBoZtGY82A2kwqnPb4/W
wEHZEObQ8S6gXBbznr1SAy6UAgn9q13w8wiTs9m1GvDk2q4VZtIFa5yjdjU3
a8D4e/qar1YX/FdZZhDpVQMRU/mP70p0QS2v/v69j2pgRrGOGNjZCQPDSrvD
Y2sg8uRHv6CPncBQLbJ9MrEGJI0atIJJnaB5fWiDnF4DZu5t7feiO8Ee6v+J
59TAbGh3akhAJ4QKFo/eL6iBx0/7HENvdkLm2NP+MWIN7M8aUrx/qRP+//8k
oD9jpxGp0wn/AwEzOKM=
           "]]},
         Annotation[#, "Charting`Private`Tag$75704873#1"]& ]}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-0.1248, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->NCache[{{
         Rational[-3, 25], 
         Rational[3, 25]}, {All, All}}, {{-0.12, 0.12}, {All, All}}],
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.819298195388489*^9, {3.819298231664824*^9, 3.819298262063396*^9}, 
   3.819298298981942*^9, 3.819820047962347*^9, 3.819889965372991*^9, 
   3.8203443713937607`*^9, 3.820487449298386*^9},
 CellLabel->
  "Out[1253]=",ExpressionUUID->"4a59bc4d-be8b-4aeb-bbc4-d100af124a72"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], " ", "<>", " ", 
    "\"\<../latex/_pics/rbrr.pdf\>\""}], ",", "p1"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], " ", "<>", " ", 
    "\"\<../latex/_pics/rbtc.pdf\>\""}], ",", "p2"}], "]"}]}], "Input",
 CellChangeTimes->{{3.817548411711974*^9, 3.8175484126023893`*^9}, {
  3.819298296071673*^9, 3.8192983128478518`*^9}},
 CellLabel->
  "In[1254]:=",ExpressionUUID->"6dd8b8bc-f53c-47a0-94fc-6a13d4e0515c"],

Cell[BoxData[
 FormBox["\<\"/Users/nat/Documents/GitHub/optimal_hedging_ratio_copula/_\
mathematica/../latex/_pics/rbrr.pdf\"\>", TraditionalForm]], "Output",
 CellChangeTimes->{
  3.817548413497203*^9, 3.817549700274432*^9, 3.817658176080207*^9, 
   3.817749523083808*^9, 3.817751373631076*^9, 3.817837145462097*^9, 
   3.817918649098812*^9, 3.8179229020526247`*^9, 3.817965824927837*^9, 
   3.819126662848632*^9, 3.819126952234404*^9, 3.819181031495307*^9, 
   3.819285713606977*^9, {3.819298306866926*^9, 3.8192983132667427`*^9}, 
   3.819820048224514*^9, 3.819889965638915*^9, 3.820344372102894*^9, 
   3.820487449461094*^9},
 CellLabel->
  "Out[1254]=",ExpressionUUID->"e2ab73c3-449d-4470-a6f1-04df2c1d73cf"],

Cell[BoxData[
 FormBox["\<\"/Users/nat/Documents/GitHub/optimal_hedging_ratio_copula/_\
mathematica/../latex/_pics/rbtc.pdf\"\>", TraditionalForm]], "Output",
 CellChangeTimes->{
  3.817548413497203*^9, 3.817549700274432*^9, 3.817658176080207*^9, 
   3.817749523083808*^9, 3.817751373631076*^9, 3.817837145462097*^9, 
   3.817918649098812*^9, 3.8179229020526247`*^9, 3.817965824927837*^9, 
   3.819126662848632*^9, 3.819126952234404*^9, 3.819181031495307*^9, 
   3.819285713606977*^9, {3.819298306866926*^9, 3.8192983132667427`*^9}, 
   3.819820048224514*^9, 3.819889965638915*^9, 3.820344372102894*^9, 
   3.8204874495959597`*^9},
 CellLabel->
  "Out[1255]=",ExpressionUUID->"df25f71c-6d9e-4255-af15-024f03ab775c"]
}, Open  ]],

Cell["\<\
Make margins uniform using empirical distribution function (not smoothed \
version)\
\>", "Text",
 CellChangeTimes->{{3.819298454015314*^9, 3.819298460372238*^9}, {
  3.819890344425252*^9, 
  3.8198903536551027`*^9}},ExpressionUUID->"8d3f4de4-afbd-400f-98dd-\
0386c02eefff"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"u", "=", 
   RowBox[{"hatF", "[", 
    RowBox[{"rbrr", ",", " ", "rbrr"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", "=", 
   RowBox[{"hatF", "[", 
    RowBox[{"rbtc", ",", " ", "rbtc"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.819890355480846*^9, 3.819890390093945*^9}},
 CellLabel->
  "In[1256]:=",ExpressionUUID->"795099b7-bf5f-4ddd-80b9-73df2097ee5c"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"u", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"CDF", "[", 
        RowBox[{"Drbrr", ",", " ", 
         RowBox[{"rbrr", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "rbrr", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"v", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"CDF", "[", 
        RowBox[{"Drbtc", ",", " ", 
         RowBox[{"rbtc", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", " ", 
         RowBox[{"Length", "[", "rbtc", "]"}]}], "}"}]}], "]"}]}], ";"}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.819298347277459*^9, 3.819298430364387*^9}},
 CellLabel->
  "In[508]:=",ExpressionUUID->"8cbbd838-7b9f-4fa3-bf82-8a1edfb5bfa8"],

Cell["\<\
Drop largest sample (which has CDF of 1, messing up any sample mean-like \
computations)\
\>", "Text",
 CellChangeTimes->{{3.819299635868157*^9, 
  3.819299663898543*^9}},ExpressionUUID->"f1d515e6-4e14-44a1-8e27-\
ad5dfcd18259"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"u", "=", 
     RowBox[{"DeleteCases", "[", 
      RowBox[{"u", ",", " ", 
       RowBox[{"Max", "[", "u", "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"v", "=", 
     RowBox[{"DeleteCases", "[", 
      RowBox[{"v", ",", " ", 
       RowBox[{"Max", "[", "v", "]"}]}], "]"}]}], ";"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.8192996679014378`*^9, 3.819299701487812*^9}},
 CellLabel->
  "In[509]:=",ExpressionUUID->"67d8f87b-6d4e-4a43-a309-cb1e97a4587a"],

Cell["Empirical copula", "Text",
 CellChangeTimes->{{3.819298462653582*^9, 
  3.819298464129074*^9}},ExpressionUUID->"54074161-552e-4612-a85b-\
2db9b4a09644"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c1", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"u", ",", "v"}], "}"}], "\[Transpose]"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"HoldForm", "[", "u", "]"}], ",", " ", 
       RowBox[{"HoldForm", "[", "v", "]"}]}], "}"}]}], ",", 
    RowBox[{"PlotMarkers", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "5"}], "}"}]}], ",", 
    RowBox[{"PlotTheme", "\[Rule]", "\"\<Classic\>\""}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"FontSize", "\[Rule]", "12"}], "}"}]}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.819298435028288*^9, 3.819298444201573*^9}, {
  3.8198908195970697`*^9, 3.819890895420759*^9}, {3.819891128466762*^9, 
  3.819891231783798*^9}},
 CellLabel->
  "In[1258]:=",ExpressionUUID->"6f2f10a6-4a12-441f-9b1a-50368cb8b2bd"],

Cell[BoxData[
 FormBox[
  GraphicsBox[{{}, 
    {RGBColor[0.24720000000000014`, 0.24, 0.6], AbsoluteThickness[1], 
     StyleBox[GeometricTransformationBox[InsetBox[
        FormBox[
         StyleBox[
          GraphicsBox[
           {EdgeForm[None], DiskBox[{0, 0}]}],
          StripOnInput->False,
          GraphicsBoxOptions->{DefaultBaseStyle->Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            AbsoluteThickness[1], FontSize -> 12]}],
         TraditionalForm], {0., 0.}, Automatic, Offset[5]], CompressedData["
1:eJxlWnm4VuMXvUlCSDIVolDmIUIZdoYSQhQhc5J5CCEpoYiUUlSiQRppuprn
253r3u48D988DyJz+J199l67x/M7/5znfvf7znnfPay99tpv58dfvHtYy4yM
jPGHZGS0cO7OLaPf4xfM3PHiajp35fwtE34qpM153/lG3rGdFoYeef7uD7+j
Fa/722x+cCNtOHz4sjMvXUfjL6ucenKbEBVvr1t4bM8IfVzf8+1fW0Zpz4wW
59WOCtNFWbNi/SYFydf/tbNy341SqzEfv7SoVxl1aX1t6ZI/8mjNo4ds73OV
n7qf2N+z/vAwXei8vV1xNoUKM2Y8t3UzPftPZdfx+V6a361jj3+f8dOpj9QE
CzMqybueF1BKF7QctOaXFxropjePDvaYHqbnzuGFl1Es8/R+v83Mofu+PJ5f
pfeddDsv44gEnVL4rPPNhL13/8orzr3pmJjur5Y+adX+9wuzainWKfOj+p6N
NNvZRav2ERrJPz+QS/uGvO/sfIN+P0qH83YGx+mz7/mDPfRR3yLHIjuozzds
uAi5r9sSopz7LhnX3CVBCxzrdiyM08qjBhRUbS5VO+8l9zFfBmjZ5Gz+Jj1F
n6YuXR4hXs2sWIRG8TarS4h3PfqxahJ/edWeYbrUefqcpSmqZ29MDNFuNuMp
aeoyoqT9J7PT+j6v+rOBmn7PumjwYRG6n5c1J0rD4o3OJwefO2rBXT+vvCJK
Huepk7Mjanev7s9Dh5dd++QJ6/10DrvnMx+dyV+7r4RG7znvhfD+WioZc0bj
0Hu91IujolM57b+JDVJGq9jco3y0qXvvs4ekQ7r/ZvrN+VbmR7vJdetoL931
8I2OZyvV3vnmhzff4CuifvWSf+Qdc//uXUfth+48dMzHHhryAF8xsyP85i7z
hgC9+meiddm1IZp+Q2Bet45Bem3K/TnJOU0ad/XU0onKgadF1X57za93HDn1
va+fqqAb+Wc9mnU/WfT38tud/2yj44oH3fz4BRHiqHn7Vz/VDHA3QKs4nTrG
NK/qNH+qKDli2Du3rmuiIw+c6O3/WoDW/sBXhcbJHnp+6ylOxMcsLuR3ufQD
h/c9DfR0xQHnzaWU8ayzq3lh6vojG6qUHuO0Gvi95pvP8lTix0NXsvkXeGnE
1Yv3Oi6yu8RbDX3xOV9VavcIXTG92tlJlPZGObE20IujH/vi/JYBus7x/it/
JjT+qs2uiKt3X2XDNlBbN5Cq6FM283Vx+qW27cK39sRoLIfHy3F6qR0bLqHr
30nudrptoh9zTxq5sbtHcSGgny+jyzhsctfTI2zdHgGNw3Jq50R936Jm28f1
/LWTQjSNvXYgrvsupS/Hrr2l84gdVFi1ed/4h1K6zgQdyuFXH1X7Jiyu/uDt
LAnQ7HsaiqOZU9QPEzQusG4vZR3KBo/R5wx/V6bo2mv4StidVzNyo49ctxzn
tzwouP7Oy5/5J6j3SnrvCA6ISjq9E18pcozlJFSAnrj3ZcdTKXqSo+aTNDF6
DV/mpwn5/MMmtU+Mtq/a7SBwlL667q9xr06p1fytoXxOs7lJGsrp3S5FVx/H
CROn/rfxFaclHAVDc6nTxNUOMgfpcg6brh7Ft8007+/em5xUpZMdr/Q+u56O
YDOcmLDnil/yaKpj/Q1f7aLJFyecCI9RC06jRyK6n681rpbQow4Knbo/QI3F
HFjVVDfqym2rdldSg1tGmqjbeN5YzHDkUYb/GQm6gVcxMmW4egm/5tYqWvoE
A1hK8zNNJ3J0ts7SvNtEc9xyABwP6X2dfa/1En6AT/dbbzjboQ172E/E5rw/
aHVmA/+sLEkXO9HxRDypuLiKXBh6KWS4K3FRR6k57JA0FbnwmKbljvX6e6rV
btV0mgsoSd1/yuwo8baI3HLa6hW9f6b15367Sx4Xqd9K6NbOvIAYpfkx5WH9
3tMax2PJhauZHsO9jvOmOREdt7iWOKpVfGvSOlutcVZIr3N6bAqbnyXO8hU/
chWPS+ihDu6D1f/bdP2Zik9ZygN2WV15m+FlUJnGY0jrQFDzbDXxbobTKprP
T20Tp7sKOJEbta5tUZzKV/800ocf8BU2O0v87qaT3ASKGU4kuPwNDlFkPwNU
glz3jQ3aXepBs763XutV3HBI8CJG7zPcLE+S8yMHaMq0npbSvh/58hhvEZ5S
qbwmR/3ttzoS5DD+9yBO7nBpVtTqSsVwBro4veKWkSTd4MJHiAY6WeVEEgUc
b3eYl2U8TvhPA6123VpndUbqdYHlxT9umoeovMy96B2Gy5JyGsCP7xqkRd/y
FaQz3DKUort/ZgKVUr8ezBPhE2Fy4fmVmObTeq1n2YZDqFsSh3GtxynadZGb
WLreGN3HfzVG6Cje1rSk1qEKqxtY53kM83eV0/mcZm0DxtMW92LAa6KbOcyO
rVW/VtIkhuOhXs2L7YqbBdSby8iGJP00/qEVRw2IUhkv+3if8oCA1tmkxqvv
/3Ba4uIHrS9bNB8LdZ2ZZkfhTR7qxeVre53iYFDtWU4nuAW2Vn+3y3j0f3ne
Xpri0h2f4bTkCfhYVPEmbDxS4tNHg3m5Yzy6/5WWZ5L3KeP1woujVpdkvYU0
gc1TUGU8FJ+jb5D436k4vEz9vNx4HvYv692heFuu/q4xnJA8L1J83q11oVTt
XKH8KWA863SXiFXRy+zeneAPdRp/FfQX05Un16pfNin+lNDX5ZxYpVq3Gwyn
Ja78WsfLaLhLf8KWp4Jj5fYe9EVSX3zq1xythzVWR6V+FFEffvzPaZp5Plsm
Rc88zVeU7mGY3pFW+3ho0GlcoJsVz75QO89RPKqnh1131BuPAS+RulKs/VQ5
uWa+LGi4t2UfB/oOzatsOoRpzDbUh92KSzXKnzyGG+ClwB3Bq3rF4Yj2UUnl
yz7l8TWG21JPfcpnvcaTBA/L7S7vLdF+rY66ul+MGi7fy+F7eoTu5LKUl9D9
5VhfInbao/bP1/x6j15kmFhYr3bZpXjxpvWRiEvw1rfYjTO8GnfZim919Odg
bkgaLe5uc1jaxQkfLWXY6BKmia559tLvMznRypUfNBvOXsWPbRGzO+zO2Trg
4YNxBxyQeFqreF1lfSx4LniI5HGx9d0S317jka9vdBsx5WFh+obbvnMDmh/f
2rqPdwHDq/nzg/ZXe60PwTrAEw6TxpVu+c3dsPU5yCPUcalTa5TnV1idFLxO
mV+lTgat7oLX1TItfK5R8Wmj1rFFaoedZifwDPRt6FvP4vReH9H95mgelNi6
4UfoAuiTZf9pu0s8J+lYKQTk87qX9XHV3G6sSBjPAi58xHS7T0TzK1/v0BcK
LC/Q9yKvoBugzkA3AZ6+wPT6Jr/x+joO3/NS2ofVW51BHyT4N8/68iSb44Rq
9fd0xfGphuPIm1smsWF8+vlsq/Pou8DLxt3qGlLrWVT9ljSdQvK51u7d3QBJ
G8+T5+bRDG5H30zqcycZDkbd8hkwHeS/PBm8N63xnFacjJsuhDw4ti1fac3n
pPEQ6FjC3xLGI9DHoC4B5/9l+er6tPopTXOZFt4eszoMv4NXQYcRO8ZMhxOd
olL5RqP5N5PN8UXc+nCXFn1fbTqa9JM5xhsljlZbHwveIjgXtDqNOpjhXh7N
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
zgm49j+Cs4jq
       "]],
      FontSize->12]}, {{}, {}}},
   AspectRatio->1,
   Axes->{True, True},
   AxesLabel->{
     FormBox[
      TagBox["u", HoldForm], TraditionalForm], 
     FormBox[
      TagBox["v", HoldForm], TraditionalForm]},
   AxesOrigin->{0, 0},
   AxesStyle->Directive[
     GrayLevel[0], 
     AbsoluteThickness[0.2]],
   BaseStyle->{FontSize -> 12},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameStyle->Directive[
     GrayLevel[0], 
     AbsoluteThickness[0.2]],
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   FrameTicksStyle->GrayLevel[0],
   GridLines->{None, None},
   GridLinesStyle->Automatic,
   LabelStyle->{FontFamily -> "Times"},
   Method->{
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}},
   PlotRange->{{0, 0.998452012383901}, {0, 0.998452012383901}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.02], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic},
   TicksStyle->GrayLevel[0]], TraditionalForm]], "Output",
 CellChangeTimes->{{3.819298437433736*^9, 3.8192984447379293`*^9}, 
   3.81929970536963*^9, 3.819890402624881*^9, {3.8198908169041147`*^9, 
   3.819890866815427*^9}, {3.819891132494253*^9, 3.819891137417059*^9}, {
   3.81989117628857*^9, 3.819891232298169*^9}, 3.81989127878938*^9, 
   3.82034437279208*^9, 3.82043151555786*^9, 3.820487449782176*^9},
 CellLabel->
  "Out[1258]=",ExpressionUUID->"2a72bd8f-4f6b-4b49-b7b9-cc87e540bebf"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Compare with simulated data", "Subsection",
 CellChangeTimes->{{3.819890487136036*^9, 
  3.819890490202867*^9}},ExpressionUUID->"cabf1481-cec4-487f-86b3-\
33f493a6b8c9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Alpha]", "=", "\[Alpha]0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Beta]", "=", "\[Beta]0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]", "=", 
   FormBox["\[Delta]0",
    TraditionalForm]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Mu]", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Mu]1", "=", 
   RowBox[{"\[Mu]2", "=", 
    RowBox[{"\[Mu]s", "[", 
     RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]1", "=", 
   RowBox[{"\[Delta]2", "=", 
    RowBox[{
     RowBox[{"\[Delta]s", "[", 
      RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], "-", "\[Delta]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]", "=", 
   SqrtBox[
    RowBox[{
     SuperscriptBox["\[Alpha]", "2"], "-", 
     SuperscriptBox["\[Beta]", "2"]}]]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Mu]IG", "=", 
   FractionBox["\[Delta]", "\[Gamma]"]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Mu]1IG", "=", 
   FractionBox["\[Delta]1", "\[Gamma]"]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Mu]2IG", "=", 
   FractionBox["\[Delta]2", "\[Gamma]"]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Lambda]", "=", 
   SuperscriptBox["\[Delta]", "2"]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Lambda]1", "=", 
   SuperscriptBox["\[Delta]1", "2"]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Lambda]2", "=", 
   SuperscriptBox["\[Delta]2", "2"]}], ";"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQrfW08pxl6RtHrhs+10D0hMUZT0G0UE7OCxD97Ev9
e1sgzZrXDKbNijZ9BtFawWLfQfSk3dnsdkDafnUemJac+0gARK89+BlMv7pz
VQxEizg/AdPPluXejgHSX46XgGkeMS21iUC67IE2mD7B+1wbRE+beEwHRD+Y
PTMERIt0LgbTb/7+Fd8JpJ9kCkmA6GcHXANAtHLrlSgQ3X1kRyKIDq96lgWi
WUKjOkE0u0stmJ6/583mS0C6cPUHML0n1+jkZSCtpmsKphVm+V8A0SusfG+A
6GN1yx+BaD35M2A6vpP1xR2Qvc8eg+kt65O+gWih6ItgGgBZWLY3
  "],
 CellLabel->
  "In[1259]:=",ExpressionUUID->"99711b89-c47a-40bc-bd59-adead29f506e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "[", "123456", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", 
   RowBox[{"Length", "[", "rbrr", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Y", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "n"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"W", " ", "=", " ", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"InverseGaussianDistribution", "[", 
      RowBox[{"\[Mu]IG", ",", "\[Lambda]"}], "]"}], ",", " ", "n"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"W1", " ", "=", " ", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"InverseGaussianDistribution", "[", 
      RowBox[{"\[Mu]1IG", ",", "\[Lambda]1"}], "]"}], ",", " ", "n"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"W2", " ", "=", " ", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"InverseGaussianDistribution", "[", 
      RowBox[{"\[Mu]2IG", ",", " ", "\[Lambda]2"}], "]"}], ",", " ", "n"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8171042599886017`*^9, 3.817104286610984*^9}, 
   3.817104467237665*^9, 3.8171046422284803`*^9, {3.817104695795639*^9, 
   3.817104732988944*^9}, {3.8171248172502813`*^9, 3.8171248316301107`*^9}, {
   3.817127389200902*^9, 3.817127389488452*^9}, {3.8171356139177723`*^9, 
   3.81713561417614*^9}, {3.8171356554525757`*^9, 3.8171356556521177`*^9}, {
   3.8172140959961157`*^9, 3.817214096310006*^9}, {3.817270219331251*^9, 
   3.81727027098927*^9}, {3.817288917973435*^9, 3.8172889183338346`*^9}, {
   3.817289820795442*^9, 3.8172898209089203`*^9}, 3.817290486924219*^9, {
   3.817290576837955*^9, 3.8172905769800463`*^9}, {3.817300851713566*^9, 
   3.817300852154126*^9}, 3.8176579951579723`*^9, {3.819628214785843*^9, 
   3.81962821487637*^9}, {3.8196282793611813`*^9, 3.8196282830919743`*^9}, {
   3.819890644849745*^9, 3.8198906465205708`*^9}, {3.819891256413664*^9, 
   3.819891260586321*^9}},
 CellLabel->
  "In[1272]:=",ExpressionUUID->"dacb86d2-dbcc-44d9-994b-229e33949b3e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Z", "=", 
   RowBox[{"\[Mu]", "+", 
    RowBox[{"\[Beta]", " ", "W"}], "+", 
    RowBox[{
     SqrtBox["W"], " ", 
     RowBox[{
     "Y", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Z1", "=", 
   RowBox[{"\[Mu]1", "+", 
    RowBox[{"\[Beta]", " ", "W1"}], "+", 
    RowBox[{
     SqrtBox["W1"], " ", 
     RowBox[{
     "Y", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Z2", "=", 
   RowBox[{"\[Mu]2", "+", 
    RowBox[{"\[Beta]", " ", "W2"}], "+", 
    RowBox[{
     SqrtBox["W2"], " ", 
     RowBox[{
     "Y", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"X1", " ", "=", " ", 
   RowBox[{"Z", " ", "+", " ", "Z1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"X2", " ", "=", " ", 
   RowBox[{"Z", " ", "+", " ", "Z2"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8171047503801403`*^9, 3.8171047723967247`*^9}, {
  3.817104814436576*^9, 3.8171048600783663`*^9}, {3.817125976519915*^9, 
  3.817126008381916*^9}, {3.81723094278487*^9, 3.817230949781246*^9}, {
  3.817231606292857*^9, 3.817231611277597*^9}, {3.817270210432276*^9, 
  3.817270238929926*^9}, {3.817270290731044*^9, 3.817270301906034*^9}, {
  3.8172889214165154`*^9, 3.8172889282650003`*^9}, {3.8195650407297163`*^9, 
  3.819565040932901*^9}},
 CellLabel->
  "In[1278]:=",ExpressionUUID->"788ec84a-91ad-480f-b986-7db32b6392ea"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Mean", "[", "X1", "]"}], ",", 
   RowBox[{"Mean", "[", "X2", "]"}]}], "}"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Variance", "[", "X1", "]"}], ",", " ", 
   RowBox[{"Variance", "[", "X2", "]"}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.8195566259874153`*^9, 3.819556641045239*^9}},
 CellLabel->
  "In[1283]:=",ExpressionUUID->"9772ce37-cc52-4fa3-9d5f-3f215c4ac1e6"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"0.021067137514317404`", ",", "0.039280200228597933`"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.819556627881173*^9, 3.819556678426649*^9}, {
   3.819564964970853*^9, 3.8195649882080584`*^9}, {3.819565027636516*^9, 
   3.8195650492379436`*^9}, {3.8195650866348677`*^9, 3.819565117944808*^9}, 
   3.819565194499694*^9, 3.8195652417068167`*^9, 3.819625864114237*^9, 
   3.819627520874373*^9, 3.819628216840858*^9, 3.819628254130321*^9, 
   3.819628284926598*^9, 3.819735417002633*^9, 3.819817196693346*^9, 
   3.819817481460689*^9, {3.819817606442547*^9, 3.81981769065133*^9}, {
   3.819817745746031*^9, 3.819817819197566*^9}, 3.819818064078607*^9, 
   3.8198288599159803`*^9, 3.819829071590432*^9, 3.819867042980213*^9, 
   3.819868937954039*^9, 3.819869201729051*^9, 3.81986960169899*^9, 
   3.819871820136406*^9, {3.819871877213725*^9, 3.819871940872252*^9}, 
   3.819872025593993*^9, 3.819890619787389*^9, 3.819890650090311*^9, 
   3.8198912633054953`*^9, 3.820344372906394*^9, 3.8204315227018642`*^9, 
   3.820487449905302*^9},
 CellLabel->
  "Out[1283]=",ExpressionUUID->"bd007493-72cc-45c8-b7be-5d0d12477ca5"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"0.9131351829218677`", ",", "0.9422724652855571`"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.819556627881173*^9, 3.819556678426649*^9}, {
   3.819564964970853*^9, 3.8195649882080584`*^9}, {3.819565027636516*^9, 
   3.8195650492379436`*^9}, {3.8195650866348677`*^9, 3.819565117944808*^9}, 
   3.819565194499694*^9, 3.8195652417068167`*^9, 3.819625864114237*^9, 
   3.819627520874373*^9, 3.819628216840858*^9, 3.819628254130321*^9, 
   3.819628284926598*^9, 3.819735417002633*^9, 3.819817196693346*^9, 
   3.819817481460689*^9, {3.819817606442547*^9, 3.81981769065133*^9}, {
   3.819817745746031*^9, 3.819817819197566*^9}, 3.819818064078607*^9, 
   3.8198288599159803`*^9, 3.819829071590432*^9, 3.819867042980213*^9, 
   3.819868937954039*^9, 3.819869201729051*^9, 3.81986960169899*^9, 
   3.819871820136406*^9, {3.819871877213725*^9, 3.819871940872252*^9}, 
   3.819872025593993*^9, 3.819890619787389*^9, 3.819890650090311*^9, 
   3.8198912633054953`*^9, 3.820344372906394*^9, 3.8204315227018642`*^9, 
   3.820487449906836*^9},
 CellLabel->
  "Out[1284]=",ExpressionUUID->"7bb776ad-69f5-412e-adbb-7169914f8726"]
}, Open  ]],

Cell["Correlation", "Text",
 CellChangeTimes->{{3.819818406346814*^9, 3.819818407233303*^9}, {
  3.819891264654776*^9, 3.819891266482847*^9}, {3.8204874109493303`*^9, 
  3.820487413948411*^9}},ExpressionUUID->"e6df1e35-f37b-4247-8561-\
40489200a512"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"{", 
   RowBox[{
    FractionBox["\[Delta]", 
     RowBox[{"\[Delta]s", "[", 
      RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}]], ",", 
    RowBox[{"Correlation", "[", 
     RowBox[{"X1", ",", "X2"}], "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.81955654347717*^9, 3.8195565574426737`*^9}, {
  3.8195566886219273`*^9, 3.81955669428321*^9}, {3.8195648640036173`*^9, 
  3.819564893718998*^9}, {3.819565069077416*^9, 3.819565095877689*^9}, {
  3.819565221861521*^9, 3.819565224873064*^9}, {3.8196282242952747`*^9, 
  3.8196282304634542`*^9}, {3.819817201581565*^9, 3.819817202022564*^9}},
 CellLabel->
  "In[1285]:=",ExpressionUUID->"4ab2247b-81d3-4860-9ea3-df74a11ddb76"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"0.7495917647388026`", ",", "0.7480778419902017`"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.819556557760701*^9, 3.819556597023031*^9, {3.8195566631743793`*^9, 
   3.8195566946058683`*^9}, 3.819564894010373*^9, 3.819564989758464*^9, {
   3.819565028374978*^9, 3.819565118967896*^9}, 3.819565195394351*^9, {
   3.819565225431151*^9, 3.819565242773448*^9}, 3.819625864156075*^9, 
   3.819627522154263*^9, {3.819628217856359*^9, 3.819628254804497*^9}, 
   3.819628286154331*^9, 3.81973541928423*^9, {3.819817198915308*^9, 
   3.819817202266624*^9}, 3.819817482750758*^9, {3.8198176074746847`*^9, 
   3.819817692250003*^9}, {3.8198177466117077`*^9, 3.819817820026843*^9}, 
   3.8198180649375343`*^9, 3.819828859923304*^9, 3.819829071596202*^9, 
   3.819867042985784*^9, 3.8198689379619217`*^9, 3.819869201735648*^9, 
   3.819869601705015*^9, 3.819871821996992*^9, {3.819871879087552*^9, 
   3.819871942244557*^9}, 3.819872027065789*^9, 3.819890622615025*^9, 
   3.819890653612233*^9, 3.819891267978999*^9, 3.8203443729473867`*^9, 
   3.820431526240087*^9, 3.820487449952366*^9},
 CellLabel->
  "Out[1285]=",ExpressionUUID->"45e52d8a-372f-405a-97c0-733852e0b2e0"]
}, Open  ]],

Cell["Rank correlation", "Text",
 CellChangeTimes->{{3.819818409512001*^9, 3.819818412371585*^9}, {
  3.819871822642043*^9, 
  3.819871823333*^9}},ExpressionUUID->"047393c3-d1b8-4480-9f88-e25c90e5e43f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"{", 
   RowBox[{
    FractionBox[
     RowBox[{"6", " ", 
      RowBox[{"ArcSin", "[", 
       FractionBox["\[Delta]", 
        RowBox[{"2", " ", 
         RowBox[{"\[Delta]s", "[", 
          RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}]}]], "]"}]}], "\[Pi]"], 
    ",", 
    FractionBox[
     RowBox[{"6", " ", 
      RowBox[{"ArcSin", "[", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"Correlation", "[", 
         RowBox[{"X1", ",", "X2"}], "]"}]}], "]"}]}], "\[Pi]"], ",", 
    RowBox[{"Rho", "[", 
     RowBox[{"\[Alpha]", ",", "\[Beta]", ",", "\[Delta]"}], "]"}], ",", 
    RowBox[{"SpearmanRho", "[", 
     RowBox[{"X1", ",", "X2"}], "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.819628232711729*^9, 3.8196282338833847`*^9}, {
  3.819817210034563*^9, 3.819817228057394*^9}},
 CellLabel->
  "In[1286]:=",ExpressionUUID->"3f43257a-5d98-4f47-8f30-ad340d570e01"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
   "0.7337232561981398`", ",", "0.7321641580256983`", ",", 
    "0.7470283023615991`", ",", "0.7149563822122964`"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.819628234291012*^9, 3.8196282557365227`*^9}, 
   3.819628286830481*^9, 3.81973542023866*^9, {3.819817204493834*^9, 
   3.819817231108039*^9}, 3.8198175012941732`*^9, {3.819817656761565*^9, 
   3.8198176944084053`*^9}, {3.819817734623851*^9, 3.819817822413795*^9}, {
   3.819818068838689*^9, 3.819818081181669*^9}, 3.8198288631497183`*^9, 
   3.819829074944454*^9, 3.819867046205792*^9, 3.819868941242597*^9, 
   3.8198692051105537`*^9, 3.819869604200246*^9, {3.81987182555026*^9, 
   3.819871944912012*^9}, 3.819872029952805*^9, 3.819890625398787*^9, 
   3.8198906561160917`*^9, 3.819891271055588*^9, 3.820344374439933*^9, 
   3.82043153010537*^9, 3.8204874519556217`*^9},
 CellLabel->
  "Out[1286]=",ExpressionUUID->"ed057a49-e778-47be-bf6b-f541ce5065fc"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"usim", " ", "=", " ", 
   RowBox[{"hatF", "[", 
    RowBox[{"X1", ",", "X1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vsim", " ", "=", " ", 
   RowBox[{"hatF", "[", 
    RowBox[{"X2", ",", "X2"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.819890633816099*^9, 3.819890661870604*^9}},
 CellLabel->
  "In[1287]:=",ExpressionUUID->"f3937f65-a676-4b8f-8b88-9eaa14983aa8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c2", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"usim", ",", "vsim"}], "}"}], "\[Transpose]"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"HoldForm", "[", "u", "]"}], ",", " ", 
       RowBox[{"HoldForm", "[", "v", "]"}]}], "}"}]}], ",", 
    RowBox[{"PlotMarkers", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "5"}], "}"}]}], ",", 
    RowBox[{"PlotTheme", "\[Rule]", "\"\<Classic\>\""}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"FontSize", "\[Rule]", "12"}], "}"}]}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.819298435028288*^9, 3.819298444201573*^9}, {
  3.8198908195970697`*^9, 3.819890895420759*^9}, {3.819891128466762*^9, 
  3.819891275053238*^9}},
 CellLabel->
  "In[1289]:=",ExpressionUUID->"8dfebfdc-3311-4b36-8b14-5aedb0af566a"],

Cell[BoxData[
 FormBox[
  GraphicsBox[{{}, 
    {RGBColor[0.24720000000000014`, 0.24, 0.6], AbsoluteThickness[1], 
     StyleBox[GeometricTransformationBox[InsetBox[
        FormBox[
         StyleBox[
          GraphicsBox[
           {EdgeForm[None], DiskBox[{0, 0}]}],
          StripOnInput->False,
          GraphicsBoxOptions->{DefaultBaseStyle->Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            AbsoluteThickness[1], FontSize -> 12]}],
         TraditionalForm], {0., 0.}, Automatic, Offset[5]], CompressedData["
1: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
QIeAd/8LU9aCdQ==
       "]],
      FontSize->12]}, {{}, {}}},
   AspectRatio->1,
   Axes->{True, True},
   AxesLabel->{
     FormBox[
      TagBox["u", HoldForm], TraditionalForm], 
     FormBox[
      TagBox["v", HoldForm], TraditionalForm]},
   AxesOrigin->{0, 0},
   AxesStyle->Directive[
     GrayLevel[0], 
     AbsoluteThickness[0.2]],
   BaseStyle->{FontSize -> 12},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameStyle->Directive[
     GrayLevel[0], 
     AbsoluteThickness[0.2]],
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   FrameTicksStyle->GrayLevel[0],
   GridLines->{None, None},
   GridLinesStyle->Automatic,
   LabelStyle->{FontFamily -> "Times"},
   Method->{
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}},
   PlotRange->{{0, 0.998452012383901}, {0, 0.998452012383901}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.02], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic},
   TicksStyle->GrayLevel[0]], TraditionalForm]], "Output",
 CellChangeTimes->{{3.819891246149589*^9, 3.8198912755582037`*^9}, 
   3.820344374691392*^9, 3.820431541063652*^9, 3.820487452145733*^9},
 CellLabel->
  "Out[1289]=",ExpressionUUID->"b4567c10-9ca3-489e-8ea4-3b34db6008a4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], " ", "<>", " ", 
    "\"\<../latex/_pics/copula_nig1.pdf\>\""}], ",", " ", "c1"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.819891282408923*^9, 3.81989129950496*^9}, {
  3.81989133711331*^9, 3.819891338453425*^9}},
 CellLabel->
  "In[1290]:=",ExpressionUUID->"81ad5d81-1603-49bd-a17d-a9f96f3add37"],

Cell[BoxData[
 FormBox["\<\"/Users/nat/Documents/GitHub/optimal_hedging_ratio_copula/_\
mathematica/../latex/_pics/copula_nig1.pdf\"\>", TraditionalForm]], "Output",
 CellChangeTimes->{3.819891302238378*^9, 3.819891339305154*^9, 
  3.820344375459311*^9, 3.8204315434766293`*^9, 3.820487452419326*^9},
 CellLabel->
  "Out[1290]=",ExpressionUUID->"88c031ad-900d-4572-9c87-9daa33c457de"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], " ", "<>", " ", 
    "\"\<../latex/_pics/copula_nig2.pdf\>\""}], ",", " ", "c2"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.819891282408923*^9, 3.81989129950496*^9}, {
  3.81989133711331*^9, 3.819891344714753*^9}},
 CellLabel->
  "In[1291]:=",ExpressionUUID->"ad063221-1a4c-4226-b68c-6997000a3042"],

Cell[BoxData[
 FormBox["\<\"/Users/nat/Documents/GitHub/optimal_hedging_ratio_copula/_\
mathematica/../latex/_pics/copula_nig2.pdf\"\>", TraditionalForm]], "Output",
 CellChangeTimes->{3.8198913451928997`*^9, 3.820344376390172*^9, 
  3.820431545507243*^9, 3.8204874526465693`*^9},
 CellLabel->
  "Out[1291]=",ExpressionUUID->"71a016d3-6948-46d1-88b6-e956142b72c1"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{714, 822},
WindowMargins->{{Automatic, 5}, {Automatic, 2}},
Magnification:>1.25 Inherited,
FrontEndVersion->"12.2 for Mac OS X x86 (64-bit) (December 12, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"23688837-79f8-474a-8c15-851737e0fda5"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 186, 3, 123, "Title",ExpressionUUID->"1f9830e6-3441-45aa-8bfd-9de99257340c"],
Cell[CellGroupData[{
Cell[791, 29, 157, 3, 84, "Section",ExpressionUUID->"e30d8844-d658-49ef-a7f7-7becc0d0b9cf"],
Cell[951, 34, 209961, 3446, 1349, "Text",ExpressionUUID->"4f3b1b54-644b-4019-a316-942641d5f6e5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[210949, 3485, 162, 3, 84, "Section",ExpressionUUID->"79167f5c-74bd-4aae-9d47-e57aaab8954c"],
Cell[211114, 3490, 198, 4, 37, "Input",ExpressionUUID->"677eecc4-b277-4042-997c-961eb353bd5a"],
Cell[211315, 3496, 347, 7, 37, "Input",ExpressionUUID->"2f534af6-d767-4710-925d-2550d7fea468"],
Cell[211665, 3505, 157, 3, 44, "Text",ExpressionUUID->"1008ae45-8d12-4fc1-b941-bc4f6983873d"],
Cell[211825, 3510, 1333, 40, 151, "Input",ExpressionUUID->"df46f18d-4c0e-48c7-8ca3-64101056ca8c"],
Cell[213161, 3552, 170, 3, 44, "Text",ExpressionUUID->"49a8e754-035b-4b81-9c4e-1daf568f5236"],
Cell[213334, 3557, 840, 25, 80, "Input",ExpressionUUID->"62641520-ab80-486c-a328-b1a6648bb1f2"],
Cell[214177, 3584, 260, 5, 44, "Text",ExpressionUUID->"5086423d-4309-4378-8c75-8bd737c25531"],
Cell[214440, 3591, 277, 6, 37, "Input",ExpressionUUID->"a016c5fa-7cfe-487b-a3be-788f8adda5fa"],
Cell[214720, 3599, 1162, 31, 101, "Input",ExpressionUUID->"af36ac32-4917-4e0a-bb85-a67952dc3172"],
Cell[215885, 3632, 228, 5, 73, "Text",ExpressionUUID->"5d8ac2bc-3320-4069-be99-8d7cd107855e"],
Cell[CellGroupData[{
Cell[216138, 3641, 2763, 72, 298, "Input",ExpressionUUID->"5f95c403-71ea-440f-b468-a439f7b71b72"],
Cell[218904, 3715, 52462, 897, 173, "Output",ExpressionUUID->"322e843a-0ff7-4b8e-a8de-61a46e8038ce"]
}, Open  ]],
Cell[271381, 4615, 112151, 1846, 207, "Text",ExpressionUUID->"993247af-3574-40b3-a1ce-877030478362"],
Cell[383535, 6463, 216, 5, 44, "Text",ExpressionUUID->"ae7223c3-d9a3-44c3-8a57-f09a8f434b88"],
Cell[383754, 6470, 2123, 53, 246, "Input",ExpressionUUID->"6b875278-6e73-44c8-9481-6d40edd24d2e"],
Cell[385880, 6525, 172, 3, 44, "Text",ExpressionUUID->"27434571-7719-46d6-adca-fcfb8bd1467b"],
Cell[386055, 6530, 1628, 44, 168, "Input",ExpressionUUID->"dfa899f1-ba13-46ab-9fe0-4264ac8ee730"],
Cell[387686, 6576, 248509, 4082, 315, "Text",ExpressionUUID->"2d48572f-bb0d-4185-8116-29d6ca4f8a3b"],
Cell[636198, 10660, 1207, 30, 116, "Input",ExpressionUUID->"bcead3ac-cf07-4477-b874-e1af485c9e95"],
Cell[CellGroupData[{
Cell[637430, 10694, 531, 14, 64, "Input",ExpressionUUID->"79703646-941e-40d3-980f-480eb2d23465"],
Cell[637964, 10710, 917, 20, 61, "Output",ExpressionUUID->"2eb808c5-2dee-402a-a617-91a1465f066c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[638918, 10735, 533, 14, 64, "Input",ExpressionUUID->"1c36d035-f6b7-4b5b-9906-2788bee5061b"],
Cell[639454, 10751, 885, 20, 63, "Output",ExpressionUUID->"14bc58f2-3bed-415f-9563-2fe63b7014b1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[640376, 10776, 495, 13, 64, "Input",ExpressionUUID->"506a04fc-b1cb-41a8-8955-1b88c96919a3"],
Cell[640874, 10791, 786, 18, 63, "Output",ExpressionUUID->"f0ed7ff6-7e8a-4440-9c4d-5cba6554c1fc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[641697, 10814, 402, 9, 37, "Input",ExpressionUUID->"376d4641-16c9-4a31-a850-d340b0452657"],
Cell[642102, 10825, 539, 11, 38, "Output",ExpressionUUID->"2d80417a-4718-4a97-929e-1d3ab7f7c315"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[642690, 10842, 171, 3, 84, "Section",ExpressionUUID->"19db1d25-33b0-4e27-a82f-682bcdbc3435"],
Cell[642864, 10847, 154591, 2541, 280, "Text",ExpressionUUID->"93c9c2f1-06dd-40f0-8349-64b9eb3937c7"],
Cell[797458, 13390, 1557, 34, 90, "Input",ExpressionUUID->"ff7f60a0-927d-40a7-b82b-218c0dd8d070"],
Cell[CellGroupData[{
Cell[799040, 13428, 428, 9, 37, "Input",ExpressionUUID->"0089ddc9-947a-43c7-a53b-0e49114fa045"],
Cell[799471, 13439, 734, 14, 38, "Output",ExpressionUUID->"7dc2098e-4ed3-4823-a25b-57cb8f2d873c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[800242, 13458, 361, 8, 37, "Input",ExpressionUUID->"64868908-9f7f-4eb8-b9ab-4642cde432d0"],
Cell[800606, 13468, 444, 10, 38, "Output",ExpressionUUID->"157d59c3-0a07-455a-bbc7-794050682ac2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[801087, 13483, 48084, 796, 167, "Subsection",ExpressionUUID->"df98c57f-dd2d-475b-9e85-e6e1834e9d8b"],
Cell[849174, 14281, 331, 7, 73, "Text",ExpressionUUID->"bc1dc840-2626-4c66-82b8-f99598e1758f"],
Cell[849508, 14290, 759, 21, 90, "Input",ExpressionUUID->"787e52e9-c670-4c15-a821-75135a5b247b"],
Cell[850270, 14313, 181, 3, 44, "Text",ExpressionUUID->"2e8f18f2-451d-475e-94f9-971b68040f0b"],
Cell[850454, 14318, 2242, 55, 194, "Input",ExpressionUUID->"25a08097-1be5-4ec2-a179-7fd55c1fd897"],
Cell[852699, 14375, 187, 3, 44, "Text",ExpressionUUID->"6623a409-881f-41c9-acea-6a0082c7c64c"],
Cell[852889, 14380, 7220, 161, 636, "Input",ExpressionUUID->"094f27f9-d843-4af6-8f54-63f12f3f184d"],
Cell[860112, 14543, 470, 10, 37, "Input",ExpressionUUID->"df530ffd-20d8-4073-ac43-bd6401177e3b"],
Cell[860585, 14555, 421, 8, 102, "Text",ExpressionUUID->"da5233f3-83cb-47b2-865b-73ba9b93acb5"],
Cell[861009, 14565, 180975, 2974, 286, "Text",ExpressionUUID->"5917b6b3-418e-4c1c-8a05-ee7cca8302c3"],
Cell[1041987, 17541, 174, 3, 44, "Text",ExpressionUUID->"2aa23c5e-e7ff-48d9-a295-ce322301f2b5"],
Cell[1042164, 17546, 2608, 64, 220, "Input",ExpressionUUID->"935b3696-015e-4e02-ba1a-da1a86402919"],
Cell[1044775, 17612, 957, 26, 142, "Input",ExpressionUUID->"801f2f41-dbdc-474d-bddb-87eac7c2567a"],
Cell[1045735, 17640, 373, 9, 37, "Input",ExpressionUUID->"8b222c4f-6335-4715-ba11-d5405e9c3922"],
Cell[1046111, 17651, 169, 3, 44, "Text",ExpressionUUID->"6dd75d8c-2ddc-40f5-9029-21ca415502e2"],
Cell[1046283, 17656, 210, 4, 37, "Input",ExpressionUUID->"c3ca2539-735f-45e2-b8f1-2095669832a4"],
Cell[1046496, 17662, 2198, 53, 194, "Input",ExpressionUUID->"04cc7c12-270e-481c-bb50-694d7a254cda"],
Cell[CellGroupData[{
Cell[1048719, 17719, 460, 11, 37, "Input",ExpressionUUID->"dc357754-be05-4f3f-8ad7-7f09de9930de"],
Cell[1049182, 17732, 16450, 319, 78, "Output",ExpressionUUID->"690a185c-6f0d-4934-b57a-8995542aad6d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1065669, 18056, 784, 19, 64, "Input",ExpressionUUID->"b4cd15e3-d6d7-4541-bf36-fdef6521f2a4"],
Cell[1066456, 18077, 1003, 22, 85, "Output",ExpressionUUID->"b506ae02-9d5f-4080-9f52-c4ce8155bc01"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1067496, 18104, 819, 20, 64, "Input",ExpressionUUID->"2356b937-9b06-437e-879b-d63dba35fadb"],
Cell[1068318, 18126, 36930, 627, 161, "Output",ExpressionUUID->"f1c524f5-23a5-4af0-972c-618f74d6258d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1105285, 18758, 431, 11, 37, "Input",ExpressionUUID->"86b4d5f6-07d6-46bf-ba25-e5bbe6bbc62a"],
Cell[1105719, 18771, 6062, 119, 173, "Output",ExpressionUUID->"f3911d2f-be43-43cc-aa9f-7571586c42b2"]
}, Open  ]],
Cell[1111796, 18893, 1024, 27, 142, "Input",ExpressionUUID->"270fd1b9-7ded-4d67-9747-9605abecce4e"],
Cell[1112823, 18922, 207, 4, 37, "Input",ExpressionUUID->"aca100fa-c0d5-481e-ab1b-46e5b660fdff"],
Cell[1113033, 18928, 2987, 70, 246, "Input",ExpressionUUID->"47542a3c-85a9-4455-b9e8-3507b6514730"],
Cell[CellGroupData[{
Cell[1116045, 19002, 344, 8, 37, "Input",ExpressionUUID->"ba6e5be2-7a40-400b-add4-3e14e2ddebea"],
Cell[1116392, 19012, 840, 16, 38, "Output",ExpressionUUID->"5ade394f-d0f9-4697-89b9-ef85379abc46"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1117281, 19034, 168, 3, 67, "Subsection",ExpressionUUID->"68836dd2-ab21-4da1-a29e-0c038e5f54b6"],
Cell[1117452, 19039, 188, 3, 44, "Text",ExpressionUUID->"9a408d62-9fb0-4dd4-898a-ca6d71d6814d"],
Cell[1117643, 19044, 313, 6, 37, "Input",ExpressionUUID->"eb220b3c-f401-487d-903c-704da5c71130"],
Cell[1117959, 19052, 2134, 48, 220, "Input",ExpressionUUID->"e3e0a41b-880c-48f3-aeb0-16092de9a5cd"],
Cell[1120096, 19102, 2252, 50, 220, "Input",ExpressionUUID->"2b8e21aa-61e6-4b99-a314-ce3494fca39a"],
Cell[CellGroupData[{
Cell[1122373, 19156, 705, 17, 64, "Input",ExpressionUUID->"55efa086-575f-4849-959a-555b94601135"],
Cell[1123081, 19175, 1099, 23, 61, "Output",ExpressionUUID->"c340375b-0199-4890-80fc-bad1a0215891"]
}, Open  ]],
Cell[1124195, 19201, 405, 9, 64, "Input",ExpressionUUID->"bf4a6894-1758-450e-ab28-a91a207c6eca"],
Cell[CellGroupData[{
Cell[1124625, 19214, 672, 17, 64, "Input",ExpressionUUID->"214c1a61-c28d-46a4-b0c7-612bcc1d316e"],
Cell[1125300, 19233, 799, 19, 61, "Output",ExpressionUUID->"830c1b31-73d6-4fbf-bc0a-dd074ec24340"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1126136, 19257, 610, 16, 64, "Input",ExpressionUUID->"59f90e50-7f35-490a-90c6-d44f8cca0f98"],
Cell[1126749, 19275, 832, 19, 61, "Output",ExpressionUUID->"661d6d73-01b6-44fa-b920-ec24d21759a9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1127618, 19299, 495, 11, 37, "Input",ExpressionUUID->"a6728d1e-83ed-423b-b5ba-d39686ed6c48"],
Cell[1128116, 19312, 473, 10, 38, "Output",ExpressionUUID->"d7a40c18-06fb-438f-b60e-b6008a1884f1"]
}, Open  ]],
Cell[1128604, 19325, 1872, 39, 116, "Input",ExpressionUUID->"18463817-38b1-4ec2-bce1-dfae88565416"],
Cell[1130479, 19366, 1901, 39, 116, "Input",ExpressionUUID->"c8dd7ca8-73d4-4e7a-9647-2344652ee07b"],
Cell[CellGroupData[{
Cell[1132405, 19409, 552, 14, 64, "Input",ExpressionUUID->"25834616-70c1-4651-bf36-ea8b4a65dc9e"],
Cell[1132960, 19425, 968, 21, 61, "Output",ExpressionUUID->"40e30b05-31a3-4e96-8849-e9931146a7dd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1133965, 19451, 640, 16, 37, "Input",ExpressionUUID->"a0df2ab3-0230-4538-8ae2-6c8c7b8e097d"],
Cell[1134608, 19469, 332, 7, 38, "Output",ExpressionUUID->"83410a4d-12a2-41fe-bb25-8f873842c3f2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1134977, 19481, 647, 16, 64, "Input",ExpressionUUID->"4537a2ed-6620-46a0-813c-f3e9f450cd21"],
Cell[1135627, 19499, 849, 20, 63, "Output",ExpressionUUID->"3ad876e7-65bc-4c64-828c-67b761a61b0a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1136513, 19524, 647, 16, 37, "Input",ExpressionUUID->"bb2bb86f-e078-47a0-9c50-904b1ea0b033"],
Cell[1137163, 19542, 562, 12, 38, "Output",ExpressionUUID->"452275d7-d4b9-4245-92cd-db252339aa42"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1137762, 19559, 611, 14, 64, "Input",ExpressionUUID->"788eeb90-cf8b-47fd-aa81-47af25265667"],
Cell[1138376, 19575, 515, 12, 38, "Output",ExpressionUUID->"4860ea29-f136-4aa3-95ca-d9f4307233cc"]
}, Open  ]],
Cell[1138906, 19590, 1580, 39, 142, "Input",ExpressionUUID->"7716b04b-f26d-4175-b3ed-90fa39e06b50"],
Cell[1140489, 19631, 1665, 39, 142, "Input",ExpressionUUID->"fd0e64af-be12-4343-9afa-d7b352caaa2b"],
Cell[CellGroupData[{
Cell[1142179, 19674, 290, 7, 37, "Input",ExpressionUUID->"510d534d-ea5d-4622-b34d-d1b72d9de7bd"],
Cell[1142472, 19683, 724, 14, 38, "Output",ExpressionUUID->"04479335-7706-40db-a119-a984b8556160"]
}, Open  ]],
Cell[1143211, 19700, 516, 14, 64, "Input",ExpressionUUID->"cf0c7569-081f-4d01-8557-764273f56548"],
Cell[CellGroupData[{
Cell[1143752, 19718, 351, 8, 37, "Input",ExpressionUUID->"02c88982-f063-4511-a14b-ad1a49cbf889"],
Cell[1144106, 19728, 348, 8, 38, "Output",ExpressionUUID->"11aca7c3-9c81-49b6-b52f-e7623209bf54"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1144491, 19741, 494, 12, 64, "Input",ExpressionUUID->"5a2c229e-5847-4d75-b5f3-00cf08d6c977"],
Cell[1144988, 19755, 524, 11, 38, "Output",ExpressionUUID->"7bb530ac-fad5-4c39-9f25-597188bc1620"],
Cell[1145515, 19768, 524, 11, 38, "Output",ExpressionUUID->"0021986e-e4c1-477d-a869-70a09ecd451d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1146076, 19784, 1319, 34, 90, "Input",ExpressionUUID->"163e50a5-f3c0-4171-bae6-6c5d2ad63ee6"],
Cell[1147398, 19820, 492, 12, 38, "Output",ExpressionUUID->"48356ed3-873e-45c1-a581-5b278e95c06b"],
Cell[1147893, 19834, 492, 12, 38, "Output",ExpressionUUID->"101df602-0a9d-4f66-b359-532666381651"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1148422, 19851, 1319, 34, 90, "Input",ExpressionUUID->"98fa22f0-d133-46d9-8db0-efa433bd1fd4"],
Cell[1149744, 19887, 488, 12, 38, "Output",ExpressionUUID->"c5e8af7d-2615-45ad-ac74-1c23760a478a"],
Cell[1150235, 19901, 487, 12, 38, "Output",ExpressionUUID->"8592f4fa-172a-4d33-8c96-18879336bebf"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1150783, 19920, 163, 3, 84, "Section",ExpressionUUID->"b1d62794-389c-4d11-aed8-446b6a451be9"],
Cell[1150949, 19925, 1947, 58, 433, "Input",ExpressionUUID->"b04f51ab-dba9-43ff-9453-0443c6f82d25"],
Cell[1152899, 19985, 2055, 45, 246, "Input",ExpressionUUID->"e470ac11-aaa8-45d2-8444-5e32d927112e"],
Cell[1154957, 20032, 1517, 42, 146, "Input",ExpressionUUID->"229ca683-0d21-4489-8773-f56a3a393ee0"],
Cell[CellGroupData[{
Cell[1156499, 20078, 444, 11, 64, "Input",ExpressionUUID->"bc51babc-08a7-403d-8c8d-be43cb6c4ca1"],
Cell[1156946, 20091, 1114, 19, 38, "Output",ExpressionUUID->"9ab61f97-acc6-45a1-8aae-d97b6ef86aad"],
Cell[1158063, 20112, 1107, 19, 38, "Output",ExpressionUUID->"aaa55f0f-7ed2-46cc-8804-54e9f7027ba7"]
}, Open  ]],
Cell[1159185, 20134, 153, 3, 44, "Text",ExpressionUUID->"9a6d8114-b18c-4ec6-a7f5-e61cfe56ed5d"],
Cell[CellGroupData[{
Cell[1159363, 20141, 724, 15, 60, "Input",ExpressionUUID->"2f148626-6269-4941-a6cf-db7c15d4c57d"],
Cell[1160090, 20158, 1155, 20, 38, "Output",ExpressionUUID->"1996f611-47c8-4cb3-bd84-26514e406eaf"]
}, Open  ]],
Cell[1161260, 20181, 202, 3, 44, "Text",ExpressionUUID->"21066a50-ed6b-491e-8679-0260ec0a1a64"],
Cell[CellGroupData[{
Cell[1161487, 20188, 943, 26, 110, "Input",ExpressionUUID->"13d745e5-7a6d-4089-b91b-93c4a4104335"],
Cell[1162433, 20216, 916, 17, 38, "Output",ExpressionUUID->"ec0d8658-add6-445e-b42d-8e0ae2968459"]
}, Open  ]],
Cell[1163364, 20236, 164, 3, 44, "Text",ExpressionUUID->"dd22405f-7e62-4463-8b43-d7e10c61a2e5"],
Cell[1163531, 20241, 410, 12, 44, "Text",ExpressionUUID->"5e852cc0-81ca-4263-99e8-965ff057c731"],
Cell[1163944, 20255, 1973, 52, 220, "Input",ExpressionUUID->"b0a3f4a5-50f8-4aad-adaa-7fe526a85505"],
Cell[1165920, 20309, 250, 6, 37, "Input",ExpressionUUID->"5cf986a7-e867-4647-a35a-b4079323d7ee"],
Cell[1166173, 20317, 1309, 37, 90, "Input",ExpressionUUID->"9b59f033-16c1-4042-81b7-e15fd34b7741"],
Cell[CellGroupData[{
Cell[1167507, 20358, 314, 8, 37, "Input",ExpressionUUID->"e4fa06c7-cdd1-4e44-ae43-c1647f5785e0"],
Cell[1167824, 20368, 464, 8, 38, "Output",ExpressionUUID->"6e7bad0c-f63b-4dcf-aa52-83536817901f"]
}, Open  ]],
Cell[1168303, 20379, 3150, 83, 272, "Input",ExpressionUUID->"d859b0da-3f5b-4835-8b05-158797231cf5"],
Cell[CellGroupData[{
Cell[1171478, 20466, 462, 12, 37, "Input",ExpressionUUID->"7f3565f5-498e-438c-a469-ba735f553db9"],
Cell[1171943, 20480, 519, 11, 38, "Output",ExpressionUUID->"88594d39-c68f-4174-b268-42f33901da13"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1172499, 20496, 410, 10, 37, "Input",ExpressionUUID->"1675ce38-ceba-45c7-8780-04ce74f638fd"],
Cell[1172912, 20508, 497, 10, 38, "Output",ExpressionUUID->"19b561eb-00e5-4be8-83c8-7b691a28d223"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1173446, 20523, 1297, 33, 168, "Input",ExpressionUUID->"c015fc55-4690-4959-a0ec-8ef445a73cba"],
Cell[1174746, 20558, 63082, 1447, 301, "Output",ExpressionUUID->"60358ce1-61f9-4ce6-9b0e-be3376d8eb5c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1237865, 22010, 1072, 28, 142, "Input",ExpressionUUID->"0b34faeb-c3d1-4fac-bdc2-ef911d66cfa8"],
Cell[1238940, 22040, 51343, 1257, 301, "Output",ExpressionUUID->"7f066dd6-ca19-470b-9caf-55e669914aee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1290320, 23302, 905, 24, 90, "Input",ExpressionUUID->"81960045-7c86-48bf-8315-d763734344a1"],
Cell[1291228, 23328, 16402, 320, 78, "Output",ExpressionUUID->"b2b67273-7684-4efd-b581-8130ab516d41"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1307667, 23653, 279, 6, 37, "Input",ExpressionUUID->"c7121882-1879-4d49-8ec6-21479d9eae7b"],
Cell[1307949, 23661, 16344, 470, 301, "Output",ExpressionUUID->"bb39e9f0-4194-499d-875d-05302967b9f6"]
}, Open  ]],
Cell[1324308, 24134, 250, 4, 44, "Text",ExpressionUUID->"e023f8cb-07cc-49a4-804e-5ff7c191555e"],
Cell[CellGroupData[{
Cell[1324583, 24142, 884, 21, 64, "Input",ExpressionUUID->"b4698f59-54f2-4130-b4d9-2752df4f8ec0"],
Cell[1325470, 24165, 471, 9, 38, "Output",ExpressionUUID->"e870ed9b-447f-419e-9c85-10c5b44c09c7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1325978, 24179, 1052, 26, 142, "Input",ExpressionUUID->"a4ef5bba-5ee2-458b-ad59-3ef4d7af73ce"],
Cell[1327033, 24207, 40151, 817, 301, "Output",ExpressionUUID->"b1b3fa76-4186-46aa-8037-d005034e6427"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1367221, 25029, 1358, 36, 194, "Input",ExpressionUUID->"41f9efb9-b013-4792-93bb-fd537fb47b68"],
Cell[1368582, 25067, 596, 12, 38, "Output",ExpressionUUID->"fe17528c-5b80-4829-9c9a-25ff8d2de306"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1369227, 25085, 165, 3, 84, "Section",ExpressionUUID->"373e1f46-7ecb-4f13-b845-c64820ed83d9"],
Cell[CellGroupData[{
Cell[1369417, 25092, 297, 7, 37, "Input",ExpressionUUID->"6e53a1ae-d4f1-4f5c-b021-8c27fa1c385b"],
Cell[1369717, 25101, 378, 8, 38, "Output",ExpressionUUID->"bf638138-0099-4264-9ec5-43e2e3c5b5af"]
}, Open  ]],
Cell[1370110, 25112, 342, 8, 64, "Input",ExpressionUUID->"6a4c5179-84c0-4496-9d2e-b1369ee09754"],
Cell[CellGroupData[{
Cell[1370477, 25124, 317, 7, 37, "Input",ExpressionUUID->"babe3c93-6d5c-49c4-af20-c9039bced884"],
Cell[1370797, 25133, 359, 6, 38, "Output",ExpressionUUID->"1f15b8dd-4fb6-4a7b-b4b4-32b80553abd5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1371193, 25144, 470, 12, 37, "Input",ExpressionUUID->"a779f639-0d7d-48e5-823f-200678c877df"],
Cell[1371666, 25158, 452, 10, 38, "Output",ExpressionUUID->"b26350eb-5010-4ccc-8438-93c1075b76bb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1372155, 25173, 271, 6, 37, "Input",ExpressionUUID->"0c44ccd4-6f54-4e42-b8c7-db8ac79513eb"],
Cell[1372429, 25181, 372, 9, 38, "Output",ExpressionUUID->"a6e17b7d-58ed-4e8f-bb2d-e72c97bca25a"]
}, Open  ]],
Cell[1372816, 25193, 280, 6, 37, "Input",ExpressionUUID->"002241fe-80bb-4037-8029-d6c7963b4f14"],
Cell[CellGroupData[{
Cell[1373121, 25203, 420, 8, 37, "Input",ExpressionUUID->"0d944b05-d876-45aa-9387-c1b2c135fdcd"],
Cell[1373544, 25213, 475, 11, 38, "Output",ExpressionUUID->"e01205cb-50eb-4f70-87b5-c6359f85b07e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1374056, 25229, 308, 7, 37, "Input",ExpressionUUID->"05834249-285e-4fec-a47a-4d738167db66"],
Cell[1374367, 25238, 383, 7, 38, "Output",ExpressionUUID->"87342d50-a742-483e-8792-c5af3cdb01f8"]
}, Open  ]],
Cell[1374765, 25248, 925, 23, 64, "Input",ExpressionUUID->"c863a848-a83a-4707-b89f-31cb1a7adf16"],
Cell[CellGroupData[{
Cell[1375715, 25275, 1202, 29, 166, "Input",ExpressionUUID->"ef4f73b6-673e-4492-96d9-05c4e7964d3d"],
Cell[1376920, 25306, 518, 13, 44, "Output",ExpressionUUID->"e580b366-7801-436c-8ef4-1e574f737b3e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1377475, 25324, 344, 8, 37, "Input",ExpressionUUID->"6bfd9f28-0dcf-4efa-a545-3b0d7d2b00e0"],
Cell[1377822, 25334, 323, 6, 38, "Output",ExpressionUUID->"62659655-ada2-422e-86c6-23434be3a03d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1378182, 25345, 345, 8, 37, "Input",ExpressionUUID->"99e5a5f1-59da-4284-a01e-810a1ab173c0"],
Cell[1378530, 25355, 410, 9, 38, "Output",ExpressionUUID->"f77464b4-c478-4037-a0af-66e93c9f026f"]
}, Open  ]],
Cell[1378955, 25367, 1208, 28, 90, "Input",ExpressionUUID->"77374d35-f3f3-41a0-bcac-149260732ed7"],
Cell[CellGroupData[{
Cell[1380188, 25399, 1373, 39, 217, "Input",ExpressionUUID->"a24da88e-672e-482e-9d10-2461ecfd87fb"],
Cell[1381564, 25440, 8868, 163, 293, "Output",ExpressionUUID->"d3d6a208-95ba-4e83-af03-2ab36a0b54ec"]
}, Open  ]],
Cell[1390447, 25606, 261, 5, 37, "Input",ExpressionUUID->"3e4c752e-145a-4b16-8482-8d75249c5c18"],
Cell[CellGroupData[{
Cell[1390733, 25615, 558, 14, 64, "Input",ExpressionUUID->"835e9a08-cf43-4ae4-a1af-cf4a5b04489b"],
Cell[1391294, 25631, 545, 11, 38, "Output",ExpressionUUID->"f9b65d2f-c799-4e3b-ba0f-8cc5bd0263a8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1391876, 25647, 463, 12, 37, "Input",ExpressionUUID->"054af96b-23fa-4a04-ba78-dae6fc104a7c"],
Cell[1392342, 25661, 550, 12, 38, "Output",ExpressionUUID->"6aed6bf7-56fc-4436-b05d-0aba5b93ebd5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1392929, 25678, 1313, 34, 136, "Input",ExpressionUUID->"8e1701a7-9cfd-412e-b135-97d312961dcf"],
Cell[1394245, 25714, 1471, 45, 107, "Output",ExpressionUUID->"69745756-914c-43cd-bc3d-d09c6e0b9ac5"]
}, Open  ]],
Cell[1395731, 25762, 209, 4, 37, "Input",ExpressionUUID->"6175b15b-6317-4835-9695-48c15f55235e"],
Cell[1395943, 25768, 3032, 77, 361, "Input",ExpressionUUID->"4e429732-3ece-45c6-a8df-fcc0c244bb52"],
Cell[CellGroupData[{
Cell[1399000, 25849, 1799, 36, 168, "Input",ExpressionUUID->"639d4592-553c-4bff-96a8-157e7d2089dd"],
Cell[1400802, 25887, 606, 10, 38, "Output",ExpressionUUID->"9d42e1cf-8e89-4c55-99f7-3b49f755eb30"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1401445, 25902, 1836, 37, 168, "Input",ExpressionUUID->"6f87417c-1783-49b5-ba1e-08b72910dcee"],
Cell[1403284, 25941, 559, 14, 38, "Output",ExpressionUUID->"29a99057-068f-48cb-ae66-a6305a1b2bd5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1403880, 25960, 1882, 37, 168, "Input",ExpressionUUID->"9a54f475-124b-4226-9788-f476be71c86f"],
Cell[1405765, 25999, 556, 14, 38, "Output",ExpressionUUID->"d24ed185-3cc2-48d4-b3f7-e0381f2fb50c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1406358, 26018, 238, 5, 37, "Input",ExpressionUUID->"752ea0f1-ef0f-493a-aee5-574a943a75d2"],
Cell[1406599, 26025, 225, 4, 38, "Output",ExpressionUUID->"64d13831-ea24-4638-b740-65cb39370572"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1406861, 26034, 270, 6, 37, "Input",ExpressionUUID->"2118bf66-d71c-40c9-8615-31fbfb5ae8a7"],
Cell[1407134, 26042, 200, 4, 38, "Output",ExpressionUUID->"24cc0c5b-4ce9-469a-acd3-27b1a18c315a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1407383, 26052, 158, 3, 84, "Section",ExpressionUUID->"f349ef4d-9fae-4390-8a6c-549d47e48bec"],
Cell[1407544, 26057, 380, 10, 90, "Input",ExpressionUUID->"f2d9ca35-f74d-4d22-bcca-4fbee5a1a8be"],
Cell[CellGroupData[{
Cell[1407949, 26071, 216, 4, 37, "Input",ExpressionUUID->"7a956f51-31be-4dcd-853c-03c37eb1cb77"],
Cell[1408168, 26077, 800, 14, 38, "Output",ExpressionUUID->"e4943532-1059-47f7-92ae-45d5af48ca1c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1409005, 26096, 309, 8, 37, "Input",ExpressionUUID->"0f4d6c08-10e5-4f89-b133-4958cea8517f"],
Cell[1409317, 26106, 1878, 42, 243, "Output",ExpressionUUID->"871befba-30ba-4e96-b5f3-b1d9429bb3e6"]
}, Open  ]],
Cell[1411210, 26151, 562, 16, 64, "Input",ExpressionUUID->"9b6d5b04-1606-4aeb-8055-569ecd6bc680"],
Cell[CellGroupData[{
Cell[1411797, 26171, 423, 10, 37, "Input",ExpressionUUID->"9b91093d-e1cf-433a-92e3-f0b4a0c17854"],
Cell[1412223, 26183, 821, 15, 38, "Output",ExpressionUUID->"dfbd6caa-27b7-47b4-9804-49b74f9d0bdd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1413081, 26203, 511, 13, 64, "Input",ExpressionUUID->"a1fa7f09-dcca-486d-81f1-8ed99609f438"],
Cell[1413595, 26218, 525, 12, 38, "Output",ExpressionUUID->"ae41baf9-9c92-48ad-8a96-8f497393e2e6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1414157, 26235, 516, 13, 37, "Input",ExpressionUUID->"baff8770-daef-4c2c-9373-2f098688ad98"],
Cell[1414676, 26250, 595, 12, 38, "Output",ExpressionUUID->"54e3956d-e624-48f9-a138-a56ad893dcf9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1415308, 26267, 1313, 34, 136, "Input",ExpressionUUID->"02df70e8-21e1-48c8-a310-4e5cca9c656b"],
Cell[1416624, 26303, 1493, 45, 107, "Output",ExpressionUUID->"3a634a92-9d12-4a91-971f-49166a5365f7"]
}, Open  ]],
Cell[1418132, 26351, 209, 4, 37, "Input",ExpressionUUID->"7c40c99e-47fb-4deb-be22-0cc0a6f2ea63"],
Cell[1418344, 26357, 3032, 77, 361, "Input",ExpressionUUID->"d305c994-c026-4e5b-83d0-9f02246d4c33"],
Cell[CellGroupData[{
Cell[1421401, 26438, 1936, 38, 168, "Input",ExpressionUUID->"f58c4538-7986-4e37-8261-e352570ace8b"],
Cell[1423340, 26478, 632, 16, 38, "Output",ExpressionUUID->"8859842f-878f-46a9-802f-16ef40b23e20"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1424009, 26499, 2258, 45, 194, "Input",ExpressionUUID->"59c14848-be49-4d3c-81f2-d8f014078c55"],
Cell[1426270, 26546, 605, 15, 38, "Output",ExpressionUUID->"f0aab1ca-9917-4a3a-8e4f-319a69042bcd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1426912, 26566, 363, 9, 37, "Input",ExpressionUUID->"a62d4126-2b40-46be-8616-db0ff3c40fce"],
Cell[1427278, 26577, 252, 5, 38, "Output",ExpressionUUID->"18feb2be-97b5-4548-b73d-75740484b103"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1427567, 26587, 2178, 44, 142, "Input",ExpressionUUID->"53e42125-dc4c-48ab-a375-60b727602b9c"],
Cell[1429748, 26633, 578, 14, 38, "Output",ExpressionUUID->"09a41c4f-0240-4263-906a-616fbec22fe7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1430363, 26652, 363, 9, 37, "Input",ExpressionUUID->"3988b05b-0e23-4152-8a4b-bbf0d3334dd8"],
Cell[1430729, 26663, 202, 4, 38, "Output",ExpressionUUID->"6c7c53c9-1a83-43e4-8d52-90d5231a8d1f"]
}, Open  ]],
Cell[1430946, 26670, 720, 18, 90, "Input",ExpressionUUID->"3cbb584a-fc58-47a5-94e1-56a814b8fc56"],
Cell[1431669, 26690, 383, 8, 37, "Input",ExpressionUUID->"4e071853-a5e2-4d89-aab9-93491207bd8c"],
Cell[1432055, 26700, 351, 8, 37, "Input",ExpressionUUID->"a6410b44-460a-47e2-81f4-7b1e306f6592"],
Cell[CellGroupData[{
Cell[1432431, 26712, 287, 6, 37, "Input",ExpressionUUID->"190b1409-9f36-4a31-b8cc-09701e1a8a8b"],
Cell[1432721, 26720, 389, 7, 38, "Output",ExpressionUUID->"543a801f-f600-4b65-8011-459cfb84f59e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1433147, 26732, 629, 17, 110, "Input",ExpressionUUID->"4cf40b22-5722-4315-a645-830149f9ad8d"],
Cell[1433779, 26751, 521, 11, 38, "Output",ExpressionUUID->"fbcb2d0f-3e90-4bd9-981a-9a07195b18cd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1434337, 26767, 382, 9, 37, "Input",ExpressionUUID->"bd7004c4-bd44-4985-8cca-d7c29434a67b"],
Cell[1434722, 26778, 440, 7, 38, "Output",ExpressionUUID->"ac6aecab-3c4d-45f1-9f2a-786d8d2fb9ea"]
}, Open  ]],
Cell[1435177, 26788, 711, 18, 37, "Input",ExpressionUUID->"0067afc6-46d6-4437-9961-3d3eabd4acc1"],
Cell[1435891, 26808, 743, 19, 37, "Input",ExpressionUUID->"8fc9eb42-5473-43fa-8348-885844c52033"],
Cell[1436637, 26829, 782, 19, 64, "Input",ExpressionUUID->"80f6e87e-b09d-400c-b987-ca4a99346f0e"],
Cell[CellGroupData[{
Cell[1437444, 26852, 666, 16, 64, "Input",ExpressionUUID->"c9842d0f-b88a-43d6-b61b-9015246d8f8e"],
Cell[1438113, 26870, 5449, 134, 353, "Output",ExpressionUUID->"e92592b1-52c3-4c9a-85a2-73960e1a0cc3"]
}, Open  ]],
Cell[1443577, 27007, 211, 4, 44, "Text",ExpressionUUID->"6fb25aae-109e-48c7-9100-835ee2119f1e"],
Cell[1443791, 27013, 211, 4, 37, "Input",ExpressionUUID->"586b9730-3441-4076-bda4-0b09fab54e74"],
Cell[1444005, 27019, 2347, 55, 194, "Input",ExpressionUUID->"200b7ab6-54bd-47d2-a312-14875ff733c2"],
Cell[1446355, 27076, 209, 4, 37, "Input",ExpressionUUID->"d696b770-7d83-45e7-ab3f-563bfbf2b387"],
Cell[1446567, 27082, 4492, 106, 358, "Input",ExpressionUUID->"dc8f84d2-b87c-4494-960e-6540ea1cce82"],
Cell[1451062, 27190, 278, 6, 37, "Input",ExpressionUUID->"8d1b2e01-950d-4631-9087-a389b34526b3"],
Cell[CellGroupData[{
Cell[1451365, 27200, 2693, 51, 142, "Input",ExpressionUUID->"dc26a12b-f018-402c-9b5b-e0fd2fa20c9c"],
Cell[1454061, 27253, 284, 5, 38, "Output",ExpressionUUID->"8912654f-aba9-47df-9f2b-73a6e7609b89"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1454382, 27263, 2095, 42, 90, "Input",ExpressionUUID->"04a78604-f315-4e1a-95fc-30aa1eb0ecf5"],
Cell[1456480, 27307, 558, 14, 38, "Output",ExpressionUUID->"59b7f8e7-082e-41c0-879c-e01a5bed1e2b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1457075, 27326, 1238, 29, 163, "Input",ExpressionUUID->"b62b6233-09a0-4fe9-997f-29211ac666b9"],
Cell[1458316, 27357, 224, 4, 38, "Output",ExpressionUUID->"62b852a5-9e47-40b2-87a2-eea8e6feca40"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1458577, 27366, 316, 6, 37, "Input",ExpressionUUID->"d2af8deb-6e4f-402d-80cc-0fa2d447f652"],
Cell[1458896, 27374, 605, 10, 38, "Output",ExpressionUUID->"15a3cf6a-f953-47de-af82-84ff13e6a211"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1459538, 27389, 681, 18, 110, "Input",ExpressionUUID->"75ae374c-d04f-46f9-a38a-2a4d30cfeb95"],
Cell[1460222, 27409, 716, 14, 38, "Output",ExpressionUUID->"c35a6327-2006-419e-8884-d1f2a7f95561"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1460975, 27428, 383, 9, 37, "Input",ExpressionUUID->"6f39a328-1f0d-403b-a68e-6980948de77a"],
Cell[1461361, 27439, 615, 10, 38, "Output",ExpressionUUID->"24aae452-7a58-486d-b082-2595b86a1476"]
}, Open  ]],
Cell[1461991, 27452, 1010, 21, 37, "Input",ExpressionUUID->"56cf857a-6558-49e3-8cb0-ee481c6bd4c5"],
Cell[1463004, 27475, 1000, 22, 37, "Input",ExpressionUUID->"8d1703d6-a419-480d-83dc-362ca550b467"],
Cell[CellGroupData[{
Cell[1464029, 27501, 593, 13, 37, "Input",ExpressionUUID->"b7989760-57ce-4077-93ac-d063c98da8bd"],
Cell[1464625, 27516, 4254, 101, 171, "Output",ExpressionUUID->"569202f7-c158-4622-92e4-d8245cccd403"]
}, Open  ]],
Cell[1468894, 27620, 131, 3, 37, "Input",ExpressionUUID->"45f940b1-d3a1-4aff-8999-5cb580fc8f54"],
Cell[CellGroupData[{
Cell[1469050, 27627, 181, 3, 37, "Input",ExpressionUUID->"a38d8235-6b81-4bf9-89c3-9d20feb6cb15"],
Cell[1469234, 27632, 481, 11, 38, "Output",ExpressionUUID->"77b59f70-61c2-468a-929e-b384012019a3"]
}, Open  ]],
Cell[1469730, 27646, 544, 14, 37, "Input",ExpressionUUID->"34dfe514-e1e7-4223-bf7d-0f599755e35c"],
Cell[CellGroupData[{
Cell[1470299, 27664, 450, 11, 37, "Input",ExpressionUUID->"6e02ea7b-dc0d-4105-b6d8-6c0628520aea"],
Cell[1470752, 27677, 487, 11, 38, "Output",ExpressionUUID->"4c4eff13-078b-45a2-82ae-aa8e00079ec8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1471276, 27693, 911, 23, 90, "Input",ExpressionUUID->"4f8dae72-7180-4c48-ac71-8930c88ae710"],
Cell[1472190, 27718, 15502, 280, 454, "Output",ExpressionUUID->"35fa7b1d-512f-4ecb-aac5-957638533e0f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1487729, 28003, 348, 8, 64, "Input",ExpressionUUID->"a060ba62-e7a3-44b5-8477-e765a919a097"],
Cell[1488080, 28013, 334, 6, 60, "Output",ExpressionUUID->"ca66263a-da66-456d-b158-b9ffc7bd4494"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1488451, 28024, 545, 14, 64, "Input",ExpressionUUID->"361e56e4-0d88-4087-b1fb-7594fa8e37e7"],
Cell[1488999, 28040, 152087, 2936, 304, "Output",ExpressionUUID->"983a2ebe-9f17-4f37-8500-c7d4ffbfc97a"]
}, Open  ]],
Cell[1641101, 30979, 402, 10, 64, "Input",ExpressionUUID->"61aae8dc-9d0c-4351-883f-0eb3ab38d832"],
Cell[CellGroupData[{
Cell[1641528, 30993, 1568, 40, 298, "Input",ExpressionUUID->"832df029-35d0-4dba-8327-19e2189d93eb"],
Cell[1643099, 31035, 47673, 839, 168, "Output",ExpressionUUID->"4a59bc4d-be8b-4aeb-bbc4-d100af124a72"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1690809, 31879, 597, 15, 116, "Input",ExpressionUUID->"6dd8b8bc-f53c-47a0-94fc-6a13d4e0515c"],
Cell[1691409, 31896, 713, 12, 60, "Output",ExpressionUUID->"e2ab73c3-449d-4470-a6f1-04df2c1d73cf"],
Cell[1692125, 31910, 715, 12, 60, "Output",ExpressionUUID->"df25f71c-6d9e-4255-af15-024f03ab775c"]
}, Open  ]],
Cell[1692855, 31925, 284, 7, 73, "Text",ExpressionUUID->"8d3f4de4-afbd-400f-98dd-0386c02eefff"],
Cell[1693142, 31934, 423, 11, 64, "Input",ExpressionUUID->"795099b7-bf5f-4ddd-80b9-73df2097ee5c"],
Cell[1693568, 31947, 979, 29, 64, "Input",ExpressionUUID->"8cbbd838-7b9f-4fa3-bf82-8a1edfb5bfa8"],
Cell[1694550, 31978, 238, 6, 73, "Text",ExpressionUUID->"f1d515e6-4e14-44a1-8e27-ad5dfcd18259"],
Cell[1694791, 31986, 551, 16, 64, "Input",ExpressionUUID->"67d8f87b-6d4e-4a43-a309-cb1e97a4587a"],
Cell[1695345, 32004, 158, 3, 44, "Text",ExpressionUUID->"54074161-552e-4612-a85b-2db9b4a09644"],
Cell[CellGroupData[{
Cell[1695528, 32011, 962, 24, 116, "Input",ExpressionUUID->"6f2f10a6-4a12-441f-9b1a-50368cb8b2bd"],
Cell[1696493, 32037, 8245, 162, 473, "Output",ExpressionUUID->"2a72bd8f-4f6b-4b49-b7b9-cc87e540bebf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1704775, 32204, 175, 3, 67, "Subsection",ExpressionUUID->"cabf1481-cec4-487f-86b3-33f493a6b8c9"],
Cell[1704953, 32209, 1980, 57, 433, "Input",ExpressionUUID->"99711b89-c47a-40bc-bd59-adead29f506e"],
Cell[1706936, 32268, 2191, 48, 246, "Input",ExpressionUUID->"dacb86d2-dbcc-44d9-994b-229e33949b3e"],
Cell[1709130, 32318, 1518, 42, 146, "Input",ExpressionUUID->"788ec84a-91ad-480f-b986-7db32b6392ea"],
Cell[CellGroupData[{
Cell[1710673, 32364, 444, 11, 64, "Input",ExpressionUUID->"9772ce37-cc52-4fa3-9d5f-3f215c4ac1e6"],
Cell[1711120, 32377, 1186, 20, 38, "Output",ExpressionUUID->"bd007493-72cc-45c8-b7be-5d0d12477ca5"],
Cell[1712309, 32399, 1182, 20, 38, "Output",ExpressionUUID->"7bb776ad-69f5-412e-adbb-7169914f8726"]
}, Open  ]],
Cell[1713506, 32422, 250, 4, 44, "Text",ExpressionUUID->"e6df1e35-f37b-4247-8561-40489200a512"],
Cell[CellGroupData[{
Cell[1713781, 32430, 724, 15, 60, "Input",ExpressionUUID->"4ab2247b-81d3-4860-9ea3-df74a11ddb76"],
Cell[1714508, 32447, 1232, 21, 38, "Output",ExpressionUUID->"45e52d8a-372f-405a-97c0-733852e0b2e0"]
}, Open  ]],
Cell[1715755, 32471, 202, 3, 44, "Text",ExpressionUUID->"047393c3-d1b8-4480-9f88-e25c90e5e43f"],
Cell[CellGroupData[{
Cell[1715982, 32478, 943, 26, 110, "Input",ExpressionUUID->"3f43257a-5d98-4f47-8f30-ad340d570e01"],
Cell[1716928, 32506, 986, 18, 38, "Output",ExpressionUUID->"ed057a49-e778-47be-bf6b-f541ce5065fc"]
}, Open  ]],
Cell[1717929, 32527, 431, 11, 64, "Input",ExpressionUUID->"f3937f65-a676-4b8f-8b88-9eaa14983aa8"],
Cell[CellGroupData[{
Cell[1718385, 32542, 968, 24, 116, "Input",ExpressionUUID->"8dfebfdc-3311-4b36-8b14-5aedb0af566a"],
Cell[1719356, 32568, 8036, 159, 473, "Output",ExpressionUUID->"b4567c10-9ca3-489e-8ea4-3b34db6008a4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1727429, 32732, 406, 10, 64, "Input",ExpressionUUID->"81ad5d81-1603-49bd-a17d-a9f96f3add37"],
Cell[1727838, 32744, 384, 6, 60, "Output",ExpressionUUID->"88c031ad-900d-4572-9c87-9daa33c457de"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1728259, 32755, 406, 10, 64, "Input",ExpressionUUID->"ad063221-1a4c-4226-b68c-6997000a3042"],
Cell[1728668, 32767, 364, 6, 60, "Output",ExpressionUUID->"71a016d3-6948-46d1-88b6-e956142b72c1"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

